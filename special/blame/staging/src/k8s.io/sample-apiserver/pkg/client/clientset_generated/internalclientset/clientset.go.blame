0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
f63b03861792c91c52922fa5a69ca3d6f393dfa0;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package internalclientset
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		glog "github.com/golang/glog"
0000000000000000000000000000000000000000;;		discovery "k8s.io/client-go/discovery"
0000000000000000000000000000000000000000;;		rest "k8s.io/client-go/rest"
0000000000000000000000000000000000000000;;		flowcontrol "k8s.io/client-go/util/flowcontrol"
0000000000000000000000000000000000000000;;		wardleinternalversion "k8s.io/sample-apiserver/pkg/client/clientset_generated/internalclientset/typed/wardle/internalversion"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Interface interface {
0000000000000000000000000000000000000000;;		Discovery() discovery.DiscoveryInterface
0000000000000000000000000000000000000000;;		Wardle() wardleinternalversion.WardleInterface
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Clientset contains the clients for groups. Each group has exactly one
0000000000000000000000000000000000000000;;	// version included in a Clientset.
0000000000000000000000000000000000000000;;	type Clientset struct {
0000000000000000000000000000000000000000;;		*discovery.DiscoveryClient
0000000000000000000000000000000000000000;;		*wardleinternalversion.WardleClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Wardle retrieves the WardleClient
0000000000000000000000000000000000000000;;	func (c *Clientset) Wardle() wardleinternalversion.WardleInterface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.WardleClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Discovery retrieves the DiscoveryClient
0000000000000000000000000000000000000000;;	func (c *Clientset) Discovery() discovery.DiscoveryInterface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.DiscoveryClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewForConfig creates a new Clientset for the given config.
0000000000000000000000000000000000000000;;	func NewForConfig(c *rest.Config) (*Clientset, error) {
0000000000000000000000000000000000000000;;		configShallowCopy := *c
0000000000000000000000000000000000000000;;		if configShallowCopy.RateLimiter == nil && configShallowCopy.QPS > 0 {
0000000000000000000000000000000000000000;;			configShallowCopy.RateLimiter = flowcontrol.NewTokenBucketRateLimiter(configShallowCopy.QPS, configShallowCopy.Burst)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var cs Clientset
0000000000000000000000000000000000000000;;		var err error
0000000000000000000000000000000000000000;;		cs.WardleClient, err = wardleinternalversion.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cs.DiscoveryClient, err = discovery.NewDiscoveryClientForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			glog.Errorf("failed to create the DiscoveryClient: %v", err)
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return &cs, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewForConfigOrDie creates a new Clientset for the given config and
0000000000000000000000000000000000000000;;	// panics if there is an error in the config.
0000000000000000000000000000000000000000;;	func NewForConfigOrDie(c *rest.Config) *Clientset {
0000000000000000000000000000000000000000;;		var cs Clientset
0000000000000000000000000000000000000000;;		cs.WardleClient = wardleinternalversion.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cs.DiscoveryClient = discovery.NewDiscoveryClientForConfigOrDie(c)
0000000000000000000000000000000000000000;;		return &cs
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// New creates a new Clientset for the given RESTClient.
0000000000000000000000000000000000000000;;	func New(c rest.Interface) *Clientset {
0000000000000000000000000000000000000000;;		var cs Clientset
0000000000000000000000000000000000000000;;		cs.WardleClient = wardleinternalversion.New(c)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cs.DiscoveryClient = discovery.NewDiscoveryClient(c)
0000000000000000000000000000000000000000;;		return &cs
0000000000000000000000000000000000000000;;	}

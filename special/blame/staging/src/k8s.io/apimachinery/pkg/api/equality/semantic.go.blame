0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
b56dc222c97d5d63afddcbcf77591e6ebd36b2c2;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package equality
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/api/resource"
0000000000000000000000000000000000000000;;		metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/conversion"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/fields"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/labels"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Semantic can do semantic deep equality checks for api objects.
0000000000000000000000000000000000000000;;	// Example: apiequality.Semantic.DeepEqual(aPod, aPodWithNonNilButEmptyMaps) == true
0000000000000000000000000000000000000000;;	var Semantic = conversion.EqualitiesOrDie(
0000000000000000000000000000000000000000;;		func(a, b resource.Quantity) bool {
0000000000000000000000000000000000000000;;			// Ignore formatting, only care that numeric value stayed the same.
0000000000000000000000000000000000000000;;			// TODO: if we decide it's important, it should be safe to start comparing the format.
0000000000000000000000000000000000000000;;			//
0000000000000000000000000000000000000000;;			// Uninitialized quantities are equivalent to 0 quantities.
0000000000000000000000000000000000000000;;			return a.Cmp(b) == 0
0000000000000000000000000000000000000000;;		},
0000000000000000000000000000000000000000;;		func(a, b metav1.Time) bool {
0000000000000000000000000000000000000000;;			return a.UTC() == b.UTC()
0000000000000000000000000000000000000000;;		},
0000000000000000000000000000000000000000;;		func(a, b labels.Selector) bool {
0000000000000000000000000000000000000000;;			return a.String() == b.String()
0000000000000000000000000000000000000000;;		},
0000000000000000000000000000000000000000;;		func(a, b fields.Selector) bool {
0000000000000000000000000000000000000000;;			return a.String() == b.String()
0000000000000000000000000000000000000000;;		},
0000000000000000000000000000000000000000;;	)

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
3ac3d625908cc382c245b0a643d16f22e83a7303;pkg/api/resource/quantity_example_test.go[pkg/api/resource/quantity_example_test.go][staging/src/k8s.io/apimachinery/pkg/api/resource/quantity_example_test.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package resource_test
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/api/resource"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExampleFormat() {
0000000000000000000000000000000000000000;;		memorySize := resource.NewQuantity(5*1024*1024*1024, resource.BinarySI)
0000000000000000000000000000000000000000;;		fmt.Printf("memorySize = %v\n", memorySize)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		diskSize := resource.NewQuantity(5*1000*1000*1000, resource.DecimalSI)
0000000000000000000000000000000000000000;;		fmt.Printf("diskSize = %v\n", diskSize)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cores := resource.NewMilliQuantity(5300, resource.DecimalSI)
0000000000000000000000000000000000000000;;		fmt.Printf("cores = %v\n", cores)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Output:
0000000000000000000000000000000000000000;;		// memorySize = 5Gi
0000000000000000000000000000000000000000;;		// diskSize = 5G
0000000000000000000000000000000000000000;;		// cores = 5300m
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExampleMustParse() {
0000000000000000000000000000000000000000;;		memorySize := resource.MustParse("5Gi")
0000000000000000000000000000000000000000;;		fmt.Printf("memorySize = %v (%v)\n", memorySize.Value(), memorySize.Format)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		diskSize := resource.MustParse("5G")
0000000000000000000000000000000000000000;;		fmt.Printf("diskSize = %v (%v)\n", diskSize.Value(), diskSize.Format)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cores := resource.MustParse("5300m")
0000000000000000000000000000000000000000;;		fmt.Printf("milliCores = %v (%v)\n", cores.MilliValue(), cores.Format)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cores2 := resource.MustParse("5.4")
0000000000000000000000000000000000000000;;		fmt.Printf("milliCores = %v (%v)\n", cores2.MilliValue(), cores2.Format)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Output:
0000000000000000000000000000000000000000;;		// memorySize = 5368709120 (BinarySI)
0000000000000000000000000000000000000000;;		// diskSize = 5000000000 (DecimalSI)
0000000000000000000000000000000000000000;;		// milliCores = 5300 (DecimalSI)
0000000000000000000000000000000000000000;;		// milliCores = 5400 (DecimalSI)
0000000000000000000000000000000000000000;;	}

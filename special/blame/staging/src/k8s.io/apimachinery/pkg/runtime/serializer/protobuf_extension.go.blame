0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
f05006577d95d7a7ecee895b6662439043a61f9d;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package serializer
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime/serializer/protobuf"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		// contentTypeProtobuf is the protobuf type exposed for Kubernetes. It is private to prevent others from
0000000000000000000000000000000000000000;;		// depending on it unintentionally.
0000000000000000000000000000000000000000;;		// TODO: potentially move to pkg/api (since it's part of the Kube public API) and pass it in to the
0000000000000000000000000000000000000000;;		//   CodecFactory on initialization.
0000000000000000000000000000000000000000;;		contentTypeProtobuf = "application/vnd.kubernetes.protobuf"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func protobufSerializer(scheme *runtime.Scheme) (serializerType, bool) {
0000000000000000000000000000000000000000;;		serializer := protobuf.NewSerializer(scheme, scheme, contentTypeProtobuf)
0000000000000000000000000000000000000000;;		raw := protobuf.NewRawSerializer(scheme, scheme, contentTypeProtobuf)
0000000000000000000000000000000000000000;;		return serializerType{
0000000000000000000000000000000000000000;;			AcceptContentTypes: []string{contentTypeProtobuf},
0000000000000000000000000000000000000000;;			ContentType:        contentTypeProtobuf,
0000000000000000000000000000000000000000;;			FileExtensions:     []string{"pb"},
0000000000000000000000000000000000000000;;			Serializer:         serializer,
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			Framer:           protobuf.LengthDelimitedFramer,
0000000000000000000000000000000000000000;;			StreamSerializer: raw,
0000000000000000000000000000000000000000;;		}, true
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		serializerExtensions = append(serializerExtensions, protobufSerializer)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
f05006577d95d7a7ecee895b6662439043a61f9d;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package v1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// This file contains a collection of methods that can be used from go-restful to
0000000000000000000000000000000000000000;;	// generate Swagger API documentation for its models. Please read this PR for more
0000000000000000000000000000000000000000;;	// information on the implementation: https://github.com/emicklei/go-restful/pull/215
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
0000000000000000000000000000000000000000;;	// they are on one line! For multiple line or blocks that you want to ignore use ---.
0000000000000000000000000000000000000000;;	// Any context after a --- is ignored.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Those methods can be generated by using hack/update-generated-swagger-docs.sh
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AUTO-GENERATED FUNCTIONS START HERE
0000000000000000000000000000000000000000;;	var map_APIGroup = map[string]string{
0000000000000000000000000000000000000000;;		"":                           "APIGroup contains the name, the supported versions, and the preferred version of a group.",
0000000000000000000000000000000000000000;;		"name":                       "name is the name of the group.",
0000000000000000000000000000000000000000;;		"versions":                   "versions are the versions supported in this group.",
0000000000000000000000000000000000000000;;		"preferredVersion":           "preferredVersion is the version preferred by the API server, which probably is the storage version.",
0000000000000000000000000000000000000000;;		"serverAddressByClientCIDRs": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (APIGroup) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_APIGroup
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_APIGroupList = map[string]string{
0000000000000000000000000000000000000000;;		"":       "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
0000000000000000000000000000000000000000;;		"groups": "groups is a list of APIGroup.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (APIGroupList) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_APIGroupList
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_APIResource = map[string]string{
0000000000000000000000000000000000000000;;		"":             "APIResource specifies the name of a resource and whether it is namespaced.",
0000000000000000000000000000000000000000;;		"name":         "name is the plural name of the resource.",
0000000000000000000000000000000000000000;;		"singularName": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
0000000000000000000000000000000000000000;;		"namespaced":   "namespaced indicates if a resource is namespaced or not.",
0000000000000000000000000000000000000000;;		"kind":         "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
0000000000000000000000000000000000000000;;		"verbs":        "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
0000000000000000000000000000000000000000;;		"shortNames":   "shortNames is a list of suggested short names of the resource.",
0000000000000000000000000000000000000000;;		"categories":   "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (APIResource) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_APIResource
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_APIResourceList = map[string]string{
0000000000000000000000000000000000000000;;		"":             "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
0000000000000000000000000000000000000000;;		"groupVersion": "groupVersion is the group and version this APIResourceList is for.",
0000000000000000000000000000000000000000;;		"resources":    "resources contains the name of the resources and if they are namespaced.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (APIResourceList) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_APIResourceList
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_APIVersions = map[string]string{
0000000000000000000000000000000000000000;;		"":                           "APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.",
0000000000000000000000000000000000000000;;		"versions":                   "versions are the api versions that are available.",
0000000000000000000000000000000000000000;;		"serverAddressByClientCIDRs": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (APIVersions) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_APIVersions
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_DeleteOptions = map[string]string{
0000000000000000000000000000000000000000;;		"":                   "DeleteOptions may be provided when deleting an API object.",
0000000000000000000000000000000000000000;;		"gracePeriodSeconds": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
0000000000000000000000000000000000000000;;		"preconditions":      "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
0000000000000000000000000000000000000000;;		"orphanDependents":   "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
0000000000000000000000000000000000000000;;		"propagationPolicy":  "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (DeleteOptions) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_DeleteOptions
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_ExportOptions = map[string]string{
0000000000000000000000000000000000000000;;		"":       "ExportOptions is the query options to the standard REST get call.",
0000000000000000000000000000000000000000;;		"export": "Should this value be exported.  Export strips fields that a user can not specify.",
0000000000000000000000000000000000000000;;		"exact":  "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (ExportOptions) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_ExportOptions
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_GetOptions = map[string]string{
0000000000000000000000000000000000000000;;		"":                     "GetOptions is the standard query options to the standard REST get call.",
0000000000000000000000000000000000000000;;		"resourceVersion":      "When specified: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
0000000000000000000000000000000000000000;;		"includeUninitialized": "If true, partially initialized resources are included in the response.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (GetOptions) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_GetOptions
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_GroupVersionForDiscovery = map[string]string{
0000000000000000000000000000000000000000;;		"":             "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
0000000000000000000000000000000000000000;;		"groupVersion": "groupVersion specifies the API group and version in the form \"group/version\"",
0000000000000000000000000000000000000000;;		"version":      "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (GroupVersionForDiscovery) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_GroupVersionForDiscovery
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_Initializer = map[string]string{
0000000000000000000000000000000000000000;;		"":     "Initializer is information about an initializer that has not yet completed.",
0000000000000000000000000000000000000000;;		"name": "name of the process that is responsible for initializing this object.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (Initializer) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_Initializer
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_Initializers = map[string]string{
0000000000000000000000000000000000000000;;		"":        "Initializers tracks the progress of initialization.",
0000000000000000000000000000000000000000;;		"pending": "Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.",
0000000000000000000000000000000000000000;;		"result":  "If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (Initializers) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_Initializers
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_LabelSelector = map[string]string{
0000000000000000000000000000000000000000;;		"":                 "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
0000000000000000000000000000000000000000;;		"matchLabels":      "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
0000000000000000000000000000000000000000;;		"matchExpressions": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (LabelSelector) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_LabelSelector
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_LabelSelectorRequirement = map[string]string{
0000000000000000000000000000000000000000;;		"":         "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
0000000000000000000000000000000000000000;;		"key":      "key is the label key that the selector applies to.",
0000000000000000000000000000000000000000;;		"operator": "operator represents a key's relationship to a set of values. Valid operators ard In, NotIn, Exists and DoesNotExist.",
0000000000000000000000000000000000000000;;		"values":   "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (LabelSelectorRequirement) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_LabelSelectorRequirement
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_ListMeta = map[string]string{
0000000000000000000000000000000000000000;;		"":                "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
0000000000000000000000000000000000000000;;		"selfLink":        "SelfLink is a URL representing this object. Populated by the system. Read-only.",
0000000000000000000000000000000000000000;;		"resourceVersion": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (ListMeta) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_ListMeta
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_ListOptions = map[string]string{
0000000000000000000000000000000000000000;;		"":                     "ListOptions is the query options to a standard REST list call.",
0000000000000000000000000000000000000000;;		"labelSelector":        "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
0000000000000000000000000000000000000000;;		"fieldSelector":        "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
0000000000000000000000000000000000000000;;		"includeUninitialized": "If true, partially initialized resources are included in the response.",
0000000000000000000000000000000000000000;;		"watch":                "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
0000000000000000000000000000000000000000;;		"resourceVersion":      "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
0000000000000000000000000000000000000000;;		"timeoutSeconds":       "Timeout for the list/watch call.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (ListOptions) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_ListOptions
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_ObjectMeta = map[string]string{
0000000000000000000000000000000000000000;;		"":                           "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
0000000000000000000000000000000000000000;;		"name":                       "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
0000000000000000000000000000000000000000;;		"generateName":               "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
0000000000000000000000000000000000000000;;		"namespace":                  "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
0000000000000000000000000000000000000000;;		"selfLink":                   "SelfLink is a URL representing this object. Populated by the system. Read-only.",
0000000000000000000000000000000000000000;;		"uid":                        "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
0000000000000000000000000000000000000000;;		"resourceVersion":            "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
0000000000000000000000000000000000000000;;		"generation":                 "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
0000000000000000000000000000000000000000;;		"creationTimestamp":          "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
0000000000000000000000000000000000000000;;		"deletionTimestamp":          "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
0000000000000000000000000000000000000000;;		"deletionGracePeriodSeconds": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
0000000000000000000000000000000000000000;;		"labels":                     "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
0000000000000000000000000000000000000000;;		"annotations":                "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
0000000000000000000000000000000000000000;;		"ownerReferences":            "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
0000000000000000000000000000000000000000;;		"initializers":               "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.",
0000000000000000000000000000000000000000;;		"finalizers":                 "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
0000000000000000000000000000000000000000;;		"clusterName":                "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (ObjectMeta) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_ObjectMeta
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_OwnerReference = map[string]string{
0000000000000000000000000000000000000000;;		"":                   "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
0000000000000000000000000000000000000000;;		"apiVersion":         "API version of the referent.",
0000000000000000000000000000000000000000;;		"kind":               "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
0000000000000000000000000000000000000000;;		"name":               "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
0000000000000000000000000000000000000000;;		"uid":                "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
0000000000000000000000000000000000000000;;		"controller":         "If true, this reference points to the managing controller.",
0000000000000000000000000000000000000000;;		"blockOwnerDeletion": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (OwnerReference) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_OwnerReference
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_Patch = map[string]string{
0000000000000000000000000000000000000000;;		"": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (Patch) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_Patch
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_Preconditions = map[string]string{
0000000000000000000000000000000000000000;;		"":    "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
0000000000000000000000000000000000000000;;		"uid": "Specifies the target UID.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (Preconditions) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_Preconditions
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_RootPaths = map[string]string{
0000000000000000000000000000000000000000;;		"":      "RootPaths lists the paths available at root. For example: \"/healthz\", \"/apis\".",
0000000000000000000000000000000000000000;;		"paths": "paths are the paths available at root.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (RootPaths) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_RootPaths
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_ServerAddressByClientCIDR = map[string]string{
0000000000000000000000000000000000000000;;		"":              "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
0000000000000000000000000000000000000000;;		"clientCIDR":    "The CIDR with which clients can match their IP to figure out the server address that they should use.",
0000000000000000000000000000000000000000;;		"serverAddress": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (ServerAddressByClientCIDR) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_ServerAddressByClientCIDR
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_Status = map[string]string{
0000000000000000000000000000000000000000;;		"":         "Status is a return value for calls that don't return other objects.",
0000000000000000000000000000000000000000;;		"metadata": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
0000000000000000000000000000000000000000;;		"status":   "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
0000000000000000000000000000000000000000;;		"message":  "A human-readable description of the status of this operation.",
0000000000000000000000000000000000000000;;		"reason":   "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
0000000000000000000000000000000000000000;;		"details":  "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
0000000000000000000000000000000000000000;;		"code":     "Suggested HTTP return code for this status, 0 if not set.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (Status) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_Status
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_StatusCause = map[string]string{
0000000000000000000000000000000000000000;;		"":        "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
0000000000000000000000000000000000000000;;		"reason":  "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
0000000000000000000000000000000000000000;;		"message": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
0000000000000000000000000000000000000000;;		"field":   "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (StatusCause) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_StatusCause
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_StatusDetails = map[string]string{
0000000000000000000000000000000000000000;;		"":                  "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
0000000000000000000000000000000000000000;;		"name":              "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
0000000000000000000000000000000000000000;;		"group":             "The group attribute of the resource associated with the status StatusReason.",
0000000000000000000000000000000000000000;;		"kind":              "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
0000000000000000000000000000000000000000;;		"uid":               "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
0000000000000000000000000000000000000000;;		"causes":            "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
0000000000000000000000000000000000000000;;		"retryAfterSeconds": "If specified, the time in seconds before the operation should be retried.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (StatusDetails) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_StatusDetails
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_TypeMeta = map[string]string{
0000000000000000000000000000000000000000;;		"":           "TypeMeta describes an individual object in an API response or request with strings representing the type of the object and its API schema version. Structures that are versioned or persisted should inline TypeMeta.",
0000000000000000000000000000000000000000;;		"kind":       "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
0000000000000000000000000000000000000000;;		"apiVersion": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (TypeMeta) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_TypeMeta
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AUTO-GENERATED FUNCTIONS END HERE

080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	/*
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	Copyright 2017 The Kubernetes Authors.
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	Licensed under the Apache License, Version 2.0 (the "License");
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	you may not use this file except in compliance with the License.
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	You may obtain a copy of the License at
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	    http://www.apache.org/licenses/LICENSE-2.0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	Unless required by applicable law or agreed to in writing, software
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	distributed under the License is distributed on an "AS IS" BASIS,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	See the License for the specific language governing permissions and
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	limitations under the License.
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	*/
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	// Code generated by protoc-gen-gogo.
3d7e0fcd59e7913a75871476154f1dbfd2d5e633;;	// source: k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/apis/testapigroup/v1/generated.proto
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	// DO NOT EDIT!
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	/*
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		Package v1 is a generated protocol buffer package.
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		It is generated from these files:
3d7e0fcd59e7913a75871476154f1dbfd2d5e633;;			k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/apis/testapigroup/v1/generated.proto
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		It has these top-level messages:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			Carp
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			CarpCondition
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			CarpList
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			CarpSpec
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			CarpStatus
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	*/
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	package v1
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	import proto "github.com/gogo/protobuf/proto"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	import fmt "fmt"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	import math "math"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	import k8s_io_apimachinery_pkg_apis_meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	import github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	import strings "strings"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	import reflect "reflect"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	import io "io"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	// Reference imports to suppress errors if they are not otherwise used.
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	var _ = proto.Marshal
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	var _ = fmt.Errorf
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	var _ = math.Inf
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	// This is a compile-time assertion to ensure that this generated file
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	// is compatible with the proto package it is being compiled against.
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	// A compilation error at this line likely means your copy of the
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	// proto package needs to be updated.
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *Carp) Reset()                    { *m = Carp{} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*Carp) ProtoMessage()               {}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*Carp) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{0} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpCondition) Reset()                    { *m = CarpCondition{} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*CarpCondition) ProtoMessage()               {}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*CarpCondition) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{1} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpList) Reset()                    { *m = CarpList{} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*CarpList) ProtoMessage()               {}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*CarpList) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{2} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpSpec) Reset()                    { *m = CarpSpec{} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*CarpSpec) ProtoMessage()               {}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*CarpSpec) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{3} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpStatus) Reset()                    { *m = CarpStatus{} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*CarpStatus) ProtoMessage()               {}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (*CarpStatus) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{4} }
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func init() {
3d7e0fcd59e7913a75871476154f1dbfd2d5e633;;		proto.RegisterType((*Carp)(nil), "k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp")
3d7e0fcd59e7913a75871476154f1dbfd2d5e633;;		proto.RegisterType((*CarpCondition)(nil), "k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition")
3d7e0fcd59e7913a75871476154f1dbfd2d5e633;;		proto.RegisterType((*CarpList)(nil), "k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList")
3d7e0fcd59e7913a75871476154f1dbfd2d5e633;;		proto.RegisterType((*CarpSpec)(nil), "k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec")
3d7e0fcd59e7913a75871476154f1dbfd2d5e633;;		proto.RegisterType((*CarpStatus)(nil), "k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *Carp) Marshal() (dAtA []byte, err error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		size := m.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA = make([]byte, size)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n, err := m.MarshalTo(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return nil, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return dAtA[:n], nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *Carp) MarshalTo(dAtA []byte) (int, error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var i int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = i
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0xa
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(m.ObjectMeta.Size()))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n1, err := m.ObjectMeta.MarshalTo(dAtA[i:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += n1
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x12
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(m.Spec.Size()))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n2, err := m.Spec.MarshalTo(dAtA[i:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += n2
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x1a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(m.Status.Size()))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n3, err := m.Status.MarshalTo(dAtA[i:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += n3
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return i, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpCondition) Marshal() (dAtA []byte, err error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		size := m.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA = make([]byte, size)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n, err := m.MarshalTo(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return nil, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return dAtA[:n], nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpCondition) MarshalTo(dAtA []byte) (int, error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var i int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = i
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0xa
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.Type)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x12
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Status)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.Status)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x1a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(m.LastProbeTime.Size()))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n4, err := m.LastProbeTime.MarshalTo(dAtA[i:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += n4
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x22
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(m.LastTransitionTime.Size()))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n5, err := m.LastTransitionTime.MarshalTo(dAtA[i:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += n5
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x2a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Reason)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.Reason)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x32
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Message)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.Message)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return i, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpList) Marshal() (dAtA []byte, err error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		size := m.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA = make([]byte, size)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n, err := m.MarshalTo(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return nil, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return dAtA[:n], nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpList) MarshalTo(dAtA []byte) (int, error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var i int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = i
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0xa
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(m.ListMeta.Size()))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n6, err := m.ListMeta.MarshalTo(dAtA[i:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += n6
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if len(m.Items) > 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for _, msg := range m.Items {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				dAtA[i] = 0x12
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i = encodeVarintGenerated(dAtA, i, uint64(msg.Size()))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				n, err := msg.MarshalTo(dAtA[i:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i += n
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return i, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpSpec) Marshal() (dAtA []byte, err error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		size := m.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA = make([]byte, size)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n, err := m.MarshalTo(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return nil, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return dAtA[:n], nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpSpec) MarshalTo(dAtA []byte) (int, error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var i int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = i
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x1a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.RestartPolicy)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.RestartPolicy)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if m.TerminationGracePeriodSeconds != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[i] = 0x20
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			i = encodeVarintGenerated(dAtA, i, uint64(*m.TerminationGracePeriodSeconds))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if m.ActiveDeadlineSeconds != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[i] = 0x28
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			i = encodeVarintGenerated(dAtA, i, uint64(*m.ActiveDeadlineSeconds))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if len(m.NodeSelector) > 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			keysForNodeSelector := make([]string, 0, len(m.NodeSelector))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for k := range m.NodeSelector {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				keysForNodeSelector = append(keysForNodeSelector, string(k))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			github_com_gogo_protobuf_sortkeys.Strings(keysForNodeSelector)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for _, k := range keysForNodeSelector {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				dAtA[i] = 0x3a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				v := m.NodeSelector[string(k)]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				mapSize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i = encodeVarintGenerated(dAtA, i, uint64(mapSize))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				dAtA[i] = 0xa
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i = encodeVarintGenerated(dAtA, i, uint64(len(k)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i += copy(dAtA[i:], k)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				dAtA[i] = 0x12
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i = encodeVarintGenerated(dAtA, i, uint64(len(v)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i += copy(dAtA[i:], v)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x42
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.ServiceAccountName)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.ServiceAccountName)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x4a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.DeprecatedServiceAccount)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.DeprecatedServiceAccount)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x52
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.NodeName)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.NodeName)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x58
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if m.HostNetwork {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[i] = 1
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		} else {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[i] = 0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x60
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if m.HostPID {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[i] = 1
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		} else {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[i] = 0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x68
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if m.HostIPC {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[i] = 1
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		} else {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[i] = 0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x82
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x1
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Hostname)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.Hostname)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x8a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x1
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Subdomain)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.Subdomain)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x9a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x1
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.SchedulerName)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.SchedulerName)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return i, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpStatus) Marshal() (dAtA []byte, err error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		size := m.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA = make([]byte, size)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n, err := m.MarshalTo(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return nil, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return dAtA[:n], nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpStatus) MarshalTo(dAtA []byte) (int, error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var i int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = i
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0xa
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Phase)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.Phase)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if len(m.Conditions) > 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for _, msg := range m.Conditions {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				dAtA[i] = 0x12
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i = encodeVarintGenerated(dAtA, i, uint64(msg.Size()))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				n, err := msg.MarshalTo(dAtA[i:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				i += n
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x1a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Message)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.Message)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x22
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Reason)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.Reason)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x2a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.HostIP)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.HostIP)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[i] = 0x32
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.CarpIP)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		i += copy(dAtA[i:], m.CarpIP)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if m.StartTime != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[i] = 0x3a
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			i++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			i = encodeVarintGenerated(dAtA, i, uint64(m.StartTime.Size()))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			n7, err := m.StartTime.MarshalTo(dAtA[i:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			i += n7
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return i, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func encodeFixed64Generated(dAtA []byte, offset int, v uint64) int {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset] = uint8(v)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+1] = uint8(v >> 8)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+2] = uint8(v >> 16)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+3] = uint8(v >> 24)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+4] = uint8(v >> 32)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+5] = uint8(v >> 40)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+6] = uint8(v >> 48)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+7] = uint8(v >> 56)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return offset + 8
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func encodeFixed32Generated(dAtA []byte, offset int, v uint32) int {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset] = uint8(v)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+1] = uint8(v >> 8)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+2] = uint8(v >> 16)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset+3] = uint8(v >> 24)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return offset + 4
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func encodeVarintGenerated(dAtA []byte, offset int, v uint64) int {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for v >= 1<<7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			dAtA[offset] = uint8(v&0x7f | 0x80)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			v >>= 7
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			offset++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		dAtA[offset] = uint8(v)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return offset + 1
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *Carp) Size() (n int) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = m.ObjectMeta.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = m.Spec.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = m.Status.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return n
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpCondition) Size() (n int) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.Type)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.Status)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = m.LastProbeTime.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = m.LastTransitionTime.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.Reason)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.Message)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return n
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpList) Size() (n int) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = m.ListMeta.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if len(m.Items) > 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for _, e := range m.Items {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				l = e.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return n
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpSpec) Size() (n int) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.RestartPolicy)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if m.TerminationGracePeriodSeconds != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			n += 1 + sovGenerated(uint64(*m.TerminationGracePeriodSeconds))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if m.ActiveDeadlineSeconds != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			n += 1 + sovGenerated(uint64(*m.ActiveDeadlineSeconds))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if len(m.NodeSelector) > 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for k, v := range m.NodeSelector {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				_ = k
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				_ = v
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.ServiceAccountName)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.DeprecatedServiceAccount)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.NodeName)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 2
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 2
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 2
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.Hostname)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 2 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.Subdomain)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 2 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.SchedulerName)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 2 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return n
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpStatus) Size() (n int) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		var l int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		_ = l
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.Phase)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if len(m.Conditions) > 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for _, e := range m.Conditions {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				l = e.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.Message)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.Reason)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.HostIP)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l = len(m.CarpIP)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if m.StartTime != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			l = m.StartTime.Size()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			n += 1 + l + sovGenerated(uint64(l))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return n
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func sovGenerated(x uint64) (n int) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			n++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			x >>= 7
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if x == 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return n
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func sozGenerated(x uint64) (n int) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return sovGenerated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (this *Carp) String() string {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if this == nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return "nil"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		s := strings.Join([]string{`&Carp{`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`ObjectMeta:` + strings.Replace(strings.Replace(this.ObjectMeta.String(), "ObjectMeta", "k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "CarpSpec", "CarpSpec", 1), `&`, ``, 1) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Status:` + strings.Replace(strings.Replace(this.Status.String(), "CarpStatus", "CarpStatus", 1), `&`, ``, 1) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`}`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}, "")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return s
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (this *CarpCondition) String() string {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if this == nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return "nil"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		s := strings.Join([]string{`&CarpCondition{`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`LastProbeTime:` + strings.Replace(strings.Replace(this.LastProbeTime.String(), "Time", "k8s_io_apimachinery_pkg_apis_meta_v1.Time", 1), `&`, ``, 1) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`LastTransitionTime:` + strings.Replace(strings.Replace(this.LastTransitionTime.String(), "Time", "k8s_io_apimachinery_pkg_apis_meta_v1.Time", 1), `&`, ``, 1) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`}`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}, "")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return s
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (this *CarpList) String() string {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if this == nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return "nil"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		s := strings.Join([]string{`&CarpList{`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`ListMeta:` + strings.Replace(strings.Replace(this.ListMeta.String(), "ListMeta", "k8s_io_apimachinery_pkg_apis_meta_v1.ListMeta", 1), `&`, ``, 1) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Items:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Items), "Carp", "Carp", 1), `&`, ``, 1) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`}`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}, "")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return s
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (this *CarpSpec) String() string {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if this == nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return "nil"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		keysForNodeSelector := make([]string, 0, len(this.NodeSelector))
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for k := range this.NodeSelector {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			keysForNodeSelector = append(keysForNodeSelector, k)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		github_com_gogo_protobuf_sortkeys.Strings(keysForNodeSelector)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		mapStringForNodeSelector := "map[string]string{"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for _, k := range keysForNodeSelector {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			mapStringForNodeSelector += fmt.Sprintf("%v: %v,", k, this.NodeSelector[k])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		mapStringForNodeSelector += "}"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		s := strings.Join([]string{`&CarpSpec{`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`RestartPolicy:` + fmt.Sprintf("%v", this.RestartPolicy) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`TerminationGracePeriodSeconds:` + valueToStringGenerated(this.TerminationGracePeriodSeconds) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`ActiveDeadlineSeconds:` + valueToStringGenerated(this.ActiveDeadlineSeconds) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`NodeSelector:` + mapStringForNodeSelector + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`ServiceAccountName:` + fmt.Sprintf("%v", this.ServiceAccountName) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`DeprecatedServiceAccount:` + fmt.Sprintf("%v", this.DeprecatedServiceAccount) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`NodeName:` + fmt.Sprintf("%v", this.NodeName) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`HostNetwork:` + fmt.Sprintf("%v", this.HostNetwork) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`HostPID:` + fmt.Sprintf("%v", this.HostPID) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`HostIPC:` + fmt.Sprintf("%v", this.HostIPC) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Hostname:` + fmt.Sprintf("%v", this.Hostname) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Subdomain:` + fmt.Sprintf("%v", this.Subdomain) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`SchedulerName:` + fmt.Sprintf("%v", this.SchedulerName) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`}`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}, "")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return s
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (this *CarpStatus) String() string {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if this == nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return "nil"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		s := strings.Join([]string{`&CarpStatus{`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Phase:` + fmt.Sprintf("%v", this.Phase) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Conditions:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Conditions), "CarpCondition", "CarpCondition", 1), `&`, ``, 1) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`HostIP:` + fmt.Sprintf("%v", this.HostIP) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`CarpIP:` + fmt.Sprintf("%v", this.CarpIP) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`StartTime:` + strings.Replace(fmt.Sprintf("%v", this.StartTime), "Time", "k8s_io_apimachinery_pkg_apis_meta_v1.Time", 1) + `,`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			`}`,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}, "")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return s
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func valueToStringGenerated(v interface{}) string {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		rv := reflect.ValueOf(v)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if rv.IsNil() {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return "nil"
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		pv := reflect.Indirect(rv).Interface()
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return fmt.Sprintf("*%v", pv)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *Carp) Unmarshal(dAtA []byte) error {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l := len(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		iNdEx := 0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for iNdEx < l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			preIndex := iNdEx
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			var wire uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				wire |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			fieldNum := int32(wire >> 3)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			wireType := int(wire & 0x7)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if wireType == 4 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: Carp: wiretype end group for non-group")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if fieldNum <= 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: Carp: illegal tag %d (wire type %d)", fieldNum, wire)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			switch fieldNum {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 1:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 2:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 3:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			default:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = preIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				skippy, err := skipGenerated(dAtA[iNdEx:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if skippy < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if (iNdEx + skippy) > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx += skippy
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if iNdEx > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpCondition) Unmarshal(dAtA []byte) error {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l := len(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		iNdEx := 0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for iNdEx < l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			preIndex := iNdEx
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			var wire uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				wire |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			fieldNum := int32(wire >> 3)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			wireType := int(wire & 0x7)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if wireType == 4 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: CarpCondition: wiretype end group for non-group")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if fieldNum <= 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: CarpCondition: illegal tag %d (wire type %d)", fieldNum, wire)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			switch fieldNum {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 1:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Type = CarpConditionType(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 2:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Status = ConditionStatus(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 3:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field LastProbeTime", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err := m.LastProbeTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 4:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field LastTransitionTime", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err := m.LastTransitionTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 5:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Reason = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 6:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Message = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			default:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = preIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				skippy, err := skipGenerated(dAtA[iNdEx:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if skippy < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if (iNdEx + skippy) > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx += skippy
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if iNdEx > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpList) Unmarshal(dAtA []byte) error {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l := len(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		iNdEx := 0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for iNdEx < l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			preIndex := iNdEx
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			var wire uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				wire |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			fieldNum := int32(wire >> 3)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			wireType := int(wire & 0x7)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if wireType == 4 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: CarpList: wiretype end group for non-group")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if fieldNum <= 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: CarpList: illegal tag %d (wire type %d)", fieldNum, wire)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			switch fieldNum {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 1:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field ListMeta", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err := m.ListMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 2:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Items = append(m.Items, Carp{})
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			default:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = preIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				skippy, err := skipGenerated(dAtA[iNdEx:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if skippy < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if (iNdEx + skippy) > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx += skippy
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if iNdEx > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpSpec) Unmarshal(dAtA []byte) error {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l := len(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		iNdEx := 0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for iNdEx < l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			preIndex := iNdEx
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			var wire uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				wire |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			fieldNum := int32(wire >> 3)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			wireType := int(wire & 0x7)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if wireType == 4 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: CarpSpec: wiretype end group for non-group")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if fieldNum <= 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: CarpSpec: illegal tag %d (wire type %d)", fieldNum, wire)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			switch fieldNum {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 3:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field RestartPolicy", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.RestartPolicy = RestartPolicy(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 4:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field TerminationGracePeriodSeconds", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var v int64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					v |= (int64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.TerminationGracePeriodSeconds = &v
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 5:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field ActiveDeadlineSeconds", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var v int64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					v |= (int64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.ActiveDeadlineSeconds = &v
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 7:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field NodeSelector", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var keykey uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					keykey |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLenmapkey uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLenmapkey |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLenmapkey := int(stringLenmapkey)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLenmapkey < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postStringIndexmapkey := iNdEx + intStringLenmapkey
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postStringIndexmapkey > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				mapkey := string(dAtA[iNdEx:postStringIndexmapkey])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postStringIndexmapkey
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if m.NodeSelector == nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					m.NodeSelector = make(map[string]string)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if iNdEx < postIndex {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					var valuekey uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;							return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;							return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						valuekey |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;							break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					var stringLenmapvalue uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;							return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;							return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						stringLenmapvalue |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;							break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					intStringLenmapvalue := int(stringLenmapvalue)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if intStringLenmapvalue < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if postStringIndexmapvalue > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					mapvalue := string(dAtA[iNdEx:postStringIndexmapvalue])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx = postStringIndexmapvalue
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					m.NodeSelector[mapkey] = mapvalue
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				} else {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					var mapvalue string
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					m.NodeSelector[mapkey] = mapvalue
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 8:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field ServiceAccountName", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.ServiceAccountName = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 9:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field DeprecatedServiceAccount", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.DeprecatedServiceAccount = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 10:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.NodeName = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 11:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field HostNetwork", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var v int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					v |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.HostNetwork = bool(v != 0)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 12:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field HostPID", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var v int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					v |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.HostPID = bool(v != 0)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 13:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field HostIPC", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var v int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					v |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.HostIPC = bool(v != 0)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 16:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Hostname", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Hostname = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 17:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Subdomain", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Subdomain = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 19:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field SchedulerName", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.SchedulerName = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			default:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = preIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				skippy, err := skipGenerated(dAtA[iNdEx:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if skippy < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if (iNdEx + skippy) > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx += skippy
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if iNdEx > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func (m *CarpStatus) Unmarshal(dAtA []byte) error {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l := len(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		iNdEx := 0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for iNdEx < l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			preIndex := iNdEx
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			var wire uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				wire |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			fieldNum := int32(wire >> 3)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			wireType := int(wire & 0x7)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if wireType == 4 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: CarpStatus: wiretype end group for non-group")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			if fieldNum <= 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return fmt.Errorf("proto: CarpStatus: illegal tag %d (wire type %d)", fieldNum, wire)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			switch fieldNum {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 1:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Phase", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Phase = CarpPhase(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 2:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Conditions", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Conditions = append(m.Conditions, CarpCondition{})
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err := m.Conditions[len(m.Conditions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 3:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Message = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 4:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.Reason = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 5:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field HostIP", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.HostIP = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 6:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field CarpIP", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var stringLen uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					stringLen |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				intStringLen := int(stringLen)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if intStringLen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + intStringLen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				m.CarpIP = string(dAtA[iNdEx:postIndex])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 7:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if wireType != 2 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var msglen int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					msglen |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if msglen < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				postIndex := iNdEx + msglen
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if postIndex > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if m.StartTime == nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					m.StartTime = &k8s_io_apimachinery_pkg_apis_meta_v1.Time{}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err := m.StartTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = postIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			default:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx = preIndex
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				skippy, err := skipGenerated(dAtA[iNdEx:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if skippy < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if (iNdEx + skippy) > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx += skippy
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		if iNdEx > l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			return io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		return nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func skipGenerated(dAtA []byte) (n int, err error) {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		l := len(dAtA)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		iNdEx := 0
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		for iNdEx < l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			var wire uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return 0, ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return 0, io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				wire |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			wireType := int(wire & 0x7)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			switch wireType {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 0:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return 0, ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return 0, io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if dAtA[iNdEx-1] < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return iNdEx, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 1:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx += 8
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return iNdEx, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 2:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				var length int
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return 0, ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return 0, io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					length |= (int(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx += length
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				if length < 0 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					return 0, ErrInvalidLengthGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return iNdEx, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 3:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				for {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					var innerWire uint64
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					var start int = iNdEx
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					for shift := uint(0); ; shift += 7 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						if shift >= 64 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;							return 0, ErrIntOverflowGenerated
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						if iNdEx >= l {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;							return 0, io.ErrUnexpectedEOF
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						b := dAtA[iNdEx]
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						iNdEx++
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						innerWire |= (uint64(b) & 0x7F) << shift
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						if b < 0x80 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;							break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					innerWireType := int(innerWire & 0x7)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if innerWireType == 4 {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						break
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					next, err := skipGenerated(dAtA[start:])
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					if err != nil {
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;						return 0, err
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;					iNdEx = start + next
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return iNdEx, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 4:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return iNdEx, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			case 5:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				iNdEx += 4
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return iNdEx, nil
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			default:
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;				return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;			}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		panic("unreachable")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	var (
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		ErrInvalidLengthGenerated = fmt.Errorf("proto: negative length found during unmarshaling")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		ErrIntOverflowGenerated   = fmt.Errorf("proto: integer overflow")
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	func init() {
3d7e0fcd59e7913a75871476154f1dbfd2d5e633;;		proto.RegisterFile("k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/apis/testapigroup/v1/generated.proto", fileDescriptorGenerated)
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	var fileDescriptorGenerated = []byte{
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		// 1065 bytes of a gzipped FileDescriptorProto
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x10, 0xb6, 0x2c, 0xcb, 0x92, 0xd6, 0x56, 0x62, 0x6f, 0x62, 0x80, 0x31, 0x10, 0xc9, 0x71, 0x0b,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xc3, 0x29, 0x1a, 0xb2, 0x76, 0xd3, 0x22, 0x6d, 0x0f, 0x41, 0x68, 0x17, 0xb5, 0x0b, 0xff, 0x10,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x2b, 0x03, 0x01, 0x8a, 0x1e, 0xba, 0x22, 0x27, 0x32, 0x2b, 0x91, 0x4b, 0xec, 0xae, 0xd4, 0xea,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xd6, 0x47, 0x68, 0x1f, 0xa0, 0x4f, 0xd1, 0x43, 0x81, 0x3e, 0x81, 0x8f, 0x39, 0xe6, 0x24, 0xd4,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xea, 0x5b, 0xf8, 0x54, 0xec, 0xf2, 0x47, 0xa2, 0xe5, 0x38, 0xf2, 0x6d, 0x77, 0xe6, 0xfb, 0xbe,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x19, 0xee, 0x0c, 0x67, 0xd0, 0x71, 0xe7, 0x85, 0x30, 0x7d, 0x66, 0x75, 0x7a, 0x2d, 0xe0, 0x21,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x48, 0x10, 0x56, 0x1f, 0x42, 0x8f, 0x71, 0x2b, 0x71, 0xd0, 0xc8, 0x17, 0xc0, 0xfb, 0xc0, 0xad,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xa8, 0xd3, 0xd6, 0x37, 0x0b, 0x7e, 0xa5, 0x41, 0xd4, 0x05, 0xab, 0xbf, 0x63, 0xb5, 0x21, 0x04,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x4e, 0x25, 0x78, 0x66, 0xc4, 0x99, 0x64, 0xf8, 0xe3, 0x98, 0x65, 0x66, 0x2c, 0x33, 0xea, 0xb4,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xf5, 0xcd, 0x4c, 0x58, 0x66, 0x7f, 0x67, 0xfd, 0x59, 0xdb, 0x97, 0xe7, 0xbd, 0x96, 0xe9, 0xb2,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xc0, 0x6a, 0xb3, 0x36, 0xb3, 0x34, 0xb9, 0xd5, 0x7b, 0xa3, 0x6f, 0xfa, 0xa2, 0x4f, 0xb1, 0xe8,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xfa, 0xf3, 0x71, 0x2a, 0x01, 0x75, 0xcf, 0xfd, 0x10, 0xf8, 0x60, 0x9c, 0x4d, 0x00, 0x92, 0xde,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x90, 0xca, 0xba, 0xf5, 0x3e, 0x16, 0xef, 0x85, 0xd2, 0x0f, 0x60, 0x8a, 0xf0, 0xe5, 0x87, 0x08,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xc2, 0x3d, 0x87, 0x80, 0x4e, 0xf1, 0x3e, 0x7f, 0x1f, 0xaf, 0x27, 0xfd, 0xae, 0xe5, 0x87, 0x52,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x48, 0x7e, 0x9d, 0xb4, 0xf9, 0xc7, 0x3c, 0x2a, 0x3a, 0xcc, 0xc3, 0x3f, 0xa1, 0x8a, 0xfa, 0x00,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x8f, 0x4a, 0x6a, 0x14, 0x36, 0x0a, 0xdb, 0x4b, 0xbb, 0x9f, 0x99, 0xe3, 0x37, 0xcc, 0xf4, 0xc6,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xcf, 0xa8, 0xd0, 0x66, 0x7f, 0xc7, 0x3c, 0x6d, 0xfd, 0x0c, 0xae, 0x3c, 0x06, 0x49, 0x6d, 0x7c,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x31, 0x6c, 0xcc, 0x8d, 0x86, 0x0d, 0x34, 0xb6, 0x91, 0x4c, 0x15, 0x9f, 0xa2, 0x05, 0x11, 0x81,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x6b, 0xcc, 0x6b, 0xf5, 0x67, 0xe6, 0x2c, 0x15, 0x32, 0x1d, 0xe6, 0x35, 0x23, 0x70, 0xed, 0xe5,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x44, 0x7a, 0x41, 0xdd, 0x88, 0x16, 0xc2, 0xaf, 0xd1, 0xa2, 0x90, 0x54, 0xf6, 0x84, 0x51, 0xd4,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x92, 0xd6, 0xec, 0x92, 0x9a, 0x66, 0xdf, 0x4b, 0x44, 0x17, 0xe3, 0x3b, 0x49, 0xe4, 0x36, 0xff,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x2a, 0xa2, 0x65, 0x87, 0x79, 0x7b, 0x2c, 0xf4, 0x7c, 0xe9, 0xb3, 0x10, 0x3f, 0x47, 0x0b, 0x72,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x10, 0x81, 0x7e, 0x98, 0xaa, 0xbd, 0x91, 0xe6, 0x72, 0x36, 0x88, 0xe0, 0x6a, 0xd8, 0x58, 0x99,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xc4, 0x2a, 0x1b, 0xd1, 0x68, 0xfc, 0x55, 0x96, 0xdf, 0xbc, 0xe6, 0x3d, 0xc9, 0x87, 0xbb, 0x1a,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x36, 0xee, 0x67, 0xb4, 0x7c, 0x06, 0xb8, 0x8d, 0x6a, 0x5d, 0x2a, 0xa4, 0xc3, 0x59, 0x0b, 0xce,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xfc, 0x00, 0x92, 0x2f, 0xfc, 0x64, 0xb6, 0x92, 0x28, 0x86, 0xbd, 0x96, 0x44, 0xab, 0x1d, 0x4d,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x0a, 0x91, 0xbc, 0x2e, 0xee, 0x23, 0xac, 0x0c, 0x67, 0x9c, 0x86, 0x22, 0xce, 0x5f, 0x45, 0x5b,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xb8, 0x73, 0xb4, 0xf5, 0x24, 0x1a, 0x3e, 0x9a, 0x52, 0x23, 0x37, 0x44, 0xc0, 0x5b, 0x68, 0x91,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x03, 0x15, 0x2c, 0x34, 0x4a, 0xfa, 0x6d, 0xb2, 0x52, 0x10, 0x6d, 0x25, 0x89, 0x17, 0x3f, 0x45,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xe5, 0x00, 0x84, 0xa0, 0x6d, 0x30, 0x16, 0x35, 0xf0, 0x7e, 0x02, 0x2c, 0x1f, 0xc7, 0x66, 0x92,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xfa, 0x37, 0xff, 0x2e, 0xa0, 0xb2, 0xc3, 0xbc, 0x23, 0x5f, 0x48, 0xfc, 0xe3, 0x54, 0x37, 0x9b,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xb3, 0x7d, 0x8c, 0x62, 0xeb, 0x5e, 0x5e, 0x49, 0xe2, 0x54, 0x52, 0xcb, 0x44, 0x27, 0x9f, 0xa0,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x92, 0x2f, 0x21, 0x50, 0x75, 0x2d, 0x6e, 0x2f, 0xed, 0x3e, 0x9d, 0xb9, 0xef, 0xec, 0x5a, 0xa2,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x5a, 0x3a, 0x54, 0x7c, 0x12, 0xcb, 0x6c, 0xfe, 0x53, 0xd6, 0x99, 0xab, 0xd6, 0xc6, 0x47, 0xa8,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xc6, 0x41, 0x48, 0xca, 0xa5, 0xc3, 0xba, 0xbe, 0x3b, 0xd0, 0x95, 0xaf, 0xda, 0x5b, 0x69, 0x35,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xc9, 0xa4, 0xf3, 0xea, 0xba, 0x81, 0xe4, 0xc9, 0xb8, 0x8d, 0x1e, 0x4b, 0xe0, 0x81, 0x1f, 0x52,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xf5, 0xf2, 0xdf, 0x71, 0xea, 0x82, 0x03, 0xdc, 0x67, 0x5e, 0x13, 0x5c, 0x16, 0x7a, 0x42, 0x57,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xba, 0x68, 0x3f, 0x19, 0x0d, 0x1b, 0x8f, 0xcf, 0x6e, 0x03, 0x92, 0xdb, 0x75, 0xf0, 0x29, 0x5a,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xa3, 0xae, 0xf4, 0xfb, 0xb0, 0x0f, 0xd4, 0xeb, 0xfa, 0x21, 0xa4, 0x01, 0x4a, 0x3a, 0xc0, 0xa3,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xd1, 0xb0, 0xb1, 0xf6, 0xea, 0x26, 0x00, 0xb9, 0x99, 0x87, 0x07, 0x68, 0x39, 0x64, 0x1e, 0x34,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xa1, 0x0b, 0xae, 0x64, 0xdc, 0x28, 0xeb, 0xa7, 0x7e, 0x79, 0xa7, 0xa9, 0x61, 0x9e, 0x4c, 0x28,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x7c, 0x1b, 0x4a, 0x3e, 0xb0, 0x1f, 0x26, 0xef, 0xb8, 0x3c, 0xe9, 0x22, 0xb9, 0x50, 0xf8, 0x7b,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x84, 0x95, 0xb6, 0xef, 0xc2, 0x2b, 0xd7, 0x65, 0xbd, 0x50, 0x9e, 0xd0, 0x00, 0x8c, 0x8a, 0xae,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x43, 0xd6, 0xe7, 0xcd, 0x29, 0x04, 0xb9, 0x81, 0x85, 0x0f, 0xd0, 0xbd, 0xbc, 0xd5, 0xa8, 0xe6,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x66, 0x88, 0xb1, 0x0f, 0x11, 0x07, 0x57, 0x0d, 0xe4, 0xbc, 0x22, 0xb9, 0xc6, 0xc3, 0x9f, 0xa2,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x8a, 0xca, 0x52, 0xe7, 0x82, 0xb4, 0x46, 0xd6, 0xa2, 0x27, 0x89, 0x9d, 0x64, 0x08, 0xfc, 0x05,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x5a, 0x3a, 0x67, 0x42, 0x9e, 0x80, 0xfc, 0x85, 0xf1, 0x8e, 0xb1, 0xb4, 0x51, 0xd8, 0xae, 0xd8,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x0f, 0x12, 0xc2, 0xd2, 0xc1, 0xd8, 0x45, 0x26, 0x71, 0xea, 0x77, 0x53, 0x57, 0xe7, 0x70, 0xdf,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x58, 0xd6, 0x94, 0xec, 0x77, 0x3b, 0x88, 0xcd, 0x24, 0xf5, 0xa7, 0xd0, 0x43, 0x67, 0xcf, 0xa8,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x4d, 0x43, 0x0f, 0x9d, 0x3d, 0x92, 0xfa, 0x55, 0xea, 0xea, 0x18, 0xaa, 0xd4, 0x57, 0xf2, 0xa9,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x1f, 0x24, 0x76, 0x92, 0x21, 0xb0, 0x85, 0xaa, 0xa2, 0xd7, 0xf2, 0x58, 0x40, 0xfd, 0xd0, 0x58,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xd5, 0xf0, 0xd5, 0x04, 0x5e, 0x6d, 0xa6, 0x0e, 0x32, 0xc6, 0xe0, 0x6f, 0x50, 0x4d, 0x6d, 0x44,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xaf, 0xd7, 0x05, 0xae, 0x63, 0x3c, 0xd0, 0xa4, 0x6c, 0x00, 0x36, 0x53, 0xa7, 0x7e, 0xa3, 0x3c,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x76, 0xfd, 0x25, 0x5a, 0x9d, 0xea, 0x12, 0xbc, 0x82, 0x8a, 0x1d, 0x18, 0xc4, 0xe3, 0x9e, 0xa8,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x23, 0x7e, 0x88, 0x4a, 0x7d, 0xda, 0xed, 0x41, 0x3c, 0xca, 0x49, 0x7c, 0xf9, 0x7a, 0xfe, 0x45,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x61, 0xf3, 0xcf, 0x22, 0xaa, 0x66, 0x2b, 0x05, 0x5b, 0xa8, 0x14, 0x9d, 0x53, 0x91, 0xae, 0x8a,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x47, 0xe9, 0xff, 0xee, 0x28, 0xe3, 0xd5, 0xb0, 0x51, 0x71, 0x98, 0xa7, 0xcf, 0x24, 0xc6, 0xe1,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x37, 0x08, 0xb9, 0xe9, 0x12, 0x48, 0x07, 0xca, 0xee, 0xcc, 0x5d, 0x9e, 0xed, 0x8f, 0xf1, 0xee,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xcd, 0x4c, 0x82, 0x4c, 0x28, 0x4f, 0x0e, 0xd2, 0xe2, 0xed, 0x83, 0x74, 0x62, 0x36, 0x2f, 0xdc,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x3a, 0x9b, 0xb7, 0xd0, 0x62, 0x5c, 0xe1, 0xeb, 0x33, 0x3c, 0x6e, 0x00, 0x92, 0x78, 0xf1, 0x47,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xa8, 0x14, 0x31, 0xef, 0xd0, 0x49, 0x26, 0x78, 0x36, 0x03, 0x1d, 0x65, 0x24, 0xb1, 0x0f, 0xbf,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x46, 0x55, 0x3d, 0xb8, 0xf4, 0xfe, 0x29, 0xdf, 0x79, 0xff, 0xd4, 0x74, 0x77, 0xa4, 0x02, 0x64,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xac, 0x65, 0x6f, 0x5f, 0x5c, 0xd6, 0xe7, 0xde, 0x5e, 0xd6, 0xe7, 0xde, 0x5d, 0xd6, 0xe7, 0x7e,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0x1b, 0xd5, 0x0b, 0x17, 0xa3, 0x7a, 0xe1, 0xed, 0xa8, 0x5e, 0x78, 0x37, 0xaa, 0x17, 0xfe, 0x1d,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xd5, 0x0b, 0xbf, 0xff, 0x57, 0x9f, 0xfb, 0x61, 0xbe, 0xbf, 0xf3, 0x7f, 0x00, 0x00, 0x00, 0xff,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;		0xff, 0x55, 0x69, 0xbd, 0x27, 0x83, 0x0a, 0x00, 0x00,
080f4e2b08b44ae35eb18c0e03a721bdf44dd8c9;;	}

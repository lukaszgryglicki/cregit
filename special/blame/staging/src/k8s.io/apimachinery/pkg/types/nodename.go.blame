0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
f05006577d95d7a7ecee895b6662439043a61f9d;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package types
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NodeName is a type that holds a api.Node's Name identifier.
0000000000000000000000000000000000000000;;	// Being a type captures intent and helps make sure that the node name
0000000000000000000000000000000000000000;;	// is not confused with similar concepts (the hostname, the cloud provider id,
0000000000000000000000000000000000000000;;	// the cloud provider name etc)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// To clarify the various types:
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// * Node.Name is the Name field of the Node in the API.  This should be stored in a NodeName.
0000000000000000000000000000000000000000;;	//   Unfortunately, because Name is part of ObjectMeta, we can't store it as a NodeName at the API level.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// * Hostname is the hostname of the local machine (from uname -n).
0000000000000000000000000000000000000000;;	//   However, some components allow the user to pass in a --hostname-override flag,
0000000000000000000000000000000000000000;;	//   which will override this in most places. In the absence of anything more meaningful,
0000000000000000000000000000000000000000;;	//   kubelet will use Hostname as the Node.Name when it creates the Node.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// * The cloudproviders have the own names: GCE has InstanceName, AWS has InstanceId.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   For GCE, InstanceName is the Name of an Instance object in the GCE API.  On GCE, Instance.Name becomes the
0000000000000000000000000000000000000000;;	//   Hostname, and thus it makes sense also to use it as the Node.Name.  But that is GCE specific, and it is up
0000000000000000000000000000000000000000;;	//   to the cloudprovider how to do this mapping.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   For AWS, the InstanceID is not yet suitable for use as a Node.Name, so we actually use the
0000000000000000000000000000000000000000;;	//   PrivateDnsName for the Node.Name.  And this is _not_ always the same as the hostname: if
0000000000000000000000000000000000000000;;	//   we are using a custom DHCP domain it won't be.
0000000000000000000000000000000000000000;;	type NodeName string

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
d9bf4d765bd356628f368ffd31c06dcf35531a4a;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// This file was automatically generated by informer-gen
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package v1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		internalinterfaces "k8s.io/client-go/informers/internalinterfaces"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Interface provides access to all the informers in this group version.
0000000000000000000000000000000000000000;;	type Interface interface {
0000000000000000000000000000000000000000;;		// ComponentStatuses returns a ComponentStatusInformer.
0000000000000000000000000000000000000000;;		ComponentStatuses() ComponentStatusInformer
0000000000000000000000000000000000000000;;		// ConfigMaps returns a ConfigMapInformer.
0000000000000000000000000000000000000000;;		ConfigMaps() ConfigMapInformer
0000000000000000000000000000000000000000;;		// Endpoints returns a EndpointsInformer.
0000000000000000000000000000000000000000;;		Endpoints() EndpointsInformer
0000000000000000000000000000000000000000;;		// Events returns a EventInformer.
0000000000000000000000000000000000000000;;		Events() EventInformer
0000000000000000000000000000000000000000;;		// LimitRanges returns a LimitRangeInformer.
0000000000000000000000000000000000000000;;		LimitRanges() LimitRangeInformer
0000000000000000000000000000000000000000;;		// Namespaces returns a NamespaceInformer.
0000000000000000000000000000000000000000;;		Namespaces() NamespaceInformer
0000000000000000000000000000000000000000;;		// Nodes returns a NodeInformer.
0000000000000000000000000000000000000000;;		Nodes() NodeInformer
0000000000000000000000000000000000000000;;		// PersistentVolumes returns a PersistentVolumeInformer.
0000000000000000000000000000000000000000;;		PersistentVolumes() PersistentVolumeInformer
0000000000000000000000000000000000000000;;		// PersistentVolumeClaims returns a PersistentVolumeClaimInformer.
0000000000000000000000000000000000000000;;		PersistentVolumeClaims() PersistentVolumeClaimInformer
0000000000000000000000000000000000000000;;		// Pods returns a PodInformer.
0000000000000000000000000000000000000000;;		Pods() PodInformer
0000000000000000000000000000000000000000;;		// PodTemplates returns a PodTemplateInformer.
0000000000000000000000000000000000000000;;		PodTemplates() PodTemplateInformer
0000000000000000000000000000000000000000;;		// ReplicationControllers returns a ReplicationControllerInformer.
0000000000000000000000000000000000000000;;		ReplicationControllers() ReplicationControllerInformer
0000000000000000000000000000000000000000;;		// ResourceQuotas returns a ResourceQuotaInformer.
0000000000000000000000000000000000000000;;		ResourceQuotas() ResourceQuotaInformer
0000000000000000000000000000000000000000;;		// Secrets returns a SecretInformer.
0000000000000000000000000000000000000000;;		Secrets() SecretInformer
0000000000000000000000000000000000000000;;		// Services returns a ServiceInformer.
0000000000000000000000000000000000000000;;		Services() ServiceInformer
0000000000000000000000000000000000000000;;		// ServiceAccounts returns a ServiceAccountInformer.
0000000000000000000000000000000000000000;;		ServiceAccounts() ServiceAccountInformer
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type version struct {
0000000000000000000000000000000000000000;;		internalinterfaces.SharedInformerFactory
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// New returns a new Interface.
0000000000000000000000000000000000000000;;	func New(f internalinterfaces.SharedInformerFactory) Interface {
0000000000000000000000000000000000000000;;		return &version{f}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ComponentStatuses returns a ComponentStatusInformer.
0000000000000000000000000000000000000000;;	func (v *version) ComponentStatuses() ComponentStatusInformer {
0000000000000000000000000000000000000000;;		return &componentStatusInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ConfigMaps returns a ConfigMapInformer.
0000000000000000000000000000000000000000;;	func (v *version) ConfigMaps() ConfigMapInformer {
0000000000000000000000000000000000000000;;		return &configMapInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Endpoints returns a EndpointsInformer.
0000000000000000000000000000000000000000;;	func (v *version) Endpoints() EndpointsInformer {
0000000000000000000000000000000000000000;;		return &endpointsInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Events returns a EventInformer.
0000000000000000000000000000000000000000;;	func (v *version) Events() EventInformer {
0000000000000000000000000000000000000000;;		return &eventInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// LimitRanges returns a LimitRangeInformer.
0000000000000000000000000000000000000000;;	func (v *version) LimitRanges() LimitRangeInformer {
0000000000000000000000000000000000000000;;		return &limitRangeInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Namespaces returns a NamespaceInformer.
0000000000000000000000000000000000000000;;	func (v *version) Namespaces() NamespaceInformer {
0000000000000000000000000000000000000000;;		return &namespaceInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Nodes returns a NodeInformer.
0000000000000000000000000000000000000000;;	func (v *version) Nodes() NodeInformer {
0000000000000000000000000000000000000000;;		return &nodeInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PersistentVolumes returns a PersistentVolumeInformer.
0000000000000000000000000000000000000000;;	func (v *version) PersistentVolumes() PersistentVolumeInformer {
0000000000000000000000000000000000000000;;		return &persistentVolumeInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PersistentVolumeClaims returns a PersistentVolumeClaimInformer.
0000000000000000000000000000000000000000;;	func (v *version) PersistentVolumeClaims() PersistentVolumeClaimInformer {
0000000000000000000000000000000000000000;;		return &persistentVolumeClaimInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Pods returns a PodInformer.
0000000000000000000000000000000000000000;;	func (v *version) Pods() PodInformer {
0000000000000000000000000000000000000000;;		return &podInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PodTemplates returns a PodTemplateInformer.
0000000000000000000000000000000000000000;;	func (v *version) PodTemplates() PodTemplateInformer {
0000000000000000000000000000000000000000;;		return &podTemplateInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ReplicationControllers returns a ReplicationControllerInformer.
0000000000000000000000000000000000000000;;	func (v *version) ReplicationControllers() ReplicationControllerInformer {
0000000000000000000000000000000000000000;;		return &replicationControllerInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ResourceQuotas returns a ResourceQuotaInformer.
0000000000000000000000000000000000000000;;	func (v *version) ResourceQuotas() ResourceQuotaInformer {
0000000000000000000000000000000000000000;;		return &resourceQuotaInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Secrets returns a SecretInformer.
0000000000000000000000000000000000000000;;	func (v *version) Secrets() SecretInformer {
0000000000000000000000000000000000000000;;		return &secretInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Services returns a ServiceInformer.
0000000000000000000000000000000000000000;;	func (v *version) Services() ServiceInformer {
0000000000000000000000000000000000000000;;		return &serviceInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ServiceAccounts returns a ServiceAccountInformer.
0000000000000000000000000000000000000000;;	func (v *version) ServiceAccounts() ServiceAccountInformer {
0000000000000000000000000000000000000000;;		return &serviceAccountInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}

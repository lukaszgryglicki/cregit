0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
5c86247289440ef64620341badd7ad33b536280d;pkg/apis/policy/v1alpha1/types_swagger_doc_generated.go[pkg/apis/policy/v1alpha1/types_swagger_doc_generated.go][staging/src/k8s.io/api/policy/v1beta1/types_swagger_doc_generated.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package v1beta1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// This file contains a collection of methods that can be used from go-restful to
0000000000000000000000000000000000000000;;	// generate Swagger API documentation for its models. Please read this PR for more
0000000000000000000000000000000000000000;;	// information on the implementation: https://github.com/emicklei/go-restful/pull/215
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
0000000000000000000000000000000000000000;;	// they are on one line! For multiple line or blocks that you want to ignore use ---.
0000000000000000000000000000000000000000;;	// Any context after a --- is ignored.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Those methods can be generated by using hack/update-generated-swagger-docs.sh
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AUTO-GENERATED FUNCTIONS START HERE
0000000000000000000000000000000000000000;;	var map_Eviction = map[string]string{
0000000000000000000000000000000000000000;;		"":              "Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.",
0000000000000000000000000000000000000000;;		"metadata":      "ObjectMeta describes the pod that is being evicted.",
0000000000000000000000000000000000000000;;		"deleteOptions": "DeleteOptions may be provided",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (Eviction) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_Eviction
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_PodDisruptionBudget = map[string]string{
0000000000000000000000000000000000000000;;		"":       "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods",
0000000000000000000000000000000000000000;;		"spec":   "Specification of the desired behavior of the PodDisruptionBudget.",
0000000000000000000000000000000000000000;;		"status": "Most recently observed status of the PodDisruptionBudget.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (PodDisruptionBudget) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_PodDisruptionBudget
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_PodDisruptionBudgetList = map[string]string{
0000000000000000000000000000000000000000;;		"": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (PodDisruptionBudgetList) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_PodDisruptionBudgetList
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_PodDisruptionBudgetSpec = map[string]string{
0000000000000000000000000000000000000000;;		"":               "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.",
0000000000000000000000000000000000000000;;		"minAvailable":   "An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \"100%\".",
0000000000000000000000000000000000000000;;		"selector":       "Label query over pods whose evictions are managed by the disruption budget.",
0000000000000000000000000000000000000000;;		"maxUnavailable": "An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (PodDisruptionBudgetSpec) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_PodDisruptionBudgetSpec
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_PodDisruptionBudgetStatus = map[string]string{
0000000000000000000000000000000000000000;;		"":                   "PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.",
0000000000000000000000000000000000000000;;		"observedGeneration": "Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status informatio is valid only if observedGeneration equals to PDB's object generation.",
0000000000000000000000000000000000000000;;		"disruptedPods":      "DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.",
0000000000000000000000000000000000000000;;		"disruptionsAllowed": "Number of pod disruptions that are currently allowed.",
0000000000000000000000000000000000000000;;		"currentHealthy":     "current number of healthy pods",
0000000000000000000000000000000000000000;;		"desiredHealthy":     "minimum desired number of healthy pods",
0000000000000000000000000000000000000000;;		"expectedPods":       "total number of pods counted by this disruption budget",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (PodDisruptionBudgetStatus) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_PodDisruptionBudgetStatus
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AUTO-GENERATED FUNCTIONS END HERE

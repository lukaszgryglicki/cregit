0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
3014ab4ff57055df94d31964d70b880187db2105;pkg/apis/imagepolicy/v1alpha1/types_swagger_doc_generated.go[pkg/apis/imagepolicy/v1alpha1/types_swagger_doc_generated.go][staging/src/k8s.io/api/imagepolicy/v1alpha1/types_swagger_doc_generated.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package v1alpha1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// This file contains a collection of methods that can be used from go-restful to
0000000000000000000000000000000000000000;;	// generate Swagger API documentation for its models. Please read this PR for more
0000000000000000000000000000000000000000;;	// information on the implementation: https://github.com/emicklei/go-restful/pull/215
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
0000000000000000000000000000000000000000;;	// they are on one line! For multiple line or blocks that you want to ignore use ---.
0000000000000000000000000000000000000000;;	// Any context after a --- is ignored.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Those methods can be generated by using hack/update-generated-swagger-docs.sh
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AUTO-GENERATED FUNCTIONS START HERE
0000000000000000000000000000000000000000;;	var map_ImageReview = map[string]string{
0000000000000000000000000000000000000000;;		"":       "ImageReview checks if the set of images in a pod are allowed.",
0000000000000000000000000000000000000000;;		"spec":   "Spec holds information about the pod being evaluated",
0000000000000000000000000000000000000000;;		"status": "Status is filled in by the backend and indicates whether the pod should be allowed.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (ImageReview) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_ImageReview
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_ImageReviewContainerSpec = map[string]string{
0000000000000000000000000000000000000000;;		"":      "ImageReviewContainerSpec is a description of a container within the pod creation request.",
0000000000000000000000000000000000000000;;		"image": "This can be in the form image:tag or image@SHA:012345679abcdef.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (ImageReviewContainerSpec) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_ImageReviewContainerSpec
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_ImageReviewSpec = map[string]string{
0000000000000000000000000000000000000000;;		"":            "ImageReviewSpec is a description of the pod creation request.",
0000000000000000000000000000000000000000;;		"containers":  "Containers is a list of a subset of the information in each container of the Pod being created.",
0000000000000000000000000000000000000000;;		"annotations": "Annotations is a list of key-value pairs extracted from the Pod's annotations. It only includes keys which match the pattern `*.image-policy.k8s.io/*`. It is up to each webhook backend to determine how to interpret these annotations, if at all.",
0000000000000000000000000000000000000000;;		"namespace":   "Namespace is the namespace the pod is being created in.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (ImageReviewSpec) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_ImageReviewSpec
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_ImageReviewStatus = map[string]string{
0000000000000000000000000000000000000000;;		"":        "ImageReviewStatus is the result of the token authentication request.",
0000000000000000000000000000000000000000;;		"allowed": "Allowed indicates that all images were allowed to be run.",
0000000000000000000000000000000000000000;;		"reason":  "Reason should be empty unless Allowed is false in which case it may contain a short description of what is wrong.  Kubernetes may truncate excessively long errors when displaying to the user.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (ImageReviewStatus) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_ImageReviewStatus
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AUTO-GENERATED FUNCTIONS END HERE

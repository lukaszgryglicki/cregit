0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
885432dd69c298c1eb7c032ec804ded1e736f6c2;pkg/apis/batch/v1/types_swagger_doc_generated.go[pkg/apis/batch/v1/types_swagger_doc_generated.go][staging/src/k8s.io/api/batch/v1/types_swagger_doc_generated.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package v1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// This file contains a collection of methods that can be used from go-restful to
0000000000000000000000000000000000000000;;	// generate Swagger API documentation for its models. Please read this PR for more
0000000000000000000000000000000000000000;;	// information on the implementation: https://github.com/emicklei/go-restful/pull/215
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
0000000000000000000000000000000000000000;;	// they are on one line! For multiple line or blocks that you want to ignore use ---.
0000000000000000000000000000000000000000;;	// Any context after a --- is ignored.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Those methods can be generated by using hack/update-generated-swagger-docs.sh
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AUTO-GENERATED FUNCTIONS START HERE
0000000000000000000000000000000000000000;;	var map_Job = map[string]string{
0000000000000000000000000000000000000000;;		"":         "Job represents the configuration of a single job.",
0000000000000000000000000000000000000000;;		"metadata": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
0000000000000000000000000000000000000000;;		"spec":     "Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
0000000000000000000000000000000000000000;;		"status":   "Current status of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (Job) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_Job
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_JobCondition = map[string]string{
0000000000000000000000000000000000000000;;		"":                   "JobCondition describes current state of a job.",
0000000000000000000000000000000000000000;;		"type":               "Type of job condition, Complete or Failed.",
0000000000000000000000000000000000000000;;		"status":             "Status of the condition, one of True, False, Unknown.",
0000000000000000000000000000000000000000;;		"lastProbeTime":      "Last time the condition was checked.",
0000000000000000000000000000000000000000;;		"lastTransitionTime": "Last time the condition transit from one status to another.",
0000000000000000000000000000000000000000;;		"reason":             "(brief) reason for the condition's last transition.",
0000000000000000000000000000000000000000;;		"message":            "Human readable message indicating details about last transition.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (JobCondition) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_JobCondition
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_JobList = map[string]string{
0000000000000000000000000000000000000000;;		"":         "JobList is a collection of jobs.",
0000000000000000000000000000000000000000;;		"metadata": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
0000000000000000000000000000000000000000;;		"items":    "items is the list of Jobs.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (JobList) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_JobList
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_JobSpec = map[string]string{
0000000000000000000000000000000000000000;;		"":                      "JobSpec describes how the job execution will look like.",
0000000000000000000000000000000000000000;;		"parallelism":           "Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
0000000000000000000000000000000000000000;;		"completions":           "Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
0000000000000000000000000000000000000000;;		"activeDeadlineSeconds": "Optional duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer",
0000000000000000000000000000000000000000;;		"selector":              "A label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
0000000000000000000000000000000000000000;;		"manualSelector":        "manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://git.k8s.io/community/contributors/design-proposals/selector-generation.md",
0000000000000000000000000000000000000000;;		"template":              "Describes the pod that will be created when executing a job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (JobSpec) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_JobSpec
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var map_JobStatus = map[string]string{
0000000000000000000000000000000000000000;;		"":               "JobStatus represents the current state of a Job.",
0000000000000000000000000000000000000000;;		"conditions":     "The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
0000000000000000000000000000000000000000;;		"startTime":      "Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
0000000000000000000000000000000000000000;;		"completionTime": "Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.",
0000000000000000000000000000000000000000;;		"active":         "The number of actively running pods.",
0000000000000000000000000000000000000000;;		"succeeded":      "The number of pods which reached phase Succeeded.",
0000000000000000000000000000000000000000;;		"failed":         "The number of pods which reached phase Failed.",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (JobStatus) SwaggerDoc() map[string]string {
0000000000000000000000000000000000000000;;		return map_JobStatus
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AUTO-GENERATED FUNCTIONS END HERE

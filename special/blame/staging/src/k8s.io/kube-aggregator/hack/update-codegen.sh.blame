0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/../../../../..
0000000000000000000000000000000000000000;;	APIFEDERATOR_ROOT=$(dirname "${BASH_SOURCE}")/..
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/hack/lib/init.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if LANG=C sed --help 2>&1 | grep -q GNU; then
0000000000000000000000000000000000000000;;	  SED="sed"
0000000000000000000000000000000000000000;;	elif which gsed &>/dev/null; then
0000000000000000000000000000000000000000;;	  SED="gsed"
0000000000000000000000000000000000000000;;	else
0000000000000000000000000000000000000000;;	  echo "Failed to find GNU sed as sed or gsed. If you are on Mac: brew install gnu-sed." >&2
0000000000000000000000000000000000000000;;	  exit 1
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Register function to be called on EXIT to remove generated binary.
0000000000000000000000000000000000000000;;	function cleanup {
0000000000000000000000000000000000000000;;	  rm -f "${CLIENTGEN:-}"
0000000000000000000000000000000000000000;;	  rm -f "${listergen:-}"
0000000000000000000000000000000000000000;;	  rm -f "${informergen:-}"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	trap cleanup EXIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "Building client-gen"
0000000000000000000000000000000000000000;;	CLIENTGEN="${PWD}/client-gen-binary"
0000000000000000000000000000000000000000;;	go build -o "${CLIENTGEN}" ./cmd/libs/go2idl/client-gen
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	PREFIX=k8s.io/kube-aggregator/pkg/apis
0000000000000000000000000000000000000000;;	INPUT_BASE="--input-base ${PREFIX}"
0000000000000000000000000000000000000000;;	INPUT_APIS=(
0000000000000000000000000000000000000000;;	apiregistration/
0000000000000000000000000000000000000000;;	apiregistration/v1beta1
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	INPUT="--input ${INPUT_APIS[@]}"
0000000000000000000000000000000000000000;;	CLIENTSET_PATH="--clientset-path k8s.io/kube-aggregator/pkg/client/clientset_generated"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	${CLIENTGEN} ${INPUT_BASE} ${INPUT} ${CLIENTSET_PATH} --output-base ${KUBE_ROOT}/vendor
0000000000000000000000000000000000000000;;	${CLIENTGEN} --clientset-name="clientset" ${INPUT_BASE} --input apiregistration/v1beta1 ${CLIENTSET_PATH}  --output-base ${KUBE_ROOT}/vendor
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "Building lister-gen"
0000000000000000000000000000000000000000;;	listergen="${PWD}/lister-gen"
0000000000000000000000000000000000000000;;	go build -o "${listergen}" ./cmd/libs/go2idl/lister-gen
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	LISTER_INPUT="--input-dirs k8s.io/kube-aggregator/pkg/apis/apiregistration --input-dirs k8s.io/kube-aggregator/pkg/apis/apiregistration/v1beta1"
0000000000000000000000000000000000000000;;	LISTER_PATH="--output-package k8s.io/kube-aggregator/pkg/client/listers"
0000000000000000000000000000000000000000;;	${listergen} ${LISTER_INPUT} ${LISTER_PATH} --output-base ${KUBE_ROOT}/vendor
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "Building informer-gen"
0000000000000000000000000000000000000000;;	informergen="${PWD}/informer-gen"
0000000000000000000000000000000000000000;;	go build -o "${informergen}" ./cmd/libs/go2idl/informer-gen
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	${informergen} \
0000000000000000000000000000000000000000;;	  --output-base ${KUBE_ROOT}/vendor \
0000000000000000000000000000000000000000;;	  --input-dirs k8s.io/kube-aggregator/pkg/apis/apiregistration --input-dirs k8s.io/kube-aggregator/pkg/apis/apiregistration/v1beta1 \
0000000000000000000000000000000000000000;;	  --versioned-clientset-package k8s.io/kube-aggregator/pkg/client/clientset_generated/clientset \
0000000000000000000000000000000000000000;;	  --internal-clientset-package k8s.io/kube-aggregator/pkg/client/clientset_generated/internalclientset \
0000000000000000000000000000000000000000;;	  --listers-package k8s.io/kube-aggregator/pkg/client/listers \
0000000000000000000000000000000000000000;;	  --output-package k8s.io/kube-aggregator/pkg/client/informers
0000000000000000000000000000000000000000;;	  "$@"

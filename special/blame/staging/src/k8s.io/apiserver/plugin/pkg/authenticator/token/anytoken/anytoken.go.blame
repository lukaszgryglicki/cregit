0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
e72b36d4a5b1da4131ae9378f0372e844e4edec3;plugin/pkg/auth/authenticator/token/anytoken/anytoken.go[plugin/pkg/auth/authenticator/token/anytoken/anytoken.go][staging/src/k8s.io/apiserver/plugin/pkg/authenticator/token/anytoken/anytoken.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package anytoken
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/authentication/user"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AnyTokenAuthenticator struct{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (AnyTokenAuthenticator) AuthenticateToken(value string) (user.Info, bool, error) {
0000000000000000000000000000000000000000;;		lastSlash := strings.LastIndex(value, "/")
0000000000000000000000000000000000000000;;		if lastSlash == -1 {
0000000000000000000000000000000000000000;;			return &user.DefaultInfo{Name: value}, true, nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ret := &user.DefaultInfo{Name: value[:lastSlash]}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		groupString := value[lastSlash+1:]
0000000000000000000000000000000000000000;;		if len(groupString) == 0 {
0000000000000000000000000000000000000000;;			return ret, true, nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ret.Groups = strings.Split(groupString, ",")
0000000000000000000000000000000000000000;;		return ret, true, nil
0000000000000000000000000000000000000000;;	}

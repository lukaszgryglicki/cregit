0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
8219ab6bca57826e5661ea96ff278e8367b102cf;pkg/auth/authenticator/tokenfile/tokenfile.go[pkg/auth/authenticator/tokenfile/tokenfile.go][staging/src/k8s.io/apiserver/plugin/pkg/authenticator/token/tokentest/tokentest.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package tokentest
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "k8s.io/apiserver/pkg/authentication/user"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type TokenAuthenticator struct {
0000000000000000000000000000000000000000;;		Tokens map[string]*user.DefaultInfo
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func New() *TokenAuthenticator {
0000000000000000000000000000000000000000;;		return &TokenAuthenticator{
0000000000000000000000000000000000000000;;			Tokens: make(map[string]*user.DefaultInfo),
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	func (a *TokenAuthenticator) AuthenticateToken(value string) (user.Info, bool, error) {
0000000000000000000000000000000000000000;;		user, ok := a.Tokens[value]
0000000000000000000000000000000000000000;;		if !ok {
0000000000000000000000000000000000000000;;			return nil, false, nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return user, true, nil
0000000000000000000000000000000000000000;;	}

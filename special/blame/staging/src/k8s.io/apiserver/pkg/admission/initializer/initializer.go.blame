0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
44b569512d482b102387b2cf47ea8dcdededb4a9;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package initializer
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/admission"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/authorization/authorizer"
0000000000000000000000000000000000000000;;		"k8s.io/client-go/informers"
0000000000000000000000000000000000000000;;		"k8s.io/client-go/kubernetes"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type pluginInitializer struct {
0000000000000000000000000000000000000000;;		externalClient    kubernetes.Interface
0000000000000000000000000000000000000000;;		externalInformers informers.SharedInformerFactory
0000000000000000000000000000000000000000;;		authorizer        authorizer.Authorizer
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// New creates an instance of admission plugins initializer.
0000000000000000000000000000000000000000;;	func New(extClientset kubernetes.Interface, extInformers informers.SharedInformerFactory, authz authorizer.Authorizer) (pluginInitializer, error) {
0000000000000000000000000000000000000000;;		return pluginInitializer{
0000000000000000000000000000000000000000;;			externalClient:    extClientset,
0000000000000000000000000000000000000000;;			externalInformers: extInformers,
0000000000000000000000000000000000000000;;			authorizer:        authz,
0000000000000000000000000000000000000000;;		}, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Initialize checks the initialization interfaces implemented by a plugin
0000000000000000000000000000000000000000;;	// and provide the appropriate initialization data
0000000000000000000000000000000000000000;;	func (i pluginInitializer) Initialize(plugin admission.Interface) {
0000000000000000000000000000000000000000;;		if wants, ok := plugin.(WantsExternalKubeClientSet); ok {
0000000000000000000000000000000000000000;;			wants.SetExternalKubeClientSet(i.externalClient)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if wants, ok := plugin.(WantsExternalKubeInformerFactory); ok {
0000000000000000000000000000000000000000;;			wants.SetExternalKubeInformerFactory(i.externalInformers)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if wants, ok := plugin.(WantsAuthorizer); ok {
0000000000000000000000000000000000000000;;			wants.SetAuthorizer(i.authorizer)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var _ admission.PluginInitializer = pluginInitializer{}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
a5d0a3980ea92b4321a18ea3ec1c22f1a717fc1d;pkg/registry/generic/registry.go[pkg/registry/generic/registry.go][staging/src/k8s.io/apiserver/pkg/registry/generic/matcher.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package generic
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/fields"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ObjectMetaFieldsSet returns a fields that represent the ObjectMeta.
0000000000000000000000000000000000000000;;	func ObjectMetaFieldsSet(objectMeta *metav1.ObjectMeta, hasNamespaceField bool) fields.Set {
0000000000000000000000000000000000000000;;		if !hasNamespaceField {
0000000000000000000000000000000000000000;;			return fields.Set{
0000000000000000000000000000000000000000;;				"metadata.name": objectMeta.Name,
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return fields.Set{
0000000000000000000000000000000000000000;;			"metadata.name":      objectMeta.Name,
0000000000000000000000000000000000000000;;			"metadata.namespace": objectMeta.Namespace,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AdObjectMetaField add fields that represent the ObjectMeta to source.
0000000000000000000000000000000000000000;;	func AddObjectMetaFieldsSet(source fields.Set, objectMeta *metav1.ObjectMeta, hasNamespaceField bool) fields.Set {
0000000000000000000000000000000000000000;;		source["metadata.name"] = objectMeta.Name
0000000000000000000000000000000000000000;;		if hasNamespaceField {
0000000000000000000000000000000000000000;;			source["metadata.namespace"] = objectMeta.Namespace
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return source
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// MergeFieldsSets merges a fields'set from fragment into the source.
0000000000000000000000000000000000000000;;	func MergeFieldsSets(source fields.Set, fragment fields.Set) fields.Set {
0000000000000000000000000000000000000000;;		for k, value := range fragment {
0000000000000000000000000000000000000000;;			source[k] = value
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return source
0000000000000000000000000000000000000000;;	}

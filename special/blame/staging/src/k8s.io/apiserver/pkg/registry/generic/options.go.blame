0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
2e0dc458d31270561a867eb9c64d5a828606dc7b;pkg/registry/generic/options.go[pkg/registry/generic/options.go][staging/src/k8s.io/apiserver/pkg/registry/generic/options.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package generic
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime/schema"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/storage"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/storage/storagebackend"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RESTOptions is set of configuration options to generic registries.
0000000000000000000000000000000000000000;;	type RESTOptions struct {
0000000000000000000000000000000000000000;;		StorageConfig *storagebackend.Config
0000000000000000000000000000000000000000;;		Decorator     StorageDecorator
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		EnableGarbageCollection bool
0000000000000000000000000000000000000000;;		DeleteCollectionWorkers int
0000000000000000000000000000000000000000;;		ResourcePrefix          string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Implement RESTOptionsGetter so that RESTOptions can directly be used when available (i.e. tests)
0000000000000000000000000000000000000000;;	func (opts RESTOptions) GetRESTOptions(schema.GroupResource) (RESTOptions, error) {
0000000000000000000000000000000000000000;;		return opts, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RESTOptionsGetter interface {
0000000000000000000000000000000000000000;;		GetRESTOptions(resource schema.GroupResource) (RESTOptions, error)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StoreOptions is set of configuration options used to complete generic registries.
0000000000000000000000000000000000000000;;	type StoreOptions struct {
0000000000000000000000000000000000000000;;		RESTOptions RESTOptionsGetter
0000000000000000000000000000000000000000;;		TriggerFunc storage.TriggerPublisherFunc
0000000000000000000000000000000000000000;;		AttrFunc    storage.AttrFunc
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
1d9c0401154ad97906df09974b4ea04e78f787d6;pkg/auth/authorizer/interfaces.go[pkg/auth/authorizer/interfaces.go][staging/src/k8s.io/apiserver/pkg/authorization/authorizer/interfaces.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package authorizer
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"net/http"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/authentication/user"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Attributes is an interface used by an Authorizer to get information about a request
0000000000000000000000000000000000000000;;	// that is used to make an authorization decision.
0000000000000000000000000000000000000000;;	type Attributes interface {
0000000000000000000000000000000000000000;;		// GetUser returns the user.Info object to authorize
0000000000000000000000000000000000000000;;		GetUser() user.Info
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// GetVerb returns the kube verb associated with API requests (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy),
0000000000000000000000000000000000000000;;		// or the lowercased HTTP verb associated with non-API requests (this includes get, put, post, patch, and delete)
0000000000000000000000000000000000000000;;		GetVerb() string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// When IsReadOnly() == true, the request has no side effects, other than
0000000000000000000000000000000000000000;;		// caching, logging, and other incidentals.
0000000000000000000000000000000000000000;;		IsReadOnly() bool
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The namespace of the object, if a request is for a REST object.
0000000000000000000000000000000000000000;;		GetNamespace() string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The kind of object, if a request is for a REST object.
0000000000000000000000000000000000000000;;		GetResource() string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// GetSubresource returns the subresource being requested, if present
0000000000000000000000000000000000000000;;		GetSubresource() string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// GetName returns the name of the object as parsed off the request.  This will not be present for all request types, but
0000000000000000000000000000000000000000;;		// will be present for: get, update, delete
0000000000000000000000000000000000000000;;		GetName() string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The group of the resource, if a request is for a REST object.
0000000000000000000000000000000000000000;;		GetAPIGroup() string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// GetAPIVersion returns the version of the group requested, if a request is for a REST object.
0000000000000000000000000000000000000000;;		GetAPIVersion() string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// IsResourceRequest returns true for requests to API resources, like /api/v1/nodes,
0000000000000000000000000000000000000000;;		// and false for non-resource endpoints like /api, /healthz, and /swaggerapi
0000000000000000000000000000000000000000;;		IsResourceRequest() bool
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// GetPath returns the path of the request
0000000000000000000000000000000000000000;;		GetPath() string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Authorizer makes an authorization decision based on information gained by making
0000000000000000000000000000000000000000;;	// zero or more calls to methods of the Attributes interface.  It returns nil when an action is
0000000000000000000000000000000000000000;;	// authorized, otherwise it returns an error.
0000000000000000000000000000000000000000;;	type Authorizer interface {
0000000000000000000000000000000000000000;;		Authorize(a Attributes) (authorized bool, reason string, err error)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AuthorizerFunc func(a Attributes) (bool, string, error)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (f AuthorizerFunc) Authorize(a Attributes) (bool, string, error) {
0000000000000000000000000000000000000000;;		return f(a)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RequestAttributesGetter provides a function that extracts Attributes from an http.Request
0000000000000000000000000000000000000000;;	type RequestAttributesGetter interface {
0000000000000000000000000000000000000000;;		GetRequestAttributes(user.Info, *http.Request) Attributes
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AttributesRecord implements Attributes interface.
0000000000000000000000000000000000000000;;	type AttributesRecord struct {
0000000000000000000000000000000000000000;;		User            user.Info
0000000000000000000000000000000000000000;;		Verb            string
0000000000000000000000000000000000000000;;		Namespace       string
0000000000000000000000000000000000000000;;		APIGroup        string
0000000000000000000000000000000000000000;;		APIVersion      string
0000000000000000000000000000000000000000;;		Resource        string
0000000000000000000000000000000000000000;;		Subresource     string
0000000000000000000000000000000000000000;;		Name            string
0000000000000000000000000000000000000000;;		ResourceRequest bool
0000000000000000000000000000000000000000;;		Path            string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) GetUser() user.Info {
0000000000000000000000000000000000000000;;		return a.User
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) GetVerb() string {
0000000000000000000000000000000000000000;;		return a.Verb
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) IsReadOnly() bool {
0000000000000000000000000000000000000000;;		return a.Verb == "get" || a.Verb == "list" || a.Verb == "watch"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) GetNamespace() string {
0000000000000000000000000000000000000000;;		return a.Namespace
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) GetResource() string {
0000000000000000000000000000000000000000;;		return a.Resource
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) GetSubresource() string {
0000000000000000000000000000000000000000;;		return a.Subresource
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) GetName() string {
0000000000000000000000000000000000000000;;		return a.Name
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) GetAPIGroup() string {
0000000000000000000000000000000000000000;;		return a.APIGroup
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) GetAPIVersion() string {
0000000000000000000000000000000000000000;;		return a.APIVersion
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) IsResourceRequest() bool {
0000000000000000000000000000000000000000;;		return a.ResourceRequest
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (a AttributesRecord) GetPath() string {
0000000000000000000000000000000000000000;;		return a.Path
0000000000000000000000000000000000000000;;	}

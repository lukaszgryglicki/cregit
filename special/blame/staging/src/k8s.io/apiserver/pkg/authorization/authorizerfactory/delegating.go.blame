0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
9b9a4a18ee32f6bb1c9b99ab51e3a00844e0f610;pkg/genericapiserver/authorizer/delegating.go[pkg/genericapiserver/authorizer/delegating.go][staging/src/k8s.io/apiserver/pkg/authorization/authorizerfactory/delegating.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package authorizerfactory
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/authorization/authorizer"
0000000000000000000000000000000000000000;;		authorizationclient "k8s.io/client-go/kubernetes/typed/authorization/v1beta1"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/plugin/pkg/authorizer/webhook"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DelegatingAuthorizerConfig is the minimal configuration needed to create an authenticator
0000000000000000000000000000000000000000;;	// built to delegate authorization to a kube API server
0000000000000000000000000000000000000000;;	type DelegatingAuthorizerConfig struct {
0000000000000000000000000000000000000000;;		SubjectAccessReviewClient authorizationclient.SubjectAccessReviewInterface
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// AllowCacheTTL is the length of time that a successful authorization response will be cached
0000000000000000000000000000000000000000;;		AllowCacheTTL time.Duration
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// DenyCacheTTL is the length of time that an unsuccessful authorization response will be cached.
0000000000000000000000000000000000000000;;		// You generally want more responsive, "deny, try again" flows.
0000000000000000000000000000000000000000;;		DenyCacheTTL time.Duration
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c DelegatingAuthorizerConfig) New() (authorizer.Authorizer, error) {
0000000000000000000000000000000000000000;;		return webhook.NewFromInterface(
0000000000000000000000000000000000000000;;			c.SubjectAccessReviewClient,
0000000000000000000000000000000000000000;;			c.AllowCacheTTL,
0000000000000000000000000000000000000000;;			c.DenyCacheTTL,
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;	}

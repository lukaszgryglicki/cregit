0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
977bafd5f592eb87ee585ade51efa993306c1e13;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package metrics
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestCleanUserAgent(t *testing.T) {
0000000000000000000000000000000000000000;;		panicBuf := []byte{198, 73, 129, 133, 90, 216, 104, 29, 13, 134, 209, 233, 30, 0, 22}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		for _, tc := range []struct {
0000000000000000000000000000000000000000;;			In  string
0000000000000000000000000000000000000000;;			Out string
0000000000000000000000000000000000000000;;		}{
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				In:  "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36",
0000000000000000000000000000000000000000;;				Out: "Browser",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				In:  "kubectl/v1.2.4",
0000000000000000000000000000000000000000;;				Out: "kubectl/v1.2.4",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				In:  `C:\Users\Kubernetes\kubectl.exe/v1.5.4`,
0000000000000000000000000000000000000000;;				Out: "kubectl.exe/v1.5.4",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				In:  `C:\Program Files\kubectl.exe/v1.5.4`,
0000000000000000000000000000000000000000;;				Out: "kubectl.exe/v1.5.4",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				// This malicious input courtesy of enisoc.
0000000000000000000000000000000000000000;;				In:  string(panicBuf) + "kubectl.exe",
0000000000000000000000000000000000000000;;				Out: "kubectl.exe",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		} {
0000000000000000000000000000000000000000;;			if cleanUserAgent(tc.In) != tc.Out {
0000000000000000000000000000000000000000;;				t.Errorf("Failed to clean User-Agent: %s", tc.In)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

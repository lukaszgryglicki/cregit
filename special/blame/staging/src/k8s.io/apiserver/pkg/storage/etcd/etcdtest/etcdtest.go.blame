0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
9d11c4fa86ae7e1128e6f08d00803ef9938a148d;pkg/tools/etcdtest/etcdtest.go[pkg/tools/etcdtest/etcdtest.go][staging/src/k8s.io/apiserver/pkg/storage/etcd/etcdtest/etcdtest.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package etcdtest
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"path"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Cache size to use for tests.
0000000000000000000000000000000000000000;;	const DeserializationCacheSize = 150
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Returns the prefix set via the ETCD_PREFIX environment variable (if any).
0000000000000000000000000000000000000000;;	func PathPrefix() string {
0000000000000000000000000000000000000000;;		pref := os.Getenv("ETCD_PREFIX")
0000000000000000000000000000000000000000;;		if pref == "" {
0000000000000000000000000000000000000000;;			pref = "registry"
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return path.Join("/", pref)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Adds the ETCD_PREFIX to the provided key
0000000000000000000000000000000000000000;;	func AddPrefix(in string) string {
0000000000000000000000000000000000000000;;		return path.Join(PathPrefix(), in)
0000000000000000000000000000000000000000;;	}

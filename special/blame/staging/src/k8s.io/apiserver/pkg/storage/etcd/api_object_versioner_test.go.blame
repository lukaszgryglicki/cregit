0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
6354d801ba762b470b0a911872638a5cbb9385a4;pkg/tools/etcd_object_test.go[pkg/tools/etcd_object_test.go][staging/src/k8s.io/apiserver/pkg/storage/etcd/api_object_versioner_test.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package etcd
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;		storagetesting "k8s.io/apiserver/pkg/storage/testing"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestObjectVersioner(t *testing.T) {
0000000000000000000000000000000000000000;;		v := APIObjectVersioner{}
0000000000000000000000000000000000000000;;		if ver, err := v.ObjectResourceVersion(&storagetesting.TestResource{ObjectMeta: metav1.ObjectMeta{ResourceVersion: "5"}}); err != nil || ver != 5 {
0000000000000000000000000000000000000000;;			t.Errorf("unexpected version: %d %v", ver, err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if ver, err := v.ObjectResourceVersion(&storagetesting.TestResource{ObjectMeta: metav1.ObjectMeta{ResourceVersion: "a"}}); err == nil || ver != 0 {
0000000000000000000000000000000000000000;;			t.Errorf("unexpected version: %d %v", ver, err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		obj := &storagetesting.TestResource{ObjectMeta: metav1.ObjectMeta{ResourceVersion: "a"}}
0000000000000000000000000000000000000000;;		if err := v.UpdateObject(obj, 5); err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("unexpected error: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if obj.ResourceVersion != "5" || obj.DeletionTimestamp != nil {
0000000000000000000000000000000000000000;;			t.Errorf("unexpected resource version: %#v", obj)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestCompareResourceVersion(t *testing.T) {
0000000000000000000000000000000000000000;;		five := &storagetesting.TestResource{ObjectMeta: metav1.ObjectMeta{ResourceVersion: "5"}}
0000000000000000000000000000000000000000;;		six := &storagetesting.TestResource{ObjectMeta: metav1.ObjectMeta{ResourceVersion: "6"}}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		versioner := APIObjectVersioner{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if e, a := -1, versioner.CompareResourceVersion(five, six); e != a {
0000000000000000000000000000000000000000;;			t.Errorf("expected %v got %v", e, a)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if e, a := 1, versioner.CompareResourceVersion(six, five); e != a {
0000000000000000000000000000000000000000;;			t.Errorf("expected %v got %v", e, a)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if e, a := 0, versioner.CompareResourceVersion(six, six); e != a {
0000000000000000000000000000000000000000;;			t.Errorf("expected %v got %v", e, a)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

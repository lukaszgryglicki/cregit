0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
e955367d053d2ebf4bee4ac2c428c7879f1c363a;pkg/storage/storagebackend/etcd3.go[pkg/storage/storagebackend/etcd3.go][staging/src/k8s.io/apiserver/pkg/storage/storagebackend/factory/factory.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package factory
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/storage"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/storage/storagebackend"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DestroyFunc is to destroy any resources used by the storage returned in Create() together.
0000000000000000000000000000000000000000;;	type DestroyFunc func()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Create creates a storage backend based on given config.
0000000000000000000000000000000000000000;;	func Create(c storagebackend.Config) (storage.Interface, DestroyFunc, error) {
0000000000000000000000000000000000000000;;		switch c.Type {
0000000000000000000000000000000000000000;;		case storagebackend.StorageTypeETCD2:
0000000000000000000000000000000000000000;;			return newETCD2Storage(c)
0000000000000000000000000000000000000000;;		case storagebackend.StorageTypeUnset, storagebackend.StorageTypeETCD3:
0000000000000000000000000000000000000000;;			// TODO: We have the following features to implement:
0000000000000000000000000000000000000000;;			// - Support secure connection by using key, cert, and CA files.
0000000000000000000000000000000000000000;;			// - Honor "https" scheme to support secure connection in gRPC.
0000000000000000000000000000000000000000;;			// - Support non-quorum read.
0000000000000000000000000000000000000000;;			return newETCD3Storage(c)
0000000000000000000000000000000000000000;;		default:
0000000000000000000000000000000000000000;;			return nil, nil, fmt.Errorf("unknown storage type: %s", c.Type)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
6675cf7137616d72207fb5afdd03d088c90a800d;pkg/util/bool_flag.go[pkg/util/bool_flag.go][staging/src/k8s.io/apiserver/pkg/util/flag/tristate.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package flag
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"strconv"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Tristate is a flag compatible with flags and pflags that
0000000000000000000000000000000000000000;;	// keeps track of whether it had a value supplied or not.
0000000000000000000000000000000000000000;;	type Tristate int
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		Unset Tristate = iota // 0
0000000000000000000000000000000000000000;;		True
0000000000000000000000000000000000000000;;		False
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (f *Tristate) Default(value bool) {
0000000000000000000000000000000000000000;;		*f = triFromBool(value)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (f Tristate) String() string {
0000000000000000000000000000000000000000;;		b := boolFromTri(f)
0000000000000000000000000000000000000000;;		return fmt.Sprintf("%t", b)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (f Tristate) Value() bool {
0000000000000000000000000000000000000000;;		b := boolFromTri(f)
0000000000000000000000000000000000000000;;		return b
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (f *Tristate) Set(value string) error {
0000000000000000000000000000000000000000;;		boolVal, err := strconv.ParseBool(value)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		*f = triFromBool(boolVal)
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (f Tristate) Provided() bool {
0000000000000000000000000000000000000000;;		if f != Unset {
0000000000000000000000000000000000000000;;			return true
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (f *Tristate) Type() string {
0000000000000000000000000000000000000000;;		return "tristate"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func boolFromTri(t Tristate) bool {
0000000000000000000000000000000000000000;;		if t == True {
0000000000000000000000000000000000000000;;			return true
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			return false
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func triFromBool(b bool) Tristate {
0000000000000000000000000000000000000000;;		if b {
0000000000000000000000000000000000000000;;			return True
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			return False
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

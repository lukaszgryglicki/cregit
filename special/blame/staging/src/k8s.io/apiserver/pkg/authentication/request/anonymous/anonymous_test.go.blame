0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
dafa84a6425207a0ef7713b0dd3360926b6d7bed;plugin/pkg/auth/authenticator/request/anonymous/anonymous_test.go[plugin/pkg/auth/authenticator/request/anonymous/anonymous_test.go][staging/src/k8s.io/apiserver/pkg/authentication/request/anonymous/anonymous_test.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package anonymous
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/util/sets"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/authentication/authenticator"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/authentication/user"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestAnonymous(t *testing.T) {
0000000000000000000000000000000000000000;;		var a authenticator.Request = NewAuthenticator()
0000000000000000000000000000000000000000;;		u, ok, err := a.AuthenticateRequest(nil)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("Unexpected error %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if !ok {
0000000000000000000000000000000000000000;;			t.Fatalf("Unexpectedly unauthenticated")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if u.GetName() != user.Anonymous {
0000000000000000000000000000000000000000;;			t.Fatalf("Expected username %s, got %s", user.Anonymous, u.GetName())
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if !sets.NewString(u.GetGroups()...).Equal(sets.NewString(user.AllUnauthenticated)) {
0000000000000000000000000000000000000000;;			t.Fatalf("Expected group %s, got %v", user.AllUnauthenticated, u.GetGroups())
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

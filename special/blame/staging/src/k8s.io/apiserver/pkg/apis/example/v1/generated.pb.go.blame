a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	/*
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	Copyright 2017 The Kubernetes Authors.
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	Licensed under the Apache License, Version 2.0 (the "License");
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	you may not use this file except in compliance with the License.
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	You may obtain a copy of the License at
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	    http://www.apache.org/licenses/LICENSE-2.0
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	Unless required by applicable law or agreed to in writing, software
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	distributed under the License is distributed on an "AS IS" BASIS,
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	See the License for the specific language governing permissions and
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	limitations under the License.
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	*/
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	// Code generated by protoc-gen-gogo.
d319522269136a74b9f62505727429c66c66b720;;	// source: k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/apis/example/v1/generated.proto
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	// DO NOT EDIT!
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	/*
d319522269136a74b9f62505727429c66c66b720;;		Package v1 is a generated protocol buffer package.
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;		It is generated from these files:
d319522269136a74b9f62505727429c66c66b720;;			k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/apis/example/v1/generated.proto
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;		It has these top-level messages:
d319522269136a74b9f62505727429c66c66b720;;			Pod
d319522269136a74b9f62505727429c66c66b720;;			PodCondition
d319522269136a74b9f62505727429c66c66b720;;			PodList
d319522269136a74b9f62505727429c66c66b720;;			PodSpec
d319522269136a74b9f62505727429c66c66b720;;			PodStatus
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	*/
a87b6c8ffb7f72f106a197974d0e7b9c8d48caff;;	package v1
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	import proto "github.com/gogo/protobuf/proto"
d319522269136a74b9f62505727429c66c66b720;;	import fmt "fmt"
d319522269136a74b9f62505727429c66c66b720;;	import math "math"
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	import k8s_io_apimachinery_pkg_apis_meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
d319522269136a74b9f62505727429c66c66b720;;	
405e0bce915b137ebf2354b7292edb4c7aa90d87;;	import github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"
405e0bce915b137ebf2354b7292edb4c7aa90d87;;	
d319522269136a74b9f62505727429c66c66b720;;	import strings "strings"
d319522269136a74b9f62505727429c66c66b720;;	import reflect "reflect"
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	import io "io"
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	// Reference imports to suppress errors if they are not otherwise used.
d319522269136a74b9f62505727429c66c66b720;;	var _ = proto.Marshal
d319522269136a74b9f62505727429c66c66b720;;	var _ = fmt.Errorf
d319522269136a74b9f62505727429c66c66b720;;	var _ = math.Inf
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	// This is a compile-time assertion to ensure that this generated file
d319522269136a74b9f62505727429c66c66b720;;	// is compatible with the proto package it is being compiled against.
50457bce9d9e7b573260c465a9296d1fec083385;;	// A compilation error at this line likely means your copy of the
50457bce9d9e7b573260c465a9296d1fec083385;;	// proto package needs to be updated.
50457bce9d9e7b573260c465a9296d1fec083385;;	const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func (m *Pod) Reset()                    { *m = Pod{} }
d319522269136a74b9f62505727429c66c66b720;;	func (*Pod) ProtoMessage()               {}
d319522269136a74b9f62505727429c66c66b720;;	func (*Pod) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{0} }
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func (m *PodCondition) Reset()                    { *m = PodCondition{} }
d319522269136a74b9f62505727429c66c66b720;;	func (*PodCondition) ProtoMessage()               {}
d319522269136a74b9f62505727429c66c66b720;;	func (*PodCondition) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{1} }
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func (m *PodList) Reset()                    { *m = PodList{} }
d319522269136a74b9f62505727429c66c66b720;;	func (*PodList) ProtoMessage()               {}
d319522269136a74b9f62505727429c66c66b720;;	func (*PodList) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{2} }
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func (m *PodSpec) Reset()                    { *m = PodSpec{} }
d319522269136a74b9f62505727429c66c66b720;;	func (*PodSpec) ProtoMessage()               {}
d319522269136a74b9f62505727429c66c66b720;;	func (*PodSpec) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{3} }
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func (m *PodStatus) Reset()                    { *m = PodStatus{} }
d319522269136a74b9f62505727429c66c66b720;;	func (*PodStatus) ProtoMessage()               {}
d319522269136a74b9f62505727429c66c66b720;;	func (*PodStatus) Descriptor() ([]byte, []int) { return fileDescriptorGenerated, []int{4} }
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func init() {
d319522269136a74b9f62505727429c66c66b720;;		proto.RegisterType((*Pod)(nil), "k8s.io.apiserver.pkg.apis.example.v1.Pod")
d319522269136a74b9f62505727429c66c66b720;;		proto.RegisterType((*PodCondition)(nil), "k8s.io.apiserver.pkg.apis.example.v1.PodCondition")
d319522269136a74b9f62505727429c66c66b720;;		proto.RegisterType((*PodList)(nil), "k8s.io.apiserver.pkg.apis.example.v1.PodList")
d319522269136a74b9f62505727429c66c66b720;;		proto.RegisterType((*PodSpec)(nil), "k8s.io.apiserver.pkg.apis.example.v1.PodSpec")
d319522269136a74b9f62505727429c66c66b720;;		proto.RegisterType((*PodStatus)(nil), "k8s.io.apiserver.pkg.apis.example.v1.PodStatus")
d319522269136a74b9f62505727429c66c66b720;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *Pod) Marshal() (dAtA []byte, err error) {
d319522269136a74b9f62505727429c66c66b720;;		size := m.Size()
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA = make([]byte, size)
50457bce9d9e7b573260c465a9296d1fec083385;;		n, err := m.MarshalTo(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return nil, err
d319522269136a74b9f62505727429c66c66b720;;		}
50457bce9d9e7b573260c465a9296d1fec083385;;		return dAtA[:n], nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *Pod) MarshalTo(dAtA []byte) (int, error) {
d319522269136a74b9f62505727429c66c66b720;;		var i int
d319522269136a74b9f62505727429c66c66b720;;		_ = i
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0xa
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(m.ObjectMeta.Size()))
50457bce9d9e7b573260c465a9296d1fec083385;;		n1, err := m.ObjectMeta.MarshalTo(dAtA[i:])
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return 0, err
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		i += n1
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x12
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(m.Spec.Size()))
50457bce9d9e7b573260c465a9296d1fec083385;;		n2, err := m.Spec.MarshalTo(dAtA[i:])
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return 0, err
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		i += n2
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x1a
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(m.Status.Size()))
50457bce9d9e7b573260c465a9296d1fec083385;;		n3, err := m.Status.MarshalTo(dAtA[i:])
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return 0, err
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		i += n3
d319522269136a74b9f62505727429c66c66b720;;		return i, nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodCondition) Marshal() (dAtA []byte, err error) {
d319522269136a74b9f62505727429c66c66b720;;		size := m.Size()
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA = make([]byte, size)
50457bce9d9e7b573260c465a9296d1fec083385;;		n, err := m.MarshalTo(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return nil, err
d319522269136a74b9f62505727429c66c66b720;;		}
50457bce9d9e7b573260c465a9296d1fec083385;;		return dAtA[:n], nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodCondition) MarshalTo(dAtA []byte) (int, error) {
d319522269136a74b9f62505727429c66c66b720;;		var i int
d319522269136a74b9f62505727429c66c66b720;;		_ = i
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0xa
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.Type)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x12
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Status)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.Status)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x1a
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(m.LastProbeTime.Size()))
50457bce9d9e7b573260c465a9296d1fec083385;;		n4, err := m.LastProbeTime.MarshalTo(dAtA[i:])
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return 0, err
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		i += n4
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x22
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(m.LastTransitionTime.Size()))
50457bce9d9e7b573260c465a9296d1fec083385;;		n5, err := m.LastTransitionTime.MarshalTo(dAtA[i:])
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return 0, err
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		i += n5
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x2a
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Reason)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.Reason)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x32
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Message)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.Message)
d319522269136a74b9f62505727429c66c66b720;;		return i, nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodList) Marshal() (dAtA []byte, err error) {
d319522269136a74b9f62505727429c66c66b720;;		size := m.Size()
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA = make([]byte, size)
50457bce9d9e7b573260c465a9296d1fec083385;;		n, err := m.MarshalTo(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return nil, err
d319522269136a74b9f62505727429c66c66b720;;		}
50457bce9d9e7b573260c465a9296d1fec083385;;		return dAtA[:n], nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodList) MarshalTo(dAtA []byte) (int, error) {
d319522269136a74b9f62505727429c66c66b720;;		var i int
d319522269136a74b9f62505727429c66c66b720;;		_ = i
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0xa
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(m.ListMeta.Size()))
50457bce9d9e7b573260c465a9296d1fec083385;;		n6, err := m.ListMeta.MarshalTo(dAtA[i:])
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return 0, err
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		i += n6
d319522269136a74b9f62505727429c66c66b720;;		if len(m.Items) > 0 {
d319522269136a74b9f62505727429c66c66b720;;			for _, msg := range m.Items {
50457bce9d9e7b573260c465a9296d1fec083385;;				dAtA[i] = 0x12
d319522269136a74b9f62505727429c66c66b720;;				i++
50457bce9d9e7b573260c465a9296d1fec083385;;				i = encodeVarintGenerated(dAtA, i, uint64(msg.Size()))
50457bce9d9e7b573260c465a9296d1fec083385;;				n, err := msg.MarshalTo(dAtA[i:])
d319522269136a74b9f62505727429c66c66b720;;				if err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return 0, err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				i += n
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return i, nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodSpec) Marshal() (dAtA []byte, err error) {
d319522269136a74b9f62505727429c66c66b720;;		size := m.Size()
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA = make([]byte, size)
50457bce9d9e7b573260c465a9296d1fec083385;;		n, err := m.MarshalTo(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return nil, err
d319522269136a74b9f62505727429c66c66b720;;		}
50457bce9d9e7b573260c465a9296d1fec083385;;		return dAtA[:n], nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodSpec) MarshalTo(dAtA []byte) (int, error) {
d319522269136a74b9f62505727429c66c66b720;;		var i int
d319522269136a74b9f62505727429c66c66b720;;		_ = i
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x1a
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.RestartPolicy)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.RestartPolicy)
d319522269136a74b9f62505727429c66c66b720;;		if m.TerminationGracePeriodSeconds != nil {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[i] = 0x20
d319522269136a74b9f62505727429c66c66b720;;			i++
50457bce9d9e7b573260c465a9296d1fec083385;;			i = encodeVarintGenerated(dAtA, i, uint64(*m.TerminationGracePeriodSeconds))
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		if m.ActiveDeadlineSeconds != nil {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[i] = 0x28
d319522269136a74b9f62505727429c66c66b720;;			i++
50457bce9d9e7b573260c465a9296d1fec083385;;			i = encodeVarintGenerated(dAtA, i, uint64(*m.ActiveDeadlineSeconds))
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		if len(m.NodeSelector) > 0 {
405e0bce915b137ebf2354b7292edb4c7aa90d87;;			keysForNodeSelector := make([]string, 0, len(m.NodeSelector))
d319522269136a74b9f62505727429c66c66b720;;			for k := range m.NodeSelector {
405e0bce915b137ebf2354b7292edb4c7aa90d87;;				keysForNodeSelector = append(keysForNodeSelector, string(k))
405e0bce915b137ebf2354b7292edb4c7aa90d87;;			}
405e0bce915b137ebf2354b7292edb4c7aa90d87;;			github_com_gogo_protobuf_sortkeys.Strings(keysForNodeSelector)
405e0bce915b137ebf2354b7292edb4c7aa90d87;;			for _, k := range keysForNodeSelector {
50457bce9d9e7b573260c465a9296d1fec083385;;				dAtA[i] = 0x3a
d319522269136a74b9f62505727429c66c66b720;;				i++
405e0bce915b137ebf2354b7292edb4c7aa90d87;;				v := m.NodeSelector[string(k)]
d319522269136a74b9f62505727429c66c66b720;;				mapSize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
50457bce9d9e7b573260c465a9296d1fec083385;;				i = encodeVarintGenerated(dAtA, i, uint64(mapSize))
50457bce9d9e7b573260c465a9296d1fec083385;;				dAtA[i] = 0xa
d319522269136a74b9f62505727429c66c66b720;;				i++
50457bce9d9e7b573260c465a9296d1fec083385;;				i = encodeVarintGenerated(dAtA, i, uint64(len(k)))
50457bce9d9e7b573260c465a9296d1fec083385;;				i += copy(dAtA[i:], k)
50457bce9d9e7b573260c465a9296d1fec083385;;				dAtA[i] = 0x12
d319522269136a74b9f62505727429c66c66b720;;				i++
50457bce9d9e7b573260c465a9296d1fec083385;;				i = encodeVarintGenerated(dAtA, i, uint64(len(v)))
50457bce9d9e7b573260c465a9296d1fec083385;;				i += copy(dAtA[i:], v)
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x42
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.ServiceAccountName)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.ServiceAccountName)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x4a
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.DeprecatedServiceAccount)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.DeprecatedServiceAccount)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x52
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.NodeName)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.NodeName)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x58
d319522269136a74b9f62505727429c66c66b720;;		i++
d319522269136a74b9f62505727429c66c66b720;;		if m.HostNetwork {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[i] = 1
d319522269136a74b9f62505727429c66c66b720;;		} else {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[i] = 0
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x60
d319522269136a74b9f62505727429c66c66b720;;		i++
d319522269136a74b9f62505727429c66c66b720;;		if m.HostPID {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[i] = 1
d319522269136a74b9f62505727429c66c66b720;;		} else {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[i] = 0
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x68
d319522269136a74b9f62505727429c66c66b720;;		i++
d319522269136a74b9f62505727429c66c66b720;;		if m.HostIPC {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[i] = 1
d319522269136a74b9f62505727429c66c66b720;;		} else {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[i] = 0
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x82
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x1
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Hostname)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.Hostname)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x8a
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x1
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Subdomain)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.Subdomain)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x9a
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x1
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.SchedulerName)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.SchedulerName)
d319522269136a74b9f62505727429c66c66b720;;		return i, nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodStatus) Marshal() (dAtA []byte, err error) {
d319522269136a74b9f62505727429c66c66b720;;		size := m.Size()
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA = make([]byte, size)
50457bce9d9e7b573260c465a9296d1fec083385;;		n, err := m.MarshalTo(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		if err != nil {
d319522269136a74b9f62505727429c66c66b720;;			return nil, err
d319522269136a74b9f62505727429c66c66b720;;		}
50457bce9d9e7b573260c465a9296d1fec083385;;		return dAtA[:n], nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodStatus) MarshalTo(dAtA []byte) (int, error) {
d319522269136a74b9f62505727429c66c66b720;;		var i int
d319522269136a74b9f62505727429c66c66b720;;		_ = i
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0xa
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Phase)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.Phase)
d319522269136a74b9f62505727429c66c66b720;;		if len(m.Conditions) > 0 {
d319522269136a74b9f62505727429c66c66b720;;			for _, msg := range m.Conditions {
50457bce9d9e7b573260c465a9296d1fec083385;;				dAtA[i] = 0x12
d319522269136a74b9f62505727429c66c66b720;;				i++
50457bce9d9e7b573260c465a9296d1fec083385;;				i = encodeVarintGenerated(dAtA, i, uint64(msg.Size()))
50457bce9d9e7b573260c465a9296d1fec083385;;				n, err := msg.MarshalTo(dAtA[i:])
d319522269136a74b9f62505727429c66c66b720;;				if err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return 0, err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				i += n
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x1a
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Message)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.Message)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x22
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Reason)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.Reason)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x2a
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.HostIP)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.HostIP)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[i] = 0x32
d319522269136a74b9f62505727429c66c66b720;;		i++
50457bce9d9e7b573260c465a9296d1fec083385;;		i = encodeVarintGenerated(dAtA, i, uint64(len(m.PodIP)))
50457bce9d9e7b573260c465a9296d1fec083385;;		i += copy(dAtA[i:], m.PodIP)
d319522269136a74b9f62505727429c66c66b720;;		if m.StartTime != nil {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[i] = 0x3a
d319522269136a74b9f62505727429c66c66b720;;			i++
50457bce9d9e7b573260c465a9296d1fec083385;;			i = encodeVarintGenerated(dAtA, i, uint64(m.StartTime.Size()))
50457bce9d9e7b573260c465a9296d1fec083385;;			n7, err := m.StartTime.MarshalTo(dAtA[i:])
d319522269136a74b9f62505727429c66c66b720;;			if err != nil {
d319522269136a74b9f62505727429c66c66b720;;				return 0, err
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			i += n7
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return i, nil
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func encodeFixed64Generated(dAtA []byte, offset int, v uint64) int {
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset] = uint8(v)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+1] = uint8(v >> 8)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+2] = uint8(v >> 16)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+3] = uint8(v >> 24)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+4] = uint8(v >> 32)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+5] = uint8(v >> 40)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+6] = uint8(v >> 48)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+7] = uint8(v >> 56)
d319522269136a74b9f62505727429c66c66b720;;		return offset + 8
d319522269136a74b9f62505727429c66c66b720;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	func encodeFixed32Generated(dAtA []byte, offset int, v uint32) int {
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset] = uint8(v)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+1] = uint8(v >> 8)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+2] = uint8(v >> 16)
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset+3] = uint8(v >> 24)
d319522269136a74b9f62505727429c66c66b720;;		return offset + 4
d319522269136a74b9f62505727429c66c66b720;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	func encodeVarintGenerated(dAtA []byte, offset int, v uint64) int {
d319522269136a74b9f62505727429c66c66b720;;		for v >= 1<<7 {
50457bce9d9e7b573260c465a9296d1fec083385;;			dAtA[offset] = uint8(v&0x7f | 0x80)
d319522269136a74b9f62505727429c66c66b720;;			v >>= 7
d319522269136a74b9f62505727429c66c66b720;;			offset++
d319522269136a74b9f62505727429c66c66b720;;		}
50457bce9d9e7b573260c465a9296d1fec083385;;		dAtA[offset] = uint8(v)
d319522269136a74b9f62505727429c66c66b720;;		return offset + 1
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	func (m *Pod) Size() (n int) {
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
d319522269136a74b9f62505727429c66c66b720;;		l = m.ObjectMeta.Size()
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = m.Spec.Size()
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = m.Status.Size()
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		return n
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func (m *PodCondition) Size() (n int) {
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.Type)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.Status)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = m.LastProbeTime.Size()
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = m.LastTransitionTime.Size()
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.Reason)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.Message)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		return n
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func (m *PodList) Size() (n int) {
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
d319522269136a74b9f62505727429c66c66b720;;		l = m.ListMeta.Size()
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		if len(m.Items) > 0 {
d319522269136a74b9f62505727429c66c66b720;;			for _, e := range m.Items {
d319522269136a74b9f62505727429c66c66b720;;				l = e.Size()
d319522269136a74b9f62505727429c66c66b720;;				n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return n
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func (m *PodSpec) Size() (n int) {
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.RestartPolicy)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		if m.TerminationGracePeriodSeconds != nil {
d319522269136a74b9f62505727429c66c66b720;;			n += 1 + sovGenerated(uint64(*m.TerminationGracePeriodSeconds))
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		if m.ActiveDeadlineSeconds != nil {
d319522269136a74b9f62505727429c66c66b720;;			n += 1 + sovGenerated(uint64(*m.ActiveDeadlineSeconds))
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		if len(m.NodeSelector) > 0 {
d319522269136a74b9f62505727429c66c66b720;;			for k, v := range m.NodeSelector {
d319522269136a74b9f62505727429c66c66b720;;				_ = k
d319522269136a74b9f62505727429c66c66b720;;				_ = v
d319522269136a74b9f62505727429c66c66b720;;				mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
d319522269136a74b9f62505727429c66c66b720;;				n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.ServiceAccountName)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.DeprecatedServiceAccount)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.NodeName)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		n += 2
d319522269136a74b9f62505727429c66c66b720;;		n += 2
d319522269136a74b9f62505727429c66c66b720;;		n += 2
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.Hostname)
d319522269136a74b9f62505727429c66c66b720;;		n += 2 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.Subdomain)
d319522269136a74b9f62505727429c66c66b720;;		n += 2 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.SchedulerName)
d319522269136a74b9f62505727429c66c66b720;;		n += 2 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		return n
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func (m *PodStatus) Size() (n int) {
d319522269136a74b9f62505727429c66c66b720;;		var l int
d319522269136a74b9f62505727429c66c66b720;;		_ = l
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.Phase)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		if len(m.Conditions) > 0 {
d319522269136a74b9f62505727429c66c66b720;;			for _, e := range m.Conditions {
d319522269136a74b9f62505727429c66c66b720;;				l = e.Size()
d319522269136a74b9f62505727429c66c66b720;;				n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.Message)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.Reason)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.HostIP)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		l = len(m.PodIP)
d319522269136a74b9f62505727429c66c66b720;;		n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		if m.StartTime != nil {
d319522269136a74b9f62505727429c66c66b720;;			l = m.StartTime.Size()
d319522269136a74b9f62505727429c66c66b720;;			n += 1 + l + sovGenerated(uint64(l))
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return n
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	func sovGenerated(x uint64) (n int) {
d319522269136a74b9f62505727429c66c66b720;;		for {
d319522269136a74b9f62505727429c66c66b720;;			n++
d319522269136a74b9f62505727429c66c66b720;;			x >>= 7
d319522269136a74b9f62505727429c66c66b720;;			if x == 0 {
d319522269136a74b9f62505727429c66c66b720;;				break
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return n
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	func sozGenerated(x uint64) (n int) {
d319522269136a74b9f62505727429c66c66b720;;		return sovGenerated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	func (this *Pod) String() string {
d319522269136a74b9f62505727429c66c66b720;;		if this == nil {
d319522269136a74b9f62505727429c66c66b720;;			return "nil"
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		s := strings.Join([]string{`&Pod{`,
d319522269136a74b9f62505727429c66c66b720;;			`ObjectMeta:` + strings.Replace(strings.Replace(this.ObjectMeta.String(), "ObjectMeta", "k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "PodSpec", "PodSpec", 1), `&`, ``, 1) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Status:` + strings.Replace(strings.Replace(this.Status.String(), "PodStatus", "PodStatus", 1), `&`, ``, 1) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`}`,
d319522269136a74b9f62505727429c66c66b720;;		}, "")
d319522269136a74b9f62505727429c66c66b720;;		return s
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	func (this *PodCondition) String() string {
d319522269136a74b9f62505727429c66c66b720;;		if this == nil {
d319522269136a74b9f62505727429c66c66b720;;			return "nil"
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		s := strings.Join([]string{`&PodCondition{`,
d319522269136a74b9f62505727429c66c66b720;;			`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`LastProbeTime:` + strings.Replace(strings.Replace(this.LastProbeTime.String(), "Time", "k8s_io_apimachinery_pkg_apis_meta_v1.Time", 1), `&`, ``, 1) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`LastTransitionTime:` + strings.Replace(strings.Replace(this.LastTransitionTime.String(), "Time", "k8s_io_apimachinery_pkg_apis_meta_v1.Time", 1), `&`, ``, 1) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`}`,
d319522269136a74b9f62505727429c66c66b720;;		}, "")
d319522269136a74b9f62505727429c66c66b720;;		return s
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	func (this *PodList) String() string {
d319522269136a74b9f62505727429c66c66b720;;		if this == nil {
d319522269136a74b9f62505727429c66c66b720;;			return "nil"
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		s := strings.Join([]string{`&PodList{`,
d319522269136a74b9f62505727429c66c66b720;;			`ListMeta:` + strings.Replace(strings.Replace(this.ListMeta.String(), "ListMeta", "k8s_io_apimachinery_pkg_apis_meta_v1.ListMeta", 1), `&`, ``, 1) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Items:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Items), "Pod", "Pod", 1), `&`, ``, 1) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`}`,
d319522269136a74b9f62505727429c66c66b720;;		}, "")
d319522269136a74b9f62505727429c66c66b720;;		return s
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	func (this *PodSpec) String() string {
d319522269136a74b9f62505727429c66c66b720;;		if this == nil {
d319522269136a74b9f62505727429c66c66b720;;			return "nil"
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		keysForNodeSelector := make([]string, 0, len(this.NodeSelector))
d319522269136a74b9f62505727429c66c66b720;;		for k := range this.NodeSelector {
d319522269136a74b9f62505727429c66c66b720;;			keysForNodeSelector = append(keysForNodeSelector, k)
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		github_com_gogo_protobuf_sortkeys.Strings(keysForNodeSelector)
d319522269136a74b9f62505727429c66c66b720;;		mapStringForNodeSelector := "map[string]string{"
d319522269136a74b9f62505727429c66c66b720;;		for _, k := range keysForNodeSelector {
d319522269136a74b9f62505727429c66c66b720;;			mapStringForNodeSelector += fmt.Sprintf("%v: %v,", k, this.NodeSelector[k])
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		mapStringForNodeSelector += "}"
d319522269136a74b9f62505727429c66c66b720;;		s := strings.Join([]string{`&PodSpec{`,
d319522269136a74b9f62505727429c66c66b720;;			`RestartPolicy:` + fmt.Sprintf("%v", this.RestartPolicy) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`TerminationGracePeriodSeconds:` + valueToStringGenerated(this.TerminationGracePeriodSeconds) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`ActiveDeadlineSeconds:` + valueToStringGenerated(this.ActiveDeadlineSeconds) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`NodeSelector:` + mapStringForNodeSelector + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`ServiceAccountName:` + fmt.Sprintf("%v", this.ServiceAccountName) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`DeprecatedServiceAccount:` + fmt.Sprintf("%v", this.DeprecatedServiceAccount) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`NodeName:` + fmt.Sprintf("%v", this.NodeName) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`HostNetwork:` + fmt.Sprintf("%v", this.HostNetwork) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`HostPID:` + fmt.Sprintf("%v", this.HostPID) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`HostIPC:` + fmt.Sprintf("%v", this.HostIPC) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Hostname:` + fmt.Sprintf("%v", this.Hostname) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Subdomain:` + fmt.Sprintf("%v", this.Subdomain) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`SchedulerName:` + fmt.Sprintf("%v", this.SchedulerName) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`}`,
d319522269136a74b9f62505727429c66c66b720;;		}, "")
d319522269136a74b9f62505727429c66c66b720;;		return s
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	func (this *PodStatus) String() string {
d319522269136a74b9f62505727429c66c66b720;;		if this == nil {
d319522269136a74b9f62505727429c66c66b720;;			return "nil"
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		s := strings.Join([]string{`&PodStatus{`,
d319522269136a74b9f62505727429c66c66b720;;			`Phase:` + fmt.Sprintf("%v", this.Phase) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Conditions:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Conditions), "PodCondition", "PodCondition", 1), `&`, ``, 1) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`HostIP:` + fmt.Sprintf("%v", this.HostIP) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`PodIP:` + fmt.Sprintf("%v", this.PodIP) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`StartTime:` + strings.Replace(fmt.Sprintf("%v", this.StartTime), "Time", "k8s_io_apimachinery_pkg_apis_meta_v1.Time", 1) + `,`,
d319522269136a74b9f62505727429c66c66b720;;			`}`,
d319522269136a74b9f62505727429c66c66b720;;		}, "")
d319522269136a74b9f62505727429c66c66b720;;		return s
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	func valueToStringGenerated(v interface{}) string {
d319522269136a74b9f62505727429c66c66b720;;		rv := reflect.ValueOf(v)
d319522269136a74b9f62505727429c66c66b720;;		if rv.IsNil() {
d319522269136a74b9f62505727429c66c66b720;;			return "nil"
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		pv := reflect.Indirect(rv).Interface()
d319522269136a74b9f62505727429c66c66b720;;		return fmt.Sprintf("*%v", pv)
d319522269136a74b9f62505727429c66c66b720;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *Pod) Unmarshal(dAtA []byte) error {
50457bce9d9e7b573260c465a9296d1fec083385;;		l := len(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		iNdEx := 0
d319522269136a74b9f62505727429c66c66b720;;		for iNdEx < l {
d319522269136a74b9f62505727429c66c66b720;;			preIndex := iNdEx
d319522269136a74b9f62505727429c66c66b720;;			var wire uint64
d319522269136a74b9f62505727429c66c66b720;;			for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;				if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;				iNdEx++
d319522269136a74b9f62505727429c66c66b720;;				wire |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;				if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;					break
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			fieldNum := int32(wire >> 3)
d319522269136a74b9f62505727429c66c66b720;;			wireType := int(wire & 0x7)
d319522269136a74b9f62505727429c66c66b720;;			if wireType == 4 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: Pod: wiretype end group for non-group")
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			if fieldNum <= 0 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: Pod: illegal tag %d (wire type %d)", fieldNum, wire)
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			switch fieldNum {
d319522269136a74b9f62505727429c66c66b720;;			case 1:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 2:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 3:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			default:
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = preIndex
50457bce9d9e7b573260c465a9296d1fec083385;;				skippy, err := skipGenerated(dAtA[iNdEx:])
d319522269136a74b9f62505727429c66c66b720;;				if err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if skippy < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if (iNdEx + skippy) > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx += skippy
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;		if iNdEx > l {
d319522269136a74b9f62505727429c66c66b720;;			return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return nil
d319522269136a74b9f62505727429c66c66b720;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodCondition) Unmarshal(dAtA []byte) error {
50457bce9d9e7b573260c465a9296d1fec083385;;		l := len(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		iNdEx := 0
d319522269136a74b9f62505727429c66c66b720;;		for iNdEx < l {
d319522269136a74b9f62505727429c66c66b720;;			preIndex := iNdEx
d319522269136a74b9f62505727429c66c66b720;;			var wire uint64
d319522269136a74b9f62505727429c66c66b720;;			for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;				if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;				iNdEx++
d319522269136a74b9f62505727429c66c66b720;;				wire |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;				if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;					break
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			fieldNum := int32(wire >> 3)
d319522269136a74b9f62505727429c66c66b720;;			wireType := int(wire & 0x7)
d319522269136a74b9f62505727429c66c66b720;;			if wireType == 4 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: PodCondition: wiretype end group for non-group")
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			if fieldNum <= 0 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: PodCondition: illegal tag %d (wire type %d)", fieldNum, wire)
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			switch fieldNum {
d319522269136a74b9f62505727429c66c66b720;;			case 1:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.Type = PodConditionType(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 2:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.Status = ConditionStatus(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 3:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field LastProbeTime", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				if err := m.LastProbeTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 4:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field LastTransitionTime", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				if err := m.LastTransitionTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 5:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.Reason = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 6:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.Message = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			default:
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = preIndex
50457bce9d9e7b573260c465a9296d1fec083385;;				skippy, err := skipGenerated(dAtA[iNdEx:])
d319522269136a74b9f62505727429c66c66b720;;				if err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if skippy < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if (iNdEx + skippy) > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx += skippy
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;		if iNdEx > l {
d319522269136a74b9f62505727429c66c66b720;;			return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return nil
d319522269136a74b9f62505727429c66c66b720;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodList) Unmarshal(dAtA []byte) error {
50457bce9d9e7b573260c465a9296d1fec083385;;		l := len(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		iNdEx := 0
d319522269136a74b9f62505727429c66c66b720;;		for iNdEx < l {
d319522269136a74b9f62505727429c66c66b720;;			preIndex := iNdEx
d319522269136a74b9f62505727429c66c66b720;;			var wire uint64
d319522269136a74b9f62505727429c66c66b720;;			for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;				if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;				iNdEx++
d319522269136a74b9f62505727429c66c66b720;;				wire |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;				if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;					break
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			fieldNum := int32(wire >> 3)
d319522269136a74b9f62505727429c66c66b720;;			wireType := int(wire & 0x7)
d319522269136a74b9f62505727429c66c66b720;;			if wireType == 4 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: PodList: wiretype end group for non-group")
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			if fieldNum <= 0 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: PodList: illegal tag %d (wire type %d)", fieldNum, wire)
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			switch fieldNum {
d319522269136a74b9f62505727429c66c66b720;;			case 1:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field ListMeta", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				if err := m.ListMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 2:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				m.Items = append(m.Items, Pod{})
50457bce9d9e7b573260c465a9296d1fec083385;;				if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			default:
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = preIndex
50457bce9d9e7b573260c465a9296d1fec083385;;				skippy, err := skipGenerated(dAtA[iNdEx:])
d319522269136a74b9f62505727429c66c66b720;;				if err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if skippy < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if (iNdEx + skippy) > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx += skippy
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;		if iNdEx > l {
d319522269136a74b9f62505727429c66c66b720;;			return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return nil
d319522269136a74b9f62505727429c66c66b720;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodSpec) Unmarshal(dAtA []byte) error {
50457bce9d9e7b573260c465a9296d1fec083385;;		l := len(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		iNdEx := 0
d319522269136a74b9f62505727429c66c66b720;;		for iNdEx < l {
d319522269136a74b9f62505727429c66c66b720;;			preIndex := iNdEx
d319522269136a74b9f62505727429c66c66b720;;			var wire uint64
d319522269136a74b9f62505727429c66c66b720;;			for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;				if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;				iNdEx++
d319522269136a74b9f62505727429c66c66b720;;				wire |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;				if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;					break
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			fieldNum := int32(wire >> 3)
d319522269136a74b9f62505727429c66c66b720;;			wireType := int(wire & 0x7)
d319522269136a74b9f62505727429c66c66b720;;			if wireType == 4 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: PodSpec: wiretype end group for non-group")
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			if fieldNum <= 0 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: PodSpec: illegal tag %d (wire type %d)", fieldNum, wire)
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			switch fieldNum {
d319522269136a74b9f62505727429c66c66b720;;			case 3:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field RestartPolicy", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.RestartPolicy = RestartPolicy(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 4:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 0 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field TerminationGracePeriodSeconds", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var v int64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					v |= (int64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				m.TerminationGracePeriodSeconds = &v
d319522269136a74b9f62505727429c66c66b720;;			case 5:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 0 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field ActiveDeadlineSeconds", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var v int64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					v |= (int64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				m.ActiveDeadlineSeconds = &v
d319522269136a74b9f62505727429c66c66b720;;			case 7:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field NodeSelector", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var keykey uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					keykey |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLenmapkey uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLenmapkey |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLenmapkey := int(stringLenmapkey)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLenmapkey < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postStringIndexmapkey := iNdEx + intStringLenmapkey
d319522269136a74b9f62505727429c66c66b720;;				if postStringIndexmapkey > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				mapkey := string(dAtA[iNdEx:postStringIndexmapkey])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postStringIndexmapkey
50457bce9d9e7b573260c465a9296d1fec083385;;				if m.NodeSelector == nil {
50457bce9d9e7b573260c465a9296d1fec083385;;					m.NodeSelector = make(map[string]string)
50457bce9d9e7b573260c465a9296d1fec083385;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				if iNdEx < postIndex {
50457bce9d9e7b573260c465a9296d1fec083385;;					var valuekey uint64
50457bce9d9e7b573260c465a9296d1fec083385;;					for shift := uint(0); ; shift += 7 {
50457bce9d9e7b573260c465a9296d1fec083385;;						if shift >= 64 {
50457bce9d9e7b573260c465a9296d1fec083385;;							return ErrIntOverflowGenerated
50457bce9d9e7b573260c465a9296d1fec083385;;						}
50457bce9d9e7b573260c465a9296d1fec083385;;						if iNdEx >= l {
50457bce9d9e7b573260c465a9296d1fec083385;;							return io.ErrUnexpectedEOF
50457bce9d9e7b573260c465a9296d1fec083385;;						}
50457bce9d9e7b573260c465a9296d1fec083385;;						b := dAtA[iNdEx]
50457bce9d9e7b573260c465a9296d1fec083385;;						iNdEx++
50457bce9d9e7b573260c465a9296d1fec083385;;						valuekey |= (uint64(b) & 0x7F) << shift
50457bce9d9e7b573260c465a9296d1fec083385;;						if b < 0x80 {
50457bce9d9e7b573260c465a9296d1fec083385;;							break
50457bce9d9e7b573260c465a9296d1fec083385;;						}
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					var stringLenmapvalue uint64
50457bce9d9e7b573260c465a9296d1fec083385;;					for shift := uint(0); ; shift += 7 {
50457bce9d9e7b573260c465a9296d1fec083385;;						if shift >= 64 {
50457bce9d9e7b573260c465a9296d1fec083385;;							return ErrIntOverflowGenerated
50457bce9d9e7b573260c465a9296d1fec083385;;						}
50457bce9d9e7b573260c465a9296d1fec083385;;						if iNdEx >= l {
50457bce9d9e7b573260c465a9296d1fec083385;;							return io.ErrUnexpectedEOF
50457bce9d9e7b573260c465a9296d1fec083385;;						}
50457bce9d9e7b573260c465a9296d1fec083385;;						b := dAtA[iNdEx]
50457bce9d9e7b573260c465a9296d1fec083385;;						iNdEx++
50457bce9d9e7b573260c465a9296d1fec083385;;						stringLenmapvalue |= (uint64(b) & 0x7F) << shift
50457bce9d9e7b573260c465a9296d1fec083385;;						if b < 0x80 {
50457bce9d9e7b573260c465a9296d1fec083385;;							break
50457bce9d9e7b573260c465a9296d1fec083385;;						}
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					intStringLenmapvalue := int(stringLenmapvalue)
50457bce9d9e7b573260c465a9296d1fec083385;;					if intStringLenmapvalue < 0 {
50457bce9d9e7b573260c465a9296d1fec083385;;						return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
50457bce9d9e7b573260c465a9296d1fec083385;;					if postStringIndexmapvalue > l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					mapvalue := string(dAtA[iNdEx:postStringIndexmapvalue])
50457bce9d9e7b573260c465a9296d1fec083385;;					iNdEx = postStringIndexmapvalue
50457bce9d9e7b573260c465a9296d1fec083385;;					m.NodeSelector[mapkey] = mapvalue
50457bce9d9e7b573260c465a9296d1fec083385;;				} else {
50457bce9d9e7b573260c465a9296d1fec083385;;					var mapvalue string
50457bce9d9e7b573260c465a9296d1fec083385;;					m.NodeSelector[mapkey] = mapvalue
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 8:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field ServiceAccountName", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.ServiceAccountName = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 9:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field DeprecatedServiceAccount", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.DeprecatedServiceAccount = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 10:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.NodeName = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 11:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 0 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field HostNetwork", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var v int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					v |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				m.HostNetwork = bool(v != 0)
d319522269136a74b9f62505727429c66c66b720;;			case 12:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 0 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field HostPID", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var v int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					v |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				m.HostPID = bool(v != 0)
d319522269136a74b9f62505727429c66c66b720;;			case 13:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 0 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field HostIPC", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var v int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					v |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				m.HostIPC = bool(v != 0)
d319522269136a74b9f62505727429c66c66b720;;			case 16:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Hostname", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.Hostname = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 17:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Subdomain", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.Subdomain = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 19:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field SchedulerName", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.SchedulerName = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			default:
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = preIndex
50457bce9d9e7b573260c465a9296d1fec083385;;				skippy, err := skipGenerated(dAtA[iNdEx:])
d319522269136a74b9f62505727429c66c66b720;;				if err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if skippy < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if (iNdEx + skippy) > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx += skippy
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;		if iNdEx > l {
d319522269136a74b9f62505727429c66c66b720;;			return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return nil
d319522269136a74b9f62505727429c66c66b720;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	func (m *PodStatus) Unmarshal(dAtA []byte) error {
50457bce9d9e7b573260c465a9296d1fec083385;;		l := len(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		iNdEx := 0
d319522269136a74b9f62505727429c66c66b720;;		for iNdEx < l {
d319522269136a74b9f62505727429c66c66b720;;			preIndex := iNdEx
d319522269136a74b9f62505727429c66c66b720;;			var wire uint64
d319522269136a74b9f62505727429c66c66b720;;			for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;				if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;				iNdEx++
d319522269136a74b9f62505727429c66c66b720;;				wire |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;				if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;					break
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			fieldNum := int32(wire >> 3)
d319522269136a74b9f62505727429c66c66b720;;			wireType := int(wire & 0x7)
d319522269136a74b9f62505727429c66c66b720;;			if wireType == 4 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: PodStatus: wiretype end group for non-group")
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			if fieldNum <= 0 {
d319522269136a74b9f62505727429c66c66b720;;				return fmt.Errorf("proto: PodStatus: illegal tag %d (wire type %d)", fieldNum, wire)
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			switch fieldNum {
d319522269136a74b9f62505727429c66c66b720;;			case 1:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Phase", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.Phase = PodPhase(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 2:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Conditions", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				m.Conditions = append(m.Conditions, PodCondition{})
50457bce9d9e7b573260c465a9296d1fec083385;;				if err := m.Conditions[len(m.Conditions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 3:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.Message = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 4:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.Reason = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 5:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field HostIP", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.HostIP = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 6:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field PodIP", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var stringLen uint64
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					stringLen |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				intStringLen := int(stringLen)
d319522269136a74b9f62505727429c66c66b720;;				if intStringLen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + intStringLen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				m.PodIP = string(dAtA[iNdEx:postIndex])
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			case 7:
d319522269136a74b9f62505727429c66c66b720;;				if wireType != 2 {
d319522269136a74b9f62505727429c66c66b720;;					return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				var msglen int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					msglen |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if msglen < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				postIndex := iNdEx + msglen
d319522269136a74b9f62505727429c66c66b720;;				if postIndex > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if m.StartTime == nil {
d319522269136a74b9f62505727429c66c66b720;;					m.StartTime = &k8s_io_apimachinery_pkg_apis_meta_v1.Time{}
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				if err := m.StartTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = postIndex
d319522269136a74b9f62505727429c66c66b720;;			default:
d319522269136a74b9f62505727429c66c66b720;;				iNdEx = preIndex
50457bce9d9e7b573260c465a9296d1fec083385;;				skippy, err := skipGenerated(dAtA[iNdEx:])
d319522269136a74b9f62505727429c66c66b720;;				if err != nil {
d319522269136a74b9f62505727429c66c66b720;;					return err
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if skippy < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if (iNdEx + skippy) > l {
d319522269136a74b9f62505727429c66c66b720;;					return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx += skippy
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;		if iNdEx > l {
d319522269136a74b9f62505727429c66c66b720;;			return io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		return nil
d319522269136a74b9f62505727429c66c66b720;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	func skipGenerated(dAtA []byte) (n int, err error) {
50457bce9d9e7b573260c465a9296d1fec083385;;		l := len(dAtA)
d319522269136a74b9f62505727429c66c66b720;;		iNdEx := 0
d319522269136a74b9f62505727429c66c66b720;;		for iNdEx < l {
d319522269136a74b9f62505727429c66c66b720;;			var wire uint64
d319522269136a74b9f62505727429c66c66b720;;			for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;				if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;					return 0, ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;					return 0, io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;				}
50457bce9d9e7b573260c465a9296d1fec083385;;				b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;				iNdEx++
d319522269136a74b9f62505727429c66c66b720;;				wire |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;				if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;					break
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;			wireType := int(wire & 0x7)
d319522269136a74b9f62505727429c66c66b720;;			switch wireType {
d319522269136a74b9f62505727429c66c66b720;;			case 0:
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return 0, ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return 0, io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
50457bce9d9e7b573260c465a9296d1fec083385;;					if dAtA[iNdEx-1] < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				return iNdEx, nil
d319522269136a74b9f62505727429c66c66b720;;			case 1:
d319522269136a74b9f62505727429c66c66b720;;				iNdEx += 8
d319522269136a74b9f62505727429c66c66b720;;				return iNdEx, nil
d319522269136a74b9f62505727429c66c66b720;;			case 2:
d319522269136a74b9f62505727429c66c66b720;;				var length int
d319522269136a74b9f62505727429c66c66b720;;				for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;					if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;						return 0, ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;						return 0, io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;					iNdEx++
d319522269136a74b9f62505727429c66c66b720;;					length |= (int(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;					if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				iNdEx += length
d319522269136a74b9f62505727429c66c66b720;;				if length < 0 {
d319522269136a74b9f62505727429c66c66b720;;					return 0, ErrInvalidLengthGenerated
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				return iNdEx, nil
d319522269136a74b9f62505727429c66c66b720;;			case 3:
d319522269136a74b9f62505727429c66c66b720;;				for {
d319522269136a74b9f62505727429c66c66b720;;					var innerWire uint64
d319522269136a74b9f62505727429c66c66b720;;					var start int = iNdEx
d319522269136a74b9f62505727429c66c66b720;;					for shift := uint(0); ; shift += 7 {
d319522269136a74b9f62505727429c66c66b720;;						if shift >= 64 {
d319522269136a74b9f62505727429c66c66b720;;							return 0, ErrIntOverflowGenerated
d319522269136a74b9f62505727429c66c66b720;;						}
d319522269136a74b9f62505727429c66c66b720;;						if iNdEx >= l {
d319522269136a74b9f62505727429c66c66b720;;							return 0, io.ErrUnexpectedEOF
d319522269136a74b9f62505727429c66c66b720;;						}
50457bce9d9e7b573260c465a9296d1fec083385;;						b := dAtA[iNdEx]
d319522269136a74b9f62505727429c66c66b720;;						iNdEx++
d319522269136a74b9f62505727429c66c66b720;;						innerWire |= (uint64(b) & 0x7F) << shift
d319522269136a74b9f62505727429c66c66b720;;						if b < 0x80 {
d319522269136a74b9f62505727429c66c66b720;;							break
d319522269136a74b9f62505727429c66c66b720;;						}
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					innerWireType := int(innerWire & 0x7)
d319522269136a74b9f62505727429c66c66b720;;					if innerWireType == 4 {
d319522269136a74b9f62505727429c66c66b720;;						break
d319522269136a74b9f62505727429c66c66b720;;					}
50457bce9d9e7b573260c465a9296d1fec083385;;					next, err := skipGenerated(dAtA[start:])
d319522269136a74b9f62505727429c66c66b720;;					if err != nil {
d319522269136a74b9f62505727429c66c66b720;;						return 0, err
d319522269136a74b9f62505727429c66c66b720;;					}
d319522269136a74b9f62505727429c66c66b720;;					iNdEx = start + next
d319522269136a74b9f62505727429c66c66b720;;				}
d319522269136a74b9f62505727429c66c66b720;;				return iNdEx, nil
d319522269136a74b9f62505727429c66c66b720;;			case 4:
d319522269136a74b9f62505727429c66c66b720;;				return iNdEx, nil
d319522269136a74b9f62505727429c66c66b720;;			case 5:
d319522269136a74b9f62505727429c66c66b720;;				iNdEx += 4
d319522269136a74b9f62505727429c66c66b720;;				return iNdEx, nil
d319522269136a74b9f62505727429c66c66b720;;			default:
d319522269136a74b9f62505727429c66c66b720;;				return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
d319522269136a74b9f62505727429c66c66b720;;			}
d319522269136a74b9f62505727429c66c66b720;;		}
d319522269136a74b9f62505727429c66c66b720;;		panic("unreachable")
d319522269136a74b9f62505727429c66c66b720;;	}
d319522269136a74b9f62505727429c66c66b720;;	
d319522269136a74b9f62505727429c66c66b720;;	var (
d319522269136a74b9f62505727429c66c66b720;;		ErrInvalidLengthGenerated = fmt.Errorf("proto: negative length found during unmarshaling")
d319522269136a74b9f62505727429c66c66b720;;		ErrIntOverflowGenerated   = fmt.Errorf("proto: integer overflow")
d319522269136a74b9f62505727429c66c66b720;;	)
d319522269136a74b9f62505727429c66c66b720;;	
50457bce9d9e7b573260c465a9296d1fec083385;;	func init() {
50457bce9d9e7b573260c465a9296d1fec083385;;		proto.RegisterFile("k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/apis/example/v1/generated.proto", fileDescriptorGenerated)
50457bce9d9e7b573260c465a9296d1fec083385;;	}
50457bce9d9e7b573260c465a9296d1fec083385;;	
d319522269136a74b9f62505727429c66c66b720;;	var fileDescriptorGenerated = []byte{
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		// 1065 bytes of a gzipped FileDescriptorProto
48d5a4b2814d87ca8b192e484ebc3100982a368b;;		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x10, 0xb6, 0x2c, 0xcb, 0x92, 0xd6, 0x56, 0x62, 0x6f, 0x62, 0x80, 0x31, 0x10, 0xc9, 0x71, 0x0b,
d319522269136a74b9f62505727429c66c66b720;;		0xc3, 0x29, 0x1a, 0xb2, 0x76, 0xd3, 0x22, 0x6d, 0x0f, 0x41, 0x68, 0x17, 0xb5, 0x0b, 0xff, 0x10,
d319522269136a74b9f62505727429c66c66b720;;		0x2b, 0x03, 0x01, 0x8a, 0x1e, 0xba, 0x22, 0x27, 0x32, 0x2b, 0x91, 0x4b, 0xec, 0xae, 0xd4, 0xea,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xd6, 0x47, 0x68, 0x1f, 0xa0, 0x4f, 0xd1, 0x43, 0x81, 0x3e, 0x81, 0x8f, 0x39, 0xe6, 0x24, 0xd4,
d319522269136a74b9f62505727429c66c66b720;;		0xea, 0x5b, 0xf8, 0x54, 0xec, 0xf2, 0x47, 0xa2, 0xe5, 0x38, 0xf2, 0x6d, 0x77, 0xe6, 0xfb, 0xbe,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x19, 0xee, 0x0c, 0x67, 0xd0, 0x71, 0xe7, 0x85, 0x30, 0x7d, 0x66, 0x75, 0x7a, 0x2d, 0xe0, 0x21,
d319522269136a74b9f62505727429c66c66b720;;		0x48, 0x10, 0x56, 0x1f, 0x42, 0x8f, 0x71, 0x2b, 0x71, 0xd0, 0xc8, 0x17, 0xc0, 0xfb, 0xc0, 0xad,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xa8, 0xd3, 0xd6, 0x37, 0x0b, 0x7e, 0xa5, 0x41, 0xd4, 0x05, 0xab, 0xbf, 0x63, 0xb5, 0x21, 0x04,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x4e, 0x25, 0x78, 0x66, 0xc4, 0x99, 0x64, 0xf8, 0xe3, 0x98, 0x65, 0x66, 0x2c, 0x33, 0xea, 0xb4,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xf5, 0xcd, 0x4c, 0x58, 0x66, 0x7f, 0x67, 0xfd, 0x59, 0xdb, 0x97, 0xe7, 0xbd, 0x96, 0xe9, 0xb2,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xc0, 0x6a, 0xb3, 0x36, 0xb3, 0x34, 0xb9, 0xd5, 0x7b, 0xa3, 0x6f, 0xfa, 0xa2, 0x4f, 0xb1, 0xe8,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xfa, 0xf3, 0x71, 0x2a, 0x01, 0x75, 0xcf, 0xfd, 0x10, 0xf8, 0x60, 0x9c, 0x4d, 0x00, 0x92, 0xde,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x90, 0xca, 0xba, 0xf5, 0x3e, 0x16, 0xef, 0x85, 0xd2, 0x0f, 0x60, 0x8a, 0xf0, 0xe5, 0x87, 0x08,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xc2, 0x3d, 0x87, 0x80, 0x4e, 0xf1, 0x3e, 0x7f, 0x1f, 0xaf, 0x27, 0xfd, 0xae, 0xe5, 0x87, 0x52,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x48, 0x7e, 0x9d, 0xb4, 0xf9, 0xc7, 0x3c, 0x2a, 0x3a, 0xcc, 0xc3, 0x3f, 0xa1, 0x8a, 0xfa, 0x00,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x8f, 0x4a, 0x6a, 0x14, 0x36, 0x0a, 0xdb, 0x4b, 0xbb, 0x9f, 0x99, 0xe3, 0x37, 0xcc, 0xf4, 0xc6,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xcf, 0xa8, 0xd0, 0x66, 0x7f, 0xc7, 0x3c, 0x6d, 0xfd, 0x0c, 0xae, 0x3c, 0x06, 0x49, 0x6d, 0x7c,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x31, 0x6c, 0xcc, 0x8d, 0x86, 0x0d, 0x34, 0xb6, 0x91, 0x4c, 0x15, 0x9f, 0xa2, 0x05, 0x11, 0x81,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x6b, 0xcc, 0x6b, 0xf5, 0x67, 0xe6, 0x2c, 0x15, 0x32, 0x1d, 0xe6, 0x35, 0x23, 0x70, 0xed, 0xe5,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x44, 0x7a, 0x41, 0xdd, 0x88, 0x16, 0xc2, 0xaf, 0xd1, 0xa2, 0x90, 0x54, 0xf6, 0x84, 0x51, 0xd4,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x92, 0xd6, 0xec, 0x92, 0x9a, 0x66, 0xdf, 0x4b, 0x44, 0x17, 0xe3, 0x3b, 0x49, 0xe4, 0x36, 0xff,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x2a, 0xa2, 0x65, 0x87, 0x79, 0x7b, 0x2c, 0xf4, 0x7c, 0xe9, 0xb3, 0x10, 0x3f, 0x47, 0x0b, 0x72,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x10, 0x81, 0x7e, 0x98, 0xaa, 0xbd, 0x91, 0xe6, 0x72, 0x36, 0x88, 0xe0, 0x6a, 0xd8, 0x58, 0x99,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xc4, 0x2a, 0x1b, 0xd1, 0x68, 0xfc, 0x55, 0x96, 0xdf, 0xbc, 0xe6, 0x3d, 0xc9, 0x87, 0xbb, 0x1a,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x36, 0xee, 0x67, 0xb4, 0x7c, 0x06, 0xb8, 0x8d, 0x6a, 0x5d, 0x2a, 0xa4, 0xc3, 0x59, 0x0b, 0xce,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xfc, 0x00, 0x92, 0x2f, 0xfc, 0x64, 0xb6, 0x92, 0x28, 0x86, 0xbd, 0x96, 0x44, 0xab, 0x1d, 0x4d,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x0a, 0x91, 0xbc, 0x2e, 0xee, 0x23, 0xac, 0x0c, 0x67, 0x9c, 0x86, 0x22, 0xce, 0x5f, 0x45, 0x5b,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xb8, 0x73, 0xb4, 0xf5, 0x24, 0x1a, 0x3e, 0x9a, 0x52, 0x23, 0x37, 0x44, 0xc0, 0x5b, 0x68, 0x91,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x03, 0x15, 0x2c, 0x34, 0x4a, 0xfa, 0x6d, 0xb2, 0x52, 0x10, 0x6d, 0x25, 0x89, 0x17, 0x3f, 0x45,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xe5, 0x00, 0x84, 0xa0, 0x6d, 0x30, 0x16, 0x35, 0xf0, 0x7e, 0x02, 0x2c, 0x1f, 0xc7, 0x66, 0x92,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xfa, 0x37, 0xff, 0x2e, 0xa0, 0xb2, 0xc3, 0xbc, 0x23, 0x5f, 0x48, 0xfc, 0xe3, 0x54, 0x37, 0x9b,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xb3, 0x7d, 0x8c, 0x62, 0xeb, 0x5e, 0x5e, 0x49, 0xe2, 0x54, 0x52, 0xcb, 0x44, 0x27, 0x9f, 0xa0,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x92, 0x2f, 0x21, 0x50, 0x75, 0x2d, 0x6e, 0x2f, 0xed, 0x3e, 0x9d, 0xb9, 0xef, 0xec, 0x5a, 0xa2,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x5a, 0x3a, 0x54, 0x7c, 0x12, 0xcb, 0x6c, 0xfe, 0x53, 0xd6, 0x99, 0xab, 0xd6, 0xc6, 0x47, 0xa8,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xc6, 0x41, 0x48, 0xca, 0xa5, 0xc3, 0xba, 0xbe, 0x3b, 0xd0, 0x95, 0xaf, 0xda, 0x5b, 0x69, 0x35,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xc9, 0xa4, 0xf3, 0xea, 0xba, 0x81, 0xe4, 0xc9, 0xb8, 0x8d, 0x1e, 0x4b, 0xe0, 0x81, 0x1f, 0x52,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xf5, 0xf2, 0xdf, 0x71, 0xea, 0x82, 0x03, 0xdc, 0x67, 0x5e, 0x13, 0x5c, 0x16, 0x7a, 0x42, 0x57,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xba, 0x68, 0x3f, 0x19, 0x0d, 0x1b, 0x8f, 0xcf, 0x6e, 0x03, 0x92, 0xdb, 0x75, 0xf0, 0x29, 0x5a,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xa3, 0xae, 0xf4, 0xfb, 0xb0, 0x0f, 0xd4, 0xeb, 0xfa, 0x21, 0xa4, 0x01, 0x4a, 0x3a, 0xc0, 0xa3,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xd1, 0xb0, 0xb1, 0xf6, 0xea, 0x26, 0x00, 0xb9, 0x99, 0x87, 0x07, 0x68, 0x39, 0x64, 0x1e, 0x34,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xa1, 0x0b, 0xae, 0x64, 0xdc, 0x28, 0xeb, 0xa7, 0x7e, 0x79, 0xa7, 0xa9, 0x61, 0x9e, 0x4c, 0x28,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x7c, 0x1b, 0x4a, 0x3e, 0xb0, 0x1f, 0x26, 0xef, 0xb8, 0x3c, 0xe9, 0x22, 0xb9, 0x50, 0xf8, 0x7b,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x84, 0x95, 0xb6, 0xef, 0xc2, 0x2b, 0xd7, 0x65, 0xbd, 0x50, 0x9e, 0xd0, 0x00, 0x8c, 0x8a, 0xae,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x43, 0xd6, 0xe7, 0xcd, 0x29, 0x04, 0xb9, 0x81, 0x85, 0x0f, 0xd0, 0xbd, 0xbc, 0xd5, 0xa8, 0xe6,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x66, 0x88, 0xb1, 0x0f, 0x11, 0x07, 0x57, 0x0d, 0xe4, 0xbc, 0x22, 0xb9, 0xc6, 0xc3, 0x9f, 0xa2,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x8a, 0xca, 0x52, 0xe7, 0x82, 0xb4, 0x46, 0xd6, 0xa2, 0x27, 0x89, 0x9d, 0x64, 0x08, 0xfc, 0x05,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x5a, 0x3a, 0x67, 0x42, 0x9e, 0x80, 0xfc, 0x85, 0xf1, 0x8e, 0xb1, 0xb4, 0x51, 0xd8, 0xae, 0xd8,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x0f, 0x12, 0xc2, 0xd2, 0xc1, 0xd8, 0x45, 0x26, 0x71, 0xea, 0x77, 0x53, 0x57, 0xe7, 0x70, 0xdf,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x58, 0xd6, 0x94, 0xec, 0x77, 0x3b, 0x88, 0xcd, 0x24, 0xf5, 0xa7, 0xd0, 0x43, 0x67, 0xcf, 0xa8,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x4d, 0x43, 0x0f, 0x9d, 0x3d, 0x92, 0xfa, 0x55, 0xea, 0xea, 0x18, 0xaa, 0xd4, 0x57, 0xf2, 0xa9,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x1f, 0x24, 0x76, 0x92, 0x21, 0xb0, 0x85, 0xaa, 0xa2, 0xd7, 0xf2, 0x58, 0x40, 0xfd, 0xd0, 0x58,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xd5, 0xf0, 0xd5, 0x04, 0x5e, 0x6d, 0xa6, 0x0e, 0x32, 0xc6, 0xe0, 0x6f, 0x50, 0x4d, 0x6d, 0x44,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xaf, 0xd7, 0x05, 0xae, 0x63, 0x3c, 0xd0, 0xa4, 0x6c, 0x00, 0x36, 0x53, 0xa7, 0x7e, 0xa3, 0x3c,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x76, 0xfd, 0x25, 0x5a, 0x9d, 0xea, 0x12, 0xbc, 0x82, 0x8a, 0x1d, 0x18, 0xc4, 0xe3, 0x9e, 0xa8,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x23, 0x7e, 0x88, 0x4a, 0x7d, 0xda, 0xed, 0x41, 0x3c, 0xca, 0x49, 0x7c, 0xf9, 0x7a, 0xfe, 0x45,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x61, 0xf3, 0xcf, 0x22, 0xaa, 0x66, 0x2b, 0x05, 0x5b, 0xa8, 0x14, 0x9d, 0x53, 0x91, 0xae, 0x8a,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x47, 0xe9, 0xff, 0xee, 0x28, 0xe3, 0xd5, 0xb0, 0x51, 0x71, 0x98, 0xa7, 0xcf, 0x24, 0xc6, 0xe1,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x37, 0x08, 0xb9, 0xe9, 0x12, 0x48, 0x07, 0xca, 0xee, 0xcc, 0x5d, 0x9e, 0xed, 0x8f, 0xf1, 0xee,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xcd, 0x4c, 0x82, 0x4c, 0x28, 0x4f, 0x0e, 0xd2, 0xe2, 0xed, 0x83, 0x74, 0x62, 0x36, 0x2f, 0xdc,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x3a, 0x9b, 0xb7, 0xd0, 0x62, 0x5c, 0xe1, 0xeb, 0x33, 0x3c, 0x6e, 0x00, 0x92, 0x78, 0xf1, 0x47,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xa8, 0x14, 0x31, 0xef, 0xd0, 0x49, 0x26, 0x78, 0x36, 0x03, 0x1d, 0x65, 0x24, 0xb1, 0x0f, 0xbf,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x46, 0x55, 0x3d, 0xb8, 0xf4, 0xfe, 0x29, 0xdf, 0x79, 0xff, 0xd4, 0x74, 0x77, 0xa4, 0x02, 0x64,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xac, 0x65, 0x6f, 0x5f, 0x5c, 0xd6, 0xe7, 0xde, 0x5e, 0xd6, 0xe7, 0xde, 0x5d, 0xd6, 0xe7, 0x7e,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0x1b, 0xd5, 0x0b, 0x17, 0xa3, 0x7a, 0xe1, 0xed, 0xa8, 0x5e, 0x78, 0x37, 0xaa, 0x17, 0xfe, 0x1d,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xd5, 0x0b, 0xbf, 0xff, 0x57, 0x9f, 0xfb, 0x61, 0xbe, 0xbf, 0xf3, 0x7f, 0x00, 0x00, 0x00, 0xff,
405e0bce915b137ebf2354b7292edb4c7aa90d87;;		0xff, 0x55, 0x69, 0xbd, 0x27, 0x83, 0x0a, 0x00, 0x00,
d319522269136a74b9f62505727429c66c66b720;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
64cdf0b7870e9299c2b6bb8f8ca316fa76961e13;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package apiserver
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AdmissionConfiguration provides versioned configuration for admission controllers.
0000000000000000000000000000000000000000;;	type AdmissionConfiguration struct {
0000000000000000000000000000000000000000;;		metav1.TypeMeta
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Plugins allows specifying a configuration per admission control plugin.
0000000000000000000000000000000000000000;;		// +optional
0000000000000000000000000000000000000000;;		Plugins []AdmissionPluginConfiguration
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AdmissionPluginConfiguration provides the configuration for a single plug-in.
0000000000000000000000000000000000000000;;	type AdmissionPluginConfiguration struct {
0000000000000000000000000000000000000000;;		// Name is the name of the admission controller.
0000000000000000000000000000000000000000;;		// It must match the registered admission plugin name.
0000000000000000000000000000000000000000;;		Name string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Path is the path to a configuration file that contains the plugin's
0000000000000000000000000000000000000000;;		// configuration
0000000000000000000000000000000000000000;;		// +optional
0000000000000000000000000000000000000000;;		Path string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Configuration is an embedded configuration object to be used as the plugin's
0000000000000000000000000000000000000000;;		// configuration. If present, it will be used instead of the path to the configuration file.
0000000000000000000000000000000000000000;;		// +optional
0000000000000000000000000000000000000000;;		Configuration runtime.Object
0000000000000000000000000000000000000000;;	}

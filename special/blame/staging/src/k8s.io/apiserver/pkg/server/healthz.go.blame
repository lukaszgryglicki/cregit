0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
1658f7855dd4c9858307c505ac72d8c88e334e62;pkg/genericapiserver/healthz.go[pkg/genericapiserver/healthz.go][staging/src/k8s.io/apiserver/pkg/server/healthz.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package server
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/server/healthz"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AddHealthzCheck allows you to add a HealthzCheck.
0000000000000000000000000000000000000000;;	func (s *GenericAPIServer) AddHealthzChecks(checks ...healthz.HealthzChecker) error {
0000000000000000000000000000000000000000;;		s.healthzLock.Lock()
0000000000000000000000000000000000000000;;		defer s.healthzLock.Unlock()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if s.healthzCreated {
0000000000000000000000000000000000000000;;			return fmt.Errorf("unable to add because the healthz endpoint has already been created")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s.healthzChecks = append(s.healthzChecks, checks...)
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// installHealthz creates the healthz endpoint for this server
0000000000000000000000000000000000000000;;	func (s *GenericAPIServer) installHealthz() {
0000000000000000000000000000000000000000;;		s.healthzLock.Lock()
0000000000000000000000000000000000000000;;		defer s.healthzLock.Unlock()
0000000000000000000000000000000000000000;;		s.healthzCreated = true
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		healthz.InstallHandler(s.Handler.NonGoRestfulMux, s.healthzChecks...)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
1f0e1bec7d1a1781ad88e0df570a4d3365a1a781;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package server
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"net"
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestLoopbackHostPort(t *testing.T) {
0000000000000000000000000000000000000000;;		host, port, err := LoopbackHostPort("1.2.3.4:443")
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("unexpected error: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if host != "1.2.3.4" {
0000000000000000000000000000000000000000;;			t.Fatalf("expected 1.2.3.4 as host, got %q", host)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if port != "443" {
0000000000000000000000000000000000000000;;			t.Fatalf("expected 443 as port, got %q", port)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		host, port, err = LoopbackHostPort("0.0.0.0:443")
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("unexpected error: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if ip := net.ParseIP(host); ip == nil || !ip.IsLoopback() {
0000000000000000000000000000000000000000;;			t.Fatalf("expected host to be loopback, got %q", host)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if port != "443" {
0000000000000000000000000000000000000000;;			t.Fatalf("expected 443 as port, got %q", port)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

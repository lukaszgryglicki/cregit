0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
90b04d91a1377a7d8a7466a61ef300a94b34b421;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package options
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/spf13/pflag"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime/serializer"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/server"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FeatureOptions struct {
0000000000000000000000000000000000000000;;		EnableProfiling           bool
0000000000000000000000000000000000000000;;		EnableContentionProfiling bool
0000000000000000000000000000000000000000;;		EnableSwaggerUI           bool
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewFeatureOptions() *FeatureOptions {
0000000000000000000000000000000000000000;;		defaults := server.NewConfig(serializer.CodecFactory{})
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return &FeatureOptions{
0000000000000000000000000000000000000000;;			EnableProfiling:           defaults.EnableProfiling,
0000000000000000000000000000000000000000;;			EnableContentionProfiling: defaults.EnableContentionProfiling,
0000000000000000000000000000000000000000;;			EnableSwaggerUI:           defaults.EnableSwaggerUI,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (o *FeatureOptions) AddFlags(fs *pflag.FlagSet) {
0000000000000000000000000000000000000000;;		fs.BoolVar(&o.EnableProfiling, "profiling", o.EnableProfiling,
0000000000000000000000000000000000000000;;			"Enable profiling via web interface host:port/debug/pprof/")
0000000000000000000000000000000000000000;;		fs.BoolVar(&o.EnableContentionProfiling, "contention-profiling", o.EnableContentionProfiling,
0000000000000000000000000000000000000000;;			"Enable lock contention profiling, if profiling is enabled")
0000000000000000000000000000000000000000;;		fs.BoolVar(&o.EnableSwaggerUI, "enable-swagger-ui", o.EnableSwaggerUI,
0000000000000000000000000000000000000000;;			"Enables swagger ui on the apiserver at /swagger-ui")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (o *FeatureOptions) ApplyTo(c *server.Config) error {
0000000000000000000000000000000000000000;;		c.EnableProfiling = o.EnableProfiling
0000000000000000000000000000000000000000;;		c.EnableContentionProfiling = o.EnableContentionProfiling
0000000000000000000000000000000000000000;;		c.EnableSwaggerUI = o.EnableSwaggerUI
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

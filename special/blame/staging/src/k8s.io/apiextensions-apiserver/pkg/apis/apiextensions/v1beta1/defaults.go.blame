0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
d78718c112bd8e03e1f7b0419cdbb2b194db940b;staging/src/k8s.io/kube-apiextensions-server/pkg/apis/apiextensions/v1alpha1/defaults.go[staging/src/k8s.io/kube-apiextensions-server/pkg/apis/apiextensions/v1alpha1/defaults.go][staging/src/k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1/defaults.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package v1beta1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func addDefaultingFuncs(scheme *runtime.Scheme) error {
0000000000000000000000000000000000000000;;		scheme.AddTypeDefaultingFunc(&CustomResourceDefinition{}, func(obj interface{}) { SetDefaults_CustomResourceDefinition(obj.(*CustomResourceDefinition)) })
0000000000000000000000000000000000000000;;		// TODO figure out why I can't seem to get my defaulter generated
0000000000000000000000000000000000000000;;		// return RegisterDefaults(scheme)
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetDefaults_CustomResourceDefinition(obj *CustomResourceDefinition) {
0000000000000000000000000000000000000000;;		SetDefaults_CustomResourceDefinitionSpec(&obj.Spec)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetDefaults_CustomResourceDefinitionSpec(obj *CustomResourceDefinitionSpec) {
0000000000000000000000000000000000000000;;		if len(obj.Scope) == 0 {
0000000000000000000000000000000000000000;;			obj.Scope = NamespaceScoped
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if len(obj.Names.Singular) == 0 {
0000000000000000000000000000000000000000;;			obj.Names.Singular = strings.ToLower(obj.Names.Kind)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if len(obj.Names.ListKind) == 0 && len(obj.Names.Kind) > 0 {
0000000000000000000000000000000000000000;;			obj.Names.ListKind = obj.Names.Kind + "List"
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

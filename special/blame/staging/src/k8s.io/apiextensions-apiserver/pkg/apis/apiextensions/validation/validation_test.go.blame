0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
75adca5fb7e89b235fb5dce3b6a0ea1e4a713214;staging/src/k8s.io/kube-apiextensions-server/pkg/apis/apiextensions/validation/validation_test.go[staging/src/k8s.io/kube-apiextensions-server/pkg/apis/apiextensions/validation/validation_test.go][staging/src/k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/validation/validation_test.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package validation
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions"
0000000000000000000000000000000000000000;;		metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/util/validation/field"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type validationMatch struct {
0000000000000000000000000000000000000000;;		path      *field.Path
0000000000000000000000000000000000000000;;		errorType field.ErrorType
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func required(path ...string) validationMatch {
0000000000000000000000000000000000000000;;		return validationMatch{path: field.NewPath(path[0], path[1:]...), errorType: field.ErrorTypeRequired}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	func invalid(path ...string) validationMatch {
0000000000000000000000000000000000000000;;		return validationMatch{path: field.NewPath(path[0], path[1:]...), errorType: field.ErrorTypeInvalid}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	func unsupported(path ...string) validationMatch {
0000000000000000000000000000000000000000;;		return validationMatch{path: field.NewPath(path[0], path[1:]...), errorType: field.ErrorTypeNotSupported}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	func immutable(path ...string) validationMatch {
0000000000000000000000000000000000000000;;		return validationMatch{path: field.NewPath(path[0], path[1:]...), errorType: field.ErrorTypeInvalid}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (v validationMatch) matches(err *field.Error) bool {
0000000000000000000000000000000000000000;;		return err.Type == v.errorType && err.Field == v.path.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestValidateCustomResourceDefinition(t *testing.T) {
0000000000000000000000000000000000000000;;		tests := []struct {
0000000000000000000000000000000000000000;;			name     string
0000000000000000000000000000000000000000;;			resource *apiextensions.CustomResourceDefinition
0000000000000000000000000000000000000000;;			errors   []validationMatch
0000000000000000000000000000000000000000;;		}{
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				name: "mismatched name",
0000000000000000000000000000000000000000;;				resource: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{Name: "plural.not.group.com"},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group: "group.com",
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural: "plural",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				errors: []validationMatch{
0000000000000000000000000000000000000000;;					invalid("metadata", "name"),
0000000000000000000000000000000000000000;;					required("spec", "version"),
0000000000000000000000000000000000000000;;					required("spec", "scope"),
0000000000000000000000000000000000000000;;					required("spec", "names", "singular"),
0000000000000000000000000000000000000000;;					required("spec", "names", "kind"),
0000000000000000000000000000000000000000;;					required("spec", "names", "listKind"),
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				name: "missing values",
0000000000000000000000000000000000000000;;				resource: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{Name: "plural.group.com"},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				errors: []validationMatch{
0000000000000000000000000000000000000000;;					invalid("metadata", "name"),
0000000000000000000000000000000000000000;;					required("spec", "group"),
0000000000000000000000000000000000000000;;					required("spec", "version"),
0000000000000000000000000000000000000000;;					required("spec", "scope"),
0000000000000000000000000000000000000000;;					required("spec", "names", "plural"),
0000000000000000000000000000000000000000;;					required("spec", "names", "singular"),
0000000000000000000000000000000000000000;;					required("spec", "names", "kind"),
0000000000000000000000000000000000000000;;					required("spec", "names", "listKind"),
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				name: "bad names 01",
0000000000000000000000000000000000000000;;				resource: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{Name: "plural.group"},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "group",
0000000000000000000000000000000000000000;;						Version: "ve()*rsion",
0000000000000000000000000000000000000000;;						Scope:   apiextensions.ResourceScope("foo"),
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "pl()*ural",
0000000000000000000000000000000000000000;;							Singular: "value()*a",
0000000000000000000000000000000000000000;;							Kind:     "value()*a",
0000000000000000000000000000000000000000;;							ListKind: "value()*a",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "pl()*ural",
0000000000000000000000000000000000000000;;							Singular: "value()*a",
0000000000000000000000000000000000000000;;							Kind:     "value()*a",
0000000000000000000000000000000000000000;;							ListKind: "value()*a",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				errors: []validationMatch{
0000000000000000000000000000000000000000;;					invalid("metadata", "name"),
0000000000000000000000000000000000000000;;					invalid("spec", "group"),
0000000000000000000000000000000000000000;;					invalid("spec", "version"),
0000000000000000000000000000000000000000;;					unsupported("spec", "scope"),
0000000000000000000000000000000000000000;;					invalid("spec", "names", "plural"),
0000000000000000000000000000000000000000;;					invalid("spec", "names", "singular"),
0000000000000000000000000000000000000000;;					invalid("spec", "names", "kind"),
0000000000000000000000000000000000000000;;					invalid("spec", "names", "listKind"), // invalid format
0000000000000000000000000000000000000000;;					invalid("spec", "names", "listKind"), // kind == listKind
0000000000000000000000000000000000000000;;					invalid("status", "acceptedNames", "plural"),
0000000000000000000000000000000000000000;;					invalid("status", "acceptedNames", "singular"),
0000000000000000000000000000000000000000;;					invalid("status", "acceptedNames", "kind"),
0000000000000000000000000000000000000000;;					invalid("status", "acceptedNames", "listKind"), // invalid format
0000000000000000000000000000000000000000;;					invalid("status", "acceptedNames", "listKind"), // kind == listKind
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				name: "bad names 02",
0000000000000000000000000000000000000000;;				resource: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{Name: "plural.group"},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "group.c(*&om",
0000000000000000000000000000000000000000;;						Version: "version",
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "matching",
0000000000000000000000000000000000000000;;							ListKind: "matching",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "matching",
0000000000000000000000000000000000000000;;							ListKind: "matching",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				errors: []validationMatch{
0000000000000000000000000000000000000000;;					invalid("metadata", "name"),
0000000000000000000000000000000000000000;;					invalid("spec", "group"),
0000000000000000000000000000000000000000;;					required("spec", "scope"),
0000000000000000000000000000000000000000;;					invalid("spec", "names", "listKind"),
0000000000000000000000000000000000000000;;					invalid("status", "acceptedNames", "listKind"),
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		for _, tc := range tests {
0000000000000000000000000000000000000000;;			errs := ValidateCustomResourceDefinition(tc.resource)
0000000000000000000000000000000000000000;;			seenErrs := make([]bool, len(errs))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			for _, expectedError := range tc.errors {
0000000000000000000000000000000000000000;;				found := false
0000000000000000000000000000000000000000;;				for i, err := range errs {
0000000000000000000000000000000000000000;;					if expectedError.matches(err) && !seenErrs[i] {
0000000000000000000000000000000000000000;;						found = true
0000000000000000000000000000000000000000;;						seenErrs[i] = true
0000000000000000000000000000000000000000;;						break
0000000000000000000000000000000000000000;;					}
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;				if !found {
0000000000000000000000000000000000000000;;					t.Errorf("%s: expected %v at %v, got %v", tc.name, expectedError.errorType, expectedError.path.String(), errs)
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			for i, seen := range seenErrs {
0000000000000000000000000000000000000000;;				if !seen {
0000000000000000000000000000000000000000;;					t.Errorf("%s: unexpected error: %v", tc.name, errs[i])
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestValidateCustomResourceDefinitionUpdate(t *testing.T) {
0000000000000000000000000000000000000000;;		tests := []struct {
0000000000000000000000000000000000000000;;			name     string
0000000000000000000000000000000000000000;;			old      *apiextensions.CustomResourceDefinition
0000000000000000000000000000000000000000;;			resource *apiextensions.CustomResourceDefinition
0000000000000000000000000000000000000000;;			errors   []validationMatch
0000000000000000000000000000000000000000;;		}{
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				name: "unchanged",
0000000000000000000000000000000000000000;;				old: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;						Name:            "plural.group.com",
0000000000000000000000000000000000000000;;						ResourceVersion: "42",
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "group.com",
0000000000000000000000000000000000000000;;						Version: "version",
0000000000000000000000000000000000000000;;						Scope:   apiextensions.ResourceScope("Cluster"),
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				resource: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;						Name:            "plural.group.com",
0000000000000000000000000000000000000000;;						ResourceVersion: "42",
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "group.com",
0000000000000000000000000000000000000000;;						Version: "version",
0000000000000000000000000000000000000000;;						Scope:   apiextensions.ResourceScope("Cluster"),
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				errors: []validationMatch{},
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				name: "unchanged-established",
0000000000000000000000000000000000000000;;				old: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;						Name:            "plural.group.com",
0000000000000000000000000000000000000000;;						ResourceVersion: "42",
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "group.com",
0000000000000000000000000000000000000000;;						Version: "version",
0000000000000000000000000000000000000000;;						Scope:   apiextensions.ResourceScope("Cluster"),
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;						Conditions: []apiextensions.CustomResourceDefinitionCondition{
0000000000000000000000000000000000000000;;							{Type: apiextensions.Established, Status: apiextensions.ConditionTrue},
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				resource: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;						Name:            "plural.group.com",
0000000000000000000000000000000000000000;;						ResourceVersion: "42",
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "group.com",
0000000000000000000000000000000000000000;;						Version: "version",
0000000000000000000000000000000000000000;;						Scope:   apiextensions.ResourceScope("Cluster"),
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				errors: []validationMatch{},
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				name: "changes",
0000000000000000000000000000000000000000;;				old: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;						Name:            "plural.group.com",
0000000000000000000000000000000000000000;;						ResourceVersion: "42",
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "group.com",
0000000000000000000000000000000000000000;;						Version: "version",
0000000000000000000000000000000000000000;;						Scope:   apiextensions.ResourceScope("Cluster"),
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;						Conditions: []apiextensions.CustomResourceDefinitionCondition{
0000000000000000000000000000000000000000;;							{Type: apiextensions.Established, Status: apiextensions.ConditionFalse},
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				resource: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;						Name:            "plural.group.com",
0000000000000000000000000000000000000000;;						ResourceVersion: "42",
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "abc.com",
0000000000000000000000000000000000000000;;						Version: "version2",
0000000000000000000000000000000000000000;;						Scope:   apiextensions.ResourceScope("Namespaced"),
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural2",
0000000000000000000000000000000000000000;;							Singular: "singular2",
0000000000000000000000000000000000000000;;							Kind:     "kind2",
0000000000000000000000000000000000000000;;							ListKind: "listkind2",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural2",
0000000000000000000000000000000000000000;;							Singular: "singular2",
0000000000000000000000000000000000000000;;							Kind:     "kind2",
0000000000000000000000000000000000000000;;							ListKind: "listkind2",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				errors: []validationMatch{
0000000000000000000000000000000000000000;;					immutable("spec", "group"),
0000000000000000000000000000000000000000;;					immutable("spec", "names", "plural"),
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				name: "changes-established",
0000000000000000000000000000000000000000;;				old: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;						Name:            "plural.group.com",
0000000000000000000000000000000000000000;;						ResourceVersion: "42",
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "group.com",
0000000000000000000000000000000000000000;;						Version: "version",
0000000000000000000000000000000000000000;;						Scope:   apiextensions.ResourceScope("Cluster"),
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural",
0000000000000000000000000000000000000000;;							Singular: "singular",
0000000000000000000000000000000000000000;;							Kind:     "kind",
0000000000000000000000000000000000000000;;							ListKind: "listkind",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;						Conditions: []apiextensions.CustomResourceDefinitionCondition{
0000000000000000000000000000000000000000;;							{Type: apiextensions.Established, Status: apiextensions.ConditionTrue},
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				resource: &apiextensions.CustomResourceDefinition{
0000000000000000000000000000000000000000;;					ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;						Name:            "plural.group.com",
0000000000000000000000000000000000000000;;						ResourceVersion: "42",
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Spec: apiextensions.CustomResourceDefinitionSpec{
0000000000000000000000000000000000000000;;						Group:   "abc.com",
0000000000000000000000000000000000000000;;						Version: "version2",
0000000000000000000000000000000000000000;;						Scope:   apiextensions.ResourceScope("Namespaced"),
0000000000000000000000000000000000000000;;						Names: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural2",
0000000000000000000000000000000000000000;;							Singular: "singular2",
0000000000000000000000000000000000000000;;							Kind:     "kind2",
0000000000000000000000000000000000000000;;							ListKind: "listkind2",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Status: apiextensions.CustomResourceDefinitionStatus{
0000000000000000000000000000000000000000;;						AcceptedNames: apiextensions.CustomResourceDefinitionNames{
0000000000000000000000000000000000000000;;							Plural:   "plural2",
0000000000000000000000000000000000000000;;							Singular: "singular2",
0000000000000000000000000000000000000000;;							Kind:     "kind2",
0000000000000000000000000000000000000000;;							ListKind: "listkind2",
0000000000000000000000000000000000000000;;						},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				errors: []validationMatch{
0000000000000000000000000000000000000000;;					immutable("spec", "group"),
0000000000000000000000000000000000000000;;					immutable("spec", "version"),
0000000000000000000000000000000000000000;;					immutable("spec", "scope"),
0000000000000000000000000000000000000000;;					immutable("spec", "names", "kind"),
0000000000000000000000000000000000000000;;					immutable("spec", "names", "plural"),
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		for _, tc := range tests {
0000000000000000000000000000000000000000;;			errs := ValidateCustomResourceDefinitionUpdate(tc.resource, tc.old)
0000000000000000000000000000000000000000;;			seenErrs := make([]bool, len(errs))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			for _, expectedError := range tc.errors {
0000000000000000000000000000000000000000;;				found := false
0000000000000000000000000000000000000000;;				for i, err := range errs {
0000000000000000000000000000000000000000;;					if expectedError.matches(err) && !seenErrs[i] {
0000000000000000000000000000000000000000;;						found = true
0000000000000000000000000000000000000000;;						seenErrs[i] = true
0000000000000000000000000000000000000000;;						break
0000000000000000000000000000000000000000;;					}
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;				if !found {
0000000000000000000000000000000000000000;;					t.Errorf("%s: expected %v at %v, got %v", tc.name, expectedError.errorType, expectedError.path.String(), errs)
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			for i, seen := range seenErrs {
0000000000000000000000000000000000000000;;				if !seen {
0000000000000000000000000000000000000000;;					t.Errorf("%s: unexpected error: %v", tc.name, errs[i])
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
370c8a012d3af175112c0699f18125b97ddeda6d;staging/src/k8s.io/client-go/examples/third-party-resources/main.go[staging/src/k8s.io/client-go/examples/third-party-resources/main.go][staging/src/k8s.io/apiextensions-apiserver/test/integration/client-go_test.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package integration
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"context"
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		apiv1 "k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apiextensions-apiserver/test/integration/testserver"
0000000000000000000000000000000000000000;;		metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		examplecrv1 "k8s.io/apiextensions-apiserver/examples/client-go/apis/cr/v1"
0000000000000000000000000000000000000000;;		exampleclient "k8s.io/apiextensions-apiserver/examples/client-go/client"
0000000000000000000000000000000000000000;;		examplecontroller "k8s.io/apiextensions-apiserver/examples/client-go/controller"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestClientGoCustomResourceExample(t *testing.T) {
0000000000000000000000000000000000000000;;		t.Logf("Creating apiextensions apiserver")
0000000000000000000000000000000000000000;;		config, err := testserver.DefaultServerConfig()
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("unexpected error: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		stopCh, apiExtensionClient, _, err := testserver.StartServer(config)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("unexpected error: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		defer close(stopCh)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		t.Logf("Creating CustomResourceDefinition")
0000000000000000000000000000000000000000;;		crd, err := exampleclient.CreateCustomResourceDefinition(apiExtensionClient)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("unexpected error creating the CustomResourceDefinition: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		defer apiExtensionClient.ApiextensionsV1beta1().CustomResourceDefinitions().Delete(crd.Name, nil)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		exampleClient, exampleScheme, err := exampleclient.NewClient(config.GenericConfig.LoopbackClientConfig)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("unexpected error: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		t.Logf("Starting a controller on instances of custom resource %q", examplecrv1.ExampleResourcePlural)
0000000000000000000000000000000000000000;;		controller := examplecontroller.ExampleController{
0000000000000000000000000000000000000000;;			ExampleClient: exampleClient,
0000000000000000000000000000000000000000;;			ExampleScheme: exampleScheme,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ctx, cancelFunc := context.WithCancel(context.Background())
0000000000000000000000000000000000000000;;		defer cancelFunc()
0000000000000000000000000000000000000000;;		go controller.Run(ctx)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Create an instance of our custom resource
0000000000000000000000000000000000000000;;		t.Logf("Creating custom resource instance")
0000000000000000000000000000000000000000;;		example := &examplecrv1.Example{
0000000000000000000000000000000000000000;;			ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;				Name: "example1",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			Spec: examplecrv1.ExampleSpec{
0000000000000000000000000000000000000000;;				Foo: "hello",
0000000000000000000000000000000000000000;;				Bar: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			Status: examplecrv1.ExampleStatus{
0000000000000000000000000000000000000000;;				State:   examplecrv1.ExampleStateCreated,
0000000000000000000000000000000000000000;;				Message: "Created, not processed yet",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var result examplecrv1.Example
0000000000000000000000000000000000000000;;		err = exampleClient.Post().
0000000000000000000000000000000000000000;;			Resource(examplecrv1.ExampleResourcePlural).
0000000000000000000000000000000000000000;;			Namespace(apiv1.NamespaceDefault).
0000000000000000000000000000000000000000;;			Body(example).
0000000000000000000000000000000000000000;;			Do().Into(&result)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("Failed to create an instance of the custom resource: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		t.Logf("Waiting instance to be processed by the controller")
0000000000000000000000000000000000000000;;		if err := exampleclient.WaitForExampleInstanceProcessed(exampleClient, "example1"); err != nil {
0000000000000000000000000000000000000000;;			t.Fatalf("Instance was not processed correctly: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		t.Logf("Instance is processed")
0000000000000000000000000000000000000000;;	}

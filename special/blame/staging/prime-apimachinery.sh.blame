0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/..
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/hack/lib/init.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::golang::setup_env
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	dir=$(mktemp -d "${TMPDIR:-/tmp/}$(basename 0).XXXXXXXXXXXX")
0000000000000000000000000000000000000000;;	echo ${dir}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo k8s.io/kubernetes/pkg/apimachinery/registered > ${dir}/packages.txt
0000000000000000000000000000000000000000;;	echo k8s.io/kubernetes/pkg/runtime/serializer >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	echo k8s.io/kubernetes/pkg/runtime/serializer/yaml >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	echo k8s.io/kubernetes/pkg/runtime/serializer/streaming >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	echo k8s.io/kubernetes/pkg/runtime/serializer/recognizer/testing >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	go list -f {{.Deps}} k8s.io/kubernetes/pkg/apimachinery/registered | sed -e 's/ /\n/g' - | grep k8s.io | grep -v vendor >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	go list -f {{.Deps}} k8s.io/kubernetes/pkg/runtime/serializer | sed -e 's/ /\n/g' - | grep k8s.io | grep -v vendor >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	go list -f {{.Deps}} k8s.io/kubernetes/pkg/runtime/serializer/yaml | sed -e 's/ /\n/g' - | grep k8s.io | grep -v vendor >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	go list -f {{.Deps}} k8s.io/kubernetes/pkg/runtime/serializer/streaming | sed -e 's/ /\n/g' - | grep k8s.io | grep -v vendor >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	# used by tests
0000000000000000000000000000000000000000;;	echo k8s.io/kubernetes/pkg/util/diff >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	go list -f {{.Deps}} k8s.io/kubernetes/pkg/util/diff | sed -e 's/ /\n/g' - | grep k8s.io | grep -v vendor >> ${dir}/packages.txt
0000000000000000000000000000000000000000;;	LC_ALL=C sort -u -o ${dir}/packages.txt ${dir}/packages.txt
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "moving these packages"
0000000000000000000000000000000000000000;;	cat ${dir}/packages.txt
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# copy all the packages over
0000000000000000000000000000000000000000;;	while read package; do
0000000000000000000000000000000000000000;;		unprefix_package=$(echo ${package} | sed 's|k8s.io/kubernetes/||g')
0000000000000000000000000000000000000000;;		mkdir -p ${KUBE_ROOT}/staging/src/k8s.io/apimachinery/${unprefix_package}
0000000000000000000000000000000000000000;;		cp ${KUBE_ROOT}/${unprefix_package}/* ${KUBE_ROOT}/staging/src/k8s.io/apimachinery/${unprefix_package} || true
0000000000000000000000000000000000000000;;	done <${dir}/packages.txt
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# need to remove the bazel files or bazel fails when this moves into vendor
0000000000000000000000000000000000000000;;	find ${KUBE_ROOT}/staging/src/k8s.io/apimachinery -name BUILD | xargs rm
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# need to rewrite all the package imports for k8s.io/kuberentes to k8s.io/apimachinery
0000000000000000000000000000000000000000;;	find ${KUBE_ROOT}/staging/src/k8s.io/apimachinery -name "*.go" | xargs sed -i 's|k8s.io/kubernetes|k8s.io/apimachinery|g'
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# need to rewrite all the package imports for these packages in the main repo to use the vendored copy
0000000000000000000000000000000000000000;;	while read package; do
0000000000000000000000000000000000000000;;		echo "rewriting import for ${package}"
0000000000000000000000000000000000000000;;		new_package=$(echo ${package} | sed 's|k8s.io/kubernetes|k8s.io/apimachinery|g')
0000000000000000000000000000000000000000;;		find ${KUBE_ROOT}/cmd ${KUBE_ROOT}/examples ${KUBE_ROOT}/federation ${KUBE_ROOT}/pkg ${KUBE_ROOT}/plugin ${KUBE_ROOT}/test -name "*.go" | xargs sed -i "s|${package}\"|${new_package}\"|g"
0000000000000000000000000000000000000000;;	done <${dir}/packages.txt
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# we don't want to rewrite imports for the packages we're modifying.  So check those back out, but only the files directly in that directory, not subdirs
0000000000000000000000000000000000000000;;	# also, add .readonly files to each folder we moved
0000000000000000000000000000000000000000;;	while read package; do
0000000000000000000000000000000000000000;;		unprefix_package=$(echo ${package} | sed 's|k8s.io/kubernetes/||g')
0000000000000000000000000000000000000000;;		find ${unprefix_package} -type f -maxdepth 1 | xargs git checkout
0000000000000000000000000000000000000000;;		touch ${unprefix_package}/.readonly
0000000000000000000000000000000000000000;;	done <${dir}/packages.txt
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# this file generates something or other, but we don't want to accidentally have it generate into an apimachinery package
0000000000000000000000000000000000000000;;	git checkout cmd/libs/go2idl/set-gen/main.go
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# now run gofmt to get the sorting right
0000000000000000000000000000000000000000;;	echo "running gofmt"
0000000000000000000000000000000000000000;;	gofmt -s -w ${KUBE_ROOT}/cmd ${KUBE_ROOT}/examples ${KUBE_ROOT}/federation ${KUBE_ROOT}/pkg ${KUBE_ROOT}/plugin ${KUBE_ROOT}/test 
0000000000000000000000000000000000000000;;	

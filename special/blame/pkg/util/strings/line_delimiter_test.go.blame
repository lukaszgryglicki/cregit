0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
0bbfc71b554d7074895a30e4a66a85d9d36fa378;pkg/util/line_delimiter_test.go[pkg/util/line_delimiter_test.go][pkg/util/strings/line_delimiter_test.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package strings
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Example_trailingNewline() {
0000000000000000000000000000000000000000;;		ld := NewLineDelimiter(os.Stdout, "|")
0000000000000000000000000000000000000000;;		defer ld.Flush()
0000000000000000000000000000000000000000;;		fmt.Fprint(ld, "  Hello  \n  World  \n")
0000000000000000000000000000000000000000;;		// Output:
0000000000000000000000000000000000000000;;		// |  Hello  |
0000000000000000000000000000000000000000;;		// |  World  |
0000000000000000000000000000000000000000;;		// ||
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	func Example_noTrailingNewline() {
0000000000000000000000000000000000000000;;		ld := NewLineDelimiter(os.Stdout, "|")
0000000000000000000000000000000000000000;;		defer ld.Flush()
0000000000000000000000000000000000000000;;		fmt.Fprint(ld, "  Hello  \n  World  ")
0000000000000000000000000000000000000000;;		// Output:
0000000000000000000000000000000000000000;;		// |  Hello  |
0000000000000000000000000000000000000000;;		// |  World  |
0000000000000000000000000000000000000000;;	}

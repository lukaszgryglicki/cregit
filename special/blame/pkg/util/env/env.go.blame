0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
186e1f5ad9bb8d686dbd400aba6a43b0f1ad5066;pkg/util/env.go[pkg/util/env.go][pkg/util/env/env.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package env
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"strconv"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetEnvAsStringOrFallback(key, defaultValue string) string {
0000000000000000000000000000000000000000;;		if v := os.Getenv(key); v != "" {
0000000000000000000000000000000000000000;;			return v
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return defaultValue
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetEnvAsIntOrFallback(key string, defaultValue int) (int, error) {
0000000000000000000000000000000000000000;;		if v := os.Getenv(key); v != "" {
0000000000000000000000000000000000000000;;			value, err := strconv.Atoi(v)
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				return defaultValue, err
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			return value, nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return defaultValue, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetEnvAsFloat64OrFallback(key string, defaultValue float64) (float64, error) {
0000000000000000000000000000000000000000;;		if v := os.Getenv(key); v != "" {
0000000000000000000000000000000000000000;;			value, err := strconv.ParseFloat(v, 64)
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				return defaultValue, err
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			return value, nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return defaultValue, nil
0000000000000000000000000000000000000000;;	}

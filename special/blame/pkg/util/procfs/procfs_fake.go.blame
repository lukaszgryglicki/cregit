0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
fac416a30a84b2bc2cbb41881ca3672da7ee6e7d;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package procfs
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FakeProcFS struct{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewFakeProcFS() ProcFSInterface {
0000000000000000000000000000000000000000;;		return &FakeProcFS{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GetFullContainerName gets the container name given the root process id of the container.
0000000000000000000000000000000000000000;;	// E.g. if the devices cgroup for the container is stored in /sys/fs/cgroup/devices/docker/nginx,
0000000000000000000000000000000000000000;;	// return docker/nginx. Assumes that the process is part of exactly one cgroup hierarchy.
0000000000000000000000000000000000000000;;	func (fakePfs *FakeProcFS) GetFullContainerName(pid int) (string, error) {
0000000000000000000000000000000000000000;;		return "", nil
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
550df90b0dfa6edde5ce972d9c9d21d156911343;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package volume
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var _ MetricsProvider = &MetricsNil{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// MetricsNil represents a MetricsProvider that does not support returning
0000000000000000000000000000000000000000;;	// Metrics.  It serves as a placeholder for Volumes that do not yet support
0000000000000000000000000000000000000000;;	// metrics.
0000000000000000000000000000000000000000;;	type MetricsNil struct{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GetMetrics returns an empty Metrics and an error.
0000000000000000000000000000000000000000;;	// See MetricsProvider.GetMetrics
0000000000000000000000000000000000000000;;	func (*MetricsNil) GetMetrics() (*Metrics, error) {
0000000000000000000000000000000000000000;;		return &Metrics{}, NewNotSupportedError()
0000000000000000000000000000000000000000;;	}

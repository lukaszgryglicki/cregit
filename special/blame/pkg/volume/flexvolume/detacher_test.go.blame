0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
d39110bb2b28931dd0cbaf34c6c9b8f568dc9e56;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package flexvolume
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestDetach(t *testing.T) {
0000000000000000000000000000000000000000;;		plugin, _ := testPlugin()
0000000000000000000000000000000000000000;;		plugin.runner = fakeRunner(
0000000000000000000000000000000000000000;;			assertDriverCall(t, notSupportedOutput(), detachCmd,
0000000000000000000000000000000000000000;;				"sdx", "localhost"),
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		d, _ := plugin.NewDetacher()
0000000000000000000000000000000000000000;;		d.Detach("sdx", "localhost")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestUnmountDevice(t *testing.T) {
0000000000000000000000000000000000000000;;		plugin, rootDir := testPlugin()
0000000000000000000000000000000000000000;;		plugin.runner = fakeRunner(
0000000000000000000000000000000000000000;;			assertDriverCall(t, notSupportedOutput(), unmountDeviceCmd,
0000000000000000000000000000000000000000;;				rootDir+"/mount-dir"),
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		d, _ := plugin.NewDetacher()
0000000000000000000000000000000000000000;;		d.UnmountDevice(rootDir + "/mount-dir")
0000000000000000000000000000000000000000;;	}

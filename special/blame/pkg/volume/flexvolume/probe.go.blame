0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
d39110bb2b28931dd0cbaf34c6c9b8f568dc9e56;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package flexvolume
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io/ioutil"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/volume"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// This is the primary entrypoint for volume plugins.
0000000000000000000000000000000000000000;;	func ProbeVolumePlugins(pluginDir string) []volume.VolumePlugin {
0000000000000000000000000000000000000000;;		plugins := []volume.VolumePlugin{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		files, _ := ioutil.ReadDir(pluginDir)
0000000000000000000000000000000000000000;;		for _, f := range files {
0000000000000000000000000000000000000000;;			// only directories are counted as plugins
0000000000000000000000000000000000000000;;			// and pluginDir/dirname/dirname should be an executable
0000000000000000000000000000000000000000;;			// unless dirname contains '~' for escaping namespace
0000000000000000000000000000000000000000;;			// e.g. dirname = vendor~cifs
0000000000000000000000000000000000000000;;			// then, executable will be pluginDir/dirname/cifs
0000000000000000000000000000000000000000;;			if f.IsDir() {
0000000000000000000000000000000000000000;;				plugin, err := NewFlexVolumePlugin(pluginDir, f.Name())
0000000000000000000000000000000000000000;;				if err != nil {
0000000000000000000000000000000000000000;;					continue
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;				plugins = append(plugins, plugin)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return plugins
0000000000000000000000000000000000000000;;	}

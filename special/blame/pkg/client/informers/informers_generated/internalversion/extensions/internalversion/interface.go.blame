0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
90e753b7d893977fcb7246ab3277eaab11726cf4;pkg/client/informers/informers_generated/extensions/internalversion/interface.go[pkg/client/informers/informers_generated/extensions/internalversion/interface.go][pkg/client/informers/informers_generated/internalversion/extensions/internalversion/interface.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// This file was automatically generated by informer-gen
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package internalversion
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		internalinterfaces "k8s.io/kubernetes/pkg/client/informers/informers_generated/internalversion/internalinterfaces"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Interface provides access to all the informers in this group version.
0000000000000000000000000000000000000000;;	type Interface interface {
0000000000000000000000000000000000000000;;		// DaemonSets returns a DaemonSetInformer.
0000000000000000000000000000000000000000;;		DaemonSets() DaemonSetInformer
0000000000000000000000000000000000000000;;		// Deployments returns a DeploymentInformer.
0000000000000000000000000000000000000000;;		Deployments() DeploymentInformer
0000000000000000000000000000000000000000;;		// Ingresses returns a IngressInformer.
0000000000000000000000000000000000000000;;		Ingresses() IngressInformer
0000000000000000000000000000000000000000;;		// NetworkPolicies returns a NetworkPolicyInformer.
0000000000000000000000000000000000000000;;		NetworkPolicies() NetworkPolicyInformer
0000000000000000000000000000000000000000;;		// PodSecurityPolicies returns a PodSecurityPolicyInformer.
0000000000000000000000000000000000000000;;		PodSecurityPolicies() PodSecurityPolicyInformer
0000000000000000000000000000000000000000;;		// ReplicaSets returns a ReplicaSetInformer.
0000000000000000000000000000000000000000;;		ReplicaSets() ReplicaSetInformer
0000000000000000000000000000000000000000;;		// ThirdPartyResources returns a ThirdPartyResourceInformer.
0000000000000000000000000000000000000000;;		ThirdPartyResources() ThirdPartyResourceInformer
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type version struct {
0000000000000000000000000000000000000000;;		internalinterfaces.SharedInformerFactory
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// New returns a new Interface.
0000000000000000000000000000000000000000;;	func New(f internalinterfaces.SharedInformerFactory) Interface {
0000000000000000000000000000000000000000;;		return &version{f}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DaemonSets returns a DaemonSetInformer.
0000000000000000000000000000000000000000;;	func (v *version) DaemonSets() DaemonSetInformer {
0000000000000000000000000000000000000000;;		return &daemonSetInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deployments returns a DeploymentInformer.
0000000000000000000000000000000000000000;;	func (v *version) Deployments() DeploymentInformer {
0000000000000000000000000000000000000000;;		return &deploymentInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Ingresses returns a IngressInformer.
0000000000000000000000000000000000000000;;	func (v *version) Ingresses() IngressInformer {
0000000000000000000000000000000000000000;;		return &ingressInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NetworkPolicies returns a NetworkPolicyInformer.
0000000000000000000000000000000000000000;;	func (v *version) NetworkPolicies() NetworkPolicyInformer {
0000000000000000000000000000000000000000;;		return &networkPolicyInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PodSecurityPolicies returns a PodSecurityPolicyInformer.
0000000000000000000000000000000000000000;;	func (v *version) PodSecurityPolicies() PodSecurityPolicyInformer {
0000000000000000000000000000000000000000;;		return &podSecurityPolicyInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ReplicaSets returns a ReplicaSetInformer.
0000000000000000000000000000000000000000;;	func (v *version) ReplicaSets() ReplicaSetInformer {
0000000000000000000000000000000000000000;;		return &replicaSetInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ThirdPartyResources returns a ThirdPartyResourceInformer.
0000000000000000000000000000000000000000;;	func (v *version) ThirdPartyResources() ThirdPartyResourceInformer {
0000000000000000000000000000000000000000;;		return &thirdPartyResourceInformer{factory: v.SharedInformerFactory}
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
926bf0073e59b4fbdd0f4b997c38d8a24025fbed;pkg/client/clientset_generated/release_1_5/clientset.go[pkg/client/clientset_generated/release_1_5/clientset.go][pkg/client/clientset_generated/clientset/clientset.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package clientset
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		glog "github.com/golang/glog"
0000000000000000000000000000000000000000;;		discovery "k8s.io/client-go/discovery"
0000000000000000000000000000000000000000;;		rest "k8s.io/client-go/rest"
0000000000000000000000000000000000000000;;		flowcontrol "k8s.io/client-go/util/flowcontrol"
0000000000000000000000000000000000000000;;		admissionregistrationv1alpha1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/admissionregistration/v1alpha1"
0000000000000000000000000000000000000000;;		appsv1beta1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/apps/v1beta1"
0000000000000000000000000000000000000000;;		authenticationv1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/authentication/v1"
0000000000000000000000000000000000000000;;		authenticationv1beta1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/authentication/v1beta1"
0000000000000000000000000000000000000000;;		authorizationv1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/authorization/v1"
0000000000000000000000000000000000000000;;		authorizationv1beta1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/authorization/v1beta1"
0000000000000000000000000000000000000000;;		autoscalingv1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/autoscaling/v1"
0000000000000000000000000000000000000000;;		autoscalingv2alpha1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/autoscaling/v2alpha1"
0000000000000000000000000000000000000000;;		batchv1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/batch/v1"
0000000000000000000000000000000000000000;;		batchv2alpha1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/batch/v2alpha1"
0000000000000000000000000000000000000000;;		certificatesv1beta1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/certificates/v1beta1"
0000000000000000000000000000000000000000;;		corev1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/core/v1"
0000000000000000000000000000000000000000;;		extensionsv1beta1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/extensions/v1beta1"
0000000000000000000000000000000000000000;;		networkingv1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/networking/v1"
0000000000000000000000000000000000000000;;		policyv1beta1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/policy/v1beta1"
0000000000000000000000000000000000000000;;		rbacv1alpha1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/rbac/v1alpha1"
0000000000000000000000000000000000000000;;		rbacv1beta1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/rbac/v1beta1"
0000000000000000000000000000000000000000;;		settingsv1alpha1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/settings/v1alpha1"
0000000000000000000000000000000000000000;;		storagev1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/storage/v1"
0000000000000000000000000000000000000000;;		storagev1beta1 "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/storage/v1beta1"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Interface interface {
0000000000000000000000000000000000000000;;		Discovery() discovery.DiscoveryInterface
0000000000000000000000000000000000000000;;		AdmissionregistrationV1alpha1() admissionregistrationv1alpha1.AdmissionregistrationV1alpha1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Admissionregistration() admissionregistrationv1alpha1.AdmissionregistrationV1alpha1Interface
0000000000000000000000000000000000000000;;		AppsV1beta1() appsv1beta1.AppsV1beta1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Apps() appsv1beta1.AppsV1beta1Interface
0000000000000000000000000000000000000000;;		AuthenticationV1() authenticationv1.AuthenticationV1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Authentication() authenticationv1.AuthenticationV1Interface
0000000000000000000000000000000000000000;;		AuthenticationV1beta1() authenticationv1beta1.AuthenticationV1beta1Interface
0000000000000000000000000000000000000000;;		AuthorizationV1() authorizationv1.AuthorizationV1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Authorization() authorizationv1.AuthorizationV1Interface
0000000000000000000000000000000000000000;;		AuthorizationV1beta1() authorizationv1beta1.AuthorizationV1beta1Interface
0000000000000000000000000000000000000000;;		AutoscalingV1() autoscalingv1.AutoscalingV1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Autoscaling() autoscalingv1.AutoscalingV1Interface
0000000000000000000000000000000000000000;;		AutoscalingV2alpha1() autoscalingv2alpha1.AutoscalingV2alpha1Interface
0000000000000000000000000000000000000000;;		BatchV1() batchv1.BatchV1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Batch() batchv1.BatchV1Interface
0000000000000000000000000000000000000000;;		BatchV2alpha1() batchv2alpha1.BatchV2alpha1Interface
0000000000000000000000000000000000000000;;		CertificatesV1beta1() certificatesv1beta1.CertificatesV1beta1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Certificates() certificatesv1beta1.CertificatesV1beta1Interface
0000000000000000000000000000000000000000;;		CoreV1() corev1.CoreV1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Core() corev1.CoreV1Interface
0000000000000000000000000000000000000000;;		ExtensionsV1beta1() extensionsv1beta1.ExtensionsV1beta1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Extensions() extensionsv1beta1.ExtensionsV1beta1Interface
0000000000000000000000000000000000000000;;		NetworkingV1() networkingv1.NetworkingV1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Networking() networkingv1.NetworkingV1Interface
0000000000000000000000000000000000000000;;		PolicyV1beta1() policyv1beta1.PolicyV1beta1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Policy() policyv1beta1.PolicyV1beta1Interface
0000000000000000000000000000000000000000;;		RbacV1beta1() rbacv1beta1.RbacV1beta1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Rbac() rbacv1beta1.RbacV1beta1Interface
0000000000000000000000000000000000000000;;		RbacV1alpha1() rbacv1alpha1.RbacV1alpha1Interface
0000000000000000000000000000000000000000;;		SettingsV1alpha1() settingsv1alpha1.SettingsV1alpha1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Settings() settingsv1alpha1.SettingsV1alpha1Interface
0000000000000000000000000000000000000000;;		StorageV1beta1() storagev1beta1.StorageV1beta1Interface
0000000000000000000000000000000000000000;;		StorageV1() storagev1.StorageV1Interface
0000000000000000000000000000000000000000;;		// Deprecated: please explicitly pick a version if possible.
0000000000000000000000000000000000000000;;		Storage() storagev1.StorageV1Interface
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Clientset contains the clients for groups. Each group has exactly one
0000000000000000000000000000000000000000;;	// version included in a Clientset.
0000000000000000000000000000000000000000;;	type Clientset struct {
0000000000000000000000000000000000000000;;		*discovery.DiscoveryClient
0000000000000000000000000000000000000000;;		*admissionregistrationv1alpha1.AdmissionregistrationV1alpha1Client
0000000000000000000000000000000000000000;;		*appsv1beta1.AppsV1beta1Client
0000000000000000000000000000000000000000;;		*authenticationv1.AuthenticationV1Client
0000000000000000000000000000000000000000;;		*authenticationv1beta1.AuthenticationV1beta1Client
0000000000000000000000000000000000000000;;		*authorizationv1.AuthorizationV1Client
0000000000000000000000000000000000000000;;		*authorizationv1beta1.AuthorizationV1beta1Client
0000000000000000000000000000000000000000;;		*autoscalingv1.AutoscalingV1Client
0000000000000000000000000000000000000000;;		*autoscalingv2alpha1.AutoscalingV2alpha1Client
0000000000000000000000000000000000000000;;		*batchv1.BatchV1Client
0000000000000000000000000000000000000000;;		*batchv2alpha1.BatchV2alpha1Client
0000000000000000000000000000000000000000;;		*certificatesv1beta1.CertificatesV1beta1Client
0000000000000000000000000000000000000000;;		*corev1.CoreV1Client
0000000000000000000000000000000000000000;;		*extensionsv1beta1.ExtensionsV1beta1Client
0000000000000000000000000000000000000000;;		*networkingv1.NetworkingV1Client
0000000000000000000000000000000000000000;;		*policyv1beta1.PolicyV1beta1Client
0000000000000000000000000000000000000000;;		*rbacv1beta1.RbacV1beta1Client
0000000000000000000000000000000000000000;;		*rbacv1alpha1.RbacV1alpha1Client
0000000000000000000000000000000000000000;;		*settingsv1alpha1.SettingsV1alpha1Client
0000000000000000000000000000000000000000;;		*storagev1beta1.StorageV1beta1Client
0000000000000000000000000000000000000000;;		*storagev1.StorageV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AdmissionregistrationV1alpha1 retrieves the AdmissionregistrationV1alpha1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) AdmissionregistrationV1alpha1() admissionregistrationv1alpha1.AdmissionregistrationV1alpha1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AdmissionregistrationV1alpha1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Admissionregistration retrieves the default version of AdmissionregistrationClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Admissionregistration() admissionregistrationv1alpha1.AdmissionregistrationV1alpha1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AdmissionregistrationV1alpha1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AppsV1beta1 retrieves the AppsV1beta1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) AppsV1beta1() appsv1beta1.AppsV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AppsV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Apps retrieves the default version of AppsClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Apps() appsv1beta1.AppsV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AppsV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AuthenticationV1 retrieves the AuthenticationV1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) AuthenticationV1() authenticationv1.AuthenticationV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AuthenticationV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Authentication retrieves the default version of AuthenticationClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Authentication() authenticationv1.AuthenticationV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AuthenticationV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AuthenticationV1beta1 retrieves the AuthenticationV1beta1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) AuthenticationV1beta1() authenticationv1beta1.AuthenticationV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AuthenticationV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AuthorizationV1 retrieves the AuthorizationV1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) AuthorizationV1() authorizationv1.AuthorizationV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AuthorizationV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Authorization retrieves the default version of AuthorizationClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Authorization() authorizationv1.AuthorizationV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AuthorizationV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AuthorizationV1beta1 retrieves the AuthorizationV1beta1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) AuthorizationV1beta1() authorizationv1beta1.AuthorizationV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AuthorizationV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AutoscalingV1 retrieves the AutoscalingV1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) AutoscalingV1() autoscalingv1.AutoscalingV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AutoscalingV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Autoscaling retrieves the default version of AutoscalingClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Autoscaling() autoscalingv1.AutoscalingV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AutoscalingV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AutoscalingV2alpha1 retrieves the AutoscalingV2alpha1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) AutoscalingV2alpha1() autoscalingv2alpha1.AutoscalingV2alpha1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.AutoscalingV2alpha1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// BatchV1 retrieves the BatchV1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) BatchV1() batchv1.BatchV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.BatchV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Batch retrieves the default version of BatchClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Batch() batchv1.BatchV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.BatchV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// BatchV2alpha1 retrieves the BatchV2alpha1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) BatchV2alpha1() batchv2alpha1.BatchV2alpha1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.BatchV2alpha1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CertificatesV1beta1 retrieves the CertificatesV1beta1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) CertificatesV1beta1() certificatesv1beta1.CertificatesV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.CertificatesV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Certificates retrieves the default version of CertificatesClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Certificates() certificatesv1beta1.CertificatesV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.CertificatesV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CoreV1 retrieves the CoreV1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) CoreV1() corev1.CoreV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.CoreV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Core retrieves the default version of CoreClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Core() corev1.CoreV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.CoreV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ExtensionsV1beta1 retrieves the ExtensionsV1beta1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) ExtensionsV1beta1() extensionsv1beta1.ExtensionsV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.ExtensionsV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Extensions retrieves the default version of ExtensionsClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Extensions() extensionsv1beta1.ExtensionsV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.ExtensionsV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NetworkingV1 retrieves the NetworkingV1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) NetworkingV1() networkingv1.NetworkingV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.NetworkingV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Networking retrieves the default version of NetworkingClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Networking() networkingv1.NetworkingV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.NetworkingV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PolicyV1beta1 retrieves the PolicyV1beta1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) PolicyV1beta1() policyv1beta1.PolicyV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.PolicyV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Policy retrieves the default version of PolicyClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Policy() policyv1beta1.PolicyV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.PolicyV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RbacV1beta1 retrieves the RbacV1beta1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) RbacV1beta1() rbacv1beta1.RbacV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.RbacV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Rbac retrieves the default version of RbacClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Rbac() rbacv1beta1.RbacV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.RbacV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RbacV1alpha1 retrieves the RbacV1alpha1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) RbacV1alpha1() rbacv1alpha1.RbacV1alpha1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.RbacV1alpha1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SettingsV1alpha1 retrieves the SettingsV1alpha1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) SettingsV1alpha1() settingsv1alpha1.SettingsV1alpha1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.SettingsV1alpha1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Settings retrieves the default version of SettingsClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Settings() settingsv1alpha1.SettingsV1alpha1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.SettingsV1alpha1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StorageV1beta1 retrieves the StorageV1beta1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) StorageV1beta1() storagev1beta1.StorageV1beta1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.StorageV1beta1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StorageV1 retrieves the StorageV1Client
0000000000000000000000000000000000000000;;	func (c *Clientset) StorageV1() storagev1.StorageV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.StorageV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Deprecated: Storage retrieves the default version of StorageClient.
0000000000000000000000000000000000000000;;	// Please explicitly pick a version.
0000000000000000000000000000000000000000;;	func (c *Clientset) Storage() storagev1.StorageV1Interface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.StorageV1Client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Discovery retrieves the DiscoveryClient
0000000000000000000000000000000000000000;;	func (c *Clientset) Discovery() discovery.DiscoveryInterface {
0000000000000000000000000000000000000000;;		if c == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return c.DiscoveryClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewForConfig creates a new Clientset for the given config.
0000000000000000000000000000000000000000;;	func NewForConfig(c *rest.Config) (*Clientset, error) {
0000000000000000000000000000000000000000;;		configShallowCopy := *c
0000000000000000000000000000000000000000;;		if configShallowCopy.RateLimiter == nil && configShallowCopy.QPS > 0 {
0000000000000000000000000000000000000000;;			configShallowCopy.RateLimiter = flowcontrol.NewTokenBucketRateLimiter(configShallowCopy.QPS, configShallowCopy.Burst)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var cs Clientset
0000000000000000000000000000000000000000;;		var err error
0000000000000000000000000000000000000000;;		cs.AdmissionregistrationV1alpha1Client, err = admissionregistrationv1alpha1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.AppsV1beta1Client, err = appsv1beta1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.AuthenticationV1Client, err = authenticationv1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.AuthenticationV1beta1Client, err = authenticationv1beta1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.AuthorizationV1Client, err = authorizationv1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.AuthorizationV1beta1Client, err = authorizationv1beta1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.AutoscalingV1Client, err = autoscalingv1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.AutoscalingV2alpha1Client, err = autoscalingv2alpha1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.BatchV1Client, err = batchv1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.BatchV2alpha1Client, err = batchv2alpha1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.CertificatesV1beta1Client, err = certificatesv1beta1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.CoreV1Client, err = corev1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.ExtensionsV1beta1Client, err = extensionsv1beta1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.NetworkingV1Client, err = networkingv1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.PolicyV1beta1Client, err = policyv1beta1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.RbacV1beta1Client, err = rbacv1beta1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.RbacV1alpha1Client, err = rbacv1alpha1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.SettingsV1alpha1Client, err = settingsv1alpha1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.StorageV1beta1Client, err = storagev1beta1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		cs.StorageV1Client, err = storagev1.NewForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cs.DiscoveryClient, err = discovery.NewDiscoveryClientForConfig(&configShallowCopy)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			glog.Errorf("failed to create the DiscoveryClient: %v", err)
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return &cs, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewForConfigOrDie creates a new Clientset for the given config and
0000000000000000000000000000000000000000;;	// panics if there is an error in the config.
0000000000000000000000000000000000000000;;	func NewForConfigOrDie(c *rest.Config) *Clientset {
0000000000000000000000000000000000000000;;		var cs Clientset
0000000000000000000000000000000000000000;;		cs.AdmissionregistrationV1alpha1Client = admissionregistrationv1alpha1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.AppsV1beta1Client = appsv1beta1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.AuthenticationV1Client = authenticationv1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.AuthenticationV1beta1Client = authenticationv1beta1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.AuthorizationV1Client = authorizationv1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.AuthorizationV1beta1Client = authorizationv1beta1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.AutoscalingV1Client = autoscalingv1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.AutoscalingV2alpha1Client = autoscalingv2alpha1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.BatchV1Client = batchv1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.BatchV2alpha1Client = batchv2alpha1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.CertificatesV1beta1Client = certificatesv1beta1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.CoreV1Client = corev1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.ExtensionsV1beta1Client = extensionsv1beta1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.NetworkingV1Client = networkingv1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.PolicyV1beta1Client = policyv1beta1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.RbacV1beta1Client = rbacv1beta1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.RbacV1alpha1Client = rbacv1alpha1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.SettingsV1alpha1Client = settingsv1alpha1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.StorageV1beta1Client = storagev1beta1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;		cs.StorageV1Client = storagev1.NewForConfigOrDie(c)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cs.DiscoveryClient = discovery.NewDiscoveryClientForConfigOrDie(c)
0000000000000000000000000000000000000000;;		return &cs
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// New creates a new Clientset for the given RESTClient.
0000000000000000000000000000000000000000;;	func New(c rest.Interface) *Clientset {
0000000000000000000000000000000000000000;;		var cs Clientset
0000000000000000000000000000000000000000;;		cs.AdmissionregistrationV1alpha1Client = admissionregistrationv1alpha1.New(c)
0000000000000000000000000000000000000000;;		cs.AppsV1beta1Client = appsv1beta1.New(c)
0000000000000000000000000000000000000000;;		cs.AuthenticationV1Client = authenticationv1.New(c)
0000000000000000000000000000000000000000;;		cs.AuthenticationV1beta1Client = authenticationv1beta1.New(c)
0000000000000000000000000000000000000000;;		cs.AuthorizationV1Client = authorizationv1.New(c)
0000000000000000000000000000000000000000;;		cs.AuthorizationV1beta1Client = authorizationv1beta1.New(c)
0000000000000000000000000000000000000000;;		cs.AutoscalingV1Client = autoscalingv1.New(c)
0000000000000000000000000000000000000000;;		cs.AutoscalingV2alpha1Client = autoscalingv2alpha1.New(c)
0000000000000000000000000000000000000000;;		cs.BatchV1Client = batchv1.New(c)
0000000000000000000000000000000000000000;;		cs.BatchV2alpha1Client = batchv2alpha1.New(c)
0000000000000000000000000000000000000000;;		cs.CertificatesV1beta1Client = certificatesv1beta1.New(c)
0000000000000000000000000000000000000000;;		cs.CoreV1Client = corev1.New(c)
0000000000000000000000000000000000000000;;		cs.ExtensionsV1beta1Client = extensionsv1beta1.New(c)
0000000000000000000000000000000000000000;;		cs.NetworkingV1Client = networkingv1.New(c)
0000000000000000000000000000000000000000;;		cs.PolicyV1beta1Client = policyv1beta1.New(c)
0000000000000000000000000000000000000000;;		cs.RbacV1beta1Client = rbacv1beta1.New(c)
0000000000000000000000000000000000000000;;		cs.RbacV1alpha1Client = rbacv1alpha1.New(c)
0000000000000000000000000000000000000000;;		cs.SettingsV1alpha1Client = settingsv1alpha1.New(c)
0000000000000000000000000000000000000000;;		cs.StorageV1beta1Client = storagev1beta1.New(c)
0000000000000000000000000000000000000000;;		cs.StorageV1Client = storagev1.New(c)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cs.DiscoveryClient = discovery.NewDiscoveryClient(c)
0000000000000000000000000000000000000000;;		return &cs
0000000000000000000000000000000000000000;;	}

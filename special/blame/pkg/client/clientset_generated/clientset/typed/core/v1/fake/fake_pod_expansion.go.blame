0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
926bf0073e59b4fbdd0f4b997c38d8a24025fbed;pkg/client/clientset_generated/release_1_5/typed/core/v1/fake/fake_pod_expansion.go[pkg/client/clientset_generated/release_1_5/typed/core/v1/fake/fake_pod_expansion.go][pkg/client/clientset_generated/clientset/typed/core/v1/fake/fake_pod_expansion.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package fake
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;		policy "k8s.io/api/policy/v1beta1"
0000000000000000000000000000000000000000;;		restclient "k8s.io/client-go/rest"
0000000000000000000000000000000000000000;;		core "k8s.io/client-go/testing"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FakePods) Bind(binding *v1.Binding) error {
0000000000000000000000000000000000000000;;		action := core.CreateActionImpl{}
0000000000000000000000000000000000000000;;		action.Verb = "create"
0000000000000000000000000000000000000000;;		action.Resource = podsResource
0000000000000000000000000000000000000000;;		action.Subresource = "bindings"
0000000000000000000000000000000000000000;;		action.Object = binding
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		_, err := c.Fake.Invokes(action, binding)
0000000000000000000000000000000000000000;;		return err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FakePods) GetLogs(name string, opts *v1.PodLogOptions) *restclient.Request {
0000000000000000000000000000000000000000;;		action := core.GenericActionImpl{}
0000000000000000000000000000000000000000;;		action.Verb = "get"
0000000000000000000000000000000000000000;;		action.Namespace = c.ns
0000000000000000000000000000000000000000;;		action.Resource = podsResource
0000000000000000000000000000000000000000;;		action.Subresource = "logs"
0000000000000000000000000000000000000000;;		action.Value = opts
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		_, _ = c.Fake.Invokes(action, &v1.Pod{})
0000000000000000000000000000000000000000;;		return &restclient.Request{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FakePods) Evict(eviction *policy.Eviction) error {
0000000000000000000000000000000000000000;;		action := core.CreateActionImpl{}
0000000000000000000000000000000000000000;;		action.Verb = "create"
0000000000000000000000000000000000000000;;		action.Resource = podsResource
0000000000000000000000000000000000000000;;		action.Subresource = "eviction"
0000000000000000000000000000000000000000;;		action.Object = eviction
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		_, err := c.Fake.Invokes(action, eviction)
0000000000000000000000000000000000000000;;		return err
0000000000000000000000000000000000000000;;	}

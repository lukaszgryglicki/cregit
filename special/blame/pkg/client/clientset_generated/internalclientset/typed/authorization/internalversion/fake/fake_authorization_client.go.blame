0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
e54cdac135d7cdc4672ee79b1a3d477ba80d9992;pkg/client/clientset_generated/internalclientset/typed/authorization/unversioned/fake/fake_authorization_client.go[pkg/client/clientset_generated/internalclientset/typed/authorization/unversioned/fake/fake_authorization_client.go][pkg/client/clientset_generated/internalclientset/typed/authorization/internalversion/fake/fake_authorization_client.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package fake
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		rest "k8s.io/client-go/rest"
0000000000000000000000000000000000000000;;		testing "k8s.io/client-go/testing"
0000000000000000000000000000000000000000;;		internalversion "k8s.io/kubernetes/pkg/client/clientset_generated/internalclientset/typed/authorization/internalversion"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FakeAuthorization struct {
0000000000000000000000000000000000000000;;		*testing.Fake
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FakeAuthorization) LocalSubjectAccessReviews(namespace string) internalversion.LocalSubjectAccessReviewInterface {
0000000000000000000000000000000000000000;;		return &FakeLocalSubjectAccessReviews{c, namespace}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FakeAuthorization) SelfSubjectAccessReviews() internalversion.SelfSubjectAccessReviewInterface {
0000000000000000000000000000000000000000;;		return &FakeSelfSubjectAccessReviews{c}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FakeAuthorization) SubjectAccessReviews() internalversion.SubjectAccessReviewInterface {
0000000000000000000000000000000000000000;;		return &FakeSubjectAccessReviews{c}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RESTClient returns a RESTClient that is used to communicate
0000000000000000000000000000000000000000;;	// with API server by this client implementation.
0000000000000000000000000000000000000000;;	func (c *FakeAuthorization) RESTClient() rest.Interface {
0000000000000000000000000000000000000000;;		var ret *rest.RESTClient
0000000000000000000000000000000000000000;;		return ret
0000000000000000000000000000000000000000;;	}

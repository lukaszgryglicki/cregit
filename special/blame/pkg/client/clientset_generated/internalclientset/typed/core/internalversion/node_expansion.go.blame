0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
ec4c5c9e1a728156435984aa0be9e1a7cb561c83;pkg/client/clientset_generated/internalclientset/typed/core/unversioned/node_expansion.go[pkg/client/clientset_generated/internalclientset/typed/core/unversioned/node_expansion.go][pkg/client/clientset_generated/internalclientset/typed/core/internalversion/node_expansion.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package internalversion
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/types"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/api"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// The NodeExpansion interface allows manually adding extra methods to the NodeInterface.
0000000000000000000000000000000000000000;;	type NodeExpansion interface {
0000000000000000000000000000000000000000;;		// PatchStatus modifies the status of an existing node. It returns the copy
0000000000000000000000000000000000000000;;		// of the node that the server returns, or an error.
0000000000000000000000000000000000000000;;		PatchStatus(nodeName string, data []byte) (*api.Node, error)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PatchStatus modifies the status of an existing node. It returns the copy of
0000000000000000000000000000000000000000;;	// the node that the server returns, or an error.
0000000000000000000000000000000000000000;;	func (c *nodes) PatchStatus(nodeName string, data []byte) (*api.Node, error) {
0000000000000000000000000000000000000000;;		result := &api.Node{}
0000000000000000000000000000000000000000;;		err := c.client.Patch(types.StrategicMergePatchType).
0000000000000000000000000000000000000000;;			Resource("nodes").
0000000000000000000000000000000000000000;;			Name(nodeName).
0000000000000000000000000000000000000000;;			SubResource("status").
0000000000000000000000000000000000000000;;			Body(data).
0000000000000000000000000000000000000000;;			Do().
0000000000000000000000000000000000000000;;			Into(result)
0000000000000000000000000000000000000000;;		return result, err
0000000000000000000000000000000000000000;;	}

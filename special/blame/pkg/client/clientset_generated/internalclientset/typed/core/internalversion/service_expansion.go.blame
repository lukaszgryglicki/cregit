0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
a14a857b6054e63c7317a72ffb64c14bcbe12407;pkg/client/clientset_generated/internalclientset/typed/core/unversioned/service_expansion.go[pkg/client/clientset_generated/internalclientset/typed/core/unversioned/service_expansion.go][pkg/client/clientset_generated/internalclientset/typed/core/internalversion/service_expansion.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package internalversion
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/util/net"
0000000000000000000000000000000000000000;;		restclient "k8s.io/client-go/rest"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// The ServiceExpansion interface allows manually adding extra methods to the ServiceInterface.
0000000000000000000000000000000000000000;;	type ServiceExpansion interface {
0000000000000000000000000000000000000000;;		ProxyGet(scheme, name, port, path string, params map[string]string) restclient.ResponseWrapper
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ProxyGet returns a response of the service by calling it through the proxy.
0000000000000000000000000000000000000000;;	func (c *services) ProxyGet(scheme, name, port, path string, params map[string]string) restclient.ResponseWrapper {
0000000000000000000000000000000000000000;;		request := c.client.Get().
0000000000000000000000000000000000000000;;			Namespace(c.ns).
0000000000000000000000000000000000000000;;			Resource("services").
0000000000000000000000000000000000000000;;			SubResource("proxy").
0000000000000000000000000000000000000000;;			Name(net.JoinSchemeNamePort(scheme, name, port)).
0000000000000000000000000000000000000000;;			Suffix(path)
0000000000000000000000000000000000000000;;		for k, v := range params {
0000000000000000000000000000000000000000;;			request = request.Param(k, v)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return request
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
39d02038f881041063c5238e4772d58d45e4aaa1;pkg/client/clientset_generated/internalclientset/typed/certificates/unversioned/certificatesigningrequest_expansion.go[pkg/client/clientset_generated/internalclientset/typed/certificates/unversioned/certificatesigningrequest_expansion.go][pkg/client/clientset_generated/internalclientset/typed/certificates/internalversion/certificatesigningrequest_expansion.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package internalversion
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "k8s.io/kubernetes/pkg/apis/certificates"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CertificateSigningRequestExpansion interface {
0000000000000000000000000000000000000000;;		UpdateApproval(certificateSigningRequest *certificates.CertificateSigningRequest) (result *certificates.CertificateSigningRequest, err error)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *certificateSigningRequests) UpdateApproval(certificateSigningRequest *certificates.CertificateSigningRequest) (result *certificates.CertificateSigningRequest, err error) {
0000000000000000000000000000000000000000;;		result = &certificates.CertificateSigningRequest{}
0000000000000000000000000000000000000000;;		err = c.client.Put().
0000000000000000000000000000000000000000;;			Resource("certificatesigningrequests").
0000000000000000000000000000000000000000;;			Name(certificateSigningRequest.Name).
0000000000000000000000000000000000000000;;			Body(certificateSigningRequest).
0000000000000000000000000000000000000000;;			SubResource("approval").
0000000000000000000000000000000000000000;;			Do().
0000000000000000000000000000000000000000;;			Into(result)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}

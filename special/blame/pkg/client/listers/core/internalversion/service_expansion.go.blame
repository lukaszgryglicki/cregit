0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
144fc777f35284c6fed6527408eb4575da2b6064;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package internalversion
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/labels"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/api"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ServiceListerExpansion allows custom methods to be added to
0000000000000000000000000000000000000000;;	// ServiceLister.
0000000000000000000000000000000000000000;;	type ServiceListerExpansion interface {
0000000000000000000000000000000000000000;;		GetPodServices(pod *api.Pod) ([]*api.Service, error)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ServiceNamespaceListerExpansion allows custom methods to be added to
0000000000000000000000000000000000000000;;	// ServiceNamespaceLister.
0000000000000000000000000000000000000000;;	type ServiceNamespaceListerExpansion interface{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// TODO: Move this back to scheduler as a helper function that takes a Store,
0000000000000000000000000000000000000000;;	// rather than a method of ServiceLister.
0000000000000000000000000000000000000000;;	func (s *serviceLister) GetPodServices(pod *api.Pod) ([]*api.Service, error) {
0000000000000000000000000000000000000000;;		allServices, err := s.Services(pod.Namespace).List(labels.Everything())
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		var services []*api.Service
0000000000000000000000000000000000000000;;		for i := range allServices {
0000000000000000000000000000000000000000;;			service := allServices[i]
0000000000000000000000000000000000000000;;			if service.Spec.Selector == nil {
0000000000000000000000000000000000000000;;				// services with nil selectors match nothing, not everything.
0000000000000000000000000000000000000000;;				continue
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			selector := labels.Set(service.Spec.Selector).AsSelectorPreValidated()
0000000000000000000000000000000000000000;;			if selector.Matches(labels.Set(pod.Labels)) {
0000000000000000000000000000000000000000;;				services = append(services, service)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return services, nil
0000000000000000000000000000000000000000;;	}

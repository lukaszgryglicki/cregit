0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
1fe8aff2d6991a32f8b88f6bb53d3b39f39eebe0;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package endpoints
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"reflect"
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/davecgh/go-spew/spew"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/types"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/api"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func podRef(uid string) *api.ObjectReference {
0000000000000000000000000000000000000000;;		ref := api.ObjectReference{UID: types.UID(uid)}
0000000000000000000000000000000000000000;;		return &ref
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestPackSubsets(t *testing.T) {
0000000000000000000000000000000000000000;;		// The downside of table-driven tests is that some things have to live outside the table.
0000000000000000000000000000000000000000;;		fooObjRef := api.ObjectReference{Name: "foo"}
0000000000000000000000000000000000000000;;		barObjRef := api.ObjectReference{Name: "bar"}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		testCases := []struct {
0000000000000000000000000000000000000000;;			name   string
0000000000000000000000000000000000000000;;			given  []api.EndpointSubset
0000000000000000000000000000000000000000;;			expect []api.EndpointSubset
0000000000000000000000000000000000000000;;		}{
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				name:   "empty everything",
0000000000000000000000000000000000000000;;				given:  []api.EndpointSubset{{Addresses: []api.EndpointAddress{}, Ports: []api.EndpointPort{}}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name:   "empty addresses",
0000000000000000000000000000000000000000;;				given:  []api.EndpointSubset{{Addresses: []api.EndpointAddress{}, Ports: []api.EndpointPort{{Port: 111}}}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name:   "empty ports",
0000000000000000000000000000000000000000;;				given:  []api.EndpointSubset{{Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}}, Ports: []api.EndpointPort{}}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name:   "empty ports",
0000000000000000000000000000000000000000;;				given:  []api.EndpointSubset{{NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4"}}, Ports: []api.EndpointPort{}}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, one ip, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, one ip, one port (IPv6)",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "beef::1:2:3:4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "beef::1:2:3:4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, one notReady ip, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, one ip, one UID, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, one notReady ip, one UID, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, one ip, empty UID, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, one notReady ip, empty UID, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("")}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("")}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, two ips, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}, {IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}, {IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, two mixed ips, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses:         []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses:         []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, two duplicate ips, one port, notReady is covered by ready",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses:         []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, one ip, two ports",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}, {Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}, {Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, dup ips, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}, {IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, dup ips, one port (IPv6)",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "beef::1"}, {IP: "beef::1"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "beef::1"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, dup ips with target-refs, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4", TargetRef: &fooObjRef},
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4", TargetRef: &barObjRef},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Ports: []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: &fooObjRef}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, dup mixed ips with target-refs, one port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4", TargetRef: &fooObjRef},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4", TargetRef: &barObjRef},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Ports: []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					// finding the same address twice is considered an error on input, only the first address+port
0000000000000000000000000000000000000000;;					// reference is preserved
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: &fooObjRef}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "one set, one ip, dup ports",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}, {Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two sets, dup ip, dup port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two sets, dup mixed ip, dup port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two sets, dup ip, two ports",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}, {Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two sets, dup ip, dup uids, two ports",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}, {Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two sets, dup mixed ip, dup uids, two ports",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two sets, two ips, dup port",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}, {IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two set, dup ip, two uids, dup ports",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-2")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4", TargetRef: podRef("uid-1")},
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4", TargetRef: podRef("uid-2")},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Ports: []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two set, dup ip, with and without uid, dup ports",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-2")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4"},
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4", TargetRef: podRef("uid-2")},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Ports: []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two sets, two ips, two dup ip with uid, dup port, wrong order",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "5.6.7.8", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4"},
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4", TargetRef: podRef("uid-1")},
0000000000000000000000000000000000000000;;						{IP: "5.6.7.8"},
0000000000000000000000000000000000000000;;						{IP: "5.6.7.8", TargetRef: podRef("uid-1")},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Ports: []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two sets, two mixed ips, two dup ip with uid, dup port, wrong order, ends up with split addresses",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "5.6.7.8", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4", TargetRef: podRef("uid-1")}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{
0000000000000000000000000000000000000000;;						{IP: "5.6.7.8"},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4"},
0000000000000000000000000000000000000000;;						{IP: "1.2.3.4", TargetRef: podRef("uid-1")},
0000000000000000000000000000000000000000;;						{IP: "5.6.7.8", TargetRef: podRef("uid-1")},
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;					Ports: []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "two sets, two ips, two ports",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "5.6.7.8"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 222}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "four sets, three ips, three ports, jumbled",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.5"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 222}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.6"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.5"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 333}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}, {IP: "1.2.3.6"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.5"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 222}, {Port: 333}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			}, {
0000000000000000000000000000000000000000;;				name: "four sets, three mixed ips, three ports, jumbled",
0000000000000000000000000000000000000000;;				given: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.5"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 222}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.6"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.5"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 333}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;				expect: []api.EndpointSubset{{
0000000000000000000000000000000000000000;;					Addresses: []api.EndpointAddress{{IP: "1.2.3.4"}, {IP: "1.2.3.6"}},
0000000000000000000000000000000000000000;;					Ports:     []api.EndpointPort{{Port: 111}},
0000000000000000000000000000000000000000;;				}, {
0000000000000000000000000000000000000000;;					NotReadyAddresses: []api.EndpointAddress{{IP: "1.2.3.5"}},
0000000000000000000000000000000000000000;;					Ports:             []api.EndpointPort{{Port: 222}, {Port: 333}},
0000000000000000000000000000000000000000;;				}},
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		for _, tc := range testCases {
0000000000000000000000000000000000000000;;			result := RepackSubsets(tc.given)
0000000000000000000000000000000000000000;;			if !reflect.DeepEqual(result, SortSubsets(tc.expect)) {
0000000000000000000000000000000000000000;;				t.Errorf("case %q: expected %s, got %s", tc.name, spew.Sprintf("%#v", SortSubsets(tc.expect)), spew.Sprintf("%#v", result))
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

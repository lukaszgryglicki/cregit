0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
e33e184482a3f1355da5e07266f6a08a887ee08f;pkg/api/methods.go[pkg/api/methods.go][pkg/api/taint.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	//TODO: consider making these methods functions, because we don't want helper
0000000000000000000000000000000000000000;;	//functions in the k8s.io/api repo.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package api
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// MatchTaint checks if the taint matches taintToMatch. Taints are unique by key:effect,
0000000000000000000000000000000000000000;;	// if the two taints have same key:effect, regard as they match.
0000000000000000000000000000000000000000;;	func (t *Taint) MatchTaint(taintToMatch Taint) bool {
0000000000000000000000000000000000000000;;		return t.Key == taintToMatch.Key && t.Effect == taintToMatch.Effect
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// taint.ToString() converts taint struct to string in format key=value:effect or key:effect.
0000000000000000000000000000000000000000;;	func (t *Taint) ToString() string {
0000000000000000000000000000000000000000;;		if len(t.Value) == 0 {
0000000000000000000000000000000000000000;;			return fmt.Sprintf("%v:%v", t.Key, t.Effect)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return fmt.Sprintf("%v=%v:%v", t.Key, t.Value, t.Effect)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
a037c1cd4ed54ef71811886e8429f2fdb40a16b6;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package testing
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/api"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DeepEqualSafePodSpec returns a PodSpec which is ready to be used with apiequality.Semantic.DeepEqual
0000000000000000000000000000000000000000;;	func DeepEqualSafePodSpec() api.PodSpec {
0000000000000000000000000000000000000000;;		grace := int64(30)
0000000000000000000000000000000000000000;;		return api.PodSpec{
0000000000000000000000000000000000000000;;			RestartPolicy:                 api.RestartPolicyAlways,
0000000000000000000000000000000000000000;;			DNSPolicy:                     api.DNSClusterFirst,
0000000000000000000000000000000000000000;;			TerminationGracePeriodSeconds: &grace,
0000000000000000000000000000000000000000;;			SecurityContext:               &api.PodSecurityContext{},
0000000000000000000000000000000000000000;;			SchedulerName:                 api.DefaultSchedulerName,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// V1DeepEqualSafePodSpec returns a PodSpec which is ready to be used with apiequality.Semantic.DeepEqual
0000000000000000000000000000000000000000;;	func V1DeepEqualSafePodSpec() v1.PodSpec {
0000000000000000000000000000000000000000;;		grace := int64(30)
0000000000000000000000000000000000000000;;		return v1.PodSpec{
0000000000000000000000000000000000000000;;			RestartPolicy:                 v1.RestartPolicyAlways,
0000000000000000000000000000000000000000;;			DNSPolicy:                     v1.DNSClusterFirst,
0000000000000000000000000000000000000000;;			TerminationGracePeriodSeconds: &grace,
0000000000000000000000000000000000000000;;			SecurityContext:               &v1.PodSecurityContext{},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

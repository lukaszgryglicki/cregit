0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
53c86192e03e7cbc42a89240c8db0f597e2aed94;pkg/genericapiserver/services.go[pkg/genericapiserver/services.go][pkg/master/services.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package master
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"net"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/golang/glog"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/registry/core/service/ipallocator"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DefaultServiceIPRange takes a the serviceIPRange flag and returns the defaulted service ip range (if  needed),
0000000000000000000000000000000000000000;;	// api server service IP, and an error
0000000000000000000000000000000000000000;;	// TODO move this out of the genericapiserver package
0000000000000000000000000000000000000000;;	func DefaultServiceIPRange(passedServiceClusterIPRange net.IPNet) (net.IPNet, net.IP, error) {
0000000000000000000000000000000000000000;;		serviceClusterIPRange := passedServiceClusterIPRange
0000000000000000000000000000000000000000;;		if passedServiceClusterIPRange.IP == nil {
0000000000000000000000000000000000000000;;			defaultNet := "10.0.0.0/24"
0000000000000000000000000000000000000000;;			glog.Infof("Network range for service cluster IPs is unspecified. Defaulting to %v.", defaultNet)
0000000000000000000000000000000000000000;;			_, defaultServiceClusterIPRange, err := net.ParseCIDR(defaultNet)
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				return net.IPNet{}, net.IP{}, err
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			serviceClusterIPRange = *defaultServiceClusterIPRange
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if size := ipallocator.RangeSize(&serviceClusterIPRange); size < 8 {
0000000000000000000000000000000000000000;;			return net.IPNet{}, net.IP{}, fmt.Errorf("The service cluster IP range must be at least %d IP addresses", 8)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Select the first valid IP from ServiceClusterIPRange to use as the GenericAPIServer service IP.
0000000000000000000000000000000000000000;;		apiServerServiceIP, err := ipallocator.GetIndexedIP(&serviceClusterIPRange, 1)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return net.IPNet{}, net.IP{}, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		glog.V(4).Infof("Setting service IP to %q (read-write).", apiServerServiceIP)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return serviceClusterIPRange, apiServerServiceIP, nil
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
bd4cc14b3e43b4d6bf8002d65a733f06b43cb2e1;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package kubectl
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		externalclientset "k8s.io/kubernetes/pkg/client/clientset_generated/clientset"
0000000000000000000000000000000000000000;;		apps "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/apps/v1beta1"
0000000000000000000000000000000000000000;;		core "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/core/v1"
0000000000000000000000000000000000000000;;		extensions "k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/extensions/v1beta1"
0000000000000000000000000000000000000000;;		internalclientset "k8s.io/kubernetes/pkg/client/clientset_generated/internalclientset"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func versionedClientsetForDeployment(internalClient internalclientset.Interface) externalclientset.Interface {
0000000000000000000000000000000000000000;;		if internalClient == nil {
0000000000000000000000000000000000000000;;			return &externalclientset.Clientset{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return &externalclientset.Clientset{
0000000000000000000000000000000000000000;;			CoreV1Client:            core.New(internalClient.Core().RESTClient()),
0000000000000000000000000000000000000000;;			ExtensionsV1beta1Client: extensions.New(internalClient.Extensions().RESTClient()),
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func versionedClientsetForDaemonSet(internalClient internalclientset.Interface) externalclientset.Interface {
0000000000000000000000000000000000000000;;		if internalClient == nil {
0000000000000000000000000000000000000000;;			return &externalclientset.Clientset{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return &externalclientset.Clientset{
0000000000000000000000000000000000000000;;			AppsV1beta1Client:       apps.New(internalClient.Apps().RESTClient()),
0000000000000000000000000000000000000000;;			ExtensionsV1beta1Client: extensions.New(internalClient.Extensions().RESTClient()),
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

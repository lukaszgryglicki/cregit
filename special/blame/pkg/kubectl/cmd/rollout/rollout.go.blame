0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
d749078f934efe3009479788959172c27881606d;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package rollout
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/renstrom/dedent"
0000000000000000000000000000000000000000;;		"github.com/spf13/cobra"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/kubectl/cmd/templates"
0000000000000000000000000000000000000000;;		cmdutil "k8s.io/kubernetes/pkg/kubectl/cmd/util"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/util/i18n"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		rollout_long = templates.LongDesc(`
0000000000000000000000000000000000000000;;			Manage the rollout of a resource.` + rollout_valid_resources)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		rollout_example = templates.Examples(`
0000000000000000000000000000000000000000;;			# Rollback to the previous deployment
0000000000000000000000000000000000000000;;			kubectl rollout undo deployment/abc
0000000000000000000000000000000000000000;;			
0000000000000000000000000000000000000000;;			# Check the rollout status of a daemonset
0000000000000000000000000000000000000000;;			kubectl rollout status daemonset/foo`)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		rollout_valid_resources = dedent.Dedent(`
0000000000000000000000000000000000000000;;			Valid resource types include:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			   * deployments
0000000000000000000000000000000000000000;;			   * daemonsets
0000000000000000000000000000000000000000;;			`)
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewCmdRollout(f cmdutil.Factory, out, errOut io.Writer) *cobra.Command {
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		cmd := &cobra.Command{
0000000000000000000000000000000000000000;;			Use:     "rollout SUBCOMMAND",
0000000000000000000000000000000000000000;;			Short:   i18n.T("Manage the rollout of a resource"),
0000000000000000000000000000000000000000;;			Long:    rollout_long,
0000000000000000000000000000000000000000;;			Example: rollout_example,
0000000000000000000000000000000000000000;;			Run:     cmdutil.DefaultSubCommandRun(errOut),
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		// subcommands
0000000000000000000000000000000000000000;;		cmd.AddCommand(NewCmdRolloutHistory(f, out))
0000000000000000000000000000000000000000;;		cmd.AddCommand(NewCmdRolloutPause(f, out))
0000000000000000000000000000000000000000;;		cmd.AddCommand(NewCmdRolloutResume(f, out))
0000000000000000000000000000000000000000;;		cmd.AddCommand(NewCmdRolloutUndo(f, out))
0000000000000000000000000000000000000000;;		cmd.AddCommand(NewCmdRolloutStatus(f, out))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return cmd
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	description: edit a mix of schema and schemaless data
0000000000000000000000000000000000000000;;	mode: edit
0000000000000000000000000000000000000000;;	args:
0000000000000000000000000000000000000000;;	- service/kubernetes
0000000000000000000000000000000000000000;;	- bars/test
0000000000000000000000000000000000000000;;	- bars/test2
0000000000000000000000000000000000000000;;	namespace: default
0000000000000000000000000000000000000000;;	expectedStdout:
0000000000000000000000000000000000000000;;	- "service \"kubernetes\" edited"
0000000000000000000000000000000000000000;;	- "bar \"test\" edited"
0000000000000000000000000000000000000000;;	- "bar \"test2\" edited"
0000000000000000000000000000000000000000;;	expectedExitCode: 0
0000000000000000000000000000000000000000;;	steps:
0000000000000000000000000000000000000000;;	- type: request
0000000000000000000000000000000000000000;;	  expectedMethod: GET
0000000000000000000000000000000000000000;;	  expectedPath: /api/v1/namespaces/default/services/kubernetes
0000000000000000000000000000000000000000;;	  expectedInput: 0.request
0000000000000000000000000000000000000000;;	  resultingStatusCode: 200
0000000000000000000000000000000000000000;;	  resultingOutput: 0.response
0000000000000000000000000000000000000000;;	- type: request
0000000000000000000000000000000000000000;;	  expectedMethod: GET
0000000000000000000000000000000000000000;;	  expectedPath: /apis/company.com/v1/namespaces/default/bars/test
0000000000000000000000000000000000000000;;	  expectedInput: 1.request
0000000000000000000000000000000000000000;;	  resultingStatusCode: 200
0000000000000000000000000000000000000000;;	  resultingOutput: 1.response
0000000000000000000000000000000000000000;;	- type: request
0000000000000000000000000000000000000000;;	  expectedMethod: GET
0000000000000000000000000000000000000000;;	  expectedPath: /apis/company.com/v1/namespaces/default/bars/test2
0000000000000000000000000000000000000000;;	  expectedInput: 2.request
0000000000000000000000000000000000000000;;	  resultingStatusCode: 200
0000000000000000000000000000000000000000;;	  resultingOutput: 2.response
0000000000000000000000000000000000000000;;	- type: edit
0000000000000000000000000000000000000000;;	  expectedInput: 3.original
0000000000000000000000000000000000000000;;	  resultingOutput: 3.edited
0000000000000000000000000000000000000000;;	- type: request
0000000000000000000000000000000000000000;;	  expectedMethod: PATCH
0000000000000000000000000000000000000000;;	  expectedPath: /api/v1/namespaces/default/services/kubernetes
0000000000000000000000000000000000000000;;	  expectedContentType: application/strategic-merge-patch+json
0000000000000000000000000000000000000000;;	  expectedInput: 4.request
0000000000000000000000000000000000000000;;	  resultingStatusCode: 200
0000000000000000000000000000000000000000;;	  resultingOutput: 4.response
0000000000000000000000000000000000000000;;	- type: request
0000000000000000000000000000000000000000;;	  expectedMethod: PATCH
0000000000000000000000000000000000000000;;	  expectedPath: /apis/company.com/v1/namespaces/default/bars/test
0000000000000000000000000000000000000000;;	  expectedContentType: application/merge-patch+json
0000000000000000000000000000000000000000;;	  expectedInput: 5.request
0000000000000000000000000000000000000000;;	  resultingStatusCode: 200
0000000000000000000000000000000000000000;;	  resultingOutput: 5.response
0000000000000000000000000000000000000000;;	- type: request
0000000000000000000000000000000000000000;;	  expectedMethod: PATCH
0000000000000000000000000000000000000000;;	  expectedPath: /apis/company.com/v1/namespaces/default/bars/test2
0000000000000000000000000000000000000000;;	  expectedContentType: application/merge-patch+json
0000000000000000000000000000000000000000;;	  expectedInput: 6.request
0000000000000000000000000000000000000000;;	  resultingStatusCode: 200
0000000000000000000000000000000000000000;;	  resultingOutput: 6.response

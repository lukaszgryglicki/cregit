0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package templates
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;		"unicode"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		// SectionVars is the help template section that declares variables to be used in the template.
0000000000000000000000000000000000000000;;		SectionVars = `{{$isRootCmd := isRootCmd .}}` +
0000000000000000000000000000000000000000;;			`{{$rootCmd := rootCmd .}}` +
0000000000000000000000000000000000000000;;			`{{$visibleFlags := visibleFlags (flagsNotIntersected .LocalFlags .PersistentFlags)}}` +
0000000000000000000000000000000000000000;;			`{{$explicitlyExposedFlags := exposed .}}` +
0000000000000000000000000000000000000000;;			`{{$optionsCmdFor := optionsCmdFor .}}` +
0000000000000000000000000000000000000000;;			`{{$usageLine := usageLine .}}`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// SectionAliases is the help template section that displays command aliases.
0000000000000000000000000000000000000000;;		SectionAliases = `{{if gt .Aliases 0}}Aliases:
0000000000000000000000000000000000000000;;	{{.NameAndAliases}}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	{{end}}`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// SectionExamples is the help template section that displays command examples.
0000000000000000000000000000000000000000;;		SectionExamples = `{{if .HasExample}}Examples:
0000000000000000000000000000000000000000;;	{{trimRight .Example}}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	{{end}}`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// SectionSubcommands is the help template section that displays the command's subcommands.
0000000000000000000000000000000000000000;;		SectionSubcommands = `{{if .HasAvailableSubCommands}}{{cmdGroupsString .}}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	{{end}}`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// SectionFlags is the help template section that displays the command's flags.
0000000000000000000000000000000000000000;;		SectionFlags = `{{ if or $visibleFlags.HasFlags $explicitlyExposedFlags.HasFlags}}Options:
0000000000000000000000000000000000000000;;	{{ if $visibleFlags.HasFlags}}{{trimRight (flagsUsages $visibleFlags)}}{{end}}{{ if $explicitlyExposedFlags.HasFlags}}{{trimRight (flagsUsages $explicitlyExposedFlags)}}{{end}}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	{{end}}`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// SectionUsage is the help template section that displays the command's usage.
0000000000000000000000000000000000000000;;		SectionUsage = `{{if and .Runnable (ne .UseLine "") (ne .UseLine $rootCmd)}}Usage:
0000000000000000000000000000000000000000;;	  {{$usageLine}}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	{{end}}`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// SectionTipsHelp is the help template section that displays the '--help' hint.
0000000000000000000000000000000000000000;;		SectionTipsHelp = `{{if .HasSubCommands}}Use "{{$rootCmd}} <command> --help" for more information about a given command.
0000000000000000000000000000000000000000;;	{{end}}`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// SectionTipsGlobalOptions is the help template section that displays the 'options' hint for displaying global flags.
0000000000000000000000000000000000000000;;		SectionTipsGlobalOptions = `{{if $optionsCmdFor}}Use "{{$optionsCmdFor}}" for a list of global command-line options (applies to all commands).
0000000000000000000000000000000000000000;;	{{end}}`
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// MainHelpTemplate if the template for 'help' used by most commands.
0000000000000000000000000000000000000000;;	func MainHelpTemplate() string {
0000000000000000000000000000000000000000;;		return `{{with or .Long .Short }}{{. | trim}}{{end}}{{if or .Runnable .HasSubCommands}}{{.UsageString}}{{end}}`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// MainUsageTemplate if the template for 'usage' used by most commands.
0000000000000000000000000000000000000000;;	func MainUsageTemplate() string {
0000000000000000000000000000000000000000;;		sections := []string{
0000000000000000000000000000000000000000;;			"\n\n",
0000000000000000000000000000000000000000;;			SectionVars,
0000000000000000000000000000000000000000;;			SectionAliases,
0000000000000000000000000000000000000000;;			SectionExamples,
0000000000000000000000000000000000000000;;			SectionSubcommands,
0000000000000000000000000000000000000000;;			SectionFlags,
0000000000000000000000000000000000000000;;			SectionUsage,
0000000000000000000000000000000000000000;;			SectionTipsHelp,
0000000000000000000000000000000000000000;;			SectionTipsGlobalOptions,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return strings.TrimRightFunc(strings.Join(sections, ""), unicode.IsSpace)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// OptionsHelpTemplate if the template for 'help' used by the 'options' command.
0000000000000000000000000000000000000000;;	func OptionsHelpTemplate() string {
0000000000000000000000000000000000000000;;		return ""
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// OptionsUsageTemplate if the template for 'usage' used by the 'options' command.
0000000000000000000000000000000000000000;;	func OptionsUsageTemplate() string {
0000000000000000000000000000000000000000;;		return `{{ if .HasInheritedFlags}}The following options can be passed to any command:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	{{flagsUsages .InheritedFlags}}{{end}}`
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
53777b0b041bbd3c812fd7284a5a090c3963de2c;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package cmd
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/kubectl/cmd/templates"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/util/i18n"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/spf13/cobra"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		optionsExample = templates.Examples(i18n.T(`
0000000000000000000000000000000000000000;;			# Print flags inherited by all commands
0000000000000000000000000000000000000000;;			kubectl options`))
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewCmdOptions implements the options command
0000000000000000000000000000000000000000;;	func NewCmdOptions(out io.Writer) *cobra.Command {
0000000000000000000000000000000000000000;;		cmd := &cobra.Command{
0000000000000000000000000000000000000000;;			Use:     "options",
0000000000000000000000000000000000000000;;			Short:   i18n.T("Print the list of flags inherited by all commands"),
0000000000000000000000000000000000000000;;			Long:    "Print the list of flags inherited by all commands",
0000000000000000000000000000000000000000;;			Example: optionsExample,
0000000000000000000000000000000000000000;;			Run: func(cmd *cobra.Command, args []string) {
0000000000000000000000000000000000000000;;				cmd.Usage()
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The `options` command needs write its output to the `out` stream
0000000000000000000000000000000000000000;;		// (typically stdout). Without calling SetOutput here, the Usage()
0000000000000000000000000000000000000000;;		// function call will fall back to stderr.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// See https://github.com/kubernetes/kubernetes/pull/46394 for details.
0000000000000000000000000000000000000000;;		cmd.SetOutput(out)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		templates.UseOptionsTemplates(cmd)
0000000000000000000000000000000000000000;;		return cmd
0000000000000000000000000000000000000000;;	}

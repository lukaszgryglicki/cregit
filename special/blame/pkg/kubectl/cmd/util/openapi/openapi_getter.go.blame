0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
b686ac2b7b769442753ede7cb3064fe40d943d45;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package openapi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"sync"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/client-go/discovery"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// synchronizedOpenAPIGetter fetches the openapi schema once and then caches it in memory
0000000000000000000000000000000000000000;;	type synchronizedOpenAPIGetter struct {
0000000000000000000000000000000000000000;;		// Cached results
0000000000000000000000000000000000000000;;		sync.Once
0000000000000000000000000000000000000000;;		openAPISchema *Resources
0000000000000000000000000000000000000000;;		err           error
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		serverVersion string
0000000000000000000000000000000000000000;;		cacheDir      string
0000000000000000000000000000000000000000;;		openAPIClient discovery.OpenAPISchemaInterface
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var _ Getter = &synchronizedOpenAPIGetter{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Getter is an interface for fetching openapi specs and parsing them into an Resources struct
0000000000000000000000000000000000000000;;	type Getter interface {
0000000000000000000000000000000000000000;;		// OpenAPIData returns the parsed OpenAPIData
0000000000000000000000000000000000000000;;		Get() (*Resources, error)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewOpenAPIGetter returns an object to return OpenAPIDatas which either read from a
0000000000000000000000000000000000000000;;	// local file cache or read from a server, and then stored in memory for subsequent invocations
0000000000000000000000000000000000000000;;	func NewOpenAPIGetter(cacheDir, serverVersion string, openAPIClient discovery.OpenAPISchemaInterface) Getter {
0000000000000000000000000000000000000000;;		return &synchronizedOpenAPIGetter{
0000000000000000000000000000000000000000;;			serverVersion: serverVersion,
0000000000000000000000000000000000000000;;			cacheDir:      cacheDir,
0000000000000000000000000000000000000000;;			openAPIClient: openAPIClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Resources implements Getter
0000000000000000000000000000000000000000;;	func (g *synchronizedOpenAPIGetter) Get() (*Resources, error) {
0000000000000000000000000000000000000000;;		g.Do(func() {
0000000000000000000000000000000000000000;;			client := NewCachingOpenAPIClient(g.openAPIClient, g.serverVersion, g.cacheDir)
0000000000000000000000000000000000000000;;			result, err := client.OpenAPIData()
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				g.err = err
0000000000000000000000000000000000000000;;				return
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			// Save the result
0000000000000000000000000000000000000000;;			g.openAPISchema = result
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Return the save result
0000000000000000000000000000000000000000;;		return g.openAPISchema, g.err
0000000000000000000000000000000000000000;;	}

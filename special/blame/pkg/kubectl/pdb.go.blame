0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
9438d257a1c06e69dc525195ecf1ec8c63a2b71e;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package kubectl
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/util/intstr"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/apis/policy"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PodDisruptionBudgetV1Generator supports stable generation of a pod disruption budget.
0000000000000000000000000000000000000000;;	type PodDisruptionBudgetV1Generator struct {
0000000000000000000000000000000000000000;;		Name         string
0000000000000000000000000000000000000000;;		MinAvailable string
0000000000000000000000000000000000000000;;		Selector     string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Ensure it supports the generator pattern that uses parameters specified during construction.
0000000000000000000000000000000000000000;;	var _ StructuredGenerator = &PodDisruptionBudgetV1Generator{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (PodDisruptionBudgetV1Generator) ParamNames() []GeneratorParam {
0000000000000000000000000000000000000000;;		return []GeneratorParam{
0000000000000000000000000000000000000000;;			{"name", true},
0000000000000000000000000000000000000000;;			{"min-available", true},
0000000000000000000000000000000000000000;;			{"selector", true},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s PodDisruptionBudgetV1Generator) Generate(params map[string]interface{}) (runtime.Object, error) {
0000000000000000000000000000000000000000;;		err := ValidateParams(s.ParamNames(), params)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		name, isString := params["name"].(string)
0000000000000000000000000000000000000000;;		if !isString {
0000000000000000000000000000000000000000;;			return nil, fmt.Errorf("expected string, saw %v for 'name'", name)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		minAvailable, isString := params["min-available"].(string)
0000000000000000000000000000000000000000;;		if !isString {
0000000000000000000000000000000000000000;;			return nil, fmt.Errorf("expected string, found %v", minAvailable)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		selector, isString := params["selector"].(string)
0000000000000000000000000000000000000000;;		if !isString {
0000000000000000000000000000000000000000;;			return nil, fmt.Errorf("expected string, found %v", selector)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		delegate := &PodDisruptionBudgetV1Generator{Name: name, MinAvailable: minAvailable, Selector: selector}
0000000000000000000000000000000000000000;;		return delegate.StructuredGenerate()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StructuredGenerate outputs a pod disruption budget object using the configured fields.
0000000000000000000000000000000000000000;;	func (s *PodDisruptionBudgetV1Generator) StructuredGenerate() (runtime.Object, error) {
0000000000000000000000000000000000000000;;		if len(s.MinAvailable) == 0 {
0000000000000000000000000000000000000000;;			// defaulting behavior seen in Kubernetes 1.6 and below.
0000000000000000000000000000000000000000;;			s.MinAvailable = "1"
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := s.validate(); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		selector, err := metav1.ParseToLabelSelector(s.Selector)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		minAvailable := intstr.Parse(s.MinAvailable)
0000000000000000000000000000000000000000;;		return &policy.PodDisruptionBudget{
0000000000000000000000000000000000000000;;			ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;				Name: s.Name,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			Spec: policy.PodDisruptionBudgetSpec{
0000000000000000000000000000000000000000;;				MinAvailable: &minAvailable,
0000000000000000000000000000000000000000;;				Selector:     selector,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// validate validates required fields are set to support structured generation.
0000000000000000000000000000000000000000;;	func (s *PodDisruptionBudgetV1Generator) validate() error {
0000000000000000000000000000000000000000;;		if len(s.Name) == 0 {
0000000000000000000000000000000000000000;;			return fmt.Errorf("name must be specified")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if len(s.Selector) == 0 {
0000000000000000000000000000000000000000;;			return fmt.Errorf("a selector must be specified")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if len(s.MinAvailable) == 0 {
0000000000000000000000000000000000000000;;			return fmt.Errorf("the minimum number of available pods required must be specified")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PodDisruptionBudgetV2Generator supports stable generation of a pod disruption budget.
0000000000000000000000000000000000000000;;	type PodDisruptionBudgetV2Generator struct {
0000000000000000000000000000000000000000;;		Name           string
0000000000000000000000000000000000000000;;		MinAvailable   string
0000000000000000000000000000000000000000;;		MaxUnavailable string
0000000000000000000000000000000000000000;;		Selector       string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Ensure it supports the generator pattern that uses parameters specified during construction.
0000000000000000000000000000000000000000;;	var _ StructuredGenerator = &PodDisruptionBudgetV2Generator{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (PodDisruptionBudgetV2Generator) ParamNames() []GeneratorParam {
0000000000000000000000000000000000000000;;		return []GeneratorParam{
0000000000000000000000000000000000000000;;			{"name", true},
0000000000000000000000000000000000000000;;			{"min-available", false},
0000000000000000000000000000000000000000;;			{"max-unavailable", false},
0000000000000000000000000000000000000000;;			{"selector", false},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s PodDisruptionBudgetV2Generator) Generate(params map[string]interface{}) (runtime.Object, error) {
0000000000000000000000000000000000000000;;		err := ValidateParams(s.ParamNames(), params)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		name, isString := params["name"].(string)
0000000000000000000000000000000000000000;;		if !isString {
0000000000000000000000000000000000000000;;			return nil, fmt.Errorf("expected string, saw %v for 'name'", name)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		minAvailable, isString := params["min-available"].(string)
0000000000000000000000000000000000000000;;		if !isString {
0000000000000000000000000000000000000000;;			return nil, fmt.Errorf("expected string, found %v", minAvailable)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		maxUnavailable, isString := params["max-available"].(string)
0000000000000000000000000000000000000000;;		if !isString {
0000000000000000000000000000000000000000;;			return nil, fmt.Errorf("expected string, found %v", maxUnavailable)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		selector, isString := params["selector"].(string)
0000000000000000000000000000000000000000;;		if !isString {
0000000000000000000000000000000000000000;;			return nil, fmt.Errorf("expected string, found %v", selector)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		delegate := &PodDisruptionBudgetV2Generator{Name: name, MinAvailable: minAvailable, MaxUnavailable: maxUnavailable, Selector: selector}
0000000000000000000000000000000000000000;;		return delegate.StructuredGenerate()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StructuredGenerate outputs a pod disruption budget object using the configured fields.
0000000000000000000000000000000000000000;;	func (s *PodDisruptionBudgetV2Generator) StructuredGenerate() (runtime.Object, error) {
0000000000000000000000000000000000000000;;		if err := s.validate(); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		selector, err := metav1.ParseToLabelSelector(s.Selector)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if len(s.MaxUnavailable) == 0 && len(s.MinAvailable) == 0 {
0000000000000000000000000000000000000000;;			s.MinAvailable = "1"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			// This behavior is intended for backward compatibility.
0000000000000000000000000000000000000000;;			// TODO: remove in Kubernetes 1.8
0000000000000000000000000000000000000000;;			fmt.Fprintln(os.Stderr, "Deprecated behavior in kubectl create pdb: Defaulting min-available to 1. "+
0000000000000000000000000000000000000000;;				"Kubernetes 1.8 will remove this default, and one of min-available/max-available must be specified. ")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if len(s.MaxUnavailable) > 0 {
0000000000000000000000000000000000000000;;			maxUnavailable := intstr.Parse(s.MaxUnavailable)
0000000000000000000000000000000000000000;;			return &policy.PodDisruptionBudget{
0000000000000000000000000000000000000000;;				ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;					Name: s.Name,
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				Spec: policy.PodDisruptionBudgetSpec{
0000000000000000000000000000000000000000;;					MaxUnavailable: &maxUnavailable,
0000000000000000000000000000000000000000;;					Selector:       selector,
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;			}, nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if len(s.MinAvailable) > 0 {
0000000000000000000000000000000000000000;;			minAvailable := intstr.Parse(s.MinAvailable)
0000000000000000000000000000000000000000;;			return &policy.PodDisruptionBudget{
0000000000000000000000000000000000000000;;				ObjectMeta: metav1.ObjectMeta{
0000000000000000000000000000000000000000;;					Name: s.Name,
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				Spec: policy.PodDisruptionBudgetSpec{
0000000000000000000000000000000000000000;;					MinAvailable: &minAvailable,
0000000000000000000000000000000000000000;;					Selector:     selector,
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;			}, nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return nil, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// validate validates required fields are set to support structured generation.
0000000000000000000000000000000000000000;;	func (s *PodDisruptionBudgetV2Generator) validate() error {
0000000000000000000000000000000000000000;;		if len(s.Name) == 0 {
0000000000000000000000000000000000000000;;			return fmt.Errorf("name must be specified")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if len(s.Selector) == 0 {
0000000000000000000000000000000000000000;;			return fmt.Errorf("a selector must be specified")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if len(s.MaxUnavailable) > 0 && len(s.MinAvailable) > 0 {
0000000000000000000000000000000000000000;;			return fmt.Errorf("exactly one of min-available and max-available must be specified")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

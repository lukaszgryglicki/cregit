0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
3a30e46f9cbab9d2dbd4a6aae690d0fee371de7f;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package slice
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"sort"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Int64Slice attaches the methods of Interface to []int64,
0000000000000000000000000000000000000000;;	// sorting in increasing order.
0000000000000000000000000000000000000000;;	type Int64Slice []int64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (p Int64Slice) Len() int           { return len(p) }
0000000000000000000000000000000000000000;;	func (p Int64Slice) Less(i, j int) bool { return p[i] < p[j] }
0000000000000000000000000000000000000000;;	func (p Int64Slice) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Sorts []int64 in increasing order
0000000000000000000000000000000000000000;;	func SortInts64(a []int64) { sort.Sort(Int64Slice(a)) }

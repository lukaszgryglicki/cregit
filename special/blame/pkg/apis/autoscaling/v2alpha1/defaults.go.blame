0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
c57945713162b980f4fa5cb5db9bf2a45be4301c;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package v2alpha1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		autoscalingv2alpha1 "k8s.io/api/autoscaling/v2alpha1"
0000000000000000000000000000000000000000;;		"k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/apis/autoscaling"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func addDefaultingFuncs(scheme *runtime.Scheme) error {
0000000000000000000000000000000000000000;;		return RegisterDefaults(scheme)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetDefaults_HorizontalPodAutoscaler(obj *autoscalingv2alpha1.HorizontalPodAutoscaler) {
0000000000000000000000000000000000000000;;		if obj.Spec.MinReplicas == nil {
0000000000000000000000000000000000000000;;			minReplicas := int32(1)
0000000000000000000000000000000000000000;;			obj.Spec.MinReplicas = &minReplicas
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if len(obj.Spec.Metrics) == 0 {
0000000000000000000000000000000000000000;;			utilizationDefaultVal := int32(autoscaling.DefaultCPUUtilization)
0000000000000000000000000000000000000000;;			obj.Spec.Metrics = []autoscalingv2alpha1.MetricSpec{
0000000000000000000000000000000000000000;;				{
0000000000000000000000000000000000000000;;					Type: autoscalingv2alpha1.ResourceMetricSourceType,
0000000000000000000000000000000000000000;;					Resource: &autoscalingv2alpha1.ResourceMetricSource{
0000000000000000000000000000000000000000;;						Name: v1.ResourceCPU,
0000000000000000000000000000000000000000;;						TargetAverageUtilization: &utilizationDefaultVal,
0000000000000000000000000000000000000000;;					},
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

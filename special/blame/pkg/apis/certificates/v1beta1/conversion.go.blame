0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
5a7597794f104876fd4ef26edc7d65357312cd9e;pkg/apis/certificates/v1alpha1/conversion.go[pkg/apis/certificates/v1alpha1/conversion.go][pkg/apis/certificates/v1beta1/conversion.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package v1beta1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func addConversionFuncs(scheme *runtime.Scheme) error {
0000000000000000000000000000000000000000;;		// Add non-generated conversion functions here. Currently there are none.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return scheme.AddFieldLabelConversionFunc(SchemeGroupVersion.String(), "CertificateSigningRequest",
0000000000000000000000000000000000000000;;			func(label, value string) (string, string, error) {
0000000000000000000000000000000000000000;;				switch label {
0000000000000000000000000000000000000000;;				case "metadata.name":
0000000000000000000000000000000000000000;;					return label, value, nil
0000000000000000000000000000000000000000;;				default:
0000000000000000000000000000000000000000;;					return "", "", fmt.Errorf("field label not supported: %s", label)
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;	}

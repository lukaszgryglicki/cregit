0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
6ca75e78d4b5d7d762903a7b5fd5764878b8cae7;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package abac
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime/schema"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime/serializer"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Group is the API group for abac
0000000000000000000000000000000000000000;;	const GroupName = "abac.authorization.kubernetes.io"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var SchemeGroupVersion = schema.GroupVersion{Group: GroupName, Version: runtime.APIVersionInternal}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Scheme is the default instance of runtime.Scheme to which types in the abac API group are api.Registry.
0000000000000000000000000000000000000000;;	// TODO: remove this, abac should not have its own scheme.
0000000000000000000000000000000000000000;;	var Scheme = runtime.NewScheme()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Codecs provides access to encoding and decoding for the scheme
0000000000000000000000000000000000000000;;	var Codecs = serializer.NewCodecFactory(Scheme)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		// TODO: delete this, abac should not have its own scheme.
0000000000000000000000000000000000000000;;		addKnownTypes(Scheme)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		SchemeBuilder = runtime.NewSchemeBuilder(addKnownTypes)
0000000000000000000000000000000000000000;;		AddToScheme   = SchemeBuilder.AddToScheme
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func addKnownTypes(scheme *runtime.Scheme) error {
0000000000000000000000000000000000000000;;		scheme.AddKnownTypes(SchemeGroupVersion,
0000000000000000000000000000000000000000;;			&Policy{},
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
029bd8c93165b943bef925eceda033e9bdbcc6d8;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package extensions
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SysctlsFromPodSecurityPolicyAnnotation parses an annotation value of the key
0000000000000000000000000000000000000000;;	// SysctlsSecurityPolocyAnnotationKey into a slice of sysctls. An empty slice
0000000000000000000000000000000000000000;;	// is returned if annotation is the empty string.
0000000000000000000000000000000000000000;;	func SysctlsFromPodSecurityPolicyAnnotation(annotation string) ([]string, error) {
0000000000000000000000000000000000000000;;		if len(annotation) == 0 {
0000000000000000000000000000000000000000;;			return []string{}, nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return strings.Split(annotation, ","), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PodAnnotationsFromSysctls creates an annotation value for a slice of Sysctls.
0000000000000000000000000000000000000000;;	func PodAnnotationsFromSysctls(sysctls []string) string {
0000000000000000000000000000000000000000;;		return strings.Join(sysctls, ",")
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
641e16e74f80dd380008cbe882118db33b2068dc;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package v1alpha1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		authenticationv1 "k8s.io/api/authentication/v1"
0000000000000000000000000000000000000000;;		metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/admission"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewAdmissionReview returns an AdmissionReview for the provided admission.Attributes
0000000000000000000000000000000000000000;;	func NewAdmissionReview(attr admission.Attributes) AdmissionReview {
0000000000000000000000000000000000000000;;		gvk := attr.GetKind()
0000000000000000000000000000000000000000;;		gvr := attr.GetResource()
0000000000000000000000000000000000000000;;		aUserInfo := attr.GetUserInfo()
0000000000000000000000000000000000000000;;		userInfo := authenticationv1.UserInfo{
0000000000000000000000000000000000000000;;			Extra:    make(map[string]authenticationv1.ExtraValue),
0000000000000000000000000000000000000000;;			Groups:   aUserInfo.GetGroups(),
0000000000000000000000000000000000000000;;			UID:      aUserInfo.GetUID(),
0000000000000000000000000000000000000000;;			Username: aUserInfo.GetName(),
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Convert the extra information in the user object
0000000000000000000000000000000000000000;;		for key, val := range aUserInfo.GetExtra() {
0000000000000000000000000000000000000000;;			userInfo.Extra[key] = authenticationv1.ExtraValue(val)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return AdmissionReview{
0000000000000000000000000000000000000000;;			Spec: AdmissionReviewSpec{
0000000000000000000000000000000000000000;;				Name:      attr.GetName(),
0000000000000000000000000000000000000000;;				Namespace: attr.GetNamespace(),
0000000000000000000000000000000000000000;;				Resource: metav1.GroupVersionResource{
0000000000000000000000000000000000000000;;					Group:    gvr.Group,
0000000000000000000000000000000000000000;;					Resource: gvr.Resource,
0000000000000000000000000000000000000000;;					Version:  gvr.Version,
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				SubResource: attr.GetSubresource(),
0000000000000000000000000000000000000000;;				Operation:   attr.GetOperation(),
0000000000000000000000000000000000000000;;				Object: runtime.RawExtension{
0000000000000000000000000000000000000000;;					Object: attr.GetObject(),
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				OldObject: runtime.RawExtension{
0000000000000000000000000000000000000000;;					Object: attr.GetOldObject(),
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				Kind: metav1.GroupVersionKind{
0000000000000000000000000000000000000000;;					Group:   gvk.Group,
0000000000000000000000000000000000000000;;					Kind:    gvk.Kind,
0000000000000000000000000000000000000000;;					Version: gvk.Version,
0000000000000000000000000000000000000000;;				},
0000000000000000000000000000000000000000;;				UserInfo: userInfo,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
641e16e74f80dd380008cbe882118db33b2068dc;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package admission
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/admission"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/apis/authentication"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AdmissionReview describes an admission request.
0000000000000000000000000000000000000000;;	type AdmissionReview struct {
0000000000000000000000000000000000000000;;		metav1.TypeMeta
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Spec describes the attributes for the admission request.
0000000000000000000000000000000000000000;;		// Since this admission controller is non-mutating the webhook should avoid setting this in its response to avoid the
0000000000000000000000000000000000000000;;		// cost of deserializing it.
0000000000000000000000000000000000000000;;		Spec AdmissionReviewSpec
0000000000000000000000000000000000000000;;		// Status is filled in by the webhook and indicates whether the admission request should be permitted.
0000000000000000000000000000000000000000;;		Status AdmissionReviewStatus
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AdmissionReviewSpec describes the admission.Attributes for the admission request.
0000000000000000000000000000000000000000;;	type AdmissionReviewSpec struct {
0000000000000000000000000000000000000000;;		// Kind is the type of object being manipulated.  For example: Pod
0000000000000000000000000000000000000000;;		Kind metav1.GroupVersionKind
0000000000000000000000000000000000000000;;		// Name is the name of the object as presented in the request.  On a CREATE operation, the client may omit name and
0000000000000000000000000000000000000000;;		// rely on the server to generate the name.  If that is the case, this method will return the empty string.
0000000000000000000000000000000000000000;;		Name string
0000000000000000000000000000000000000000;;		// Namespace is the namespace associated with the request (if any).
0000000000000000000000000000000000000000;;		Namespace string
0000000000000000000000000000000000000000;;		// Object is the object from the incoming request prior to default values being applied
0000000000000000000000000000000000000000;;		Object runtime.Object
0000000000000000000000000000000000000000;;		// OldObject is the existing object. Only populated for UPDATE requests.
0000000000000000000000000000000000000000;;		OldObject runtime.Object
0000000000000000000000000000000000000000;;		// Operation is the operation being performed
0000000000000000000000000000000000000000;;		Operation admission.Operation
0000000000000000000000000000000000000000;;		// Resource is the name of the resource being requested.  This is not the kind.  For example: pods
0000000000000000000000000000000000000000;;		Resource metav1.GroupVersionResource
0000000000000000000000000000000000000000;;		// SubResource is the name of the subresource being requested.  This is a different resource, scoped to the parent
0000000000000000000000000000000000000000;;		// resource, but it may have a different kind. For instance, /pods has the resource "pods" and the kind "Pod", while
0000000000000000000000000000000000000000;;		// /pods/foo/status has the resource "pods", the sub resource "status", and the kind "Pod" (because status operates on
0000000000000000000000000000000000000000;;		// pods). The binding resource for a pod though may be /pods/foo/binding, which has resource "pods", subresource
0000000000000000000000000000000000000000;;		// "binding", and kind "Binding".
0000000000000000000000000000000000000000;;		SubResource string
0000000000000000000000000000000000000000;;		// UserInfo is information about the requesting user
0000000000000000000000000000000000000000;;		UserInfo authentication.UserInfo
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AdmissionReviewStatus describes the status of the admission request.
0000000000000000000000000000000000000000;;	type AdmissionReviewStatus struct {
0000000000000000000000000000000000000000;;		// Allowed indicates whether or not the admission request was permitted.
0000000000000000000000000000000000000000;;		Allowed bool
0000000000000000000000000000000000000000;;		// Result contains extra details into why an admission request was denied.
0000000000000000000000000000000000000000;;		// This field IS NOT consulted in any way if "Allowed" is "true".
0000000000000000000000000000000000000000;;		// +optional
0000000000000000000000000000000000000000;;		Result *metav1.Status
0000000000000000000000000000000000000000;;	}

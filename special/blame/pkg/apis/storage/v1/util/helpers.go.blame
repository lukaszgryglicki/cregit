0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
f5a61ad230a69072124d06994c66752955324899;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package util
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsDefaultStorageClassAnnotation represents a StorageClass annotation that
0000000000000000000000000000000000000000;;	// marks a class as the default StorageClass
0000000000000000000000000000000000000000;;	//TODO: remove Beta when no longer used
0000000000000000000000000000000000000000;;	const IsDefaultStorageClassAnnotation = "storageclass.kubernetes.io/is-default-class"
0000000000000000000000000000000000000000;;	const BetaIsDefaultStorageClassAnnotation = "storageclass.beta.kubernetes.io/is-default-class"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsDefaultAnnotationText returns a pretty Yes/No String if
0000000000000000000000000000000000000000;;	// the annotation is set
0000000000000000000000000000000000000000;;	// TODO: remove Beta when no longer needed
0000000000000000000000000000000000000000;;	func IsDefaultAnnotationText(obj metav1.ObjectMeta) string {
0000000000000000000000000000000000000000;;		if obj.Annotations[IsDefaultStorageClassAnnotation] == "true" {
0000000000000000000000000000000000000000;;			return "Yes"
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if obj.Annotations[BetaIsDefaultStorageClassAnnotation] == "true" {
0000000000000000000000000000000000000000;;			return "Yes"
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return "No"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsDefaultAnnotation returns a boolean if
0000000000000000000000000000000000000000;;	// the annotation is set
0000000000000000000000000000000000000000;;	// TODO: remove Beta when no longer needed
0000000000000000000000000000000000000000;;	func IsDefaultAnnotation(obj metav1.ObjectMeta) bool {
0000000000000000000000000000000000000000;;		if obj.Annotations[IsDefaultStorageClassAnnotation] == "true" {
0000000000000000000000000000000000000000;;			return true
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if obj.Annotations[BetaIsDefaultStorageClassAnnotation] == "true" {
0000000000000000000000000000000000000000;;			return true
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}

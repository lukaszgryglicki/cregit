0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
35fbd54b35b58b3ac95a0f0410ab62b8905746c3;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package selinux
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/util/validation/field"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/api"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/apis/extensions"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// runAsAny implements the SELinuxStrategy interface.
0000000000000000000000000000000000000000;;	type runAsAny struct{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var _ SELinuxStrategy = &runAsAny{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewRunAsAny provides a strategy that will return the configured se linux context or nil.
0000000000000000000000000000000000000000;;	func NewRunAsAny(options *extensions.SELinuxStrategyOptions) (SELinuxStrategy, error) {
0000000000000000000000000000000000000000;;		return &runAsAny{}, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Generate creates the SELinuxOptions based on constraint rules.
0000000000000000000000000000000000000000;;	func (s *runAsAny) Generate(pod *api.Pod, container *api.Container) (*api.SELinuxOptions, error) {
0000000000000000000000000000000000000000;;		return nil, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate ensures that the specified values fall within the range of the strategy.
0000000000000000000000000000000000000000;;	func (s *runAsAny) Validate(pod *api.Pod, container *api.Container) field.ErrorList {
0000000000000000000000000000000000000000;;		return field.ErrorList{}
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
35fbd54b35b58b3ac95a0f0410ab62b8905746c3;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package group
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/util/validation/field"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/api"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GroupStrategy defines the interface for all group constraint strategies.
0000000000000000000000000000000000000000;;	type GroupStrategy interface {
0000000000000000000000000000000000000000;;		// Generate creates the group based on policy rules.  The underlying implementation can
0000000000000000000000000000000000000000;;		// decide whether it will return a full range of values or a subset of values from the
0000000000000000000000000000000000000000;;		// configured ranges.
0000000000000000000000000000000000000000;;		Generate(pod *api.Pod) ([]int64, error)
0000000000000000000000000000000000000000;;		// Generate a single value to be applied.  The underlying implementation decides which
0000000000000000000000000000000000000000;;		// value to return if configured with multiple ranges.  This is used for FSGroup.
0000000000000000000000000000000000000000;;		GenerateSingle(pod *api.Pod) (*int64, error)
0000000000000000000000000000000000000000;;		// Validate ensures that the specified values fall within the range of the strategy.
0000000000000000000000000000000000000000;;		Validate(pod *api.Pod, groups []int64) field.ErrorList
0000000000000000000000000000000000000000;;	}

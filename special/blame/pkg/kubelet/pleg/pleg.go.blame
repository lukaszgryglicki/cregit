0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
28a401c581e2c5c431c895d1186f9cd05186d445;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package pleg
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/types"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PodLifeCycleEventType string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		ContainerStarted PodLifeCycleEventType = "ContainerStarted"
0000000000000000000000000000000000000000;;		ContainerDied    PodLifeCycleEventType = "ContainerDied"
0000000000000000000000000000000000000000;;		ContainerRemoved PodLifeCycleEventType = "ContainerRemoved"
0000000000000000000000000000000000000000;;		// PodSync is used to trigger syncing of a pod when the observed change of
0000000000000000000000000000000000000000;;		// the state of the pod cannot be captured by any single event above.
0000000000000000000000000000000000000000;;		PodSync PodLifeCycleEventType = "PodSync"
0000000000000000000000000000000000000000;;		// Do not use the events below because they are disabled in GenericPLEG.
0000000000000000000000000000000000000000;;		ContainerChanged PodLifeCycleEventType = "ContainerChanged"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PodLifecycleEvent is an event that reflects the change of the pod state.
0000000000000000000000000000000000000000;;	type PodLifecycleEvent struct {
0000000000000000000000000000000000000000;;		// The pod ID.
0000000000000000000000000000000000000000;;		ID types.UID
0000000000000000000000000000000000000000;;		// The type of the event.
0000000000000000000000000000000000000000;;		Type PodLifeCycleEventType
0000000000000000000000000000000000000000;;		// The accompanied data which varies based on the event type.
0000000000000000000000000000000000000000;;		//   - ContainerStarted/ContainerStopped: the container name (string).
0000000000000000000000000000000000000000;;		//   - All other event types: unused.
0000000000000000000000000000000000000000;;		Data interface{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PodLifecycleEventGenerator interface {
0000000000000000000000000000000000000000;;		Start()
0000000000000000000000000000000000000000;;		Watch() chan *PodLifecycleEvent
0000000000000000000000000000000000000000;;		Healthy() (bool, error)
0000000000000000000000000000000000000000;;	}

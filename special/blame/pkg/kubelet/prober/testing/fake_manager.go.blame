0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
21de329803cd27c1bec0caf492525c5c70aa5fa5;pkg/kubelet/prober/prober_fake.go[pkg/kubelet/prober/prober_fake.go][pkg/kubelet/prober/testing/fake_manager.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package testing
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/types"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FakeManager struct{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Unused methods.
0000000000000000000000000000000000000000;;	func (_ FakeManager) AddPod(_ *v1.Pod)        {}
0000000000000000000000000000000000000000;;	func (_ FakeManager) RemovePod(_ *v1.Pod)     {}
0000000000000000000000000000000000000000;;	func (_ FakeManager) CleanupPods(_ []*v1.Pod) {}
0000000000000000000000000000000000000000;;	func (_ FakeManager) Start()                  {}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (_ FakeManager) UpdatePodStatus(_ types.UID, podStatus *v1.PodStatus) {
0000000000000000000000000000000000000000;;		for i := range podStatus.ContainerStatuses {
0000000000000000000000000000000000000000;;			podStatus.ContainerStatuses[i].Ready = true
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

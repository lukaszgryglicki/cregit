0000000000000000000000000000000000000000;;	// +build !linux
aeb98ec58cf4c60f64146a860d9bde59697be8e1;;	
0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package cm
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		MinShares     = 0
0000000000000000000000000000000000000000;;		SharesPerCPU  = 0
0000000000000000000000000000000000000000;;		MilliCPUToCPU = 0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		QuotaPeriod    = 0
0000000000000000000000000000000000000000;;		MinQuotaPeriod = 0
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// MilliCPUToQuota converts milliCPU to CFS quota and period values.
0000000000000000000000000000000000000000;;	func MilliCPUToQuota(milliCPU int64) (int64, int64) {
0000000000000000000000000000000000000000;;		return 0, 0
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// MilliCPUToShares converts the milliCPU to CFS shares.
0000000000000000000000000000000000000000;;	func MilliCPUToShares(milliCPU int64) int64 {
0000000000000000000000000000000000000000;;		return 0
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ResourceConfigForPod takes the input pod and outputs the cgroup resource config.
0000000000000000000000000000000000000000;;	func ResourceConfigForPod(pod *v1.Pod) *ResourceConfig {
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GetCgroupSubsystems returns information about the mounted cgroup subsystems
0000000000000000000000000000000000000000;;	func GetCgroupSubsystems() (*CgroupSubsystems, error) {
0000000000000000000000000000000000000000;;		return nil, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func getCgroupProcs(dir string) ([]int, error) {
0000000000000000000000000000000000000000;;		return nil, nil
0000000000000000000000000000000000000000;;	}

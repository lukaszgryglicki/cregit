0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
9eada883bc684ef2f9ffbc58f6c5fe04f070be99;pkg/kubelet/container_manager_unsupported.go[pkg/kubelet/container_manager_unsupported.go][pkg/kubelet/cm/container_manager_stub.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package cm
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/golang/glog"
0000000000000000000000000000000000000000;;		"k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type containerManagerStub struct{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var _ ContainerManager = &containerManagerStub{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) Start(_ *v1.Node, _ ActivePodsFunc) error {
0000000000000000000000000000000000000000;;		glog.V(2).Infof("Starting stub container manager")
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) SystemCgroupsLimit() v1.ResourceList {
0000000000000000000000000000000000000000;;		return v1.ResourceList{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) GetNodeConfig() NodeConfig {
0000000000000000000000000000000000000000;;		return NodeConfig{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) GetMountedSubsystems() *CgroupSubsystems {
0000000000000000000000000000000000000000;;		return &CgroupSubsystems{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) GetQOSContainersInfo() QOSContainersInfo {
0000000000000000000000000000000000000000;;		return QOSContainersInfo{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) UpdateQOSCgroups() error {
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) Status() Status {
0000000000000000000000000000000000000000;;		return Status{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) GetNodeAllocatableReservation() v1.ResourceList {
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) GetCapacity() v1.ResourceList {
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (cm *containerManagerStub) NewPodContainerManager() PodContainerManager {
0000000000000000000000000000000000000000;;		return &podContainerManagerStub{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewStubContainerManager() ContainerManager {
0000000000000000000000000000000000000000;;		return &containerManagerStub{}
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
6f47efbaff98ec04d7187bc50274afb4500ebdf5;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package format
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"sort"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ResourceList returns a string representation of a resource list in a human readable format.
0000000000000000000000000000000000000000;;	func ResourceList(resources v1.ResourceList) string {
0000000000000000000000000000000000000000;;		resourceStrings := make([]string, 0, len(resources))
0000000000000000000000000000000000000000;;		for key, value := range resources {
0000000000000000000000000000000000000000;;			resourceStrings = append(resourceStrings, fmt.Sprintf("%v=%v", key, value.String()))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		// sort the results for consistent log output
0000000000000000000000000000000000000000;;		sort.Strings(resourceStrings)
0000000000000000000000000000000000000000;;		return strings.Join(resourceStrings, ",")
0000000000000000000000000000000000000000;;	}

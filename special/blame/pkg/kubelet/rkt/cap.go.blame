0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
e6d2edf1de928d20200ba1a93d3a0dce3ee47bf7;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package rkt
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// TODO(yifan): Export this to higher level package.
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		CAP_CHOWN = iota
0000000000000000000000000000000000000000;;		CAP_DAC_OVERRIDE
0000000000000000000000000000000000000000;;		CAP_DAC_READ_SEARCH
0000000000000000000000000000000000000000;;		CAP_FOWNER
0000000000000000000000000000000000000000;;		CAP_FSETID
0000000000000000000000000000000000000000;;		CAP_KILL
0000000000000000000000000000000000000000;;		CAP_SETGID
0000000000000000000000000000000000000000;;		CAP_SETUID
0000000000000000000000000000000000000000;;		CAP_SETPCAP
0000000000000000000000000000000000000000;;		CAP_LINUX_IMMUTABLE
0000000000000000000000000000000000000000;;		CAP_NET_BIND_SERVICE
0000000000000000000000000000000000000000;;		CAP_NET_BROADCAST
0000000000000000000000000000000000000000;;		CAP_NET_ADMIN
0000000000000000000000000000000000000000;;		CAP_NET_RAW
0000000000000000000000000000000000000000;;		CAP_IPC_LOCK
0000000000000000000000000000000000000000;;		CAP_IPC_OWNER
0000000000000000000000000000000000000000;;		CAP_SYS_MODULE
0000000000000000000000000000000000000000;;		CAP_SYS_RAWIO
0000000000000000000000000000000000000000;;		CAP_SYS_CHROOT
0000000000000000000000000000000000000000;;		CAP_SYS_PTRACE
0000000000000000000000000000000000000000;;		CAP_SYS_PACCT
0000000000000000000000000000000000000000;;		CAP_SYS_ADMIN
0000000000000000000000000000000000000000;;		CAP_SYS_BOOT
0000000000000000000000000000000000000000;;		CAP_SYS_NICE
0000000000000000000000000000000000000000;;		CAP_SYS_RESOURCE
0000000000000000000000000000000000000000;;		CAP_SYS_TIME
0000000000000000000000000000000000000000;;		CAP_SYS_TTY_CONFIG
0000000000000000000000000000000000000000;;		CAP_MKNOD
0000000000000000000000000000000000000000;;		CAP_LEASE
0000000000000000000000000000000000000000;;		CAP_AUDIT_WRITE
0000000000000000000000000000000000000000;;		CAP_AUDIT_CONTROL
0000000000000000000000000000000000000000;;		CAP_SETFCAP
0000000000000000000000000000000000000000;;		CAP_MAC_OVERRIDE
0000000000000000000000000000000000000000;;		CAP_MAC_ADMIN
0000000000000000000000000000000000000000;;		CAP_SYSLOG
0000000000000000000000000000000000000000;;		CAP_WAKE_ALARM
0000000000000000000000000000000000000000;;		CAP_BLOCK_SUSPEND
0000000000000000000000000000000000000000;;		CAP_AUDIT_READ
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// TODO(yifan): Export this to higher level package.
0000000000000000000000000000000000000000;;	var capabilityList = map[int]string{
0000000000000000000000000000000000000000;;		CAP_CHOWN:            "CAP_CHOWN",
0000000000000000000000000000000000000000;;		CAP_DAC_OVERRIDE:     "CAP_DAC_OVERRIDE",
0000000000000000000000000000000000000000;;		CAP_DAC_READ_SEARCH:  "CAP_DAC_READ_SEARCH",
0000000000000000000000000000000000000000;;		CAP_FOWNER:           "CAP_FOWNER",
0000000000000000000000000000000000000000;;		CAP_FSETID:           "CAP_FSETID",
0000000000000000000000000000000000000000;;		CAP_KILL:             "CAP_KILL",
0000000000000000000000000000000000000000;;		CAP_SETGID:           "CAP_SETGID",
0000000000000000000000000000000000000000;;		CAP_SETUID:           "CAP_SETUID",
0000000000000000000000000000000000000000;;		CAP_SETPCAP:          "CAP_SETPCAP",
0000000000000000000000000000000000000000;;		CAP_LINUX_IMMUTABLE:  "CAP_LINUX_IMMUTABLE",
0000000000000000000000000000000000000000;;		CAP_NET_BIND_SERVICE: "CAP_NET_BIND_SERVICE",
0000000000000000000000000000000000000000;;		CAP_NET_BROADCAST:    "CAP_NET_BROADCAST",
0000000000000000000000000000000000000000;;		CAP_NET_ADMIN:        "CAP_NET_ADMIN",
0000000000000000000000000000000000000000;;		CAP_NET_RAW:          "CAP_NET_RAW",
0000000000000000000000000000000000000000;;		CAP_IPC_LOCK:         "CAP_IPC_LOCK",
0000000000000000000000000000000000000000;;		CAP_IPC_OWNER:        "CAP_IPC_OWNER",
0000000000000000000000000000000000000000;;		CAP_SYS_MODULE:       "CAP_SYS_MODULE",
0000000000000000000000000000000000000000;;		CAP_SYS_RAWIO:        "CAP_SYS_RAWIO",
0000000000000000000000000000000000000000;;		CAP_SYS_CHROOT:       "CAP_SYS_CHROOT",
0000000000000000000000000000000000000000;;		CAP_SYS_PTRACE:       "CAP_SYS_PTRACE",
0000000000000000000000000000000000000000;;		CAP_SYS_PACCT:        "CAP_SYS_PACCT",
0000000000000000000000000000000000000000;;		CAP_SYS_ADMIN:        "CAP_SYS_ADMIN",
0000000000000000000000000000000000000000;;		CAP_SYS_BOOT:         "CAP_SYS_BOOT",
0000000000000000000000000000000000000000;;		CAP_SYS_NICE:         "CAP_SYS_NICE",
0000000000000000000000000000000000000000;;		CAP_SYS_RESOURCE:     "CAP_SYS_RESOURCE",
0000000000000000000000000000000000000000;;		CAP_SYS_TIME:         "CAP_SYS_TIME",
0000000000000000000000000000000000000000;;		CAP_SYS_TTY_CONFIG:   "CAP_SYS_TTY_CONFIG",
0000000000000000000000000000000000000000;;		CAP_MKNOD:            "CAP_MKNOD",
0000000000000000000000000000000000000000;;		CAP_LEASE:            "CAP_LEASE",
0000000000000000000000000000000000000000;;		CAP_AUDIT_WRITE:      "CAP_AUDIT_WRITE",
0000000000000000000000000000000000000000;;		CAP_AUDIT_CONTROL:    "CAP_AUDIT_CONTROL",
0000000000000000000000000000000000000000;;		CAP_SETFCAP:          "CAP_SETFCAP",
0000000000000000000000000000000000000000;;		CAP_MAC_OVERRIDE:     "CAP_MAC_OVERRIDE",
0000000000000000000000000000000000000000;;		CAP_MAC_ADMIN:        "CAP_MAC_ADMIN",
0000000000000000000000000000000000000000;;		CAP_SYSLOG:           "CAP_SYSLOG",
0000000000000000000000000000000000000000;;		CAP_WAKE_ALARM:       "CAP_WAKE_ALARM",
0000000000000000000000000000000000000000;;		CAP_BLOCK_SUSPEND:    "CAP_BLOCK_SUSPEND",
0000000000000000000000000000000000000000;;		CAP_AUDIT_READ:       "CAP_AUDIT_READ",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// allCapabilities returns the capability list with all capabilities.
0000000000000000000000000000000000000000;;	func allCapabilities() []string {
0000000000000000000000000000000000000000;;		var capabilities []string
0000000000000000000000000000000000000000;;		for _, cap := range capabilityList {
0000000000000000000000000000000000000000;;			capabilities = append(capabilities, cap)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return capabilities
0000000000000000000000000000000000000000;;	}

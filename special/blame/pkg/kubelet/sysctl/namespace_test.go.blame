0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
2e11d3ce096067ddfb1188991515b7d3797cef5e;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package sysctl
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestNamespacedBy(t *testing.T) {
0000000000000000000000000000000000000000;;		tests := map[string]Namespace{
0000000000000000000000000000000000000000;;			"kernel.shm_rmid_forced": IpcNamespace,
0000000000000000000000000000000000000000;;			"net.a.b.c":              NetNamespace,
0000000000000000000000000000000000000000;;			"fs.mqueue.a.b.c":        IpcNamespace,
0000000000000000000000000000000000000000;;			"foo":                    UnknownNamespace,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		for sysctl, ns := range tests {
0000000000000000000000000000000000000000;;			if got := NamespacedBy(sysctl); got != ns {
0000000000000000000000000000000000000000;;				t.Errorf("wrong namespace for %q: got=%s want=%s", sysctl, got, ns)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

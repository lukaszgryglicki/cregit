0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
c583bbd95c63319e7b5e9ff24123157387fc2009;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package printers
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ShortHumanDuration(d time.Duration) string {
0000000000000000000000000000000000000000;;		// Allow deviation no more than 2 seconds(excluded) to tolerate machine time
0000000000000000000000000000000000000000;;		// inconsistence, it can be considered as almost now.
0000000000000000000000000000000000000000;;		if seconds := int(d.Seconds()); seconds < -1 {
0000000000000000000000000000000000000000;;			return fmt.Sprintf("<invalid>")
0000000000000000000000000000000000000000;;		} else if seconds < 0 {
0000000000000000000000000000000000000000;;			return fmt.Sprintf("0s")
0000000000000000000000000000000000000000;;		} else if seconds < 60 {
0000000000000000000000000000000000000000;;			return fmt.Sprintf("%ds", seconds)
0000000000000000000000000000000000000000;;		} else if minutes := int(d.Minutes()); minutes < 60 {
0000000000000000000000000000000000000000;;			return fmt.Sprintf("%dm", minutes)
0000000000000000000000000000000000000000;;		} else if hours := int(d.Hours()); hours < 24 {
0000000000000000000000000000000000000000;;			return fmt.Sprintf("%dh", hours)
0000000000000000000000000000000000000000;;		} else if hours < 24*365 {
0000000000000000000000000000000000000000;;			return fmt.Sprintf("%dd", hours/24)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return fmt.Sprintf("%dy", int(d.Hours()/24/365))
0000000000000000000000000000000000000000;;	}

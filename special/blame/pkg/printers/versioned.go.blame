0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
d4c1bea151e6a908e64c0756c48fb11aeb0af019;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package printers
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime/schema"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// VersionedPrinter takes runtime objects and ensures they are converted to a given API version
0000000000000000000000000000000000000000;;	// prior to being passed to a nested printer.
0000000000000000000000000000000000000000;;	type VersionedPrinter struct {
0000000000000000000000000000000000000000;;		printer   ResourcePrinter
0000000000000000000000000000000000000000;;		converter runtime.ObjectConvertor
0000000000000000000000000000000000000000;;		versions  []schema.GroupVersion
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewVersionedPrinter wraps a printer to convert objects to a known API version prior to printing.
0000000000000000000000000000000000000000;;	func NewVersionedPrinter(printer ResourcePrinter, converter runtime.ObjectConvertor, versions ...schema.GroupVersion) ResourcePrinter {
0000000000000000000000000000000000000000;;		return &VersionedPrinter{
0000000000000000000000000000000000000000;;			printer:   printer,
0000000000000000000000000000000000000000;;			converter: converter,
0000000000000000000000000000000000000000;;			versions:  versions,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (p *VersionedPrinter) AfterPrint(w io.Writer, res string) error {
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PrintObj implements ResourcePrinter
0000000000000000000000000000000000000000;;	func (p *VersionedPrinter) PrintObj(obj runtime.Object, w io.Writer) error {
0000000000000000000000000000000000000000;;		if len(p.versions) == 0 {
0000000000000000000000000000000000000000;;			return fmt.Errorf("no version specified, object cannot be converted")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		converted, err := p.converter.ConvertToVersion(obj, schema.GroupVersions(p.versions))
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return p.printer.PrintObj(converted, w)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// TODO: implement HandledResources()
0000000000000000000000000000000000000000;;	func (p *VersionedPrinter) HandledResources() []string {
0000000000000000000000000000000000000000;;		return []string{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (p *VersionedPrinter) IsGeneric() bool {
0000000000000000000000000000000000000000;;		return p.printer.IsGeneric()
0000000000000000000000000000000000000000;;	}

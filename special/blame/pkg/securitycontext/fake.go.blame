0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
f16ae5b932f488fd79e14adc7f322afe6a3d6ebf;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package securitycontext
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/api"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ValidSecurityContextWithContainerDefaults creates a valid security context provider based on
0000000000000000000000000000000000000000;;	// empty container defaults.  Used for testing.
0000000000000000000000000000000000000000;;	func ValidSecurityContextWithContainerDefaults() *v1.SecurityContext {
0000000000000000000000000000000000000000;;		priv := false
0000000000000000000000000000000000000000;;		return &v1.SecurityContext{
0000000000000000000000000000000000000000;;			Capabilities: &v1.Capabilities{},
0000000000000000000000000000000000000000;;			Privileged:   &priv,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ValidInternalSecurityContextWithContainerDefaults creates a valid security context provider based on
0000000000000000000000000000000000000000;;	// empty container defaults.  Used for testing.
0000000000000000000000000000000000000000;;	func ValidInternalSecurityContextWithContainerDefaults() *api.SecurityContext {
0000000000000000000000000000000000000000;;		priv := false
0000000000000000000000000000000000000000;;		return &api.SecurityContext{
0000000000000000000000000000000000000000;;			Capabilities: &api.Capabilities{},
0000000000000000000000000000000000000000;;			Privileged:   &priv,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

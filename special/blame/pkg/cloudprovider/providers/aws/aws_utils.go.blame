0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
728bc505472938f0cc77cfd53f998d9deaf246d2;pkg/cloudprovider/aws/aws_utils.go[pkg/cloudprovider/aws/aws_utils.go][pkg/cloudprovider/providers/aws/aws_utils.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package aws
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/util/sets"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func stringSetToPointers(in sets.String) []*string {
0000000000000000000000000000000000000000;;		if in == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		out := make([]*string, 0, len(in))
0000000000000000000000000000000000000000;;		for k := range in {
0000000000000000000000000000000000000000;;			out = append(out, aws.String(k))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return out
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func stringSetFromPointers(in []*string) sets.String {
0000000000000000000000000000000000000000;;		if in == nil {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		out := sets.NewString()
0000000000000000000000000000000000000000;;		for i := range in {
0000000000000000000000000000000000000000;;			out.Insert(orEmpty(in[i]))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return out
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// orZero returns the value, or 0 if the pointer is nil
0000000000000000000000000000000000000000;;	// Deprecated: prefer aws.Int64Value
0000000000000000000000000000000000000000;;	func orZero(v *int64) int64 {
0000000000000000000000000000000000000000;;		return aws.Int64Value(v)
0000000000000000000000000000000000000000;;	}

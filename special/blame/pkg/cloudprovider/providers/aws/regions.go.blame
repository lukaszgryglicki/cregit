0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
7e75b4c5b709cc5d20c51056c502771b39346629;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package aws
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/golang/glog"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/util/sets"
0000000000000000000000000000000000000000;;		awscredentialprovider "k8s.io/kubernetes/pkg/credentialprovider/aws"
0000000000000000000000000000000000000000;;		"sync"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// WellKnownRegions is the complete list of regions known to the AWS cloudprovider
0000000000000000000000000000000000000000;;	// and credentialprovider.
0000000000000000000000000000000000000000;;	var WellKnownRegions = [...]string{
0000000000000000000000000000000000000000;;		// from `aws ec2 describe-regions --region us-east-1 --query Regions[].RegionName | sort`
0000000000000000000000000000000000000000;;		"ap-northeast-1",
0000000000000000000000000000000000000000;;		"ap-northeast-2",
0000000000000000000000000000000000000000;;		"ap-south-1",
0000000000000000000000000000000000000000;;		"ap-southeast-1",
0000000000000000000000000000000000000000;;		"ap-southeast-2",
0000000000000000000000000000000000000000;;		"ca-central-1",
0000000000000000000000000000000000000000;;		"eu-central-1",
0000000000000000000000000000000000000000;;		"eu-west-1",
0000000000000000000000000000000000000000;;		"eu-west-2",
0000000000000000000000000000000000000000;;		"sa-east-1",
0000000000000000000000000000000000000000;;		"us-east-1",
0000000000000000000000000000000000000000;;		"us-east-2",
0000000000000000000000000000000000000000;;		"us-west-1",
0000000000000000000000000000000000000000;;		"us-west-2",
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// these are not registered in many / most accounts
0000000000000000000000000000000000000000;;		"cn-north-1",
0000000000000000000000000000000000000000;;		"us-gov-west-1",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// awsRegionsMutex protects awsRegions
0000000000000000000000000000000000000000;;	var awsRegionsMutex sync.Mutex
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// awsRegions is a set of recognized regions
0000000000000000000000000000000000000000;;	var awsRegions sets.String
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RecognizeRegion is called for each AWS region we know about.
0000000000000000000000000000000000000000;;	// It currently registers a credential provider for that region.
0000000000000000000000000000000000000000;;	// There are two paths to discovering a region:
0000000000000000000000000000000000000000;;	//  * we hard-code some well-known regions
0000000000000000000000000000000000000000;;	//  * if a region is discovered from instance metadata, we add that
0000000000000000000000000000000000000000;;	func RecognizeRegion(region string) {
0000000000000000000000000000000000000000;;		awsRegionsMutex.Lock()
0000000000000000000000000000000000000000;;		defer awsRegionsMutex.Unlock()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if awsRegions == nil {
0000000000000000000000000000000000000000;;			awsRegions = sets.NewString()
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if awsRegions.Has(region) {
0000000000000000000000000000000000000000;;			glog.V(6).Infof("found AWS region %q again - ignoring", region)
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		glog.V(4).Infof("found AWS region %q", region)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		awscredentialprovider.RegisterCredentialsProvider(region)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		awsRegions.Insert(region)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RecognizeWellKnownRegions calls RecognizeRegion on each WellKnownRegion
0000000000000000000000000000000000000000;;	func RecognizeWellKnownRegions() {
0000000000000000000000000000000000000000;;		for _, region := range WellKnownRegions {
0000000000000000000000000000000000000000;;			RecognizeRegion(region)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// isRegionValid checks if the region is in the set of known regions
0000000000000000000000000000000000000000;;	func isRegionValid(region string) bool {
0000000000000000000000000000000000000000;;		awsRegionsMutex.Lock()
0000000000000000000000000000000000000000;;		defer awsRegionsMutex.Unlock()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return awsRegions.Has(region)
0000000000000000000000000000000000000000;;	}

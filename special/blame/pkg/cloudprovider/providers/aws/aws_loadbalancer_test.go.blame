0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
297f5a34e77588a8d0e9fde35e06889c9198262d;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package aws
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws"
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestElbProtocolsAreEqual(t *testing.T) {
0000000000000000000000000000000000000000;;		grid := []struct {
0000000000000000000000000000000000000000;;			L        *string
0000000000000000000000000000000000000000;;			R        *string
0000000000000000000000000000000000000000;;			Expected bool
0000000000000000000000000000000000000000;;		}{
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String("http"),
0000000000000000000000000000000000000000;;				R:        aws.String("http"),
0000000000000000000000000000000000000000;;				Expected: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String("HTTP"),
0000000000000000000000000000000000000000;;				R:        aws.String("http"),
0000000000000000000000000000000000000000;;				Expected: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String("HTTP"),
0000000000000000000000000000000000000000;;				R:        aws.String("TCP"),
0000000000000000000000000000000000000000;;				Expected: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String(""),
0000000000000000000000000000000000000000;;				R:        aws.String("TCP"),
0000000000000000000000000000000000000000;;				Expected: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String(""),
0000000000000000000000000000000000000000;;				R:        aws.String(""),
0000000000000000000000000000000000000000;;				Expected: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        nil,
0000000000000000000000000000000000000000;;				R:        aws.String(""),
0000000000000000000000000000000000000000;;				Expected: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String(""),
0000000000000000000000000000000000000000;;				R:        nil,
0000000000000000000000000000000000000000;;				Expected: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        nil,
0000000000000000000000000000000000000000;;				R:        nil,
0000000000000000000000000000000000000000;;				Expected: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		for _, g := range grid {
0000000000000000000000000000000000000000;;			actual := elbProtocolsAreEqual(g.L, g.R)
0000000000000000000000000000000000000000;;			if actual != g.Expected {
0000000000000000000000000000000000000000;;				t.Errorf("unexpected result from protocolsEquals(%v, %v)", g.L, g.R)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestAWSARNEquals(t *testing.T) {
0000000000000000000000000000000000000000;;		grid := []struct {
0000000000000000000000000000000000000000;;			L        *string
0000000000000000000000000000000000000000;;			R        *string
0000000000000000000000000000000000000000;;			Expected bool
0000000000000000000000000000000000000000;;		}{
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String("arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"),
0000000000000000000000000000000000000000;;				R:        aws.String("arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"),
0000000000000000000000000000000000000000;;				Expected: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String("ARN:AWS:ACM:US-EAST-1:123456789012:CERTIFICATE/12345678-1234-1234-1234-123456789012"),
0000000000000000000000000000000000000000;;				R:        aws.String("arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"),
0000000000000000000000000000000000000000;;				Expected: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String("arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"),
0000000000000000000000000000000000000000;;				R:        aws.String(""),
0000000000000000000000000000000000000000;;				Expected: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String(""),
0000000000000000000000000000000000000000;;				R:        aws.String(""),
0000000000000000000000000000000000000000;;				Expected: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        nil,
0000000000000000000000000000000000000000;;				R:        aws.String(""),
0000000000000000000000000000000000000000;;				Expected: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        aws.String(""),
0000000000000000000000000000000000000000;;				R:        nil,
0000000000000000000000000000000000000000;;				Expected: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				L:        nil,
0000000000000000000000000000000000000000;;				R:        nil,
0000000000000000000000000000000000000000;;				Expected: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		for _, g := range grid {
0000000000000000000000000000000000000000;;			actual := awsArnEquals(g.L, g.R)
0000000000000000000000000000000000000000;;			if actual != g.Expected {
0000000000000000000000000000000000000000;;				t.Errorf("unexpected result from awsArnEquals(%v, %v)", g.L, g.R)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

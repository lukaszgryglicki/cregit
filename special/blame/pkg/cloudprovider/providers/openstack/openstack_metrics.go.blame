0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
ffcbdcf5e0b3ef501d14210ff3bd510fb91cd7fd;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package openstack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "github.com/prometheus/client_golang/prometheus"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		OpenstackSubsystem         = "openstack"
0000000000000000000000000000000000000000;;		OpenstackOperationKey      = "cloudprovider_openstack_api_request_duration_seconds"
0000000000000000000000000000000000000000;;		OpenstackOperationErrorKey = "cloudprovider_openstack_api_request_errors"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		OpenstackOperationsLatency = prometheus.NewHistogramVec(
0000000000000000000000000000000000000000;;			prometheus.HistogramOpts{
0000000000000000000000000000000000000000;;				Subsystem: OpenstackSubsystem,
0000000000000000000000000000000000000000;;				Name:      OpenstackOperationKey,
0000000000000000000000000000000000000000;;				Help:      "Latency of openstack api call",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			[]string{"request"},
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		OpenstackApiRequestErrors = prometheus.NewCounterVec(
0000000000000000000000000000000000000000;;			prometheus.CounterOpts{
0000000000000000000000000000000000000000;;				Subsystem: OpenstackSubsystem,
0000000000000000000000000000000000000000;;				Name:      OpenstackOperationErrorKey,
0000000000000000000000000000000000000000;;				Help:      "Cumulative number of openstack Api call errors",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			[]string{"request"},
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RegisterMetrics() {
0000000000000000000000000000000000000000;;		prometheus.MustRegister(OpenstackOperationsLatency)
0000000000000000000000000000000000000000;;		prometheus.MustRegister(OpenstackApiRequestErrors)
0000000000000000000000000000000000000000;;	}

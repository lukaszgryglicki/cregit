0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
29102b194932868f4fdab0d8ee5e62b4ae5b5e21;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package main
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/plugin/cmd/kube-scheduler/app"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/plugin/cmd/kube-scheduler/app/options"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewScheduler creates a new hyperkube Server object that includes the
0000000000000000000000000000000000000000;;	// description and flags.
0000000000000000000000000000000000000000;;	func NewScheduler() *Server {
0000000000000000000000000000000000000000;;		s := options.NewSchedulerServer()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		hks := Server{
0000000000000000000000000000000000000000;;			name:            "scheduler",
0000000000000000000000000000000000000000;;			AlternativeName: "kube-scheduler",
0000000000000000000000000000000000000000;;			SimpleUsage:     "scheduler",
0000000000000000000000000000000000000000;;			Long:            "Implements a Kubernetes scheduler.  This will assign pods to kubelets based on capacity and constraints.",
0000000000000000000000000000000000000000;;			Run: func(_ *Server, _ []string) error {
0000000000000000000000000000000000000000;;				return app.Run(s)
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		s.AddFlags(hks.Flags())
0000000000000000000000000000000000000000;;		return &hks
0000000000000000000000000000000000000000;;	}

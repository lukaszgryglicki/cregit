0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
9af41a2277cc10d22542d6bead2abaa457afc585;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package main
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/cmd/kube-controller-manager/app"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/cmd/kube-controller-manager/app/options"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewKubeControllerManager creates a new hyperkube Server object that includes the
0000000000000000000000000000000000000000;;	// description and flags.
0000000000000000000000000000000000000000;;	func NewKubeControllerManager() *Server {
0000000000000000000000000000000000000000;;		s := options.NewCMServer()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		hks := Server{
0000000000000000000000000000000000000000;;			name:            "controller-manager",
0000000000000000000000000000000000000000;;			AlternativeName: "kube-controller-manager",
0000000000000000000000000000000000000000;;			SimpleUsage:     "controller-manager",
0000000000000000000000000000000000000000;;			Long:            "A server that runs a set of active components. This includes replication controllers, service endpoints and nodes.",
0000000000000000000000000000000000000000;;			Run: func(_ *Server, args []string) error {
0000000000000000000000000000000000000000;;				return app.Run(s)
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		s.AddFlags(hks.Flags(), app.KnownControllers(), app.ControllersDisabledByDefault.List())
0000000000000000000000000000000000000000;;		return &hks
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
2694eea30053a264cd6503b667c10a4f7938c265;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package main
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/kubectl/cmd"
0000000000000000000000000000000000000000;;		cmdutil "k8s.io/kubernetes/pkg/kubectl/cmd/util"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Create a Server that implements the kubectl command
0000000000000000000000000000000000000000;;	func NewKubectlServer() *Server {
0000000000000000000000000000000000000000;;		cmd := cmd.NewKubectlCommand(cmdutil.NewFactory(nil), os.Stdin, os.Stdout, os.Stderr)
0000000000000000000000000000000000000000;;		localFlags := cmd.LocalFlags()
0000000000000000000000000000000000000000;;		localFlags.SetInterspersed(false)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return &Server{
0000000000000000000000000000000000000000;;			name:        "kubectl",
0000000000000000000000000000000000000000;;			SimpleUsage: "Kubernetes command line client",
0000000000000000000000000000000000000000;;			Long:        "Kubernetes command line client",
0000000000000000000000000000000000000000;;			Run: func(s *Server, args []string) error {
0000000000000000000000000000000000000000;;				cmd.SetArgs(args)
0000000000000000000000000000000000000000;;				return cmd.Execute()
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			flags: localFlags,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

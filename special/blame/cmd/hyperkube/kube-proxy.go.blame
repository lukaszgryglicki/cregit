0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
421daa551e1b20ba8ab4f62883e5016efcc2ef4a;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package main
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"flag"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/server/healthz"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/cmd/kube-proxy/app"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewKubeProxy creates a new hyperkube Server object that includes the
0000000000000000000000000000000000000000;;	// description and flags.
0000000000000000000000000000000000000000;;	func NewKubeProxy() *Server {
0000000000000000000000000000000000000000;;		healthz.DefaultHealthz()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		command := app.NewProxyCommand()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		hks := Server{
0000000000000000000000000000000000000000;;			name:            "proxy",
0000000000000000000000000000000000000000;;			AlternativeName: "kube-proxy",
0000000000000000000000000000000000000000;;			SimpleUsage:     "proxy",
0000000000000000000000000000000000000000;;			Long:            command.Long,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		serverFlags := hks.Flags()
0000000000000000000000000000000000000000;;		serverFlags.AddFlagSet(command.Flags())
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// FIXME this is here because hyperkube does its own flag parsing, and we need
0000000000000000000000000000000000000000;;		// the command to know about the go flag set. Remove this once hyperkube is
0000000000000000000000000000000000000000;;		// refactored to use cobra throughout.
0000000000000000000000000000000000000000;;		command.Flags().AddGoFlagSet(flag.CommandLine)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		hks.Run = func(_ *Server, args []string) error {
0000000000000000000000000000000000000000;;			command.SetArgs(args)
0000000000000000000000000000000000000000;;			return command.Execute()
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return &hks
0000000000000000000000000000000000000000;;	}

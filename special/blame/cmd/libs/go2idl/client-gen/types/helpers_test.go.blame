0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
ec4c5c9e1a728156435984aa0be9e1a7cb561c83;pkg/client/clientset_generated/internalclientset/typed/core/unversioned/fake/fake_node_expansion.go[pkg/client/clientset_generated/internalclientset/typed/core/unversioned/fake/fake_node_expansion.go][cmd/libs/go2idl/client-gen/types/helpers_test.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package types
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"reflect"
0000000000000000000000000000000000000000;;		"sort"
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestVersionSort(t *testing.T) {
0000000000000000000000000000000000000000;;		unsortedVersions := []string{"v4beta1", "v2beta1", "v2alpha1", "v3", "v1"}
0000000000000000000000000000000000000000;;		expected := []string{"v2alpha1", "v2beta1", "v4beta1", "v1", "v3"}
0000000000000000000000000000000000000000;;		sort.Sort(sortableSliceOfVersions(unsortedVersions))
0000000000000000000000000000000000000000;;		if !reflect.DeepEqual(unsortedVersions, expected) {
0000000000000000000000000000000000000000;;			t.Errorf("expected %#v\ngot %#v", expected, unsortedVersions)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

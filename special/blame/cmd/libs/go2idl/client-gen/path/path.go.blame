0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
2a136c699c192175754b126671d612db9e0228d2;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package path
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "strings"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Vendorless removes the longest match of "*/vendor/" from the front of p.
0000000000000000000000000000000000000000;;	// It is useful if a package locates in vendor/, e.g.,
0000000000000000000000000000000000000000;;	// k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/apis/meta/v1, because gengo
0000000000000000000000000000000000000000;;	// indexes the package with its import path, e.g.,
0000000000000000000000000000000000000000;;	// k8s.io/apimachinery/pkg/apis/meta/v1,
0000000000000000000000000000000000000000;;	func Vendorless(p string) string {
0000000000000000000000000000000000000000;;		if pos := strings.LastIndex(p, "/vendor/"); pos != -1 {
0000000000000000000000000000000000000000;;			return p[pos+len("/vendor/"):]
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return p
0000000000000000000000000000000000000000;;	}

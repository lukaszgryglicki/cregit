0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
15aa708fe0d08d141a4db41c87f2fca5406da413;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package args
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "k8s.io/kubernetes/cmd/libs/go2idl/client-gen/types"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ClientGenArgs is a wrapper for arguments to client-gen.
0000000000000000000000000000000000000000;;	type Args struct {
0000000000000000000000000000000000000000;;		Groups []types.GroupVersions
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// GroupVersionToInputPath is a map between GroupVersion and the path to
0000000000000000000000000000000000000000;;		// the respective types.go. We still need GroupVersions in the struct because
0000000000000000000000000000000000000000;;		// we need an order.
0000000000000000000000000000000000000000;;		GroupVersionToInputPath map[types.GroupVersion]string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Overrides for which types should be included in the client.
0000000000000000000000000000000000000000;;		IncludedTypesOverrides map[types.GroupVersion][]string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// ClientsetName is the name of the clientset to be generated. It's
0000000000000000000000000000000000000000;;		// populated from command-line arguments.
0000000000000000000000000000000000000000;;		ClientsetName string
0000000000000000000000000000000000000000;;		// ClientsetOutputPath is the path the clientset will be generated at. It's
0000000000000000000000000000000000000000;;		// populated from command-line arguments.
0000000000000000000000000000000000000000;;		ClientsetOutputPath string
0000000000000000000000000000000000000000;;		// ClientsetAPIPath is the default API path for generated clients.
0000000000000000000000000000000000000000;;		ClientsetAPIPath string
0000000000000000000000000000000000000000;;		// ClientsetOnly determines if we should generate the clients for groups and
0000000000000000000000000000000000000000;;		// types along with the clientset. It's populated from command-line
0000000000000000000000000000000000000000;;		// arguments.
0000000000000000000000000000000000000000;;		ClientsetOnly bool
0000000000000000000000000000000000000000;;		// FakeClient determines if client-gen generates the fake clients.
0000000000000000000000000000000000000000;;		FakeClient bool
0000000000000000000000000000000000000000;;		// CmdArgs is the command line arguments supplied when the client-gen is called.
0000000000000000000000000000000000000000;;		CmdArgs string
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
1c71eacf5714484877a200c41dd73900f5e67cb0;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package main
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/stretchr/testify/assert"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestHeaderLines(t *testing.T) {
0000000000000000000000000000000000000000;;		var cases = []struct {
0000000000000000000000000000000000000000;;			in       string
0000000000000000000000000000000000000000;;			expected string
0000000000000000000000000000000000000000;;		}{
0000000000000000000000000000000000000000;;			{"", ""},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"# ok",
0000000000000000000000000000000000000000;;				"# ok",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"## ok",
0000000000000000000000000000000000000000;;				"## ok",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"##### ok",
0000000000000000000000000000000000000000;;				"##### ok",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"##fix",
0000000000000000000000000000000000000000;;				"## fix",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"foo\n\n##fix\n\nbar",
0000000000000000000000000000000000000000;;				"foo\n\n## fix\n\nbar",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"foo\n##fix\nbar",
0000000000000000000000000000000000000000;;				"foo\n\n## fix\n\nbar",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"foo\n```\n##fix\n```\nbar",
0000000000000000000000000000000000000000;;				"foo\n```\n##fix\n```\nbar",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"foo\n#fix1\n##fix2\nbar",
0000000000000000000000000000000000000000;;				"foo\n\n# fix1\n\n## fix2\n\nbar",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		for i, c := range cases {
0000000000000000000000000000000000000000;;			in := getMungeLines(c.in)
0000000000000000000000000000000000000000;;			expected := getMungeLines(c.expected)
0000000000000000000000000000000000000000;;			actual, err := updateHeaderLines("filename.md", in)
0000000000000000000000000000000000000000;;			assert.NoError(t, err)
0000000000000000000000000000000000000000;;			if !actual.Equal(expected) {
0000000000000000000000000000000000000000;;				t.Errorf("case[%d]: expected %q got %q", i, c.expected, actual.String())
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2015 The Kubernetes Authors.
39447deaf339382facfc4543d73db4264b1dcbb9;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package main
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestKubectlDashF(t *testing.T) {
0000000000000000000000000000000000000000;;		var cases = []struct {
0000000000000000000000000000000000000000;;			in string
0000000000000000000000000000000000000000;;			ok bool
0000000000000000000000000000000000000000;;		}{
0000000000000000000000000000000000000000;;			// No match
0000000000000000000000000000000000000000;;			{"", true},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\nBar\n",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\nkubectl blah blech\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```shell\nkubectl blah blech\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create blech\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			// Special cases
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f -\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f-\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f FILENAME\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -fFILENAME\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f http://google.com/foobar\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -fhttp://google.com/foobar\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f ./foobar\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f./foobar\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f /foobar\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f/foobar\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f~/foobar\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			// Real checks
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -f mungedocs.go\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah create -fmungedocs.go\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah update -f mungedocs.go\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah update -fmungedocs.go\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah replace -f mungedocs.go\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah replace -fmungedocs.go\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah delete -f mungedocs.go\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah delete -fmungedocs.go\n```\nBar",
0000000000000000000000000000000000000000;;				true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			// Failures
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah delete -f does_not_exist\n```\nBar",
0000000000000000000000000000000000000000;;				false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				"Foo\n```\nkubectl -blah delete -fdoes_not_exist\n```\nBar",
0000000000000000000000000000000000000000;;				false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		for i, c := range cases {
0000000000000000000000000000000000000000;;			repoRoot = ""
0000000000000000000000000000000000000000;;			in := getMungeLines(c.in)
0000000000000000000000000000000000000000;;			_, err := updateKubectlFileTargets("filename.md", in)
0000000000000000000000000000000000000000;;			if err != nil && c.ok {
0000000000000000000000000000000000000000;;				t.Errorf("case[%d]: expected success, got %v", i, err)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			if err == nil && !c.ok {
0000000000000000000000000000000000000000;;				t.Errorf("case[%d]: unexpected success", i)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

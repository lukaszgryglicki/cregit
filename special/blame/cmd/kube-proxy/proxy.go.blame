0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
9fbdd758c00a160e902805405146a779d3acf5d8;cmd/proxy/proxy.go[cmd/proxy/proxy.go][cmd/kube-proxy/proxy.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package main
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		goflag "flag"
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/spf13/pflag"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		utilflag "k8s.io/apiserver/pkg/util/flag"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/util/logs"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/cmd/kube-proxy/app"
0000000000000000000000000000000000000000;;		_ "k8s.io/kubernetes/pkg/client/metrics/prometheus" // for client metric registration
0000000000000000000000000000000000000000;;		_ "k8s.io/kubernetes/pkg/version/prometheus"        // for version metric registration
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func main() {
0000000000000000000000000000000000000000;;		command := app.NewProxyCommand()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// TODO: once we switch everything over to Cobra commands, we can go back to calling
0000000000000000000000000000000000000000;;		// utilflag.InitFlags() (by removing its pflag.Parse() call). For now, we have to set the
0000000000000000000000000000000000000000;;		// normalize func and add the go flag set by hand.
0000000000000000000000000000000000000000;;		pflag.CommandLine.SetNormalizeFunc(utilflag.WordSepNormalizeFunc)
0000000000000000000000000000000000000000;;		pflag.CommandLine.AddGoFlagSet(goflag.CommandLine)
0000000000000000000000000000000000000000;;		// utilflag.InitFlags()
0000000000000000000000000000000000000000;;		logs.InitLogs()
0000000000000000000000000000000000000000;;		defer logs.FlushLogs()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := command.Execute(); err != nil {
0000000000000000000000000000000000000000;;			os.Exit(1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

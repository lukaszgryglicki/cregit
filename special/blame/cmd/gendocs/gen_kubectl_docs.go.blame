0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
ffa72511d3c30edf9227f4ea1e3d5cced91678aa;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package main
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"io/ioutil"
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/spf13/cobra/doc"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/cmd/genutils"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/kubectl/cmd"
0000000000000000000000000000000000000000;;		cmdutil "k8s.io/kubernetes/pkg/kubectl/cmd/util"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func main() {
0000000000000000000000000000000000000000;;		// use os.Args instead of "flags" because "flags" will mess up the man pages!
0000000000000000000000000000000000000000;;		path := "docs/"
0000000000000000000000000000000000000000;;		if len(os.Args) == 2 {
0000000000000000000000000000000000000000;;			path = os.Args[1]
0000000000000000000000000000000000000000;;		} else if len(os.Args) > 2 {
0000000000000000000000000000000000000000;;			fmt.Fprintf(os.Stderr, "usage: %s [output directory]\n", os.Args[0])
0000000000000000000000000000000000000000;;			os.Exit(1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		outDir, err := genutils.OutDir(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			fmt.Fprintf(os.Stderr, "failed to get output directory: %v\n", err)
0000000000000000000000000000000000000000;;			os.Exit(1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Set environment variables used by kubectl so the output is consistent,
0000000000000000000000000000000000000000;;		// regardless of where we run.
0000000000000000000000000000000000000000;;		os.Setenv("HOME", "/home/username")
0000000000000000000000000000000000000000;;		// TODO os.Stdin should really be something like ioutil.Discard, but a Reader
0000000000000000000000000000000000000000;;		kubectl := cmd.NewKubectlCommand(cmdutil.NewFactory(nil), os.Stdin, ioutil.Discard, ioutil.Discard)
0000000000000000000000000000000000000000;;		doc.GenMarkdownTree(kubectl, outDir)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
763769aa81aa862f41de7a8de94d3d9fba22ca47;pkg/kubeadm/images/images.go[pkg/kubeadm/images/images.go][cmd/kubeadm/app/images/images.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package images
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"runtime"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		kubeadmapi "k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		KubeEtcdImage              = "etcd"
0000000000000000000000000000000000000000;;		KubeAPIServerImage         = "apiserver"
0000000000000000000000000000000000000000;;		KubeControllerManagerImage = "controller-manager"
0000000000000000000000000000000000000000;;		KubeSchedulerImage         = "scheduler"
0000000000000000000000000000000000000000;;		KubeProxyImage             = "proxy"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		etcdVersion = "3.0.17"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetCoreImage(image string, cfg *kubeadmapi.MasterConfiguration, overrideImage string) string {
0000000000000000000000000000000000000000;;		if overrideImage != "" {
0000000000000000000000000000000000000000;;			return overrideImage
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		repoPrefix := cfg.ImageRepository
0000000000000000000000000000000000000000;;		return map[string]string{
0000000000000000000000000000000000000000;;			KubeEtcdImage:              fmt.Sprintf("%s/%s-%s:%s", repoPrefix, "etcd", runtime.GOARCH, etcdVersion),
0000000000000000000000000000000000000000;;			KubeAPIServerImage:         fmt.Sprintf("%s/%s-%s:%s", repoPrefix, "kube-apiserver", runtime.GOARCH, cfg.KubernetesVersion),
0000000000000000000000000000000000000000;;			KubeControllerManagerImage: fmt.Sprintf("%s/%s-%s:%s", repoPrefix, "kube-controller-manager", runtime.GOARCH, cfg.KubernetesVersion),
0000000000000000000000000000000000000000;;			KubeSchedulerImage:         fmt.Sprintf("%s/%s-%s:%s", repoPrefix, "kube-scheduler", runtime.GOARCH, cfg.KubernetesVersion),
0000000000000000000000000000000000000000;;			KubeProxyImage:             fmt.Sprintf("%s/%s-%s:%s", repoPrefix, "kube-proxy", runtime.GOARCH, cfg.KubernetesVersion),
0000000000000000000000000000000000000000;;		}[image]
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
6eaae4d38549241ded40676b29adc185f42702fc;cmd/kubeadm/app/apis/kubeadm/fuzzer.go[cmd/kubeadm/app/apis/kubeadm/fuzzer.go][cmd/kubeadm/app/apis/kubeadm/fuzzer/fuzzer.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package fuzzer
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/google/gofuzz"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		apitesting "k8s.io/apimachinery/pkg/api/testing"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func KubeadmFuzzerFuncs(t apitesting.TestingCommon) []interface{} {
0000000000000000000000000000000000000000;;		return []interface{}{
0000000000000000000000000000000000000000;;			func(obj *kubeadm.MasterConfiguration, c fuzz.Continue) {
0000000000000000000000000000000000000000;;				c.FuzzNoCustom(obj)
0000000000000000000000000000000000000000;;				obj.KubernetesVersion = "v10"
0000000000000000000000000000000000000000;;				obj.API.BindPort = 20
0000000000000000000000000000000000000000;;				obj.API.AdvertiseAddress = "foo"
0000000000000000000000000000000000000000;;				obj.Networking.ServiceSubnet = "foo"
0000000000000000000000000000000000000000;;				obj.Networking.DNSDomain = "foo"
0000000000000000000000000000000000000000;;				obj.AuthorizationModes = []string{"foo"}
0000000000000000000000000000000000000000;;				obj.CertificatesDir = "foo"
0000000000000000000000000000000000000000;;				obj.APIServerCertSANs = []string{}
0000000000000000000000000000000000000000;;				obj.Token = "foo"
0000000000000000000000000000000000000000;;				obj.Etcd.Image = "foo"
0000000000000000000000000000000000000000;;				obj.Etcd.DataDir = "foo"
0000000000000000000000000000000000000000;;				obj.ImageRepository = "foo"
0000000000000000000000000000000000000000;;				obj.UnifiedControlPlaneImage = "foo"
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			func(obj *kubeadm.NodeConfiguration, c fuzz.Continue) {
0000000000000000000000000000000000000000;;				c.FuzzNoCustom(obj)
0000000000000000000000000000000000000000;;				obj.CACertPath = "foo"
0000000000000000000000000000000000000000;;				obj.CACertPath = "foo"
0000000000000000000000000000000000000000;;				obj.DiscoveryFile = "foo"
0000000000000000000000000000000000000000;;				obj.DiscoveryToken = "foo"
0000000000000000000000000000000000000000;;				obj.DiscoveryTokenAPIServers = []string{"foo"}
0000000000000000000000000000000000000000;;				obj.TLSBootstrapToken = "foo"
0000000000000000000000000000000000000000;;				obj.Token = "foo"
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

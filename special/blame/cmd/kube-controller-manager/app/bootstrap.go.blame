0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
78082380254650d84f0bb664ba9d5c09917916dd;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package app
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "k8s.io/kubernetes/pkg/controller/bootstrap"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func startBootstrapSignerController(ctx ControllerContext) (bool, error) {
0000000000000000000000000000000000000000;;		go bootstrap.NewBootstrapSigner(
0000000000000000000000000000000000000000;;			ctx.ClientBuilder.ClientGoClientOrDie("bootstrap-signer"),
0000000000000000000000000000000000000000;;			bootstrap.DefaultBootstrapSignerOptions(),
0000000000000000000000000000000000000000;;		).Run(ctx.Stop)
0000000000000000000000000000000000000000;;		return true, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func startTokenCleanerController(ctx ControllerContext) (bool, error) {
0000000000000000000000000000000000000000;;		go bootstrap.NewTokenCleaner(
0000000000000000000000000000000000000000;;			ctx.ClientBuilder.ClientGoClientOrDie("token-cleaner"),
0000000000000000000000000000000000000000;;			bootstrap.DefaultTokenCleanerOptions(),
0000000000000000000000000000000000000000;;		).Run(ctx.Stop)
0000000000000000000000000000000000000000;;		return true, nil
0000000000000000000000000000000000000000;;	}

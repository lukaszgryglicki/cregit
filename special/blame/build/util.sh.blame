0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Common utility functions for build scripts
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/..
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	function kube::release::semantic_version() {
0000000000000000000000000000000000000000;;	  # This takes:
0000000000000000000000000000000000000000;;	  # Client Version: version.Info{Major:"1", Minor:"1+", GitVersion:"v1.1.0-alpha.0.2328+3c0a05de4a38e3", GitCommit:"3c0a05de4a38e355d147dbfb4d85bad6d2d73bb9", GitTreeState:"clean"}
0000000000000000000000000000000000000000;;	  # and spits back the GitVersion piece in a way that is somewhat
0000000000000000000000000000000000000000;;	  # resilient to the other fields changing (we hope)
0000000000000000000000000000000000000000;;	  ${KUBE_ROOT}/cluster/kubectl.sh version --client | sed "s/, */\\
0000000000000000000000000000000000000000;;	/g" | egrep "^GitVersion:" | cut -f2 -d: | cut -f2 -d\"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	function kube::release::semantic_image_tag_version() {
0000000000000000000000000000000000000000;;	    printf "$(kube::release::semantic_version)" | tr + _
0000000000000000000000000000000000000000;;	}

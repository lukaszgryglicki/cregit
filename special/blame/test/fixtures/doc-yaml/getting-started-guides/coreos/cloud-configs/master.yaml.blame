0000000000000000000000000000000000000000;;	#cloud-config
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	---
0000000000000000000000000000000000000000;;	write-files:
0000000000000000000000000000000000000000;;	  - path: /etc/conf.d/nfs
0000000000000000000000000000000000000000;;	    permissions: '0644'
0000000000000000000000000000000000000000;;	    content: |
0000000000000000000000000000000000000000;;	      OPTS_RPC_MOUNTD=""
0000000000000000000000000000000000000000;;	  - path: /opt/bin/wupiao
0000000000000000000000000000000000000000;;	    permissions: '0755'
0000000000000000000000000000000000000000;;	    content: |
0000000000000000000000000000000000000000;;	      #!/bin/bash
0000000000000000000000000000000000000000;;	      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen
0000000000000000000000000000000000000000;;	      [ -n "$1" ] && \
0000000000000000000000000000000000000000;;	        until curl -o /dev/null -sIf http://${1}; do \
0000000000000000000000000000000000000000;;	          sleep 1 && echo .;
0000000000000000000000000000000000000000;;	        done;
0000000000000000000000000000000000000000;;	      exit $?
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	hostname: master
0000000000000000000000000000000000000000;;	coreos:
0000000000000000000000000000000000000000;;	  etcd2:
0000000000000000000000000000000000000000;;	    name: master
0000000000000000000000000000000000000000;;	    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
0000000000000000000000000000000000000000;;	    advertise-client-urls: http://$private_ipv4:2379,http://$private_ipv4:4001
0000000000000000000000000000000000000000;;	    initial-cluster-token: k8s_etcd
0000000000000000000000000000000000000000;;	    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001
0000000000000000000000000000000000000000;;	    initial-advertise-peer-urls: http://$private_ipv4:2380
0000000000000000000000000000000000000000;;	    initial-cluster: master=http://$private_ipv4:2380
0000000000000000000000000000000000000000;;	    initial-cluster-state: new
0000000000000000000000000000000000000000;;	  fleet:
0000000000000000000000000000000000000000;;	    metadata: "role=master"
0000000000000000000000000000000000000000;;	  units:
0000000000000000000000000000000000000000;;	    - name: etcd2.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	    - name: generate-serviceaccount-key.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        Description=Generate service-account key file
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
0000000000000000000000000000000000000000;;	        ExecStart=/bin/openssl genrsa -out /opt/bin/kube-serviceaccount.key 2048 2>/dev/null
0000000000000000000000000000000000000000;;	        RemainAfterExit=yes
0000000000000000000000000000000000000000;;	        Type=oneshot
0000000000000000000000000000000000000000;;	    - name: setup-network-environment.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        Description=Setup Network Environment
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kelseyhightower/setup-network-environment
0000000000000000000000000000000000000000;;	        Requires=network-online.target
0000000000000000000000000000000000000000;;	        After=network-online.target
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
0000000000000000000000000000000000000000;;	        ExecStartPre=/usr/bin/curl -L -o /opt/bin/setup-network-environment -z /opt/bin/setup-network-environment https://github.com/kelseyhightower/setup-network-environment/releases/download/v1.0.0/setup-network-environment
0000000000000000000000000000000000000000;;	        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
0000000000000000000000000000000000000000;;	        ExecStart=/opt/bin/setup-network-environment
0000000000000000000000000000000000000000;;	        RemainAfterExit=yes
0000000000000000000000000000000000000000;;	        Type=oneshot
0000000000000000000000000000000000000000;;	    - name: fleet.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	    - name: flanneld.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      drop-ins:
0000000000000000000000000000000000000000;;	        - name: 50-network-config.conf
0000000000000000000000000000000000000000;;	          content: |
0000000000000000000000000000000000000000;;	            [Unit]
0000000000000000000000000000000000000000;;	            Requires=etcd2.service
0000000000000000000000000000000000000000;;	            [Service]
0000000000000000000000000000000000000000;;	            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.244.0.0/16", "Backend": {"Type": "vxlan"}}'
0000000000000000000000000000000000000000;;	    - name: docker.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	    - name: kube-apiserver.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        Description=Kubernetes API Server
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	        Requires=setup-network-environment.service etcd2.service generate-serviceaccount-key.service
0000000000000000000000000000000000000000;;	        After=setup-network-environment.service etcd2.service generate-serviceaccount-key.service
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        EnvironmentFile=/etc/network-environment
0000000000000000000000000000000000000000;;	        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
0000000000000000000000000000000000000000;;	        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-apiserver -z /opt/bin/kube-apiserver https://storage.googleapis.com/kubernetes-release/release/v1.1.2/bin/linux/amd64/kube-apiserver
0000000000000000000000000000000000000000;;	        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-apiserver
0000000000000000000000000000000000000000;;	        ExecStartPre=/opt/bin/wupiao 127.0.0.1:2379/v2/machines
0000000000000000000000000000000000000000;;	        ExecStart=/opt/bin/kube-apiserver \
0000000000000000000000000000000000000000;;	        --service-account-key-file=/opt/bin/kube-serviceaccount.key \
0000000000000000000000000000000000000000;;	        --service-account-lookup=true \
0000000000000000000000000000000000000000;;	        --admission-control=Initializers,NamespaceLifecycle,NamespaceAutoProvision,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota \
0000000000000000000000000000000000000000;;	        --runtime-config=api/v1 \
0000000000000000000000000000000000000000;;	        --allow-privileged=true \
0000000000000000000000000000000000000000;;	        --insecure-bind-address=0.0.0.0 \
0000000000000000000000000000000000000000;;	        --insecure-port=8080 \
0000000000000000000000000000000000000000;;	        --kubelet-https=true \
0000000000000000000000000000000000000000;;	        --secure-port=6443 \
0000000000000000000000000000000000000000;;	        --service-cluster-ip-range=10.100.0.0/16 \
0000000000000000000000000000000000000000;;	        --etcd-servers=http://127.0.0.1:2379 \
0000000000000000000000000000000000000000;;	        --public-address-override=${DEFAULT_IPV4} \
0000000000000000000000000000000000000000;;	        --logtostderr=true
0000000000000000000000000000000000000000;;	        Restart=always
0000000000000000000000000000000000000000;;	        RestartSec=10
0000000000000000000000000000000000000000;;	    - name: kube-controller-manager.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        Description=Kubernetes Controller Manager
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	        Requires=kube-apiserver.service
0000000000000000000000000000000000000000;;	        After=kube-apiserver.service
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-controller-manager -z /opt/bin/kube-controller-manager https://storage.googleapis.com/kubernetes-release/release/v1.1.2/bin/linux/amd64/kube-controller-manager
0000000000000000000000000000000000000000;;	        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-controller-manager
0000000000000000000000000000000000000000;;	        ExecStart=/opt/bin/kube-controller-manager \
0000000000000000000000000000000000000000;;	        --service-account-private-key-file=/opt/bin/kube-serviceaccount.key \
0000000000000000000000000000000000000000;;	        --master=127.0.0.1:8080 \
0000000000000000000000000000000000000000;;	        --logtostderr=true
0000000000000000000000000000000000000000;;	        Restart=always
0000000000000000000000000000000000000000;;	        RestartSec=10
0000000000000000000000000000000000000000;;	    - name: kube-scheduler.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        Description=Kubernetes Scheduler
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	        Requires=kube-apiserver.service
0000000000000000000000000000000000000000;;	        After=kube-apiserver.service
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-scheduler -z /opt/bin/kube-scheduler https://storage.googleapis.com/kubernetes-release/release/v1.1.2/bin/linux/amd64/kube-scheduler
0000000000000000000000000000000000000000;;	        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-scheduler
0000000000000000000000000000000000000000;;	        ExecStart=/opt/bin/kube-scheduler --master=127.0.0.1:8080
0000000000000000000000000000000000000000;;	        Restart=always
0000000000000000000000000000000000000000;;	        RestartSec=10
0000000000000000000000000000000000000000;;	  update:
0000000000000000000000000000000000000000;;	    group: alpha
0000000000000000000000000000000000000000;;	    reboot-strategy: off

0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -e
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	CFG=/opt/redis/redis.conf
0000000000000000000000000000000000000000;;	HOSTNAME=$(hostname)
0000000000000000000000000000000000000000;;	DATADIR="/data"
0000000000000000000000000000000000000000;;	# Port on which redis listens for connections.
0000000000000000000000000000000000000000;;	PORT=6379
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Ping everyone but ourself to see if there's a master. Only one pet starts at
0000000000000000000000000000000000000000;;	# a time, so if we don't see a master we can assume the position is ours.
0000000000000000000000000000000000000000;;	while read -ra LINE; do
0000000000000000000000000000000000000000;;	    if [[ "${LINE}" == *"${HOSTNAME}"* ]]; then
0000000000000000000000000000000000000000;;	        sed -i -e "s|^bind.*$|bind ${LINE}|" ${CFG}
0000000000000000000000000000000000000000;;	    elif [ "$(/opt/redis/redis-cli -h $LINE info | grep role | sed 's,\r$,,')" = "role:master" ]; then
0000000000000000000000000000000000000000;;	        # TODO: More restrictive regex?
0000000000000000000000000000000000000000;;	        sed -i -e "s|^# slaveof.*$|slaveof ${LINE} ${PORT}|" ${CFG}
0000000000000000000000000000000000000000;;	    fi
0000000000000000000000000000000000000000;;	done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Set the data directory for append only log and snapshot files. This should
0000000000000000000000000000000000000000;;	# be a persistent volume for consistency.
0000000000000000000000000000000000000000;;	sed -i -e "s|^.*dir .*$|dir ${DATADIR}|" ${CFG}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# The append only log is written for every SET operation. Without this setting,
0000000000000000000000000000000000000000;;	# redis just snapshots periodically which is only safe for a cache. This will
0000000000000000000000000000000000000000;;	# produce an appendonly.aof file in the configured data dir.
0000000000000000000000000000000000000000;;	sed -i -e "s|^appendonly .*$|appendonly yes|" ${CFG}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Every write triggers an fsync. Recommended default is "everysec", which
0000000000000000000000000000000000000000;;	# is only safe for AP applications.
0000000000000000000000000000000000000000;;	sed -i -e "s|^appendfsync .*$|appendfsync always|" ${CFG}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
eb689f0f7d757737b562770799123eb0dfe02867;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package perftype
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ResourceSeries defines the time series of the resource usage.
0000000000000000000000000000000000000000;;	type ResourceSeries struct {
0000000000000000000000000000000000000000;;		Timestamp            []int64           `json:"ts"`
0000000000000000000000000000000000000000;;		CPUUsageInMilliCores []int64           `json:"cpu"`
0000000000000000000000000000000000000000;;		MemoryRSSInMegaBytes []int64           `json:"memory"`
0000000000000000000000000000000000000000;;		Units                map[string]string `json:"unit"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NodeTimeSeries defines the time series of the operations and the resource
0000000000000000000000000000000000000000;;	// usage.
0000000000000000000000000000000000000000;;	type NodeTimeSeries struct {
0000000000000000000000000000000000000000;;		OperationData map[string][]int64         `json:"op_series,omitempty"`
0000000000000000000000000000000000000000;;		ResourceData  map[string]*ResourceSeries `json:"resource_series,omitempty"`
0000000000000000000000000000000000000000;;		Labels        map[string]string          `json:"labels"`
0000000000000000000000000000000000000000;;		Version       string                     `json:"version"`
0000000000000000000000000000000000000000;;	}

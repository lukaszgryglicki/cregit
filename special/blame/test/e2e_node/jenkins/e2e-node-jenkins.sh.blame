0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Script executed by jenkins to run node e2e tests against gce
0000000000000000000000000000000000000000;;	# Usage: test/e2e_node/jenkins/e2e-node-jenkins.sh <path to properties>
0000000000000000000000000000000000000000;;	# Properties files:
0000000000000000000000000000000000000000;;	# - test/e2e_node/jenkins/jenkins-ci.properties : for running jenkins ci
0000000000000000000000000000000000000000;;	# - test/e2e_node/jenkins/jenkins-pull.properties : for running jenkins pull request builder
0000000000000000000000000000000000000000;;	# - test/e2e_node/jenkins/template.properties : template for creating a properties file to run locally
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -e
0000000000000000000000000000000000000000;;	set -x
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	: "${1:?Usage test/e2e_node/jenkins/e2e-node-jenkins.sh <path to properties>}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	. $1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# indirectly generates test/e2e/generated/bindata.go too
0000000000000000000000000000000000000000;;	make generated_files
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# TODO converge build steps with hack/build-go some day if possible.
0000000000000000000000000000000000000000;;	go build test/e2e_node/environment/conformance.go
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	PARALLELISM=${PARALLELISM:-8}
0000000000000000000000000000000000000000;;	WORKSPACE=${WORKSPACE:-"/tmp/"}
0000000000000000000000000000000000000000;;	ARTIFACTS=${WORKSPACE}/_artifacts
0000000000000000000000000000000000000000;;	TIMEOUT=${TIMEOUT:-"45m"}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	mkdir -p ${ARTIFACTS}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	go run test/e2e_node/runner/remote/run_remote.go  --logtostderr --vmodule=*=4 \
0000000000000000000000000000000000000000;;	  --ssh-env="gce" --ssh-user="$GCE_USER" --zone="$GCE_ZONE" --project="$GCE_PROJECT" \
0000000000000000000000000000000000000000;;	  --hosts="$GCE_HOSTS" --images="$GCE_IMAGES" --image-project="$GCE_IMAGE_PROJECT" \
0000000000000000000000000000000000000000;;	  --image-config-file="$GCE_IMAGE_CONFIG_PATH" --cleanup="$CLEANUP" \
0000000000000000000000000000000000000000;;	  --results-dir="$ARTIFACTS" --ginkgo-flags="--nodes=$PARALLELISM $GINKGO_FLAGS" \
0000000000000000000000000000000000000000;;	  --test-timeout="$TIMEOUT" --test_args="$TEST_ARGS --kubelet-flags=\"$KUBELET_ARGS\"" \
0000000000000000000000000000000000000000;;	  --instance-metadata="$GCE_INSTANCE_METADATA"

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
3ce7b70e0f165d7b10923edc598227a549ddb0e3;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package system
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/docker/engine-api/types"
0000000000000000000000000000000000000000;;		"github.com/stretchr/testify/assert"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestValidateDockerInfo(t *testing.T) {
0000000000000000000000000000000000000000;;		v := &DockerValidator{
0000000000000000000000000000000000000000;;			Reporter: DefaultReporter,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		spec := &DockerSpec{
0000000000000000000000000000000000000000;;			Version:     []string{`1\.(9|1[0-2])\..*`}, // Requires 1.9+
0000000000000000000000000000000000000000;;			GraphDriver: []string{"driver_1", "driver_2"},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		for _, test := range []struct {
0000000000000000000000000000000000000000;;			info types.Info
0000000000000000000000000000000000000000;;			err  bool
0000000000000000000000000000000000000000;;			warn bool
0000000000000000000000000000000000000000;;		}{
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				info: types.Info{Driver: "driver_1", ServerVersion: "1.10.1"},
0000000000000000000000000000000000000000;;				err:  false,
0000000000000000000000000000000000000000;;				warn: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				info: types.Info{Driver: "bad_driver", ServerVersion: "1.9.1"},
0000000000000000000000000000000000000000;;				err:  true,
0000000000000000000000000000000000000000;;				warn: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				info: types.Info{Driver: "driver_2", ServerVersion: "1.8.1"},
0000000000000000000000000000000000000000;;				err:  true,
0000000000000000000000000000000000000000;;				warn: false,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			// TODO remove/change warn value  once sig-node supports 1.13
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				info: types.Info{Driver: "driver_2", ServerVersion: "1.13.1"},
0000000000000000000000000000000000000000;;				err:  false,
0000000000000000000000000000000000000000;;				warn: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			// TODO remove/change warn value once sig-node supports 17.03-0-ce
0000000000000000000000000000000000000000;;			{
0000000000000000000000000000000000000000;;				info: types.Info{Driver: "driver_2", ServerVersion: "17.03.0-ce"},
0000000000000000000000000000000000000000;;				err:  false,
0000000000000000000000000000000000000000;;				warn: true,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		} {
0000000000000000000000000000000000000000;;			warn, err := v.validateDockerInfo(spec, test.info)
0000000000000000000000000000000000000000;;			if !test.err {
0000000000000000000000000000000000000000;;				assert.Nil(t, err, "Expect error not to occur with docker info %+v", test.info)
0000000000000000000000000000000000000000;;			} else {
0000000000000000000000000000000000000000;;				assert.NotNil(t, err, "Expect error to occur with docker info %+v", test.info)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			if !test.warn {
0000000000000000000000000000000000000000;;				assert.Nil(t, warn, "Expect error not to occur with docker info %+v", test.info)
0000000000000000000000000000000000000000;;			} else {
0000000000000000000000000000000000000000;;				assert.NotNil(t, warn, "Expect error to occur with docker info %+v", test.info)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

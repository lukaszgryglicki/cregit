0000000000000000000000000000000000000000;;	apiVersion: apps/v1beta1
0000000000000000000000000000000000000000;;	kind: StatefulSet
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: mysql
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  serviceName: "galera"
0000000000000000000000000000000000000000;;	  replicas: 3
0000000000000000000000000000000000000000;;	  template:
0000000000000000000000000000000000000000;;	    metadata:
0000000000000000000000000000000000000000;;	      labels:
0000000000000000000000000000000000000000;;	        app: mysql
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      initContainers:
0000000000000000000000000000000000000000;;	      - name: install
0000000000000000000000000000000000000000;;	        image: gcr.io/google_containers/galera-install:0.1
0000000000000000000000000000000000000000;;	        imagePullPolicy: Always
0000000000000000000000000000000000000000;;	        args:
0000000000000000000000000000000000000000;;	        - "--work-dir=/work-dir"
0000000000000000000000000000000000000000;;	        volumeMounts:
0000000000000000000000000000000000000000;;	        - name: workdir
0000000000000000000000000000000000000000;;	          mountPath: "/work-dir"
0000000000000000000000000000000000000000;;	        - name: config
0000000000000000000000000000000000000000;;	          mountPath: "/etc/mysql"
0000000000000000000000000000000000000000;;	      - name: bootstrap
0000000000000000000000000000000000000000;;	        image: debian:jessie
0000000000000000000000000000000000000000;;	        command:
0000000000000000000000000000000000000000;;	        - "/work-dir/peer-finder"
0000000000000000000000000000000000000000;;	        args:
0000000000000000000000000000000000000000;;	        - -on-start="/work-dir/on-start.sh"
0000000000000000000000000000000000000000;;	        - "-service=galera"
0000000000000000000000000000000000000000;;	        env:
0000000000000000000000000000000000000000;;	        - name: POD_NAMESPACE
0000000000000000000000000000000000000000;;	          valueFrom:
0000000000000000000000000000000000000000;;	            fieldRef:
0000000000000000000000000000000000000000;;	              apiVersion: v1
0000000000000000000000000000000000000000;;	              fieldPath: metadata.namespace
0000000000000000000000000000000000000000;;	        volumeMounts:
0000000000000000000000000000000000000000;;	        - name: workdir
0000000000000000000000000000000000000000;;	          mountPath: "/work-dir"
0000000000000000000000000000000000000000;;	        - name: config
0000000000000000000000000000000000000000;;	          mountPath: "/etc/mysql"
0000000000000000000000000000000000000000;;	      containers:
0000000000000000000000000000000000000000;;	      - name: mysql
0000000000000000000000000000000000000000;;	        image: gcr.io/google_containers/mysql-galera:e2e
0000000000000000000000000000000000000000;;	        ports:
0000000000000000000000000000000000000000;;	        - containerPort: 3306
0000000000000000000000000000000000000000;;	          name: mysql
0000000000000000000000000000000000000000;;	        - containerPort: 4444
0000000000000000000000000000000000000000;;	          name: sst
0000000000000000000000000000000000000000;;	        - containerPort: 4567
0000000000000000000000000000000000000000;;	          name: replication
0000000000000000000000000000000000000000;;	        - containerPort: 4568
0000000000000000000000000000000000000000;;	          name: ist
0000000000000000000000000000000000000000;;	        args:
0000000000000000000000000000000000000000;;	        - --defaults-file=/etc/mysql/my-galera.cnf
0000000000000000000000000000000000000000;;	        - --user=root
0000000000000000000000000000000000000000;;	        readinessProbe:
0000000000000000000000000000000000000000;;	          # TODO: If docker exec is buggy just use gcr.io/google_containers/mysql-healthz:1.0
0000000000000000000000000000000000000000;;	          exec:
0000000000000000000000000000000000000000;;	            command:
0000000000000000000000000000000000000000;;	            - sh
0000000000000000000000000000000000000000;;	            - -c
0000000000000000000000000000000000000000;;	            - "mysql -u root -e 'show databases;'"
0000000000000000000000000000000000000000;;	          initialDelaySeconds: 15
0000000000000000000000000000000000000000;;	          timeoutSeconds: 5
0000000000000000000000000000000000000000;;	          successThreshold: 2
0000000000000000000000000000000000000000;;	        volumeMounts:
0000000000000000000000000000000000000000;;	        - name: datadir
0000000000000000000000000000000000000000;;	          mountPath: /var/lib/
0000000000000000000000000000000000000000;;	        - name: config
0000000000000000000000000000000000000000;;	          mountPath: /etc/mysql
0000000000000000000000000000000000000000;;	      volumes:
0000000000000000000000000000000000000000;;	      - name: config
0000000000000000000000000000000000000000;;	        emptyDir: {}
0000000000000000000000000000000000000000;;	      - name: workdir
0000000000000000000000000000000000000000;;	        emptyDir: {}
0000000000000000000000000000000000000000;;	  volumeClaimTemplates:
0000000000000000000000000000000000000000;;	  - metadata:
0000000000000000000000000000000000000000;;	      name: datadir
0000000000000000000000000000000000000000;;	      annotations:
0000000000000000000000000000000000000000;;	        volume.alpha.kubernetes.io/storage-class: anything
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      accessModes: [ "ReadWriteOnce" ]
0000000000000000000000000000000000000000;;	      resources:
0000000000000000000000000000000000000000;;	        requests:
0000000000000000000000000000000000000000;;	          storage: 1Gi

0000000000000000000000000000000000000000;;	apiVersion: apps/v1beta1
0000000000000000000000000000000000000000;;	kind: StatefulSet
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: etcd
0000000000000000000000000000000000000000;;	  labels:
0000000000000000000000000000000000000000;;	    app: etcd
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  serviceName: etcd
0000000000000000000000000000000000000000;;	  replicas: 3
0000000000000000000000000000000000000000;;	  template:
0000000000000000000000000000000000000000;;	    metadata:
0000000000000000000000000000000000000000;;	      name: etcd
0000000000000000000000000000000000000000;;	      labels:
0000000000000000000000000000000000000000;;	        app: etcd
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      containers:
0000000000000000000000000000000000000000;;	      - name: etcd
0000000000000000000000000000000000000000;;	        image: gcr.io/google_containers/etcd-amd64:2.2.5
0000000000000000000000000000000000000000;;	        imagePullPolicy: Always
0000000000000000000000000000000000000000;;	        ports:
0000000000000000000000000000000000000000;;	        - containerPort: 2380
0000000000000000000000000000000000000000;;	          name: peer
0000000000000000000000000000000000000000;;	        - containerPort: 2379
0000000000000000000000000000000000000000;;	          name: client
0000000000000000000000000000000000000000;;	        resources:
0000000000000000000000000000000000000000;;	          requests:
0000000000000000000000000000000000000000;;	            cpu: 100m
0000000000000000000000000000000000000000;;	            memory: 512Mi
0000000000000000000000000000000000000000;;	        env:
0000000000000000000000000000000000000000;;	        - name: INITIAL_CLUSTER_SIZE
0000000000000000000000000000000000000000;;	          value: "3"
0000000000000000000000000000000000000000;;	        - name: SET_NAME
0000000000000000000000000000000000000000;;	          value: etcd
0000000000000000000000000000000000000000;;	        volumeMounts:
0000000000000000000000000000000000000000;;	        - name: datadir
0000000000000000000000000000000000000000;;	          mountPath: /var/run/etcd
0000000000000000000000000000000000000000;;	        lifecycle:
0000000000000000000000000000000000000000;;	          preStop:
0000000000000000000000000000000000000000;;	            exec:
0000000000000000000000000000000000000000;;	              command:
0000000000000000000000000000000000000000;;	                - "/bin/sh"
0000000000000000000000000000000000000000;;	                - "-ec"
0000000000000000000000000000000000000000;;	                - |
0000000000000000000000000000000000000000;;	                  EPS=""
0000000000000000000000000000000000000000;;	                  for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
0000000000000000000000000000000000000000;;	                      EPS="${EPS}${EPS:+,}http://${SET_NAME}-${i}.${SET_NAME}:2379"
0000000000000000000000000000000000000000;;	                  done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                  HOSTNAME=$(hostname)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                  member_hash() {
0000000000000000000000000000000000000000;;	                      etcdctl member list | grep http://${HOSTNAME}.${SET_NAME}:2380 | cut -d':' -f1 | cut -d'[' -f1
0000000000000000000000000000000000000000;;	                  }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                  echo "Removing ${HOSTNAME} from etcd cluster"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                  ETCDCTL_ENDPOINT=${EPS} etcdctl member remove $(member_hash)
0000000000000000000000000000000000000000;;	                  if [ $? -eq 0 ]; then
0000000000000000000000000000000000000000;;	                      # Remove everything otherwise the cluster will no longer scale-up
0000000000000000000000000000000000000000;;	                      rm -rf /var/run/etcd/*
0000000000000000000000000000000000000000;;	                  fi
0000000000000000000000000000000000000000;;	        command:
0000000000000000000000000000000000000000;;	          - "/bin/sh"
0000000000000000000000000000000000000000;;	          - "-ec"
0000000000000000000000000000000000000000;;	          - |
0000000000000000000000000000000000000000;;	            HOSTNAME=$(hostname)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            # store member id into PVC for later member replacement
0000000000000000000000000000000000000000;;	            collect_member() {
0000000000000000000000000000000000000000;;	                while ! etcdctl member list &>/dev/null; do sleep 1; done
0000000000000000000000000000000000000000;;	                etcdctl member list | grep http://${HOSTNAME}.${SET_NAME}:2380 | cut -d':' -f1 | cut -d'[' -f1 > /var/run/etcd/member_id
0000000000000000000000000000000000000000;;	                exit 0
0000000000000000000000000000000000000000;;	            }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            eps() {
0000000000000000000000000000000000000000;;	                EPS=""
0000000000000000000000000000000000000000;;	                for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
0000000000000000000000000000000000000000;;	                    EPS="${EPS}${EPS:+,}http://${SET_NAME}-${i}.${SET_NAME}:2379"
0000000000000000000000000000000000000000;;	                done
0000000000000000000000000000000000000000;;	                echo ${EPS}
0000000000000000000000000000000000000000;;	            }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            member_hash() {
0000000000000000000000000000000000000000;;	                etcdctl member list | grep http://${HOSTNAME}.${SET_NAME}:2380 | cut -d':' -f1 | cut -d'[' -f1
0000000000000000000000000000000000000000;;	            }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            # re-joining after failure?
0000000000000000000000000000000000000000;;	            if [ -e /var/run/etcd/default.etcd ]; then
0000000000000000000000000000000000000000;;	                echo "Re-joining etcd member"
0000000000000000000000000000000000000000;;	                member_id=$(cat /var/run/etcd/member_id)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                # re-join member
0000000000000000000000000000000000000000;;	                ETCDCTL_ENDPOINT=$(eps) etcdctl member update ${member_id} http://${HOSTNAME}.${SET_NAME}:2380
0000000000000000000000000000000000000000;;	                exec etcd --name ${HOSTNAME} \
0000000000000000000000000000000000000000;;	                    --listen-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \
0000000000000000000000000000000000000000;;	                    --listen-client-urls http://${HOSTNAME}.${SET_NAME}:2379,http://127.0.0.1:2379 \
0000000000000000000000000000000000000000;;	                    --advertise-client-urls http://${HOSTNAME}.${SET_NAME}:2379 \
0000000000000000000000000000000000000000;;	                    --data-dir /var/run/etcd/default.etcd
0000000000000000000000000000000000000000;;	            fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            # etcd-SET_ID
0000000000000000000000000000000000000000;;	            SET_ID=${HOSTNAME:5:${#HOSTNAME}}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            # adding a new member to existing cluster (assuming all initial pods are available)
0000000000000000000000000000000000000000;;	            if [ "${SET_ID}" -ge ${INITIAL_CLUSTER_SIZE} ]; then
0000000000000000000000000000000000000000;;	                export ETCDCTL_ENDPOINT=$(eps)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                # member already added?
0000000000000000000000000000000000000000;;	                MEMBER_HASH=$(member_hash)
0000000000000000000000000000000000000000;;	                if [ -n "${MEMBER_HASH}" ]; then
0000000000000000000000000000000000000000;;	                    # the member hash exists but for some reason etcd failed
0000000000000000000000000000000000000000;;	                    # as the datadir has not be created, we can remove the member
0000000000000000000000000000000000000000;;	                    # and retrieve new hash
0000000000000000000000000000000000000000;;	                    etcdctl member remove ${MEMBER_HASH}
0000000000000000000000000000000000000000;;	                fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                echo "Adding new member"
0000000000000000000000000000000000000000;;	                etcdctl member add ${HOSTNAME} http://${HOSTNAME}.${SET_NAME}:2380 | grep "^ETCD_" > /var/run/etcd/new_member_envs
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                if [ $? -ne 0 ]; then
0000000000000000000000000000000000000000;;	                    echo "Exiting"
0000000000000000000000000000000000000000;;	                    rm -f /var/run/etcd/new_member_envs
0000000000000000000000000000000000000000;;	                    exit 1
0000000000000000000000000000000000000000;;	                fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                cat /var/run/etcd/new_member_envs
0000000000000000000000000000000000000000;;	                source /var/run/etcd/new_member_envs
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                collect_member &
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	                exec etcd --name ${HOSTNAME} \
0000000000000000000000000000000000000000;;	                    --listen-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \
0000000000000000000000000000000000000000;;	                    --listen-client-urls http://${HOSTNAME}.${SET_NAME}:2379,http://127.0.0.1:2379 \
0000000000000000000000000000000000000000;;	                    --advertise-client-urls http://${HOSTNAME}.${SET_NAME}:2379 \
0000000000000000000000000000000000000000;;	                    --data-dir /var/run/etcd/default.etcd \
0000000000000000000000000000000000000000;;	                    --initial-advertise-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \
0000000000000000000000000000000000000000;;	                    --initial-cluster ${ETCD_INITIAL_CLUSTER} \
0000000000000000000000000000000000000000;;	                    --initial-cluster-state ${ETCD_INITIAL_CLUSTER_STATE}
0000000000000000000000000000000000000000;;	            fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
0000000000000000000000000000000000000000;;	                while true; do
0000000000000000000000000000000000000000;;	                    echo "Waiting for ${SET_NAME}-${i}.${SET_NAME} to come up"
0000000000000000000000000000000000000000;;	                    ping -W 1 -c 1 ${SET_NAME}-${i}.${SET_NAME} > /dev/null && break
0000000000000000000000000000000000000000;;	                    sleep 1s
0000000000000000000000000000000000000000;;	                done
0000000000000000000000000000000000000000;;	            done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            PEERS=""
0000000000000000000000000000000000000000;;	            for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
0000000000000000000000000000000000000000;;	                PEERS="${PEERS}${PEERS:+,}${SET_NAME}-${i}=http://${SET_NAME}-${i}.${SET_NAME}:2380"
0000000000000000000000000000000000000000;;	            done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            collect_member &
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	            # join member
0000000000000000000000000000000000000000;;	            exec etcd --name ${HOSTNAME} \
0000000000000000000000000000000000000000;;	                --initial-advertise-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \
0000000000000000000000000000000000000000;;	                --listen-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \
0000000000000000000000000000000000000000;;	                --listen-client-urls http://${HOSTNAME}.${SET_NAME}:2379,http://127.0.0.1:2379 \
0000000000000000000000000000000000000000;;	                --advertise-client-urls http://${HOSTNAME}.${SET_NAME}:2379 \
0000000000000000000000000000000000000000;;	                --initial-cluster-token etcd-cluster-1 \
0000000000000000000000000000000000000000;;	                --initial-cluster ${PEERS} \
0000000000000000000000000000000000000000;;	                --initial-cluster-state new \
0000000000000000000000000000000000000000;;	                --data-dir /var/run/etcd/default.etcd
0000000000000000000000000000000000000000;;	  volumeClaimTemplates:
0000000000000000000000000000000000000000;;	  - metadata:
0000000000000000000000000000000000000000;;	      name: datadir
0000000000000000000000000000000000000000;;	      annotations:
0000000000000000000000000000000000000000;;	        volume.alpha.kubernetes.io/storage-class: anything
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      accessModes:
0000000000000000000000000000000000000000;;	        - "ReadWriteOnce"
0000000000000000000000000000000000000000;;	      resources:
0000000000000000000000000000000000000000;;	        requests:
0000000000000000000000000000000000000000;;	          # upstream recommended max is 700M
0000000000000000000000000000000000000000;;	          storage: 1Gi
0000000000000000000000000000000000000000;;	

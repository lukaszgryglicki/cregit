0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: Service
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  # This service is meant to be used by clients of the database. It exposes a ClusterIP that will
0000000000000000000000000000000000000000;;	  # automatically load balance connections to the different database pods.
0000000000000000000000000000000000000000;;	  name: cockroachdb-public
0000000000000000000000000000000000000000;;	  labels:
0000000000000000000000000000000000000000;;	    app: cockroachdb
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  ports:
0000000000000000000000000000000000000000;;	  # The main port, served by gRPC, serves Postgres-flavor SQL, internode
0000000000000000000000000000000000000000;;	  # traffic and the cli.
0000000000000000000000000000000000000000;;	  - port: 26257
0000000000000000000000000000000000000000;;	    targetPort: 26257
0000000000000000000000000000000000000000;;	    name: grpc
0000000000000000000000000000000000000000;;	  # The secondary port serves the UI as well as health and debug endpoints.
0000000000000000000000000000000000000000;;	  - port: 8080
0000000000000000000000000000000000000000;;	    targetPort: 8080
0000000000000000000000000000000000000000;;	    name: http
0000000000000000000000000000000000000000;;	  selector:
0000000000000000000000000000000000000000;;	    app: cockroachdb
0000000000000000000000000000000000000000;;	---
0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: Service
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  # This service only exists to create DNS entries for each pod in the stateful
0000000000000000000000000000000000000000;;	  # set such that they can resolve each other's IP addresses. It does not
0000000000000000000000000000000000000000;;	  # create a load-balanced ClusterIP and should not be used directly by clients
0000000000000000000000000000000000000000;;	  # in most circumstances.
0000000000000000000000000000000000000000;;	  name: cockroachdb
0000000000000000000000000000000000000000;;	  labels:
0000000000000000000000000000000000000000;;	    app: cockroachdb
0000000000000000000000000000000000000000;;	  annotations:
0000000000000000000000000000000000000000;;	    # This is needed to make the peer-finder work properly and to help avoid
0000000000000000000000000000000000000000;;	    # edge cases where instance 0 comes up after losing its data and needs to
0000000000000000000000000000000000000000;;	    # decide whether it should create a new cluster or try to join an existing
0000000000000000000000000000000000000000;;	    # one. If it creates a new cluster when it should have joined an existing
0000000000000000000000000000000000000000;;	    # one, we'd end up with two separate clusters listening at the same service
0000000000000000000000000000000000000000;;	    # endpoint, which would be very bad.
0000000000000000000000000000000000000000;;	    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
0000000000000000000000000000000000000000;;	    # Enable automatic monitoring of all instances when Prometheus is running in the cluster.
0000000000000000000000000000000000000000;;	    prometheus.io/scrape: "true"
0000000000000000000000000000000000000000;;	    prometheus.io/path: "_status/vars"
0000000000000000000000000000000000000000;;	    prometheus.io/port: "8080"
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  ports:
0000000000000000000000000000000000000000;;	  - port: 26257
0000000000000000000000000000000000000000;;	    targetPort: 26257
0000000000000000000000000000000000000000;;	    name: grpc
0000000000000000000000000000000000000000;;	  - port: 8080
0000000000000000000000000000000000000000;;	    targetPort: 8080
0000000000000000000000000000000000000000;;	    name: http
0000000000000000000000000000000000000000;;	  clusterIP: None
0000000000000000000000000000000000000000;;	  selector:
0000000000000000000000000000000000000000;;	    app: cockroachdb

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
bde7ef9ac53657447edf7dcfaf0d096f4a98001e;test/e2e/framework/gobindata_util.go[test/e2e/framework/gobindata_util.go][test/e2e/generated/gobindata_util.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package generated
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	//go:generate ../../../hack/generate-bindata.sh
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "github.com/golang/glog"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	ReadOrDie reads a file from gobindata.
0000000000000000000000000000000000000000;;	Relies heavily on the successful generation of build artifacts as per the go:generate directives above.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	func ReadOrDie(filePath string) []byte {
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		fileBytes, err := Asset(filePath)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			gobindataMsg := "An error occured, possibly gobindata doesn't know about the file you're opening. For questions on maintaining gobindata, contact the sig-testing group."
0000000000000000000000000000000000000000;;			glog.Infof("Available gobindata files: %v ", AssetNames())
0000000000000000000000000000000000000000;;			glog.Fatalf("Failed opening %v , with error %v.  %v.", filePath, err, gobindataMsg)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return fileBytes
0000000000000000000000000000000000000000;;	}

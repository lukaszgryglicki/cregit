0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: Service
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: redis-master
0000000000000000000000000000000000000000;;	  labels:
0000000000000000000000000000000000000000;;	    app: redis
0000000000000000000000000000000000000000;;	    tier: backend
0000000000000000000000000000000000000000;;	    role: master
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  ports:
0000000000000000000000000000000000000000;;	  - port: 6379
0000000000000000000000000000000000000000;;	    targetPort: 6379
0000000000000000000000000000000000000000;;	  selector:
0000000000000000000000000000000000000000;;	    app: redis
0000000000000000000000000000000000000000;;	    tier: backend
0000000000000000000000000000000000000000;;	    role: master
0000000000000000000000000000000000000000;;	---
0000000000000000000000000000000000000000;;	apiVersion: extensions/v1beta1
0000000000000000000000000000000000000000;;	kind: Deployment
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: redis-master
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  replicas: 1
0000000000000000000000000000000000000000;;	  template:
0000000000000000000000000000000000000000;;	    metadata:
0000000000000000000000000000000000000000;;	      labels:
0000000000000000000000000000000000000000;;	        app: redis
0000000000000000000000000000000000000000;;	        role: master
0000000000000000000000000000000000000000;;	        tier: backend
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      containers:
0000000000000000000000000000000000000000;;	      - name: master
0000000000000000000000000000000000000000;;	        image: gcr.io/google_containers/redis:e2e  # or just image: redis
0000000000000000000000000000000000000000;;	        resources:
0000000000000000000000000000000000000000;;	          requests:
0000000000000000000000000000000000000000;;	            cpu: 100m
0000000000000000000000000000000000000000;;	            memory: 100Mi
0000000000000000000000000000000000000000;;	        ports:
0000000000000000000000000000000000000000;;	        - containerPort: 6379
0000000000000000000000000000000000000000;;	---
0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: Service
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: redis-slave
0000000000000000000000000000000000000000;;	  labels:
0000000000000000000000000000000000000000;;	    app: redis
0000000000000000000000000000000000000000;;	    tier: backend
0000000000000000000000000000000000000000;;	    role: slave
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  ports:
0000000000000000000000000000000000000000;;	  - port: 6379
0000000000000000000000000000000000000000;;	  selector:
0000000000000000000000000000000000000000;;	    app: redis
0000000000000000000000000000000000000000;;	    tier: backend
0000000000000000000000000000000000000000;;	    role: slave
0000000000000000000000000000000000000000;;	---
0000000000000000000000000000000000000000;;	apiVersion: extensions/v1beta1
0000000000000000000000000000000000000000;;	kind: Deployment
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: redis-slave
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  replicas: 2
0000000000000000000000000000000000000000;;	  template:
0000000000000000000000000000000000000000;;	    metadata:
0000000000000000000000000000000000000000;;	      labels:
0000000000000000000000000000000000000000;;	        app: redis
0000000000000000000000000000000000000000;;	        role: slave
0000000000000000000000000000000000000000;;	        tier: backend
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      containers:
0000000000000000000000000000000000000000;;	      - name: slave
0000000000000000000000000000000000000000;;	        image: gcr.io/google_samples/gb-redisslave:v1
0000000000000000000000000000000000000000;;	        resources:
0000000000000000000000000000000000000000;;	          requests:
0000000000000000000000000000000000000000;;	            cpu: 100m
0000000000000000000000000000000000000000;;	            memory: 100Mi
0000000000000000000000000000000000000000;;	        env:
0000000000000000000000000000000000000000;;	        - name: GET_HOSTS_FROM
0000000000000000000000000000000000000000;;	          value: dns
0000000000000000000000000000000000000000;;	          # If your cluster config does not include a dns service, then to
0000000000000000000000000000000000000000;;	          # instead access an environment variable to find the master
0000000000000000000000000000000000000000;;	          # service's host, comment out the 'value: dns' line above, and
0000000000000000000000000000000000000000;;	          # uncomment the line below:
0000000000000000000000000000000000000000;;	          # value: env
0000000000000000000000000000000000000000;;	        ports:
0000000000000000000000000000000000000000;;	        - containerPort: 6379
0000000000000000000000000000000000000000;;	---
0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: Service
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: frontend
0000000000000000000000000000000000000000;;	  labels:
0000000000000000000000000000000000000000;;	    app: guestbook
0000000000000000000000000000000000000000;;	    tier: frontend
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  # if your cluster supports it, uncomment the following to automatically create
0000000000000000000000000000000000000000;;	  # an external load-balanced IP for the frontend service.
0000000000000000000000000000000000000000;;	  # type: LoadBalancer
0000000000000000000000000000000000000000;;	  ports:
0000000000000000000000000000000000000000;;	  - port: 80
0000000000000000000000000000000000000000;;	  selector:
0000000000000000000000000000000000000000;;	    app: guestbook
0000000000000000000000000000000000000000;;	    tier: frontend
0000000000000000000000000000000000000000;;	---
0000000000000000000000000000000000000000;;	apiVersion: extensions/v1beta1
0000000000000000000000000000000000000000;;	kind: Deployment
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: frontend
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  replicas: 3
0000000000000000000000000000000000000000;;	  template:
0000000000000000000000000000000000000000;;	    metadata:
0000000000000000000000000000000000000000;;	      labels:
0000000000000000000000000000000000000000;;	        app: guestbook
0000000000000000000000000000000000000000;;	        tier: frontend
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      containers:
0000000000000000000000000000000000000000;;	      - name: php-redis
0000000000000000000000000000000000000000;;	        image: gcr.io/google-samples/gb-frontend:v4
0000000000000000000000000000000000000000;;	        resources:
0000000000000000000000000000000000000000;;	          requests:
0000000000000000000000000000000000000000;;	            cpu: 100m
0000000000000000000000000000000000000000;;	            memory: 100Mi
0000000000000000000000000000000000000000;;	        env:
0000000000000000000000000000000000000000;;	        - name: GET_HOSTS_FROM
0000000000000000000000000000000000000000;;	          value: dns
0000000000000000000000000000000000000000;;	          # If your cluster config does not include a dns service, then to
0000000000000000000000000000000000000000;;	          # instead access environment variables to find service host
0000000000000000000000000000000000000000;;	          # info, comment out the 'value: dns' line above, and uncomment the
0000000000000000000000000000000000000000;;	          # line below:
0000000000000000000000000000000000000000;;	          # value: env
0000000000000000000000000000000000000000;;	        ports:
0000000000000000000000000000000000000000;;	        - containerPort: 80

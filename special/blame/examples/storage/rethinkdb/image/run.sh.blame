0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2015 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo Checking for other nodes
0000000000000000000000000000000000000000;;	IP=""
0000000000000000000000000000000000000000;;	if [[ -n "${KUBERNETES_SERVICE_HOST}" ]]; then
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  POD_NAMESPACE=${POD_NAMESPACE:-default}
0000000000000000000000000000000000000000;;	  MYHOST=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1  -d'/')
0000000000000000000000000000000000000000;;	  echo My host: ${MYHOST}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  URL="https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/api/v1/namespaces/${POD_NAMESPACE}/endpoints/rethinkdb-driver"
0000000000000000000000000000000000000000;;	  echo "Endpont url: ${URL}"
0000000000000000000000000000000000000000;;	  echo "Looking for IPs..."
0000000000000000000000000000000000000000;;	  token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)  
0000000000000000000000000000000000000000;;	  # try to pick up first different ip from endpoints
0000000000000000000000000000000000000000;;	  IP=$(curl -s ${URL} --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt --header "Authorization: Bearer ${token}" \
0000000000000000000000000000000000000000;;	    | jq -s -r --arg h "${MYHOST}" '.[0].subsets | .[].addresses | [ .[].ip ] | map(select(. != $h)) | .[0]') || exit 1
0000000000000000000000000000000000000000;;	  [[ "${IP}" == null ]] && IP=""
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [[ -n "${IP}" ]]; then
0000000000000000000000000000000000000000;;	  ENDPOINT="${IP}:29015"
0000000000000000000000000000000000000000;;	  echo "Join to ${ENDPOINT}"
0000000000000000000000000000000000000000;;	  exec rethinkdb --bind all  --join ${ENDPOINT}
0000000000000000000000000000000000000000;;	else
0000000000000000000000000000000000000000;;	  echo "Start single instance"
0000000000000000000000000000000000000000;;	  exec rethinkdb --bind all
0000000000000000000000000000000000000000;;	fi

0000000000000000000000000000000000000000;;	apiVersion: apps/v1beta1
0000000000000000000000000000000000000000;;	kind: StatefulSet
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: minio
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  serviceName: minio
0000000000000000000000000000000000000000;;	  replicas: 4
0000000000000000000000000000000000000000;;	  template:
0000000000000000000000000000000000000000;;	    metadata:
0000000000000000000000000000000000000000;;	      annotations:
0000000000000000000000000000000000000000;;	        pod.alpha.kubernetes.io/initialized: "true"
0000000000000000000000000000000000000000;;	      labels:
0000000000000000000000000000000000000000;;	        app: minio
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      containers:
0000000000000000000000000000000000000000;;	      - name: minio
0000000000000000000000000000000000000000;;	        env:
0000000000000000000000000000000000000000;;	        - name: MINIO_ACCESS_KEY
0000000000000000000000000000000000000000;;	          value: "minio"
0000000000000000000000000000000000000000;;	        - name: MINIO_SECRET_KEY
0000000000000000000000000000000000000000;;	          value: "minio123"
0000000000000000000000000000000000000000;;	        image: minio/minio:latest
0000000000000000000000000000000000000000;;	        args:
0000000000000000000000000000000000000000;;	        - server
0000000000000000000000000000000000000000;;	        - http://minio-0.minio.default.svc.cluster.local/data
0000000000000000000000000000000000000000;;	        - http://minio-1.minio.default.svc.cluster.local/data
0000000000000000000000000000000000000000;;	        - http://minio-2.minio.default.svc.cluster.local/data
0000000000000000000000000000000000000000;;	        - http://minio-3.minio.default.svc.cluster.local/data
0000000000000000000000000000000000000000;;	        ports:
0000000000000000000000000000000000000000;;	        - containerPort: 9000
0000000000000000000000000000000000000000;;	          hostPort: 9000
0000000000000000000000000000000000000000;;	        # These volume mounts are persistent. Each pod in the StatefulSet
0000000000000000000000000000000000000000;;	        # gets a volume mounted based on this field.
0000000000000000000000000000000000000000;;	        volumeMounts:
0000000000000000000000000000000000000000;;	        - name: data
0000000000000000000000000000000000000000;;	          mountPath: /data
0000000000000000000000000000000000000000;;	  # These are converted to volume claims by the controller
0000000000000000000000000000000000000000;;	  # and mounted at the paths mentioned above.
0000000000000000000000000000000000000000;;	  volumeClaimTemplates:
0000000000000000000000000000000000000000;;	  - metadata:
0000000000000000000000000000000000000000;;	      name: data
0000000000000000000000000000000000000000;;	      annotations:
0000000000000000000000000000000000000000;;	        volume.alpha.kubernetes.io/storage-class: anything
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      accessModes:
0000000000000000000000000000000000000000;;	        - ReadWriteOnce
0000000000000000000000000000000000000000;;	      resources:
0000000000000000000000000000000000000000;;	        requests:
0000000000000000000000000000000000000000;;	          storage: 10Gi

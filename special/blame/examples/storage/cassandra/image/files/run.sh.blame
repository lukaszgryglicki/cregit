0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -e
0000000000000000000000000000000000000000;;	CASSANDRA_CONF_DIR=/etc/cassandra
0000000000000000000000000000000000000000;;	CASSANDRA_CFG=$CASSANDRA_CONF_DIR/cassandra.yaml
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# we are doing StatefulSet or just setting our seeds
0000000000000000000000000000000000000000;;	if [ -z "$CASSANDRA_SEEDS" ]; then
0000000000000000000000000000000000000000;;	  HOSTNAME=$(hostname -f)
0000000000000000000000000000000000000000;;	  CASSANDRA_SEEDS=$(hostname -f)
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# The following vars relate to there counter parts in $CASSANDRA_CFG
0000000000000000000000000000000000000000;;	# for instance rpc_address
0000000000000000000000000000000000000000;;	CASSANDRA_RPC_ADDRESS="${CASSANDRA_RPC_ADDRESS:-0.0.0.0}"
0000000000000000000000000000000000000000;;	CASSANDRA_NUM_TOKENS="${CASSANDRA_NUM_TOKENS:-32}"
0000000000000000000000000000000000000000;;	CASSANDRA_CLUSTER_NAME="${CASSANDRA_CLUSTER_NAME:='Test Cluster'}"
0000000000000000000000000000000000000000;;	CASSANDRA_LISTEN_ADDRESS=${POD_IP:-$HOSTNAME}
0000000000000000000000000000000000000000;;	CASSANDRA_BROADCAST_ADDRESS=${POD_IP:-$HOSTNAME}
0000000000000000000000000000000000000000;;	CASSANDRA_BROADCAST_RPC_ADDRESS=${POD_IP:-$HOSTNAME}
0000000000000000000000000000000000000000;;	CASSANDRA_DISK_OPTIMIZATION_STRATEGY="${CASSANDRA_DISK_OPTIMIZATION_STRATEGY:-ssd}"
0000000000000000000000000000000000000000;;	CASSANDRA_MIGRATION_WAIT="${CASSANDRA_MIGRATION_WAIT:-1}"
0000000000000000000000000000000000000000;;	CASSANDRA_ENDPOINT_SNITCH="${CASSANDRA_ENDPOINT_SNITCH:-SimpleSnitch}"
0000000000000000000000000000000000000000;;	CASSANDRA_DC="${CASSANDRA_DC}"
0000000000000000000000000000000000000000;;	CASSANDRA_RACK="${CASSANDRA_RACK}"
0000000000000000000000000000000000000000;;	CASSANDRA_RING_DELAY="${CASSANDRA_RING_DELAY:-30000}"
0000000000000000000000000000000000000000;;	CASSANDRA_AUTO_BOOTSTRAP="${CASSANDRA_AUTO_BOOTSTRAP:-true}"
0000000000000000000000000000000000000000;;	CASSANDRA_SEEDS="${CASSANDRA_SEEDS:false}"
0000000000000000000000000000000000000000;;	CASSANDRA_SEED_PROVIDER="${CASSANDRA_SEED_PROVIDER:-org.apache.cassandra.locator.SimpleSeedProvider}"
0000000000000000000000000000000000000000;;	CASSANDRA_AUTO_BOOTSTRAP="${CASSANDRA_AUTO_BOOTSTRAP:false}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Turn off JMX auth
0000000000000000000000000000000000000000;;	CASSANDRA_OPEN_JMX="${CASSANDRA_OPEN_JMX:-false}"
0000000000000000000000000000000000000000;;	# send GC to STDOUT
0000000000000000000000000000000000000000;;	CASSANDRA_GC_STDOUT="${CASSANDRA_GC_STDOUT:-false}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo Starting Cassandra on ${CASSANDRA_LISTEN_ADDRESS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_CONF_DIR ${CASSANDRA_CONF_DIR}
0000000000000000000000000000000000000000;;	echo CASSANDRA_CFG ${CASSANDRA_CFG}
0000000000000000000000000000000000000000;;	echo CASSANDRA_AUTO_BOOTSTRAP ${CASSANDRA_AUTO_BOOTSTRAP}
0000000000000000000000000000000000000000;;	echo CASSANDRA_BROADCAST_ADDRESS ${CASSANDRA_BROADCAST_ADDRESS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_BROADCAST_RPC_ADDRESS ${CASSANDRA_BROADCAST_RPC_ADDRESS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_CLUSTER_NAME ${CASSANDRA_CLUSTER_NAME}
0000000000000000000000000000000000000000;;	echo CASSANDRA_COMPACTION_THROUGHPUT_MB_PER_SEC ${CASSANDRA_COMPACTION_THROUGHPUT_MB_PER_SEC}
0000000000000000000000000000000000000000;;	echo CASSANDRA_CONCURRENT_COMPACTORS ${CASSANDRA_CONCURRENT_COMPACTORS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_CONCURRENT_READS ${CASSANDRA_CONCURRENT_READS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_CONCURRENT_WRITES ${CASSANDRA_CONCURRENT_WRITES}
0000000000000000000000000000000000000000;;	echo CASSANDRA_COUNTER_CACHE_SIZE_IN_MB ${CASSANDRA_COUNTER_CACHE_SIZE_IN_MB}
0000000000000000000000000000000000000000;;	echo CASSANDRA_DC ${CASSANDRA_DC}
0000000000000000000000000000000000000000;;	echo CASSANDRA_DISK_OPTIMIZATION_STRATEGY ${CASSANDRA_DISK_OPTIMIZATION_STRATEGY}
0000000000000000000000000000000000000000;;	echo CASSANDRA_ENDPOINT_SNITCH ${CASSANDRA_ENDPOINT_SNITCH}
0000000000000000000000000000000000000000;;	echo CASSANDRA_GC_WARN_THRESHOLD_IN_MS ${CASSANDRA_GC_WARN_THRESHOLD_IN_MS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_INTERNODE_COMPRESSION ${CASSANDRA_INTERNODE_COMPRESSION}
0000000000000000000000000000000000000000;;	echo CASSANDRA_KEY_CACHE_SIZE_IN_MB ${CASSANDRA_KEY_CACHE_SIZE_IN_MB}
0000000000000000000000000000000000000000;;	echo CASSANDRA_LISTEN_ADDRESS ${CASSANDRA_LISTEN_ADDRESS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_LISTEN_INTERFACE ${CASSANDRA_LISTEN_INTERFACE}
0000000000000000000000000000000000000000;;	echo CASSANDRA_MEMTABLE_ALLOCATION_TYPE ${CASSANDRA_MEMTABLE_ALLOCATION_TYPE}
0000000000000000000000000000000000000000;;	echo CASSANDRA_MEMTABLE_CLEANUP_THRESHOLD ${CASSANDRA_MEMTABLE_CLEANUP_THRESHOLD}
0000000000000000000000000000000000000000;;	echo CASSANDRA_MEMTABLE_FLUSH_WRITERS ${CASSANDRA_MEMTABLE_FLUSH_WRITERS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_MIGRATION_WAIT ${CASSANDRA_MIGRATION_WAIT}
0000000000000000000000000000000000000000;;	echo CASSANDRA_NUM_TOKENS ${CASSANDRA_NUM_TOKENS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_RACK ${CASSANDRA_RACK}
0000000000000000000000000000000000000000;;	echo CASSANDRA_RING_DELAY ${CASSANDRA_RING_DELAY}
0000000000000000000000000000000000000000;;	echo CASSANDRA_RPC_ADDRESS ${CASSANDRA_RPC_ADDRESS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_RPC_INTERFACE ${CASSANDRA_RPC_INTERFACE}
0000000000000000000000000000000000000000;;	echo CASSANDRA_SEEDS ${CASSANDRA_SEEDS}
0000000000000000000000000000000000000000;;	echo CASSANDRA_SEED_PROVIDER ${CASSANDRA_SEED_PROVIDER}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# if DC and RACK are set, use GossipingPropertyFileSnitch
0000000000000000000000000000000000000000;;	if [[ $CASSANDRA_DC && $CASSANDRA_RACK ]]; then
0000000000000000000000000000000000000000;;	  echo "dc=$CASSANDRA_DC" > $CASSANDRA_CONF_DIR/cassandra-rackdc.properties
0000000000000000000000000000000000000000;;	  echo "rack=$CASSANDRA_RACK" >> $CASSANDRA_CONF_DIR/cassandra-rackdc.properties
0000000000000000000000000000000000000000;;	  CASSANDRA_ENDPOINT_SNITCH="GossipingPropertyFileSnitch"
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [ -n "$CASSANDRA_MAX_HEAP" ]; then
0000000000000000000000000000000000000000;;	  sed -ri "s/^(#)?-Xmx[0-9]+.*/-Xmx$CASSANDRA_MAX_HEAP/" "$CASSANDRA_CONF_DIR/jvm.options"
0000000000000000000000000000000000000000;;	  sed -ri "s/^(#)?-Xms[0-9]+.*/-Xms$CASSANDRA_MAX_HEAP/" "$CASSANDRA_CONF_DIR/jvm.options"
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [ -n "$CASSANDRA_REPLACE_NODE" ]; then
0000000000000000000000000000000000000000;;	   echo "-Dcassandra.replace_address=$CASSANDRA_REPLACE_NODE/" >> "$CASSANDRA_CONF_DIR/jvm.options"
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	for rackdc in dc rack; do
0000000000000000000000000000000000000000;;	  var="CASSANDRA_${rackdc^^}"
0000000000000000000000000000000000000000;;	  val="${!var}"
0000000000000000000000000000000000000000;;	  if [ "$val" ]; then
0000000000000000000000000000000000000000;;		sed -ri 's/^('"$rackdc"'=).*/\1 '"$val"'/' "$CASSANDRA_CONF_DIR/cassandra-rackdc.properties"
0000000000000000000000000000000000000000;;	  fi
0000000000000000000000000000000000000000;;	done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# TODO what else needs to be modified
0000000000000000000000000000000000000000;;	for yaml in \
0000000000000000000000000000000000000000;;	  broadcast_address \
0000000000000000000000000000000000000000;;	  broadcast_rpc_address \
0000000000000000000000000000000000000000;;	  cluster_name \
0000000000000000000000000000000000000000;;	  disk_optimization_strategy \
0000000000000000000000000000000000000000;;	  endpoint_snitch \
0000000000000000000000000000000000000000;;	  listen_address \
0000000000000000000000000000000000000000;;	  num_tokens \
0000000000000000000000000000000000000000;;	  rpc_address \
0000000000000000000000000000000000000000;;	  start_rpc \
0000000000000000000000000000000000000000;;	  key_cache_size_in_mb \
0000000000000000000000000000000000000000;;	  concurrent_reads \
0000000000000000000000000000000000000000;;	  concurrent_writes \
0000000000000000000000000000000000000000;;	  memtable_cleanup_threshold \
0000000000000000000000000000000000000000;;	  memtable_allocation_type \
0000000000000000000000000000000000000000;;	  memtable_flush_writers \
0000000000000000000000000000000000000000;;	  concurrent_compactors \
0000000000000000000000000000000000000000;;	  compaction_throughput_mb_per_sec \
0000000000000000000000000000000000000000;;	  counter_cache_size_in_mb \
0000000000000000000000000000000000000000;;	  internode_compression \
0000000000000000000000000000000000000000;;	  endpoint_snitch \
0000000000000000000000000000000000000000;;	  gc_warn_threshold_in_ms \
0000000000000000000000000000000000000000;;	  listen_interface \
0000000000000000000000000000000000000000;;	  rpc_interface \
0000000000000000000000000000000000000000;;	  ; do
0000000000000000000000000000000000000000;;	  var="CASSANDRA_${yaml^^}"
0000000000000000000000000000000000000000;;	  val="${!var}"
0000000000000000000000000000000000000000;;	  if [ "$val" ]; then
0000000000000000000000000000000000000000;;	    sed -ri 's/^(# )?('"$yaml"':).*/\2 '"$val"'/' "$CASSANDRA_CFG"
0000000000000000000000000000000000000000;;	  fi
0000000000000000000000000000000000000000;;	done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "auto_bootstrap: ${CASSANDRA_AUTO_BOOTSTRAP}" >> $CASSANDRA_CFG
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# set the seed to itself.  This is only for the first pod, otherwise
0000000000000000000000000000000000000000;;	# it will be able to get seeds from the seed provider
0000000000000000000000000000000000000000;;	if [[ $CASSANDRA_SEEDS == 'false' ]]; then
0000000000000000000000000000000000000000;;	  sed -ri 's/- seeds:.*/- seeds: "'"$POD_IP"'"/' $CASSANDRA_CFG
0000000000000000000000000000000000000000;;	else # if we have seeds set them.  Probably StatefulSet
0000000000000000000000000000000000000000;;	  sed -ri 's/- seeds:.*/- seeds: "'"$CASSANDRA_SEEDS"'"/' $CASSANDRA_CFG
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	sed -ri 's/- class_name: SEED_PROVIDER/- class_name: '"$CASSANDRA_SEED_PROVIDER"'/' $CASSANDRA_CFG
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# send gc to stdout
0000000000000000000000000000000000000000;;	if [[ $CASSANDRA_GC_STDOUT == 'true' ]]; then
0000000000000000000000000000000000000000;;	  sed -ri 's/ -Xloggc:\/var\/log\/cassandra\/gc\.log//' $CASSANDRA_CONF_DIR/cassandra-env.sh
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# enable RMI and JMX to work on one port
0000000000000000000000000000000000000000;;	echo "JVM_OPTS=\"\$JVM_OPTS -Djava.rmi.server.hostname=$POD_IP\"" >> $CASSANDRA_CONF_DIR/cassandra-env.sh
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# getting WARNING messages with Migration Service
0000000000000000000000000000000000000000;;	echo "-Dcassandra.migration_task_wait_in_seconds=${CASSANDRA_MIGRATION_WAIT}" >> $CASSANDRA_CONF_DIR/jvm.options
0000000000000000000000000000000000000000;;	echo "-Dcassandra.ring_delay_ms=${CASSANDRA_RING_DELAY}" >> $CASSANDRA_CONF_DIR/jvm.options
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [[ $CASSANDRA_OPEN_JMX == 'true' ]]; then
0000000000000000000000000000000000000000;;	  export LOCAL_JMX=no
0000000000000000000000000000000000000000;;	  sed -ri 's/ -Dcom\.sun\.management\.jmxremote\.authenticate=true/ -Dcom\.sun\.management\.jmxremote\.authenticate=false/' $CASSANDRA_CONF_DIR/cassandra-env.sh
0000000000000000000000000000000000000000;;	  sed -ri 's/ -Dcom\.sun\.management\.jmxremote\.password\.file=\/etc\/cassandra\/jmxremote\.password//' $CASSANDRA_CONF_DIR/cassandra-env.sh
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	chmod 700 "${CASSANDRA_DATA}"
0000000000000000000000000000000000000000;;	chown -c -R cassandra "${CASSANDRA_DATA}" "${CASSANDRA_CONF_DIR}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	export CLASSPATH=/kubernetes-cassandra.jar
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	su cassandra -c "$CASSANDRA_HOME/bin/cassandra -f"

0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: ReplicationController
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: etcd-{{cell}}
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  replicas: {{replicas}}
0000000000000000000000000000000000000000;;	  template:
0000000000000000000000000000000000000000;;	    metadata:
0000000000000000000000000000000000000000;;	      labels:
0000000000000000000000000000000000000000;;	        component: etcd
0000000000000000000000000000000000000000;;	        cell: {{cell}}
0000000000000000000000000000000000000000;;	        app: vitess
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      volumes:
0000000000000000000000000000000000000000;;	        - name: certs
0000000000000000000000000000000000000000;;	          hostPath: {path: /etc/ssl/certs}
0000000000000000000000000000000000000000;;	      containers:
0000000000000000000000000000000000000000;;	        - name: etcd
0000000000000000000000000000000000000000;;	          image: vitess/etcd:v2.0.13-lite
0000000000000000000000000000000000000000;;	          volumeMounts:
0000000000000000000000000000000000000000;;	            - name: certs
0000000000000000000000000000000000000000;;	              readOnly: true
0000000000000000000000000000000000000000;;	              mountPath: /etc/ssl/certs
0000000000000000000000000000000000000000;;	          resources:
0000000000000000000000000000000000000000;;	            limits:
0000000000000000000000000000000000000000;;	              memory: "128Mi"
0000000000000000000000000000000000000000;;	              cpu: "100m"
0000000000000000000000000000000000000000;;	          command:
0000000000000000000000000000000000000000;;	            - bash
0000000000000000000000000000000000000000;;	            - "-c"
0000000000000000000000000000000000000000;;	            - >-
0000000000000000000000000000000000000000;;	              ipaddr=$(hostname -i)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	              global_etcd=$ETCD_GLOBAL_SERVICE_HOST:$ETCD_GLOBAL_SERVICE_PORT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	              cell="{{cell}}" &&
0000000000000000000000000000000000000000;;	              local_etcd_host_var="ETCD_${cell^^}_SERVICE_HOST" &&
0000000000000000000000000000000000000000;;	              local_etcd_port_var="ETCD_${cell^^}_SERVICE_PORT" &&
0000000000000000000000000000000000000000;;	              local_etcd=${!local_etcd_host_var}:${!local_etcd_port_var}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	              if [ "{{cell}}" != "global" ]; then
0000000000000000000000000000000000000000;;	              until etcdctl -C "http://$global_etcd"
0000000000000000000000000000000000000000;;	              set "/vt/cells/{{cell}}" "http://$local_etcd"; do
0000000000000000000000000000000000000000;;	              echo "[$(date)] waiting for global etcd to register cell '{{cell}}'";
0000000000000000000000000000000000000000;;	              sleep 1;
0000000000000000000000000000000000000000;;	              done;
0000000000000000000000000000000000000000;;	              fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	              etcd -name $HOSTNAME -discovery {{discovery}}
0000000000000000000000000000000000000000;;	              -advertise-client-urls http://$ipaddr:4001
0000000000000000000000000000000000000000;;	              -initial-advertise-peer-urls http://$ipaddr:7001
0000000000000000000000000000000000000000;;	              -listen-client-urls http://$ipaddr:4001
0000000000000000000000000000000000000000;;	              -listen-peer-urls http://$ipaddr:7001
0000000000000000000000000000000000000000;;	

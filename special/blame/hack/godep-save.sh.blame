0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/..
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/hack/lib/init.sh"
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/hack/lib/util.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::util::ensure_single_dir_gopath
0000000000000000000000000000000000000000;;	kube::util::ensure_godep_version v79
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [ -e "${KUBE_ROOT}/vendor" -o -e "${KUBE_ROOT}/Godeps" ]; then
0000000000000000000000000000000000000000;;	  echo "The directory vendor/ or Godeps/ exists. Remove them before running godep-save.sh" 1>&2
0000000000000000000000000000000000000000;;	  exit 1
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Some things we want in godeps aren't code dependencies, so ./...
0000000000000000000000000000000000000000;;	# won't pick them up.
0000000000000000000000000000000000000000;;	REQUIRED_BINS=(
0000000000000000000000000000000000000000;;	  "github.com/ugorji/go/codec/codecgen"
0000000000000000000000000000000000000000;;	  "github.com/onsi/ginkgo/ginkgo"
0000000000000000000000000000000000000000;;	  "github.com/jteeuwen/go-bindata/go-bindata"
0000000000000000000000000000000000000000;;	  "./..."
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	pushd "${KUBE_ROOT}" > /dev/null
0000000000000000000000000000000000000000;;	  # sanity check that staging directories do not exist in GOPATH
0000000000000000000000000000000000000000;;	  error=0
0000000000000000000000000000000000000000;;	  for repo in $(ls ${KUBE_ROOT}/staging/src/k8s.io); do
0000000000000000000000000000000000000000;;	    if [ -e "${GOPATH}/src/k8s.io/${repo}" ]; then
0000000000000000000000000000000000000000;;	      echo "k8s.io/${repo} exists in GOPATH. Remove before running godep-save.sh." 1>&2
0000000000000000000000000000000000000000;;	      error=1
0000000000000000000000000000000000000000;;	    fi
0000000000000000000000000000000000000000;;	  done
0000000000000000000000000000000000000000;;	  if [ "${error}" = "1" ]; then
0000000000000000000000000000000000000000;;	    exit 1
0000000000000000000000000000000000000000;;	  fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  echo "Running godep save. This will take around 15 minutes."
0000000000000000000000000000000000000000;;	  GOPATH=${GOPATH}:${KUBE_ROOT}/staging godep save "${REQUIRED_BINS[@]}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  # create a symlink in vendor directory pointing to the staging client. This
0000000000000000000000000000000000000000;;	  # let other packages use the staging client as if it were vendored.
0000000000000000000000000000000000000000;;	  for repo in $(ls ${KUBE_ROOT}/staging/src/k8s.io); do
0000000000000000000000000000000000000000;;	   if [ ! -e "vendor/k8s.io/${repo}" ]; then
0000000000000000000000000000000000000000;;	     ln -s "../../staging/src/k8s.io/${repo}" "vendor/k8s.io/${repo}"
0000000000000000000000000000000000000000;;	   fi
0000000000000000000000000000000000000000;;	  done
0000000000000000000000000000000000000000;;	popd > /dev/null
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Workaround broken symlink in docker repo because godep copies the link, but not the target
0000000000000000000000000000000000000000;;	rm -rf ${KUBE_ROOT}/vendor/github.com/docker/docker/project/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo
0000000000000000000000000000000000000000;;	echo "Don't forget to run:"
0000000000000000000000000000000000000000;;	echo "- hack/update-bazel.sh to recreate the BUILD files"
0000000000000000000000000000000000000000;;	echo "- hack/update-godep-licenses.sh if you added or removed a dependency!"

0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [[ -z "${KUBE_ROOT:-}" ]]; then
0000000000000000000000000000000000000000;;		KUBE_ROOT=$(dirname "${BASH_SOURCE}")/..
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/cluster/lib/logging.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [[ ! -d "${KUBE_ROOT}/examples" ]]; then
0000000000000000000000000000000000000000;;		echo "${KUBE_ROOT}/examples not detected.  This script should be run from a location where the source dirs are available."
0000000000000000000000000000000000000000;;		exit 1
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# kube::golang::build_kube_toolchain installs the vendored go-bindata in
0000000000000000000000000000000000000000;;	# $GOPATH/bin, so make sure that's explicitly part of our $PATH.
0000000000000000000000000000000000000000;;	export PATH="${GOPATH}/bin:${PATH}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if ! which go-bindata &>/dev/null ; then
0000000000000000000000000000000000000000;;		echo "Cannot find go-bindata."
0000000000000000000000000000000000000000;;		exit 5
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# run the generation from the root directory for stable output
0000000000000000000000000000000000000000;;	pushd "${KUBE_ROOT}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# These are files for e2e tests.
0000000000000000000000000000000000000000;;	BINDATA_OUTPUT="test/e2e/generated/bindata.go"
0000000000000000000000000000000000000000;;	go-bindata -nometadata -o "${BINDATA_OUTPUT}.tmp" -pkg generated \
0000000000000000000000000000000000000000;;		-ignore .jpg -ignore .png -ignore .md \
0000000000000000000000000000000000000000;;		"examples/..." \
0000000000000000000000000000000000000000;;		"test/e2e/testing-manifests/..." \
0000000000000000000000000000000000000000;;		"test/images/..." \
0000000000000000000000000000000000000000;;		"test/fixtures/..."
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	gofmt -s -w "${BINDATA_OUTPUT}.tmp"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Here we compare and overwrite only if different to avoid updating the
0000000000000000000000000000000000000000;;	# timestamp and triggering a rebuild. The 'cat' redirect trick to preserve file
0000000000000000000000000000000000000000;;	# permissions of the target file.
0000000000000000000000000000000000000000;;	if ! cmp -s "${BINDATA_OUTPUT}.tmp" "${BINDATA_OUTPUT}" ; then
0000000000000000000000000000000000000000;;		cat "${BINDATA_OUTPUT}.tmp" > "${BINDATA_OUTPUT}"
0000000000000000000000000000000000000000;;		V=2 kube::log::info "Generated bindata file : ${BINDATA_OUTPUT} has $(wc -l ${BINDATA_OUTPUT}) lines of lovely automated artifacts"
0000000000000000000000000000000000000000;;	else
0000000000000000000000000000000000000000;;		V=2 kube::log::info "No changes in generated bindata file: ${BINDATA_OUTPUT}"
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	rm -f "${BINDATA_OUTPUT}.tmp"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# These are files for runtime code
0000000000000000000000000000000000000000;;	BINDATA_OUTPUT="pkg/generated/bindata.go"
0000000000000000000000000000000000000000;;	go-bindata -nometadata -nocompress -o "${BINDATA_OUTPUT}.tmp" -pkg generated \
0000000000000000000000000000000000000000;;		-ignore .jpg -ignore .png -ignore .md \
0000000000000000000000000000000000000000;;		"translations/..."
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	gofmt -s -w "${BINDATA_OUTPUT}.tmp"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Here we compare and overwrite only if different to avoid updating the
0000000000000000000000000000000000000000;;	# timestamp and triggering a rebuild. The 'cat' redirect trick to preserve file
0000000000000000000000000000000000000000;;	# permissions of the target file.
0000000000000000000000000000000000000000;;	if ! cmp -s "${BINDATA_OUTPUT}.tmp" "${BINDATA_OUTPUT}" ; then
0000000000000000000000000000000000000000;;		cat "${BINDATA_OUTPUT}.tmp" > "${BINDATA_OUTPUT}"
0000000000000000000000000000000000000000;;		V=2 kube::log::info "Generated bindata file : ${BINDATA_OUTPUT} has $(wc -l ${BINDATA_OUTPUT}) lines of lovely automated artifacts"
0000000000000000000000000000000000000000;;	else
0000000000000000000000000000000000000000;;		V=2 kube::log::info "No changes in generated bindata file: ${BINDATA_OUTPUT}"
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	rm -f "${BINDATA_OUTPUT}.tmp"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	popd

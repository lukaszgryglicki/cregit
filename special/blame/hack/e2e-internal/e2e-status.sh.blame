0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2015 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/../..
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	: ${KUBECTL:=${KUBE_ROOT}/cluster/kubectl.sh}
0000000000000000000000000000000000000000;;	: ${KUBE_CONFIG_FILE:="config-test.sh"}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	export KUBECTL KUBE_CONFIG_FILE
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/cluster/kube-util.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	prepare-e2e
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [[ "${FEDERATION:-}" == "true" ]];then
0000000000000000000000000000000000000000;;	    FEDERATION_NAMESPACE=${FEDERATION_NAMESPACE:-federation-system}
0000000000000000000000000000000000000000;;	    #TODO(colhom): the last cluster that was created in the loop above is the current context.
0000000000000000000000000000000000000000;;	    # Hence, it will be the cluster that hosts the federated components.
0000000000000000000000000000000000000000;;	    # In the future, we will want to loop through the all the federated contexts,
0000000000000000000000000000000000000000;;	    # select each one and call federated-up
0000000000000000000000000000000000000000;;	    for zone in ${E2E_ZONES};do
0000000000000000000000000000000000000000;;		(
0000000000000000000000000000000000000000;;		    set-federation-zone-vars "$zone"
0000000000000000000000000000000000000000;;		    printf "\n\tChecking version for $OVERRIDE_CONTEXT\n"
0000000000000000000000000000000000000000;;		    ${KUBECTL} --context="$OVERRIDE_CONTEXT" version
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;	    done
0000000000000000000000000000000000000000;;	else
0000000000000000000000000000000000000000;;	    ${KUBECTL} version
0000000000000000000000000000000000000000;;	fi

0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2017 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# verify-readonly-packages.sh checks whether between $KUBE_VERIFY_GIT_BRANCH and HEAD files
0000000000000000000000000000000000000000;;	# in readonly directories were modified. A directory is readonly iff it contains a .readonly
0000000000000000000000000000000000000000;;	# file. Being readonly DOES NOT apply recursively to subdirectories.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/..
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/hack/lib/init.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	readonly branch=${1:-${KUBE_VERIFY_GIT_BRANCH:-master}}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	find_files() {
0000000000000000000000000000000000000000;;	  find . -not \( \
0000000000000000000000000000000000000000;;	      \( \
0000000000000000000000000000000000000000;;	        -wholename './output' \
0000000000000000000000000000000000000000;;	        -o -wholename './_output' \
0000000000000000000000000000000000000000;;	        -o -wholename './_gopath' \
0000000000000000000000000000000000000000;;	        -o -wholename './release' \
0000000000000000000000000000000000000000;;	        -o -wholename './target' \
0000000000000000000000000000000000000000;;	        -o -wholename '*/third_party/*' \
0000000000000000000000000000000000000000;;	        -o -wholename '*/vendor/*' \
0000000000000000000000000000000000000000;;	        -o -wholename './staging/src/k8s.io/client-go/*vendor/*' \
0000000000000000000000000000000000000000;;	        -o -wholename './staging/src/k8s.io/client-go/pkg/*' \
0000000000000000000000000000000000000000;;	      \) -prune \
0000000000000000000000000000000000000000;;	    \) -name '.readonly'
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	IFS=$'\n'
0000000000000000000000000000000000000000;;	conflicts=($(find_files | sed 's|/.readonly||' | while read dir; do
0000000000000000000000000000000000000000;;	    dir=${dir#./}
0000000000000000000000000000000000000000;;	    if kube::util::has_changes_against_upstream_branch "${branch}" "^${dir}/[^/]*\$" '/\.readonly$|/BUILD$|/zz_generated|/\.generated\.|\.proto$|\.pb\.go$' >/dev/null; then
0000000000000000000000000000000000000000;;	        echo "${dir}"
0000000000000000000000000000000000000000;;	    fi
0000000000000000000000000000000000000000;;	done))
0000000000000000000000000000000000000000;;	unset IFS
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [ ${#conflicts[@]} -gt 0 ]; then
0000000000000000000000000000000000000000;;	    exec 1>&2
0000000000000000000000000000000000000000;;	    for dir in "${conflicts[@]}"; do
0000000000000000000000000000000000000000;;	        echo "Found ${dir}/.readonly, but files changed compared to \"${branch}\" branch."
0000000000000000000000000000000000000000;;	    done
0000000000000000000000000000000000000000;;	    exit 1
0000000000000000000000000000000000000000;;	else
0000000000000000000000000000000000000000;;	    echo "Readonly packages verified."
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	# ex: ts=2 sw=2 et filetype=sh

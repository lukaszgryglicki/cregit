0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2015 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# kubernetes-build job: Triggered by github checkins on a 5 minute
0000000000000000000000000000000000000000;;	# poll. We abort this job if it takes longer than 10m. (Typically this
0000000000000000000000000000000000000000;;	# job takes about ~5m as of 0.8.0, but it's actually not completely
0000000000000000000000000000000000000000;;	# hermetic right now due to things like the golang image. It can take
0000000000000000000000000000000000000000;;	# ~8m if you force it to be totally hermetic.)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	set -o xtrace
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# !!! ALERT !!! Jenkins default $HOME is /var/lib/jenkins, which is
0000000000000000000000000000000000000000;;	# global across jobs. We change $HOME instead to ${WORKSPACE}, which
0000000000000000000000000000000000000000;;	# is an incoming variable Jenkins provides us for this job's scratch
0000000000000000000000000000000000000000;;	# space.
0000000000000000000000000000000000000000;;	export HOME=${WORKSPACE} # Nothing should want Jenkins $HOME
0000000000000000000000000000000000000000;;	export PATH=$PATH:/usr/local/go/bin
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Skip gcloud update checking
0000000000000000000000000000000000000000;;	export CLOUDSDK_COMPONENT_MANAGER_DISABLE_UPDATE_CHECK=true
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# FEDERATION?
0000000000000000000000000000000000000000;;	: ${FEDERATION:="false"}
0000000000000000000000000000000000000000;;	: ${KUBE_RELEASE_RUN_TESTS:="n"}
0000000000000000000000000000000000000000;;	export KUBE_RELEASE_RUN_TESTS
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Clean stuff out. Assume the last build left the tree in an odd
0000000000000000000000000000000000000000;;	# state.
0000000000000000000000000000000000000000;;	rm -rf ~/.kube*
0000000000000000000000000000000000000000;;	make clean
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Uncomment if you want to purge the Docker cache completely each
0000000000000000000000000000000000000000;;	# build. It costs about 150s each build to pull the golang image and
0000000000000000000000000000000000000000;;	# rebuild the kube-build:cross image, but these rarely change.
0000000000000000000000000000000000000000;;	# docker ps -aq | xargs -r docker rm
0000000000000000000000000000000000000000;;	# docker images -q | xargs -r docker rmi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Build
0000000000000000000000000000000000000000;;	# Jobs explicitly set KUBE_FASTBUILD to desired settings.
0000000000000000000000000000000000000000;;	make release
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Push to GCS?
0000000000000000000000000000000000000000;;	if [[ ${KUBE_SKIP_PUSH_GCS:-} =~ ^[yY]$ ]]; then
0000000000000000000000000000000000000000;;	  echo "Not pushed to GCS..."
0000000000000000000000000000000000000000;;	else
0000000000000000000000000000000000000000;;	  readonly release_infra_clone="${WORKSPACE}/_tmp/release.git"
0000000000000000000000000000000000000000;;	  mkdir -p ${WORKSPACE}/_tmp
0000000000000000000000000000000000000000;;	  git clone https://github.com/kubernetes/release ${release_infra_clone}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  push_build=${release_infra_clone}/push-build.sh
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  [[ -n "${KUBE_GCS_RELEASE_BUCKET-}" ]] \
0000000000000000000000000000000000000000;;	    && bucket_flag="--bucket=${KUBE_GCS_RELEASE_BUCKET-}"
0000000000000000000000000000000000000000;;	  ${FEDERATION} && federation_flag="--federation"
0000000000000000000000000000000000000000;;	  [[ -n "${KUBE_GCS_RELEASE_SUFFIX-}" ]] \
0000000000000000000000000000000000000000;;	    && gcs_suffix_flag="--gcs-suffix=${KUBE_GCS_RELEASE_SUFFIX-}"
0000000000000000000000000000000000000000;;	  ${push_build} ${bucket_flag-} ${federation_flag-} ${gcs_suffix_flag-} \
0000000000000000000000000000000000000000;;	    --nomock --verbose --ci
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	sha256sum _output/release-tars/kubernetes*.tar.gz

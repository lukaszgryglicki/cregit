0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2015 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Script to fetch latest openapi spec from federation-apiserver
0000000000000000000000000000000000000000;;	# Puts the updated spec at federation/apis/openapi-spec/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/..
0000000000000000000000000000000000000000;;	OPENAPI_ROOT_DIR="${KUBE_ROOT}/federation/apis/openapi-spec"
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/hack/lib/init.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::golang::setup_env
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	make -C "${KUBE_ROOT}" WHAT="cmd/hyperkube"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	function cleanup()
0000000000000000000000000000000000000000;;	{
0000000000000000000000000000000000000000;;	    [[ -n "${APISERVER_PID-}" ]] && kill ${APISERVER_PID} 1>&2 2>/dev/null
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    kube::etcd::cleanup
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    kube::log::status "Clean up complete"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	trap cleanup EXIT SIGINT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::golang::setup_env
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	TMP_DIR=$(mktemp -d /tmp/update-federation-openapi-spec.XXXX)
0000000000000000000000000000000000000000;;	ETCD_HOST=${ETCD_HOST:-127.0.0.1}
0000000000000000000000000000000000000000;;	ETCD_PORT=${ETCD_PORT:-2379}
0000000000000000000000000000000000000000;;	API_PORT=${API_PORT:-8050}
0000000000000000000000000000000000000000;;	API_HOST=${API_HOST:-127.0.0.1}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::etcd::start
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "dummy_token,admin,admin" > $TMP_DIR/tokenauth.csv
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Start federation-apiserver
0000000000000000000000000000000000000000;;	kube::log::status "Starting federation-apiserver"
0000000000000000000000000000000000000000;;	"${KUBE_OUTPUT_HOSTBIN}/hyperkube" federation-apiserver \
0000000000000000000000000000000000000000;;	  --insecure-bind-address="${API_HOST}" \
0000000000000000000000000000000000000000;;	  --bind-address="${API_HOST}" \
0000000000000000000000000000000000000000;;	  --insecure-port="${API_PORT}" \
0000000000000000000000000000000000000000;;	  --etcd-servers="http://${ETCD_HOST}:${ETCD_PORT}" \
0000000000000000000000000000000000000000;;	  --advertise-address="10.10.10.10" \
0000000000000000000000000000000000000000;;	  --cert-dir="${TMP_DIR}/certs" \
0000000000000000000000000000000000000000;;	  --token-auth-file=$TMP_DIR/tokenauth.csv >/tmp/openapi-federation-api-server.log 2>&1 &
0000000000000000000000000000000000000000;;	APISERVER_PID=$!
0000000000000000000000000000000000000000;;	kube::util::wait_for_url "${API_HOST}:${API_PORT}/healthz" "apiserver: "
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::log::status "Updating " ${OPENAPI_ROOT_DIR}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	curl -w "\n" -fs "${API_HOST}:${API_PORT}/swagger.json" > "${OPENAPI_ROOT_DIR}/swagger.json"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::log::status "SUCCESS"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# ex: ts=2 sw=2 et filetype=sh

0000000000000000000000000000000000000000;;	#!/usr/bin/env bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2014 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# This script builds hyperkube and then the hyperkube image.
0000000000000000000000000000000000000000;;	# REGISTRY and VERSION must be set.
0000000000000000000000000000000000000000;;	# Example usage:
0000000000000000000000000000000000000000;;	#   $ export REGISTRY=gcr.io/someone
0000000000000000000000000000000000000000;;	#   $ export VERSION=v1.4.0-testfix
0000000000000000000000000000000000000000;;	#   ./hack/dev-push-hyperkube.sh
0000000000000000000000000000000000000000;;	# That will build and push gcr.io/someone/hyperkube-amd64:v1.4.0-testfix
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT="$(dirname "${BASH_SOURCE}")/.."
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/build/common.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [[ -z "${REGISTRY:-}" ]]; then
0000000000000000000000000000000000000000;;		echo "REGISTRY must be set"
0000000000000000000000000000000000000000;;		exit -1
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	if [[ -z "${VERSION:-}" ]]; then
0000000000000000000000000000000000000000;;		echo "VERSION must be set"
0000000000000000000000000000000000000000;;		exit -1
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	IMAGE="${REGISTRY}/hyperkube-amd64:${VERSION}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::build::verify_prereqs
0000000000000000000000000000000000000000;;	kube::build::build_image
0000000000000000000000000000000000000000;;	kube::build::run_build_command make WHAT=cmd/hyperkube
0000000000000000000000000000000000000000;;	kube::build::copy_output
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	make -C "${KUBE_ROOT}/cluster/images/hyperkube" build
0000000000000000000000000000000000000000;;	docker push "${IMAGE}"

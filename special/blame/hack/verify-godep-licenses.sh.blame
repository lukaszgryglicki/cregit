0000000000000000000000000000000000000000;;	#!/usr/bin/env bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2015 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/..
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/hack/lib/init.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	readonly branch=${1:-${KUBE_VERIFY_GIT_BRANCH:-master}}
0000000000000000000000000000000000000000;;	if ! [[ ${KUBE_FORCE_VERIFY_CHECKS:-} =~ ^[yY]$ ]] && \
0000000000000000000000000000000000000000;;	  ! kube::util::has_changes_against_upstream_branch "${branch}" 'Godeps/' && \
0000000000000000000000000000000000000000;;	  ! kube::util::has_changes_against_upstream_branch "${branch}" 'vendor/'; then
0000000000000000000000000000000000000000;;	  exit 0
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# create a nice clean place to put our new godeps
0000000000000000000000000000000000000000;;	# must be in the user dir (e.g. KUBE_ROOT) in order for the docker volume mount
0000000000000000000000000000000000000000;;	# to work with docker-machine on macs
0000000000000000000000000000000000000000;;	mkdir -p "${KUBE_ROOT}/_tmp"
0000000000000000000000000000000000000000;;	_tmpdir="$(mktemp -d "${KUBE_ROOT}/_tmp/kube-godep-licenses.XXXXXX")"
0000000000000000000000000000000000000000;;	#echo "Created workspace: ${_tmpdir}"
0000000000000000000000000000000000000000;;	function cleanup {
0000000000000000000000000000000000000000;;	  #echo "Removing workspace: ${_tmpdir}"
0000000000000000000000000000000000000000;;	  rm -rf "${_tmpdir}"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	trap cleanup EXIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	cp -r "${KUBE_ROOT}/Godeps" "${_tmpdir}/Godeps"
0000000000000000000000000000000000000000;;	ln -s "${KUBE_ROOT}/LICENSE" "${_tmpdir}"
0000000000000000000000000000000000000000;;	ln -s "${KUBE_ROOT}/vendor" "${_tmpdir}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Update Godep Licenses
0000000000000000000000000000000000000000;;	LICENSE_ROOT="${_tmpdir}" "${KUBE_ROOT}/hack/update-godep-licenses.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Compare Godep Licenses
0000000000000000000000000000000000000000;;	if ! _out="$(diff -Naupr ${KUBE_ROOT}/Godeps/LICENSES ${_tmpdir}/Godeps/LICENSES)"; then
0000000000000000000000000000000000000000;;	  echo "Your godep licenses file is out of date. Run hack/update-godep-licenses.sh and commit the results."
0000000000000000000000000000000000000000;;	  echo "${_out}"
0000000000000000000000000000000000000000;;	  exit 1
0000000000000000000000000000000000000000;;	fi

0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2014 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/..
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/hack/lib/init.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::golang::setup_env
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	make -C "${KUBE_ROOT}" WHAT=cmd/linkcheck
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	linkcheck=$(kube::util::find-binary "linkcheck")
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	kube::util::ensure-temp-dir
0000000000000000000000000000000000000000;;	OUTPUT="${KUBE_TEMP}"/linkcheck-output
0000000000000000000000000000000000000000;;	cleanup() {
0000000000000000000000000000000000000000;;		rm -rf "${OUTPUT}"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	trap "cleanup" EXIT SIGINT
0000000000000000000000000000000000000000;;	mkdir -p "$OUTPUT"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	APIROOT="${KUBE_ROOT}/pkg/api/"
0000000000000000000000000000000000000000;;	APISROOT="${KUBE_ROOT}/pkg/apis/"
0000000000000000000000000000000000000000;;	DOCROOT="${KUBE_ROOT}/docs/"
0000000000000000000000000000000000000000;;	ROOTS=($APIROOT $APISROOT $DOCROOT)
0000000000000000000000000000000000000000;;	found_invalid=false
0000000000000000000000000000000000000000;;	for root in "${ROOTS[@]}"; do
0000000000000000000000000000000000000000;;	  "${linkcheck}" "--root-dir=${root}" 2> >(tee -a "${OUTPUT}/error" >&2) && ret=0 || ret=$?
0000000000000000000000000000000000000000;;	  if [[ $ret -eq 1 ]]; then
0000000000000000000000000000000000000000;;	    echo "Failed: found invalid links in ${root}."
0000000000000000000000000000000000000000;;	    found_invalid=true
0000000000000000000000000000000000000000;;	  fi
0000000000000000000000000000000000000000;;	  if [[ $ret -gt 1 ]]; then
0000000000000000000000000000000000000000;;	    echo "Error running linkcheck"
0000000000000000000000000000000000000000;;	    exit 1
0000000000000000000000000000000000000000;;	  fi
0000000000000000000000000000000000000000;;	done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [ ${found_invalid} = true ]; then
0000000000000000000000000000000000000000;;	  echo "Summary of invalid links:"
0000000000000000000000000000000000000000;;	  cat ${OUTPUT}/error
0000000000000000000000000000000000000000;;	  exit 1
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# ex: ts=2 sw=2 et filetype=sh

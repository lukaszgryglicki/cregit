58b3994076efb0a8e1e020de7f84b2367273e167;;	// Code generated by protoc-gen-gogo.
58b3994076efb0a8e1e020de7f84b2367273e167;;	// source: record.proto
58b3994076efb0a8e1e020de7f84b2367273e167;;	// DO NOT EDIT!
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	/*
58b3994076efb0a8e1e020de7f84b2367273e167;;		Package walpb is a generated protocol buffer package.
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;		It is generated from these files:
58b3994076efb0a8e1e020de7f84b2367273e167;;			record.proto
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;		It has these top-level messages:
58b3994076efb0a8e1e020de7f84b2367273e167;;			Record
58b3994076efb0a8e1e020de7f84b2367273e167;;			Snapshot
58b3994076efb0a8e1e020de7f84b2367273e167;;	*/
58b3994076efb0a8e1e020de7f84b2367273e167;;	package walpb
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	import (
58b3994076efb0a8e1e020de7f84b2367273e167;;		"fmt"
58b3994076efb0a8e1e020de7f84b2367273e167;;	
63a324d1b865e5aa2de7260ede269745fc0813ef;;		proto "github.com/golang/protobuf/proto"
58b3994076efb0a8e1e020de7f84b2367273e167;;	)
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	import math "math"
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	import io "io"
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	// Reference imports to suppress errors if they are not otherwise used.
58b3994076efb0a8e1e020de7f84b2367273e167;;	var _ = proto.Marshal
58b3994076efb0a8e1e020de7f84b2367273e167;;	var _ = fmt.Errorf
58b3994076efb0a8e1e020de7f84b2367273e167;;	var _ = math.Inf
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	type Record struct {
58b3994076efb0a8e1e020de7f84b2367273e167;;		Type             int64  `protobuf:"varint,1,opt,name=type" json:"type"`
58b3994076efb0a8e1e020de7f84b2367273e167;;		Crc              uint32 `protobuf:"varint,2,opt,name=crc" json:"crc"`
58b3994076efb0a8e1e020de7f84b2367273e167;;		Data             []byte `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
58b3994076efb0a8e1e020de7f84b2367273e167;;		XXX_unrecognized []byte `json:"-"`
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Record) Reset()         { *m = Record{} }
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Record) String() string { return proto.CompactTextString(m) }
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (*Record) ProtoMessage()    {}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	type Snapshot struct {
58b3994076efb0a8e1e020de7f84b2367273e167;;		Index            uint64 `protobuf:"varint,1,opt,name=index" json:"index"`
58b3994076efb0a8e1e020de7f84b2367273e167;;		Term             uint64 `protobuf:"varint,2,opt,name=term" json:"term"`
58b3994076efb0a8e1e020de7f84b2367273e167;;		XXX_unrecognized []byte `json:"-"`
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Snapshot) Reset()         { *m = Snapshot{} }
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Snapshot) String() string { return proto.CompactTextString(m) }
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (*Snapshot) ProtoMessage()    {}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	func init() {
58b3994076efb0a8e1e020de7f84b2367273e167;;		proto.RegisterType((*Record)(nil), "walpb.Record")
58b3994076efb0a8e1e020de7f84b2367273e167;;		proto.RegisterType((*Snapshot)(nil), "walpb.Snapshot")
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Record) Marshal() (data []byte, err error) {
58b3994076efb0a8e1e020de7f84b2367273e167;;		size := m.Size()
58b3994076efb0a8e1e020de7f84b2367273e167;;		data = make([]byte, size)
58b3994076efb0a8e1e020de7f84b2367273e167;;		n, err := m.MarshalTo(data)
58b3994076efb0a8e1e020de7f84b2367273e167;;		if err != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;			return nil, err
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		return data[:n], nil
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Record) MarshalTo(data []byte) (int, error) {
58b3994076efb0a8e1e020de7f84b2367273e167;;		var i int
58b3994076efb0a8e1e020de7f84b2367273e167;;		_ = i
58b3994076efb0a8e1e020de7f84b2367273e167;;		var l int
58b3994076efb0a8e1e020de7f84b2367273e167;;		_ = l
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[i] = 0x8
58b3994076efb0a8e1e020de7f84b2367273e167;;		i++
58b3994076efb0a8e1e020de7f84b2367273e167;;		i = encodeVarintRecord(data, i, uint64(m.Type))
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[i] = 0x10
58b3994076efb0a8e1e020de7f84b2367273e167;;		i++
58b3994076efb0a8e1e020de7f84b2367273e167;;		i = encodeVarintRecord(data, i, uint64(m.Crc))
58b3994076efb0a8e1e020de7f84b2367273e167;;		if m.Data != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;			data[i] = 0x1a
58b3994076efb0a8e1e020de7f84b2367273e167;;			i++
58b3994076efb0a8e1e020de7f84b2367273e167;;			i = encodeVarintRecord(data, i, uint64(len(m.Data)))
58b3994076efb0a8e1e020de7f84b2367273e167;;			i += copy(data[i:], m.Data)
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		if m.XXX_unrecognized != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;			i += copy(data[i:], m.XXX_unrecognized)
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		return i, nil
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Snapshot) Marshal() (data []byte, err error) {
58b3994076efb0a8e1e020de7f84b2367273e167;;		size := m.Size()
58b3994076efb0a8e1e020de7f84b2367273e167;;		data = make([]byte, size)
58b3994076efb0a8e1e020de7f84b2367273e167;;		n, err := m.MarshalTo(data)
58b3994076efb0a8e1e020de7f84b2367273e167;;		if err != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;			return nil, err
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		return data[:n], nil
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Snapshot) MarshalTo(data []byte) (int, error) {
58b3994076efb0a8e1e020de7f84b2367273e167;;		var i int
58b3994076efb0a8e1e020de7f84b2367273e167;;		_ = i
58b3994076efb0a8e1e020de7f84b2367273e167;;		var l int
58b3994076efb0a8e1e020de7f84b2367273e167;;		_ = l
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[i] = 0x8
58b3994076efb0a8e1e020de7f84b2367273e167;;		i++
58b3994076efb0a8e1e020de7f84b2367273e167;;		i = encodeVarintRecord(data, i, uint64(m.Index))
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[i] = 0x10
58b3994076efb0a8e1e020de7f84b2367273e167;;		i++
58b3994076efb0a8e1e020de7f84b2367273e167;;		i = encodeVarintRecord(data, i, uint64(m.Term))
58b3994076efb0a8e1e020de7f84b2367273e167;;		if m.XXX_unrecognized != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;			i += copy(data[i:], m.XXX_unrecognized)
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		return i, nil
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	func encodeFixed64Record(data []byte, offset int, v uint64) int {
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset] = uint8(v)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+1] = uint8(v >> 8)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+2] = uint8(v >> 16)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+3] = uint8(v >> 24)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+4] = uint8(v >> 32)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+5] = uint8(v >> 40)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+6] = uint8(v >> 48)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+7] = uint8(v >> 56)
58b3994076efb0a8e1e020de7f84b2367273e167;;		return offset + 8
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	func encodeFixed32Record(data []byte, offset int, v uint32) int {
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset] = uint8(v)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+1] = uint8(v >> 8)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+2] = uint8(v >> 16)
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset+3] = uint8(v >> 24)
58b3994076efb0a8e1e020de7f84b2367273e167;;		return offset + 4
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	func encodeVarintRecord(data []byte, offset int, v uint64) int {
58b3994076efb0a8e1e020de7f84b2367273e167;;		for v >= 1<<7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;			data[offset] = uint8(v&0x7f | 0x80)
58b3994076efb0a8e1e020de7f84b2367273e167;;			v >>= 7
58b3994076efb0a8e1e020de7f84b2367273e167;;			offset++
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		data[offset] = uint8(v)
58b3994076efb0a8e1e020de7f84b2367273e167;;		return offset + 1
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Record) Size() (n int) {
58b3994076efb0a8e1e020de7f84b2367273e167;;		var l int
58b3994076efb0a8e1e020de7f84b2367273e167;;		_ = l
58b3994076efb0a8e1e020de7f84b2367273e167;;		n += 1 + sovRecord(uint64(m.Type))
58b3994076efb0a8e1e020de7f84b2367273e167;;		n += 1 + sovRecord(uint64(m.Crc))
58b3994076efb0a8e1e020de7f84b2367273e167;;		if m.Data != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;			l = len(m.Data)
58b3994076efb0a8e1e020de7f84b2367273e167;;			n += 1 + l + sovRecord(uint64(l))
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		if m.XXX_unrecognized != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;			n += len(m.XXX_unrecognized)
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		return n
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Snapshot) Size() (n int) {
58b3994076efb0a8e1e020de7f84b2367273e167;;		var l int
58b3994076efb0a8e1e020de7f84b2367273e167;;		_ = l
58b3994076efb0a8e1e020de7f84b2367273e167;;		n += 1 + sovRecord(uint64(m.Index))
58b3994076efb0a8e1e020de7f84b2367273e167;;		n += 1 + sovRecord(uint64(m.Term))
58b3994076efb0a8e1e020de7f84b2367273e167;;		if m.XXX_unrecognized != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;			n += len(m.XXX_unrecognized)
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		return n
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	func sovRecord(x uint64) (n int) {
58b3994076efb0a8e1e020de7f84b2367273e167;;		for {
58b3994076efb0a8e1e020de7f84b2367273e167;;			n++
58b3994076efb0a8e1e020de7f84b2367273e167;;			x >>= 7
58b3994076efb0a8e1e020de7f84b2367273e167;;			if x == 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;				break
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		return n
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	func sozRecord(x uint64) (n int) {
58b3994076efb0a8e1e020de7f84b2367273e167;;		return sovRecord(uint64((x << 1) ^ uint64((int64(x) >> 63))))
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Record) Unmarshal(data []byte) error {
58b3994076efb0a8e1e020de7f84b2367273e167;;		l := len(data)
58b3994076efb0a8e1e020de7f84b2367273e167;;		iNdEx := 0
58b3994076efb0a8e1e020de7f84b2367273e167;;		for iNdEx < l {
58b3994076efb0a8e1e020de7f84b2367273e167;;			preIndex := iNdEx
58b3994076efb0a8e1e020de7f84b2367273e167;;			var wire uint64
58b3994076efb0a8e1e020de7f84b2367273e167;;			for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;				if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;				wire |= (uint64(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;				if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					break
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;			fieldNum := int32(wire >> 3)
58b3994076efb0a8e1e020de7f84b2367273e167;;			wireType := int(wire & 0x7)
58b3994076efb0a8e1e020de7f84b2367273e167;;			if wireType == 4 {
58b3994076efb0a8e1e020de7f84b2367273e167;;				return fmt.Errorf("proto: Record: wiretype end group for non-group")
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;			if fieldNum <= 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;				return fmt.Errorf("proto: Record: illegal tag %d (wire type %d)", fieldNum, wire)
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;			switch fieldNum {
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 1:
58b3994076efb0a8e1e020de7f84b2367273e167;;				if wireType != 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				m.Type = 0
58b3994076efb0a8e1e020de7f84b2367273e167;;				for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;					iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;					m.Type |= (int64(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;					if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						break
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 2:
58b3994076efb0a8e1e020de7f84b2367273e167;;				if wireType != 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return fmt.Errorf("proto: wrong wireType = %d for field Crc", wireType)
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				m.Crc = 0
58b3994076efb0a8e1e020de7f84b2367273e167;;				for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;					iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;					m.Crc |= (uint32(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;					if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						break
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 3:
58b3994076efb0a8e1e020de7f84b2367273e167;;				if wireType != 2 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				var byteLen int
58b3994076efb0a8e1e020de7f84b2367273e167;;				for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;					iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;					byteLen |= (int(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;					if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						break
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				if byteLen < 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return ErrInvalidLengthRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				postIndex := iNdEx + byteLen
58b3994076efb0a8e1e020de7f84b2367273e167;;				if postIndex > l {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				m.Data = append(m.Data[:0], data[iNdEx:postIndex]...)
58b3994076efb0a8e1e020de7f84b2367273e167;;				if m.Data == nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;					m.Data = []byte{}
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx = postIndex
58b3994076efb0a8e1e020de7f84b2367273e167;;			default:
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx = preIndex
58b3994076efb0a8e1e020de7f84b2367273e167;;				skippy, err := skipRecord(data[iNdEx:])
58b3994076efb0a8e1e020de7f84b2367273e167;;				if err != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return err
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				if skippy < 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return ErrInvalidLengthRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				if (iNdEx + skippy) > l {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				m.XXX_unrecognized = append(m.XXX_unrecognized, data[iNdEx:iNdEx+skippy]...)
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx += skippy
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;		if iNdEx > l {
58b3994076efb0a8e1e020de7f84b2367273e167;;			return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		return nil
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	func (m *Snapshot) Unmarshal(data []byte) error {
58b3994076efb0a8e1e020de7f84b2367273e167;;		l := len(data)
58b3994076efb0a8e1e020de7f84b2367273e167;;		iNdEx := 0
58b3994076efb0a8e1e020de7f84b2367273e167;;		for iNdEx < l {
58b3994076efb0a8e1e020de7f84b2367273e167;;			preIndex := iNdEx
58b3994076efb0a8e1e020de7f84b2367273e167;;			var wire uint64
58b3994076efb0a8e1e020de7f84b2367273e167;;			for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;				if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;				wire |= (uint64(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;				if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					break
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;			fieldNum := int32(wire >> 3)
58b3994076efb0a8e1e020de7f84b2367273e167;;			wireType := int(wire & 0x7)
58b3994076efb0a8e1e020de7f84b2367273e167;;			if wireType == 4 {
58b3994076efb0a8e1e020de7f84b2367273e167;;				return fmt.Errorf("proto: Snapshot: wiretype end group for non-group")
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;			if fieldNum <= 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;				return fmt.Errorf("proto: Snapshot: illegal tag %d (wire type %d)", fieldNum, wire)
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;			switch fieldNum {
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 1:
58b3994076efb0a8e1e020de7f84b2367273e167;;				if wireType != 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				m.Index = 0
58b3994076efb0a8e1e020de7f84b2367273e167;;				for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;					iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;					m.Index |= (uint64(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;					if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						break
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 2:
58b3994076efb0a8e1e020de7f84b2367273e167;;				if wireType != 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return fmt.Errorf("proto: wrong wireType = %d for field Term", wireType)
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				m.Term = 0
58b3994076efb0a8e1e020de7f84b2367273e167;;				for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;					iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;					m.Term |= (uint64(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;					if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						break
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;			default:
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx = preIndex
58b3994076efb0a8e1e020de7f84b2367273e167;;				skippy, err := skipRecord(data[iNdEx:])
58b3994076efb0a8e1e020de7f84b2367273e167;;				if err != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return err
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				if skippy < 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return ErrInvalidLengthRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				if (iNdEx + skippy) > l {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				m.XXX_unrecognized = append(m.XXX_unrecognized, data[iNdEx:iNdEx+skippy]...)
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx += skippy
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;		if iNdEx > l {
58b3994076efb0a8e1e020de7f84b2367273e167;;			return io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		return nil
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	func skipRecord(data []byte) (n int, err error) {
58b3994076efb0a8e1e020de7f84b2367273e167;;		l := len(data)
58b3994076efb0a8e1e020de7f84b2367273e167;;		iNdEx := 0
58b3994076efb0a8e1e020de7f84b2367273e167;;		for iNdEx < l {
58b3994076efb0a8e1e020de7f84b2367273e167;;			var wire uint64
58b3994076efb0a8e1e020de7f84b2367273e167;;			for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;				if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return 0, ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return 0, io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;				wire |= (uint64(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;				if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					break
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;			wireType := int(wire & 0x7)
58b3994076efb0a8e1e020de7f84b2367273e167;;			switch wireType {
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 0:
58b3994076efb0a8e1e020de7f84b2367273e167;;				for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return 0, ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return 0, io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;					if data[iNdEx-1] < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						break
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				return iNdEx, nil
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 1:
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx += 8
58b3994076efb0a8e1e020de7f84b2367273e167;;				return iNdEx, nil
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 2:
58b3994076efb0a8e1e020de7f84b2367273e167;;				var length int
58b3994076efb0a8e1e020de7f84b2367273e167;;				for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return 0, ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return 0, io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;					iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;					length |= (int(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;					if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						break
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx += length
58b3994076efb0a8e1e020de7f84b2367273e167;;				if length < 0 {
58b3994076efb0a8e1e020de7f84b2367273e167;;					return 0, ErrInvalidLengthRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				return iNdEx, nil
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 3:
58b3994076efb0a8e1e020de7f84b2367273e167;;				for {
58b3994076efb0a8e1e020de7f84b2367273e167;;					var innerWire uint64
58b3994076efb0a8e1e020de7f84b2367273e167;;					var start int = iNdEx
58b3994076efb0a8e1e020de7f84b2367273e167;;					for shift := uint(0); ; shift += 7 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						if shift >= 64 {
58b3994076efb0a8e1e020de7f84b2367273e167;;							return 0, ErrIntOverflowRecord
58b3994076efb0a8e1e020de7f84b2367273e167;;						}
58b3994076efb0a8e1e020de7f84b2367273e167;;						if iNdEx >= l {
58b3994076efb0a8e1e020de7f84b2367273e167;;							return 0, io.ErrUnexpectedEOF
58b3994076efb0a8e1e020de7f84b2367273e167;;						}
58b3994076efb0a8e1e020de7f84b2367273e167;;						b := data[iNdEx]
58b3994076efb0a8e1e020de7f84b2367273e167;;						iNdEx++
58b3994076efb0a8e1e020de7f84b2367273e167;;						innerWire |= (uint64(b) & 0x7F) << shift
58b3994076efb0a8e1e020de7f84b2367273e167;;						if b < 0x80 {
58b3994076efb0a8e1e020de7f84b2367273e167;;							break
58b3994076efb0a8e1e020de7f84b2367273e167;;						}
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					innerWireType := int(innerWire & 0x7)
58b3994076efb0a8e1e020de7f84b2367273e167;;					if innerWireType == 4 {
58b3994076efb0a8e1e020de7f84b2367273e167;;						break
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					next, err := skipRecord(data[start:])
58b3994076efb0a8e1e020de7f84b2367273e167;;					if err != nil {
58b3994076efb0a8e1e020de7f84b2367273e167;;						return 0, err
58b3994076efb0a8e1e020de7f84b2367273e167;;					}
58b3994076efb0a8e1e020de7f84b2367273e167;;					iNdEx = start + next
58b3994076efb0a8e1e020de7f84b2367273e167;;				}
58b3994076efb0a8e1e020de7f84b2367273e167;;				return iNdEx, nil
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 4:
58b3994076efb0a8e1e020de7f84b2367273e167;;				return iNdEx, nil
58b3994076efb0a8e1e020de7f84b2367273e167;;			case 5:
58b3994076efb0a8e1e020de7f84b2367273e167;;				iNdEx += 4
58b3994076efb0a8e1e020de7f84b2367273e167;;				return iNdEx, nil
58b3994076efb0a8e1e020de7f84b2367273e167;;			default:
58b3994076efb0a8e1e020de7f84b2367273e167;;				return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
58b3994076efb0a8e1e020de7f84b2367273e167;;			}
58b3994076efb0a8e1e020de7f84b2367273e167;;		}
58b3994076efb0a8e1e020de7f84b2367273e167;;		panic("unreachable")
58b3994076efb0a8e1e020de7f84b2367273e167;;	}
58b3994076efb0a8e1e020de7f84b2367273e167;;	
58b3994076efb0a8e1e020de7f84b2367273e167;;	var (
58b3994076efb0a8e1e020de7f84b2367273e167;;		ErrInvalidLengthRecord = fmt.Errorf("proto: negative length found during unmarshaling")
58b3994076efb0a8e1e020de7f84b2367273e167;;		ErrIntOverflowRecord   = fmt.Errorf("proto: integer overflow")
58b3994076efb0a8e1e020de7f84b2367273e167;;	)

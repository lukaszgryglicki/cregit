0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
6759dd73aec9ff5b9611f3a1cacb87f980b10742;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package cache
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		kubecache "k8s.io/client-go/tools/cache"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/federation/apis/federation/v1beta1"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StoreToClusterLister makes a Store have the List method of the metav1.ClusterInterface
0000000000000000000000000000000000000000;;	// The Store must contain (only) clusters.
0000000000000000000000000000000000000000;;	type StoreToClusterLister struct {
0000000000000000000000000000000000000000;;		kubecache.Store
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *StoreToClusterLister) List() (clusters v1beta1.ClusterList, err error) {
0000000000000000000000000000000000000000;;		for _, m := range s.Store.List() {
0000000000000000000000000000000000000000;;			clusters.Items = append(clusters.Items, *(m.(*v1beta1.Cluster)))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return clusters, nil
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
940468ddc8dc2422f9b02f0a2cb2717cdab519d9;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package util
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"reflect"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		api_v1 "k8s.io/api/core/v1"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Checks if cluster-independent, user provided data in two given ConfigMaps are equal. If in
0000000000000000000000000000000000000000;;	// the future the ConfigMap structure is expanded then any field that is not populated.
0000000000000000000000000000000000000000;;	// by the api server should be included here.
0000000000000000000000000000000000000000;;	func ConfigMapEquivalent(s1, s2 *api_v1.ConfigMap) bool {
0000000000000000000000000000000000000000;;		return ObjectMetaEquivalent(s1.ObjectMeta, s2.ObjectMeta) &&
0000000000000000000000000000000000000000;;			reflect.DeepEqual(s1.Data, s2.Data)
0000000000000000000000000000000000000000;;	}

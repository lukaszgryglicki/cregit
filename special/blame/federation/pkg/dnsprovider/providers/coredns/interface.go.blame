0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
1db875b9bbbbff676f771e0e13033de40acecb41;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package coredns
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/federation/pkg/dnsprovider"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/federation/pkg/dnsprovider/providers/coredns/stubs"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Compile time check for interface adherence
0000000000000000000000000000000000000000;;	var _ dnsprovider.Interface = Interface{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Interface struct {
0000000000000000000000000000000000000000;;		etcdKeysAPI    stubs.EtcdKeysAPI
0000000000000000000000000000000000000000;;		etcdPathPrefix string
0000000000000000000000000000000000000000;;		zones          Zones
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// newInterfaceWithStub facilitates stubbing out the underlying etcd
0000000000000000000000000000000000000000;;	// library for testing purposes.  It returns an provider-independent interface.
0000000000000000000000000000000000000000;;	func newInterfaceWithStub(etcdKeysAPI stubs.EtcdKeysAPI) *Interface {
0000000000000000000000000000000000000000;;		return &Interface{etcdKeysAPI: etcdKeysAPI}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (i Interface) Zones() (dnsprovider.Zones, bool) {
0000000000000000000000000000000000000000;;		return i.zones, true
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
5e13104b34911753aeb4d03a09f907bc53d40e86;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package stubs
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"google.golang.org/api/googleapi"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/federation/pkg/dnsprovider/providers/google/clouddns/internal/interfaces"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Compile time check for interface adherence
0000000000000000000000000000000000000000;;	var _ interfaces.ManagedZonesDeleteCall = ManagedZonesDeleteCall{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ManagedZonesDeleteCall struct {
0000000000000000000000000000000000000000;;		Service  *ManagedZonesService
0000000000000000000000000000000000000000;;		Project  string
0000000000000000000000000000000000000000;;		ZoneName string
0000000000000000000000000000000000000000;;		Error    *error // Use this to override response for testing if required
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (call ManagedZonesDeleteCall) Do(opts ...googleapi.CallOption) error {
0000000000000000000000000000000000000000;;		if call.Error != nil { // Return the override value
0000000000000000000000000000000000000000;;			return *call.Error
0000000000000000000000000000000000000000;;		} else { // Just try to delete it from the in-memory array.
0000000000000000000000000000000000000000;;			project, ok := call.Service.Impl[call.Project]
0000000000000000000000000000000000000000;;			if ok {
0000000000000000000000000000000000000000;;				zone, ok := project[call.ZoneName]
0000000000000000000000000000000000000000;;				if ok {
0000000000000000000000000000000000000000;;					delete(project, zone.Name())
0000000000000000000000000000000000000000;;					return nil
0000000000000000000000000000000000000000;;				} else {
0000000000000000000000000000000000000000;;					return fmt.Errorf("Failed to find zone %s in project %s to delete it", call.ZoneName, call.Project)
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			} else {
0000000000000000000000000000000000000000;;				return fmt.Errorf("Failed to find project %s to delete zone %s from it", call.Project, call.ZoneName)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

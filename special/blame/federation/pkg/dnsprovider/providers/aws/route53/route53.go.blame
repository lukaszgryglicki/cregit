0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
24db3948e8dc066859516f03061326511cc7c557;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// route53 is the implementation of pkg/dnsprovider interface for AWS Route53
0000000000000000000000000000000000000000;;	package route53
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws"
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws/request"
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws/session"
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/service/route53"
0000000000000000000000000000000000000000;;		"github.com/golang/glog"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/federation/pkg/dnsprovider"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		ProviderName = "aws-route53"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		dnsprovider.RegisterDnsProvider(ProviderName, func(config io.Reader) (dnsprovider.Interface, error) {
0000000000000000000000000000000000000000;;			return newRoute53(config)
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// route53HandlerLogger is a request handler for aws-sdk-go that logs route53 requests
0000000000000000000000000000000000000000;;	func route53HandlerLogger(req *request.Request) {
0000000000000000000000000000000000000000;;		service := req.ClientInfo.ServiceName
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		name := "?"
0000000000000000000000000000000000000000;;		if req.Operation != nil {
0000000000000000000000000000000000000000;;			name = req.Operation.Name
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		glog.V(4).Infof("AWS request: %s %s", service, name)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// newRoute53 creates a new instance of an AWS Route53 DNS Interface.
0000000000000000000000000000000000000000;;	func newRoute53(config io.Reader) (*Interface, error) {
0000000000000000000000000000000000000000;;		// Connect to AWS Route53 - TODO: Do more sophisticated auth
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		awsConfig := aws.NewConfig()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// This avoids a confusing error message when we fail to get credentials
0000000000000000000000000000000000000000;;		// e.g. https://github.com/kubernetes/kops/issues/605
0000000000000000000000000000000000000000;;		awsConfig = awsConfig.WithCredentialsChainVerboseErrors(true)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		svc := route53.New(session.New(), awsConfig)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Add our handler that will log requests
0000000000000000000000000000000000000000;;		svc.Handlers.Sign.PushFrontNamed(request.NamedHandler{
0000000000000000000000000000000000000000;;			Name: "k8s/logger",
0000000000000000000000000000000000000000;;			Fn:   route53HandlerLogger,
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return New(svc), nil
0000000000000000000000000000000000000000;;	}

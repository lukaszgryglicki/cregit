0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2016 The Kubernetes Authors.
24db3948e8dc066859516f03061326511cc7c557;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package route53
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/federation/pkg/dnsprovider"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/federation/pkg/dnsprovider/providers/aws/route53/stubs"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Compile time check for interface adherence
0000000000000000000000000000000000000000;;	var _ dnsprovider.Interface = Interface{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Interface struct {
0000000000000000000000000000000000000000;;		service stubs.Route53API
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// New builds an Interface, with a specified Route53API implementation.
0000000000000000000000000000000000000000;;	// This is useful for testing purposes, but also if we want an instance with with custom AWS options.
0000000000000000000000000000000000000000;;	func New(service stubs.Route53API) *Interface {
0000000000000000000000000000000000000000;;		return &Interface{service}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (i Interface) Zones() (zones dnsprovider.Zones, supported bool) {
0000000000000000000000000000000000000000;;		return Zones{&i}, true
0000000000000000000000000000000000000000;;	}

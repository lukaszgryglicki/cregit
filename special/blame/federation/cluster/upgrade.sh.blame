0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2017 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/../..
0000000000000000000000000000000000000000;;	# For `kube::log::status` function since it already sources
0000000000000000000000000000000000000000;;	# "${KUBE_ROOT}/cluster/lib/logging.sh"
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/cluster/common.sh"
0000000000000000000000000000000000000000;;	# For $FEDERATION_NAME, $FEDERATION_NAMESPACE, $HOST_CLUSTER_CONTEXT,
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/federation/cluster/common.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_VERSION="${1}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	host_kubectl="${KUBE_ROOT}/cluster/kubectl.sh --context=${HOST_CLUSTER_CONTEXT} --namespace=${FEDERATION_NAMESPACE}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	function upgrade() {
0000000000000000000000000000000000000000;;	  local -r project="${KUBE_PROJECT:-${PROJECT:-}}"
0000000000000000000000000000000000000000;;	  local -r kube_registry="${KUBE_REGISTRY:-gcr.io/${project}}"
0000000000000000000000000000000000000000;;	  local -r image_version="${kube_registry}/hyperkube-amd64:${KUBE_VERSION}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  kube::log::status "Upgrading federation control plane ${FEDERATION_NAME} with image ${image_version}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  # Upgrade apiserver image
0000000000000000000000000000000000000000;;	  ${host_kubectl} set image deployment/federation-apiserver apiserver=${image_version}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  # Upgrade controller-manager image
0000000000000000000000000000000000000000;;	  ${host_kubectl} set image deployment/federation-controller-manager controller-manager=${image_version}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	upgrade

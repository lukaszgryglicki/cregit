0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2017 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Call this to dump all Federation pod logs into the folder specified in $1
0000000000000000000000000000000000000000;;	# (defaults to _artifacts).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# For FEDERATION_NAMESPACE
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/../..
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/federation/cluster/common.sh"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	readonly REPORT_DIR="${1:-_artifacts}"
0000000000000000000000000000000000000000;;	OUTPUT_DIR="${REPORT_DIR}/federation"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Dumps logs for all pods in a federation.
0000000000000000000000000000000000000000;;	function dump_federation_pod_logs() {
0000000000000000000000000000000000000000;;	  local -r federation_pod_names_string="$(kubectl get pods -l 'app=federated-cluster' --namespace=${FEDERATION_NAMESPACE} -o name)"
0000000000000000000000000000000000000000;;	  if [[ -z "${federation_pod_names_string}" ]]; then
0000000000000000000000000000000000000000;;	    return
0000000000000000000000000000000000000000;;	  fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  local -r federation_pod_names=(${federation_pod_names_string})
0000000000000000000000000000000000000000;;	  for pod_name in ${federation_pod_names[@]}; do
0000000000000000000000000000000000000000;;	    # The API server pod has two containers
0000000000000000000000000000000000000000;;	    if [[ "${pod_name}" == *apiserver* ]]; then
0000000000000000000000000000000000000000;;	      dump_apiserver_pod_logs "${pod_name}"
0000000000000000000000000000000000000000;;	      continue
0000000000000000000000000000000000000000;;	    fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    kubectl logs "${pod_name}" --namespace="${FEDERATION_NAMESPACE}" \
0000000000000000000000000000000000000000;;	        >"${OUTPUT_DIR}/${pod_name#pods/}.log"
0000000000000000000000000000000000000000;;	  done
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Dumps logs from all containers in an API server pod.
0000000000000000000000000000000000000000;;	# Arguments:
0000000000000000000000000000000000000000;;	# - the name of the API server pod, with a pods/ prefix.
0000000000000000000000000000000000000000;;	function dump_apiserver_pod_logs() {
0000000000000000000000000000000000000000;;	  local -r apiserver_pod_containers=(apiserver etcd)
0000000000000000000000000000000000000000;;	  for container in ${apiserver_pod_containers[@]}; do
0000000000000000000000000000000000000000;;	    kubectl logs "${1}" -c "${container}" --namespace="${FEDERATION_NAMESPACE}" \
0000000000000000000000000000000000000000;;	        >"${OUTPUT_DIR}/${1#pods/}-${container}.log"
0000000000000000000000000000000000000000;;	  done
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Dumps logs from all containers in the DNS pods.
0000000000000000000000000000000000000000;;	# TODO: This currently only grabs DNS pod logs from the host cluster. It should
0000000000000000000000000000000000000000;;	# grab those logs from all clusters in the federation.
0000000000000000000000000000000000000000;;	function dump_dns_pod_logs() {
0000000000000000000000000000000000000000;;	  local -r dns_pod_names_string="$(kubectl get pods -l 'k8s-app=kube-dns' --namespace=kube-system -o name)"
0000000000000000000000000000000000000000;;	  if [[ -z "${dns_pod_names_string}" ]]; then
0000000000000000000000000000000000000000;;	    return
0000000000000000000000000000000000000000;;	  fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  local -r dns_pod_names=(${dns_pod_names_string})
0000000000000000000000000000000000000000;;	  local -r dns_pod_containers=(kubedns dnsmasq sidecar)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  for pod_name in ${dns_pod_names[@]}; do
0000000000000000000000000000000000000000;;	    # As of 3/2017, the only pod that matches the kube-dns label is kube-dns, and
0000000000000000000000000000000000000000;;	    # it has three containers.
0000000000000000000000000000000000000000;;	    for container in ${dns_pod_containers[@]}; do
0000000000000000000000000000000000000000;;	      kubectl logs "${pod_name}" -c "${container}" --namespace=kube-system \
0000000000000000000000000000000000000000;;	          >"${OUTPUT_DIR}/${pod_name#pods/}-${container}.log"
0000000000000000000000000000000000000000;;	    done
0000000000000000000000000000000000000000;;	  done
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "Dumping Federation and DNS pod logs to ${REPORT_DIR}"
0000000000000000000000000000000000000000;;	mkdir -p "${OUTPUT_DIR}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	dump_federation_pod_logs
0000000000000000000000000000000000000000;;	dump_dns_pod_logs

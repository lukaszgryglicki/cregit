53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Code generated by protoc-gen-go.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// source: google/protobuf/type.proto
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// DO NOT EDIT!
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	package google_protobuf
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import proto "github.com/golang/protobuf/proto"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import fmt "fmt"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import math "math"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Reference imports to suppress errors if they are not otherwise used.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var _ = proto.Marshal
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var _ = fmt.Errorf
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var _ = math.Inf
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// The syntax in which a protocol buffer element is defined.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Syntax int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Syntax `proto2`.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Syntax_SYNTAX_PROTO2 Syntax = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Syntax `proto3`.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Syntax_SYNTAX_PROTO3 Syntax = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var Syntax_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "SYNTAX_PROTO2",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "SYNTAX_PROTO3",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var Syntax_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"SYNTAX_PROTO2": 0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"SYNTAX_PROTO3": 1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x Syntax) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(Syntax_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (Syntax) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Basic field types.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Field_Kind int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type unknown.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_UNKNOWN Field_Kind = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type double.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_DOUBLE Field_Kind = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type float.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_FLOAT Field_Kind = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type int64.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_INT64 Field_Kind = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type uint64.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_UINT64 Field_Kind = 4
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type int32.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_INT32 Field_Kind = 5
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type fixed64.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_FIXED64 Field_Kind = 6
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type fixed32.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_FIXED32 Field_Kind = 7
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type bool.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_BOOL Field_Kind = 8
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type string.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_STRING Field_Kind = 9
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type group. Proto2 syntax only, and deprecated.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_GROUP Field_Kind = 10
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type message.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_MESSAGE Field_Kind = 11
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type bytes.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_BYTES Field_Kind = 12
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type uint32.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_UINT32 Field_Kind = 13
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type enum.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_ENUM Field_Kind = 14
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type sfixed32.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_SFIXED32 Field_Kind = 15
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type sfixed64.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_SFIXED64 Field_Kind = 16
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type sint32.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_SINT32 Field_Kind = 17
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Field type sint64.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_TYPE_SINT64 Field_Kind = 18
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var Field_Kind_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0:  "TYPE_UNKNOWN",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1:  "TYPE_DOUBLE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2:  "TYPE_FLOAT",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3:  "TYPE_INT64",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		4:  "TYPE_UINT64",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		5:  "TYPE_INT32",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		6:  "TYPE_FIXED64",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		7:  "TYPE_FIXED32",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		8:  "TYPE_BOOL",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		9:  "TYPE_STRING",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		10: "TYPE_GROUP",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		11: "TYPE_MESSAGE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		12: "TYPE_BYTES",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		13: "TYPE_UINT32",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		14: "TYPE_ENUM",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		15: "TYPE_SFIXED32",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		16: "TYPE_SFIXED64",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		17: "TYPE_SINT32",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		18: "TYPE_SINT64",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var Field_Kind_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_UNKNOWN":  0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_DOUBLE":   1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_FLOAT":    2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_INT64":    3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_UINT64":   4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_INT32":    5,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_FIXED64":  6,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_FIXED32":  7,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_BOOL":     8,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_STRING":   9,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_GROUP":    10,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_MESSAGE":  11,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_BYTES":    12,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_UINT32":   13,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_ENUM":     14,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_SFIXED32": 15,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_SFIXED64": 16,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_SINT32":   17,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"TYPE_SINT64":   18,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x Field_Kind) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(Field_Kind_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (Field_Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{1, 0} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Whether a field is optional, required, or repeated.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Field_Cardinality int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// For fields with unknown cardinality.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_CARDINALITY_UNKNOWN Field_Cardinality = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// For optional fields.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_CARDINALITY_OPTIONAL Field_Cardinality = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// For required fields. Proto2 syntax only.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_CARDINALITY_REQUIRED Field_Cardinality = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// For repeated fields.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Field_CARDINALITY_REPEATED Field_Cardinality = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var Field_Cardinality_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "CARDINALITY_UNKNOWN",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "CARDINALITY_OPTIONAL",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "CARDINALITY_REQUIRED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "CARDINALITY_REPEATED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var Field_Cardinality_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"CARDINALITY_UNKNOWN":  0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"CARDINALITY_OPTIONAL": 1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"CARDINALITY_REQUIRED": 2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"CARDINALITY_REPEATED": 3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x Field_Cardinality) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(Field_Cardinality_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (Field_Cardinality) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{1, 1} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// A protocol buffer message type.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Type struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The fully qualified message name.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The list of fields.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Fields []*Field `protobuf:"bytes,2,rep,name=fields" json:"fields,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The list of types appearing in `oneof` definitions in this type.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Oneofs []string `protobuf:"bytes,3,rep,name=oneofs" json:"oneofs,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The protocol buffer options.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Options []*Option `protobuf:"bytes,4,rep,name=options" json:"options,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The source context.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SourceContext *SourceContext `protobuf:"bytes,5,opt,name=source_context,json=sourceContext" json:"source_context,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The source syntax.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Syntax Syntax `protobuf:"varint,6,opt,name=syntax,enum=google.protobuf.Syntax" json:"syntax,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Type) Reset()                    { *m = Type{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Type) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Type) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Type) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Type) GetFields() []*Field {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Fields
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Type) GetOptions() []*Option {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Options
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Type) GetSourceContext() *SourceContext {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.SourceContext
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// A single field of a message type.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Field struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The field type.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Kind Field_Kind `protobuf:"varint,1,opt,name=kind,enum=google.protobuf.Field_Kind" json:"kind,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The field cardinality.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Cardinality Field_Cardinality `protobuf:"varint,2,opt,name=cardinality,enum=google.protobuf.Field_Cardinality" json:"cardinality,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The field number.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Number int32 `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The field name.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Name string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The field type URL, without the scheme, for message or enumeration
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// types. Example: `"type.googleapis.com/google.protobuf.Timestamp"`.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		TypeUrl string `protobuf:"bytes,6,opt,name=type_url,json=typeUrl" json:"type_url,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The index of the field type in `Type.oneofs`, for message or enumeration
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// types. The first type has index 1; zero means the type is not in the list.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		OneofIndex int32 `protobuf:"varint,7,opt,name=oneof_index,json=oneofIndex" json:"oneof_index,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Whether to use alternative packed wire representation.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Packed bool `protobuf:"varint,8,opt,name=packed" json:"packed,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The protocol buffer options.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Options []*Option `protobuf:"bytes,9,rep,name=options" json:"options,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The field JSON name.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		JsonName string `protobuf:"bytes,10,opt,name=json_name,json=jsonName" json:"json_name,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The string value of the default value of this field. Proto2 syntax only.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		DefaultValue string `protobuf:"bytes,11,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Field) Reset()                    { *m = Field{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Field) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Field) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Field) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Field) GetOptions() []*Option {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Options
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Enum type definition.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Enum struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Enum type name.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Enum value definitions.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Enumvalue []*EnumValue `protobuf:"bytes,2,rep,name=enumvalue" json:"enumvalue,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Protocol buffer options.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Options []*Option `protobuf:"bytes,3,rep,name=options" json:"options,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The source context.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SourceContext *SourceContext `protobuf:"bytes,4,opt,name=source_context,json=sourceContext" json:"source_context,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The source syntax.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Syntax Syntax `protobuf:"varint,5,opt,name=syntax,enum=google.protobuf.Syntax" json:"syntax,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Enum) Reset()                    { *m = Enum{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Enum) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Enum) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Enum) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Enum) GetEnumvalue() []*EnumValue {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Enumvalue
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Enum) GetOptions() []*Option {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Options
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Enum) GetSourceContext() *SourceContext {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.SourceContext
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Enum value definition.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type EnumValue struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Enum value name.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Enum value number.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Number int32 `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Protocol buffer options.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Options []*Option `protobuf:"bytes,3,rep,name=options" json:"options,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *EnumValue) Reset()                    { *m = EnumValue{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *EnumValue) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*EnumValue) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*EnumValue) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *EnumValue) GetOptions() []*Option {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Options
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// A protocol buffer option, which can be attached to a message, field,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// enumeration, etc.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Option struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The option's name. For example, `"java_package"`.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The option's value. For example, `"com.google.protobuf"`.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Value *Any `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Option) Reset()                    { *m = Option{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Option) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Option) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Option) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Option) GetValue() *Any {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Value
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func init() {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Type)(nil), "google.protobuf.Type")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Field)(nil), "google.protobuf.Field")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Enum)(nil), "google.protobuf.Enum")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*EnumValue)(nil), "google.protobuf.EnumValue")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Option)(nil), "google.protobuf.Option")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("google.protobuf.Syntax", Syntax_name, Syntax_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("google.protobuf.Field_Kind", Field_Kind_name, Field_Kind_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("google.protobuf.Field_Cardinality", Field_Cardinality_name, Field_Cardinality_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func init() { proto.RegisterFile("google/protobuf/type.proto", fileDescriptor8) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var fileDescriptor8 = []byte{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// 768 bytes of a gzipped FileDescriptorProto
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x55, 0xcd, 0x6e, 0xda, 0x58,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x14, 0x1e, 0x83, 0x31, 0xf8, 0x38, 0x10, 0xe7, 0x26, 0x4a, 0x1c, 0x22, 0x65, 0x22, 0x66, 0x16,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x51, 0x16, 0x44, 0x43, 0x46, 0xa3, 0xd9, 0x42, 0x70, 0x18, 0x2b, 0xc4, 0xf6, 0x5c, 0x4c, 0x13,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x56, 0xc8, 0x01, 0x13, 0x91, 0x38, 0x36, 0xc2, 0xa6, 0x0d, 0x0f, 0xd1, 0x77, 0xa8, 0xba, 0xec,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xba, 0x0f, 0xd1, 0xb7, 0x6a, 0xef, 0xbd, 0x06, 0x63, 0x7e, 0x2a, 0xa5, 0xed, 0x8e, 0xf3, 0x7d,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xdf, 0xf9, 0xbd, 0xc7, 0x07, 0x28, 0x3e, 0xf8, 0xfe, 0x83, 0xeb, 0x9c, 0x8f, 0xc6, 0x7e, 0xe8,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xdf, 0x4f, 0x06, 0xe7, 0xe1, 0x74, 0xe4, 0x94, 0x99, 0x85, 0xb6, 0x23, 0xae, 0x3c, 0xe7, 0x8a,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x87, 0xab, 0x62, 0xdb, 0x9b, 0x46, 0x6c, 0xf1, 0xcf, 0x55, 0x2a, 0xf0, 0x27, 0xe3, 0x9e, 0xd3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xed, 0xf9, 0x5e, 0xe8, 0xbc, 0x84, 0x91, 0xaa, 0xf4, 0x3e, 0x05, 0xbc, 0x45, 0x12, 0x20, 0x04,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xbc, 0x67, 0x3f, 0x3b, 0x0a, 0x77, 0xc2, 0x9d, 0x8a, 0x98, 0xfd, 0x46, 0x65, 0x10, 0x06, 0x43,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc7, 0xed, 0x07, 0x4a, 0xea, 0x24, 0x7d, 0x2a, 0x55, 0xf6, 0xcb, 0x2b, 0xf9, 0xcb, 0x57, 0x94,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc6, 0x33, 0x15, 0xda, 0x07, 0xc1, 0xf7, 0x1c, 0x7f, 0x10, 0x28, 0x69, 0xa2, 0x17, 0xf1, 0xcc,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x42, 0x7f, 0x41, 0xd6, 0x1f, 0x85, 0x43, 0xdf, 0x0b, 0x14, 0x9e, 0x05, 0x3a, 0x58, 0x0b, 0x64,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x30, 0x1e, 0xcf, 0x75, 0x48, 0x85, 0xc2, 0x72, 0xbd, 0x4a, 0x86, 0x14, 0x26, 0x55, 0x8e, 0xd7,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x3c, 0x5b, 0x4c, 0x76, 0x19, 0xa9, 0x70, 0x3e, 0x48, 0x9a, 0xe8, 0x1c, 0x84, 0x60, 0xea, 0x85,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xf6, 0x8b, 0x22, 0x10, 0xf7, 0xc2, 0x86, 0xc4, 0x2d, 0x46, 0xe3, 0x99, 0xac, 0xf4, 0x59, 0x80,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x0c, 0x6b, 0x8a, 0xb8, 0xf2, 0x4f, 0x43, 0xaf, 0xcf, 0x06, 0x52, 0xa8, 0x1c, 0x6d, 0x6e, 0xbd,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x7c, 0x4d, 0x24, 0x98, 0x09, 0x51, 0x1d, 0xa4, 0x9e, 0x3d, 0xee, 0x0f, 0x3d, 0xdb, 0x1d, 0x86,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x53, 0x32, 0x32, 0xea, 0x57, 0xfa, 0x8e, 0xdf, 0xe5, 0x42, 0x89, 0x93, 0x6e, 0x74, 0x86, 0xde,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xe4, 0xf9, 0xde, 0x19, 0x93, 0x19, 0x72, 0xa7, 0x19, 0x3c, 0xb3, 0xe2, 0xf7, 0xe1, 0x13, 0xef,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x73, 0x08, 0x39, 0xba, 0x1c, 0xdd, 0xc9, 0xd8, 0x65, 0xfd, 0x89, 0x38, 0x4b, 0xed, 0xf6, 0xd8,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x45, 0xbf, 0x83, 0xc4, 0x86, 0xdf, 0x25, 0x95, 0x39, 0x2f, 0x4a, 0x96, 0xc5, 0x02, 0x06, 0x69,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x14, 0xa1, 0x79, 0x46, 0x76, 0xef, 0xc9, 0xe9, 0x2b, 0x39, 0xc2, 0xe5, 0xf0, 0xcc, 0x4a, 0xbe,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x95, 0xf8, 0xca, 0xb7, 0x3a, 0x02, 0xf1, 0x31, 0xf0, 0xbd, 0x2e, 0xab, 0x0f, 0x58, 0x1d, 0x39,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x0a, 0xe8, 0xb4, 0xc6, 0x3f, 0x20, 0xdf, 0x77, 0x06, 0xf6, 0xc4, 0x0d, 0xbb, 0x6f, 0x6d, 0x77,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xe2, 0x28, 0x12, 0x13, 0x6c, 0xcd, 0xc0, 0x37, 0x14, 0x2b, 0x7d, 0x21, 0x5b, 0x48, 0x27, 0x89,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x64, 0xd8, 0xb2, 0x3a, 0xa6, 0xda, 0x6d, 0xeb, 0xd7, 0xba, 0x71, 0xab, 0xcb, 0xbf, 0xa1, 0x6d,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x90, 0x18, 0x52, 0x37, 0xda, 0xb5, 0xa6, 0x2a, 0x73, 0xa8, 0x00, 0xc0, 0x80, 0xab, 0xa6, 0x51,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xb5, 0xe4, 0x54, 0x6c, 0x6b, 0xba, 0xf5, 0xcf, 0xdf, 0x72, 0x3a, 0x76, 0x68, 0x47, 0x00, 0x9f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x14, 0x5c, 0x54, 0xe4, 0x4c, 0x9c, 0xe3, 0x4a, 0xbb, 0x53, 0xeb, 0x44, 0x21, 0x2c, 0x23, 0x44,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x93, 0x45, 0x79, 0x10, 0x19, 0x52, 0x33, 0x8c, 0xa6, 0x9c, 0x8b, 0x63, 0xb6, 0x2c, 0xac, 0xe9,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x0d, 0x59, 0x8c, 0x63, 0x36, 0xb0, 0xd1, 0x36, 0x65, 0x88, 0x23, 0xdc, 0xa8, 0xad, 0x56, 0xb5,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa1, 0xca, 0x52, 0xac, 0xa8, 0x75, 0x2c, 0xb5, 0x25, 0x6f, 0x2d, 0x95, 0x45, 0x52, 0xe4, 0xe3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x14, 0xaa, 0xde, 0xbe, 0x91, 0x0b, 0x68, 0x07, 0xf2, 0x51, 0x8a, 0x79, 0x11, 0xdb, 0x2b, 0x10,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa9, 0x54, 0x5e, 0x14, 0x12, 0x45, 0xd9, 0x59, 0x02, 0x88, 0x02, 0x95, 0x42, 0x90, 0x12, 0xbb,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x85, 0x0e, 0x60, 0xf7, 0xb2, 0x8a, 0xeb, 0x9a, 0x5e, 0x6d, 0x6a, 0x56, 0x27, 0x31, 0x57, 0x05,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xf6, 0x92, 0x84, 0x61, 0x5a, 0x9a, 0x41, 0x7e, 0x93, 0x01, 0xaf, 0x30, 0x58, 0xfd, 0xbf, 0xad,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x61, 0xb5, 0x4e, 0x46, 0xbd, 0xc6, 0x98, 0x6a, 0xd5, 0x22, 0x4c, 0xba, 0xf4, 0x95, 0x03, 0x5e,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x25, 0x9b, 0xba, 0xf1, 0x8c, 0xfc, 0x0b, 0xa2, 0x43, 0xb8, 0xe8, 0xf9, 0xa3, 0x4b, 0x52, 0x5c,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x5b, 0x2a, 0xea, 0xcd, 0x96, 0x01, 0x2f, 0xc4, 0xc9, 0x65, 0x4c, 0xff, 0xf4, 0xe1, 0xe0, 0x7f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xed, 0x70, 0x64, 0x5e, 0x77, 0x38, 0x1e, 0x41, 0x8c, 0x5b, 0xd8, 0x38, 0x85, 0xc5, 0x87, 0x9d,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x5a, 0xfa, 0xb0, 0x7f, 0xbc, 0xc7, 0xd2, 0x7f, 0x20, 0x44, 0xd0, 0xc6, 0x44, 0x67, 0x90, 0x99,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x8f, 0x9a, 0x36, 0xbe, 0xb7, 0x16, 0xae, 0xea, 0x4d, 0x71, 0x24, 0x39, 0x23, 0x17, 0x3e, 0xea,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x83, 0x2e, 0x5b, 0xab, 0xa3, 0x5b, 0xd5, 0xbb, 0xae, 0x89, 0x0d, 0xcb, 0xa8, 0x90, 0x15, 0x59,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x81, 0x2e, 0x64, 0xae, 0xd6, 0x84, 0xdd, 0x9e, 0xff, 0xbc, 0x1a, 0xb1, 0x26, 0xd2, 0xbf, 0x10,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x93, 0x5a, 0x26, 0xf7, 0x81, 0xe3, 0x3e, 0xa6, 0xd2, 0x0d, 0xb3, 0xf6, 0x29, 0x75, 0xdc, 0x88,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x74, 0xe6, 0x3c, 0xf3, 0xad, 0xe3, 0xba, 0xd7, 0x9e, 0xff, 0xce, 0xa3, 0xfa, 0xe0, 0x5e, 0x60,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x01, 0x2e, 0xbe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x95, 0xbb, 0xeb, 0x52, 0xf3, 0x06, 0x00, 0x00,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}

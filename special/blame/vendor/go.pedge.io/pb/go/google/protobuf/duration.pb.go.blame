53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Code generated by protoc-gen-go.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// source: google/protobuf/duration.proto
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// DO NOT EDIT!
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	package google_protobuf
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import proto "github.com/golang/protobuf/proto"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import fmt "fmt"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import math "math"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Reference imports to suppress errors if they are not otherwise used.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var _ = proto.Marshal
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var _ = fmt.Errorf
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var _ = math.Inf
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// A Duration represents a signed, fixed-length span of time represented
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// as a count of seconds and fractions of seconds at nanosecond
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// resolution. It is independent of any calendar and concepts like "day"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// or "month". It is related to Timestamp in that the difference between
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// two Timestamp values is a Duration and it can be added or subtracted
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// from a Timestamp. Range is approximately +-10,000 years.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Example 1: Compute Duration from two Timestamps in pseudo code.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     Timestamp start = ...;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     Timestamp end = ...;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     Duration duration = ...;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     duration.seconds = end.seconds - start.seconds;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     duration.nanos = end.nanos - start.nanos;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     if (duration.seconds < 0 && duration.nanos > 0) {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//       duration.seconds += 1;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//       duration.nanos -= 1000000000;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     } else if (durations.seconds > 0 && duration.nanos < 0) {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//       duration.seconds -= 1;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//       duration.nanos += 1000000000;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     Timestamp start = ...;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     Duration duration = ...;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     Timestamp end = ...;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     end.seconds = start.seconds + duration.seconds;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     end.nanos = start.nanos + duration.nanos;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     if (end.nanos < 0) {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//       end.seconds -= 1;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//       end.nanos += 1000000000;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     } else if (end.nanos >= 1000000000) {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//       end.seconds += 1;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//       end.nanos -= 1000000000;
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//     }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	//
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Duration struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Signed seconds of the span of time. Must be from -315,576,000,000
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// to +315,576,000,000 inclusive.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Seconds int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Signed fractions of a second at nanosecond resolution of the span
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// of time. Durations less than one second are represented with a 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// `seconds` field and a positive or negative `nanos` field. For durations
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// of one second or more, a non-zero value for the `nanos` field must be
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// of the same sign as the `seconds` field. Must be from -999,999,999
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// to +999,999,999 inclusive.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Nanos int32 `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Duration) Reset()                    { *m = Duration{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Duration) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Duration) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Duration) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Duration) XXX_WellKnownType() string   { return "Duration" }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func init() {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Duration)(nil), "google.protobuf.Duration")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func init() { proto.RegisterFile("google/protobuf/duration.proto", fileDescriptor2) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var fileDescriptor2 = []byte{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// 161 bytes of a gzipped FileDescriptorProto
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0xcf, 0xcf, 0x4f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xcf, 0x49, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x4f, 0x29, 0x2d, 0x4a,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x03, 0x8b, 0x08, 0xf1, 0x43, 0xe4, 0xf5, 0x60, 0xf2, 0x4a, 0x56,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x5c, 0x1c, 0x2e, 0x50, 0x25, 0x42, 0x12, 0x5c, 0xec, 0xc5, 0xa9, 0xc9, 0xf9, 0x79, 0x29, 0xc5,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x30, 0xae, 0x90, 0x08, 0x17, 0x6b, 0x5e, 0x62, 0x5e,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x7e, 0xb1, 0x04, 0x13, 0x50, 0x9c, 0x35, 0x08, 0xc2, 0x71, 0x0a, 0xe0, 0x12, 0x4e, 0xce, 0xcf,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd5, 0x43, 0x33, 0xd2, 0x89, 0x17, 0x66, 0x60, 0x00, 0x48, 0x24, 0x80, 0x71, 0x01, 0x23, 0xe3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x22, 0x26, 0x66, 0xf7, 0x00, 0xa7, 0x55, 0x4c, 0x72, 0xee, 0x10, 0xb5, 0x01, 0x50, 0xb5, 0x7a,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xe1, 0xa9, 0x39, 0x39, 0xde, 0x79, 0xf9, 0xe5, 0x79, 0x21, 0x95, 0x05, 0xa9, 0xc5, 0x49, 0x6c,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x60, 0x43, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5b, 0xa9, 0x05, 0xfd, 0xc7, 0x00, 0x00,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x00,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}

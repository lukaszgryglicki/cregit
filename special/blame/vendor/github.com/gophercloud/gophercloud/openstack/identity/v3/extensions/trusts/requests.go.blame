0000000000000000000000000000000000000000;;	package trusts
c191e5bce96b97325e2d7149d40cc3a540ce2fa4;;	
0000000000000000000000000000000000000000;;	import "github.com/gophercloud/gophercloud/openstack/identity/v3/tokens"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AuthOptsExt struct {
0000000000000000000000000000000000000000;;		tokens.AuthOptionsBuilder
0000000000000000000000000000000000000000;;		TrustID string `json:"id"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (opts AuthOptsExt) ToTokenV3CreateMap(scope map[string]interface{}) (map[string]interface{}, error) {
0000000000000000000000000000000000000000;;		return opts.AuthOptionsBuilder.ToTokenV3CreateMap(scope)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (opts AuthOptsExt) ToTokenV3ScopeMap() (map[string]interface{}, error) {
0000000000000000000000000000000000000000;;		b, err := opts.AuthOptionsBuilder.ToTokenV3ScopeMap()
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if opts.TrustID != "" {
0000000000000000000000000000000000000000;;			if b == nil {
0000000000000000000000000000000000000000;;				b = make(map[string]interface{})
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			b["OS-TRUST:trust"] = map[string]interface{}{
0000000000000000000000000000000000000000;;				"id": opts.TrustID,
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return b, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (opts AuthOptsExt) CanReauth() bool {
0000000000000000000000000000000000000000;;		return opts.AuthOptionsBuilder.CanReauth()
0000000000000000000000000000000000000000;;	}

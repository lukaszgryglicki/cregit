0000000000000000000000000000000000000000;;	package apiversions
6b6fb3b5acf09b10f0b5a4182251f9385ec3b317;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/gophercloud/gophercloud"
0000000000000000000000000000000000000000;;		"github.com/gophercloud/gophercloud/pagination"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// APIVersion represents an API version for Cinder.
0000000000000000000000000000000000000000;;	type APIVersion struct {
0000000000000000000000000000000000000000;;		ID      string `json:"id"`      // unique identifier
0000000000000000000000000000000000000000;;		Status  string `json:"status"`  // current status
0000000000000000000000000000000000000000;;		Updated string `json:"updated"` // date last updated
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// APIVersionPage is the page returned by a pager when traversing over a
0000000000000000000000000000000000000000;;	// collection of API versions.
0000000000000000000000000000000000000000;;	type APIVersionPage struct {
0000000000000000000000000000000000000000;;		pagination.SinglePageBase
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsEmpty checks whether an APIVersionPage struct is empty.
0000000000000000000000000000000000000000;;	func (r APIVersionPage) IsEmpty() (bool, error) {
0000000000000000000000000000000000000000;;		is, err := ExtractAPIVersions(r)
0000000000000000000000000000000000000000;;		return len(is) == 0, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ExtractAPIVersions takes a collection page, extracts all of the elements,
0000000000000000000000000000000000000000;;	// and returns them a slice of APIVersion structs. It is effectively a cast.
0000000000000000000000000000000000000000;;	func ExtractAPIVersions(r pagination.Page) ([]APIVersion, error) {
0000000000000000000000000000000000000000;;		var s struct {
0000000000000000000000000000000000000000;;			Versions []APIVersion `json:"versions"`
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		err := (r.(APIVersionPage)).ExtractInto(&s)
0000000000000000000000000000000000000000;;		return s.Versions, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GetResult represents the result of a get operation.
0000000000000000000000000000000000000000;;	type GetResult struct {
0000000000000000000000000000000000000000;;		gophercloud.Result
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Extract is a function that accepts a result and extracts an API version resource.
0000000000000000000000000000000000000000;;	func (r GetResult) Extract() (*APIVersion, error) {
0000000000000000000000000000000000000000;;		var s struct {
0000000000000000000000000000000000000000;;			Version *APIVersion `json:"version"`
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		err := r.ExtractInto(&s)
0000000000000000000000000000000000000000;;		return s.Version, err
0000000000000000000000000000000000000000;;	}

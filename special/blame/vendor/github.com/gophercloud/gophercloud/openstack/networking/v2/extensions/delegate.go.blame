0000000000000000000000000000000000000000;;	package extensions
c191e5bce96b97325e2d7149d40cc3a540ce2fa4;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/gophercloud/gophercloud"
0000000000000000000000000000000000000000;;		common "github.com/gophercloud/gophercloud/openstack/common/extensions"
0000000000000000000000000000000000000000;;		"github.com/gophercloud/gophercloud/pagination"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Extension is a single OpenStack extension.
0000000000000000000000000000000000000000;;	type Extension struct {
0000000000000000000000000000000000000000;;		common.Extension
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GetResult wraps a GetResult from common.
0000000000000000000000000000000000000000;;	type GetResult struct {
0000000000000000000000000000000000000000;;		common.GetResult
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ExtractExtensions interprets a Page as a slice of Extensions.
0000000000000000000000000000000000000000;;	func ExtractExtensions(page pagination.Page) ([]Extension, error) {
0000000000000000000000000000000000000000;;		inner, err := common.ExtractExtensions(page)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		outer := make([]Extension, len(inner))
0000000000000000000000000000000000000000;;		for index, ext := range inner {
0000000000000000000000000000000000000000;;			outer[index] = Extension{ext}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return outer, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Get retrieves information for a specific extension using its alias.
0000000000000000000000000000000000000000;;	func Get(c *gophercloud.ServiceClient, alias string) GetResult {
0000000000000000000000000000000000000000;;		return GetResult{common.Get(c, alias)}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// List returns a Pager which allows you to iterate over the full collection of extensions.
0000000000000000000000000000000000000000;;	// It does not accept query parameters.
0000000000000000000000000000000000000000;;	func List(c *gophercloud.ServiceClient) pagination.Pager {
0000000000000000000000000000000000000000;;		return common.List(c)
0000000000000000000000000000000000000000;;	}

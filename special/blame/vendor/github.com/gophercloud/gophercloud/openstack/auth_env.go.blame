0000000000000000000000000000000000000000;;	package openstack
c191e5bce96b97325e2d7149d40cc3a540ce2fa4;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/gophercloud/gophercloud"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var nilOptions = gophercloud.AuthOptions{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AuthOptionsFromEnv fills out an identity.AuthOptions structure with the settings found on the various OpenStack
0000000000000000000000000000000000000000;;	// OS_* environment variables.  The following variables provide sources of truth: OS_AUTH_URL, OS_USERNAME,
0000000000000000000000000000000000000000;;	// OS_PASSWORD, OS_TENANT_ID, and OS_TENANT_NAME.  Of these, OS_USERNAME, OS_PASSWORD, and OS_AUTH_URL must
0000000000000000000000000000000000000000;;	// have settings, or an error will result.  OS_TENANT_ID and OS_TENANT_NAME are optional.
0000000000000000000000000000000000000000;;	func AuthOptionsFromEnv() (gophercloud.AuthOptions, error) {
0000000000000000000000000000000000000000;;		authURL := os.Getenv("OS_AUTH_URL")
0000000000000000000000000000000000000000;;		username := os.Getenv("OS_USERNAME")
0000000000000000000000000000000000000000;;		userID := os.Getenv("OS_USERID")
0000000000000000000000000000000000000000;;		password := os.Getenv("OS_PASSWORD")
0000000000000000000000000000000000000000;;		tenantID := os.Getenv("OS_TENANT_ID")
0000000000000000000000000000000000000000;;		tenantName := os.Getenv("OS_TENANT_NAME")
0000000000000000000000000000000000000000;;		domainID := os.Getenv("OS_DOMAIN_ID")
0000000000000000000000000000000000000000;;		domainName := os.Getenv("OS_DOMAIN_NAME")
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if authURL == "" {
0000000000000000000000000000000000000000;;			err := gophercloud.ErrMissingInput{Argument: "authURL"}
0000000000000000000000000000000000000000;;			return nilOptions, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if username == "" && userID == "" {
0000000000000000000000000000000000000000;;			err := gophercloud.ErrMissingInput{Argument: "username"}
0000000000000000000000000000000000000000;;			return nilOptions, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if password == "" {
0000000000000000000000000000000000000000;;			err := gophercloud.ErrMissingInput{Argument: "password"}
0000000000000000000000000000000000000000;;			return nilOptions, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ao := gophercloud.AuthOptions{
0000000000000000000000000000000000000000;;			IdentityEndpoint: authURL,
0000000000000000000000000000000000000000;;			UserID:           userID,
0000000000000000000000000000000000000000;;			Username:         username,
0000000000000000000000000000000000000000;;			Password:         password,
0000000000000000000000000000000000000000;;			TenantID:         tenantID,
0000000000000000000000000000000000000000;;			TenantName:       tenantName,
0000000000000000000000000000000000000000;;			DomainID:         domainID,
0000000000000000000000000000000000000000;;			DomainName:       domainName,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return ao, nil
0000000000000000000000000000000000000000;;	}

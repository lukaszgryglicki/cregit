0000000000000000000000000000000000000000;;	package servers
c191e5bce96b97325e2d7149d40cc3a540ce2fa4;;	
0000000000000000000000000000000000000000;;	import "github.com/gophercloud/gophercloud"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// WaitForStatus will continually poll a server until it successfully transitions to a specified
0000000000000000000000000000000000000000;;	// status. It will do this for at most the number of seconds specified.
0000000000000000000000000000000000000000;;	func WaitForStatus(c *gophercloud.ServiceClient, id, status string, secs int) error {
0000000000000000000000000000000000000000;;		return gophercloud.WaitFor(secs, func() (bool, error) {
0000000000000000000000000000000000000000;;			current, err := Get(c, id).Extract()
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				return false, err
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			if current.Status == status {
0000000000000000000000000000000000000000;;				return true, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			return false, nil
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	}

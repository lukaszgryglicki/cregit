0000000000000000000000000000000000000000;;	package volumeattach
c191e5bce96b97325e2d7149d40cc3a540ce2fa4;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/gophercloud/gophercloud"
0000000000000000000000000000000000000000;;		"github.com/gophercloud/gophercloud/pagination"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// List returns a Pager that allows you to iterate over a collection of VolumeAttachments.
0000000000000000000000000000000000000000;;	func List(client *gophercloud.ServiceClient, serverID string) pagination.Pager {
0000000000000000000000000000000000000000;;		return pagination.NewPager(client, listURL(client, serverID), func(r pagination.PageResult) pagination.Page {
0000000000000000000000000000000000000000;;			return VolumeAttachmentPage{pagination.SinglePageBase(r)}
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateOptsBuilder describes struct types that can be accepted by the Create call. Notable, the
0000000000000000000000000000000000000000;;	// CreateOpts struct in this package does.
0000000000000000000000000000000000000000;;	type CreateOptsBuilder interface {
0000000000000000000000000000000000000000;;		ToVolumeAttachmentCreateMap() (map[string]interface{}, error)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateOpts specifies volume attachment creation or import parameters.
0000000000000000000000000000000000000000;;	type CreateOpts struct {
0000000000000000000000000000000000000000;;		// Device is the device that the volume will attach to the instance as. Omit for "auto"
0000000000000000000000000000000000000000;;		Device string `json:"device,omitempty"`
0000000000000000000000000000000000000000;;		// VolumeID is the ID of the volume to attach to the instance
0000000000000000000000000000000000000000;;		VolumeID string `json:"volumeId" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ToVolumeAttachmentCreateMap constructs a request body from CreateOpts.
0000000000000000000000000000000000000000;;	func (opts CreateOpts) ToVolumeAttachmentCreateMap() (map[string]interface{}, error) {
0000000000000000000000000000000000000000;;		return gophercloud.BuildRequestBody(opts, "volumeAttachment")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Create requests the creation of a new volume attachment on the server
0000000000000000000000000000000000000000;;	func Create(client *gophercloud.ServiceClient, serverID string, opts CreateOptsBuilder) (r CreateResult) {
0000000000000000000000000000000000000000;;		b, err := opts.ToVolumeAttachmentCreateMap()
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			r.Err = err
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, r.Err = client.Post(createURL(client, serverID), b, &r.Body, &gophercloud.RequestOpts{
0000000000000000000000000000000000000000;;			OkCodes: []int{200},
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Get returns public data about a previously created VolumeAttachment.
0000000000000000000000000000000000000000;;	func Get(client *gophercloud.ServiceClient, serverID, attachmentID string) (r GetResult) {
0000000000000000000000000000000000000000;;		_, r.Err = client.Get(getURL(client, serverID, attachmentID), &r.Body, nil)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Delete requests the deletion of a previous stored VolumeAttachment from the server.
0000000000000000000000000000000000000000;;	func Delete(client *gophercloud.ServiceClient, serverID, attachmentID string) (r DeleteResult) {
0000000000000000000000000000000000000000;;		_, r.Err = client.Delete(deleteURL(client, serverID, attachmentID), nil)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}

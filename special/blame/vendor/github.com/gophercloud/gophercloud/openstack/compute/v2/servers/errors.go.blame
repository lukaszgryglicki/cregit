0000000000000000000000000000000000000000;;	package servers
c191e5bce96b97325e2d7149d40cc3a540ce2fa4;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/gophercloud/gophercloud"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ErrNeitherImageIDNorImageNameProvided is the error when neither the image
0000000000000000000000000000000000000000;;	// ID nor the image name is provided for a server operation
0000000000000000000000000000000000000000;;	type ErrNeitherImageIDNorImageNameProvided struct{ gophercloud.ErrMissingInput }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (e ErrNeitherImageIDNorImageNameProvided) Error() string {
0000000000000000000000000000000000000000;;		return "One and only one of the image ID and the image name must be provided."
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ErrNeitherFlavorIDNorFlavorNameProvided is the error when neither the flavor
0000000000000000000000000000000000000000;;	// ID nor the flavor name is provided for a server operation
0000000000000000000000000000000000000000;;	type ErrNeitherFlavorIDNorFlavorNameProvided struct{ gophercloud.ErrMissingInput }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (e ErrNeitherFlavorIDNorFlavorNameProvided) Error() string {
0000000000000000000000000000000000000000;;		return "One and only one of the flavor ID and the flavor name must be provided."
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ErrNoClientProvidedForIDByName struct{ gophercloud.ErrMissingInput }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (e ErrNoClientProvidedForIDByName) Error() string {
0000000000000000000000000000000000000000;;		return "A service client must be provided to find a resource ID by name."
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ErrInvalidHowParameterProvided is the error when an unknown value is given
0000000000000000000000000000000000000000;;	// for the `how` argument
0000000000000000000000000000000000000000;;	type ErrInvalidHowParameterProvided struct{ gophercloud.ErrInvalidInput }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ErrNoAdminPassProvided is the error when an administrative password isn't
0000000000000000000000000000000000000000;;	// provided for a server operation
0000000000000000000000000000000000000000;;	type ErrNoAdminPassProvided struct{ gophercloud.ErrMissingInput }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ErrNoImageIDProvided is the error when an image ID isn't provided for a server
0000000000000000000000000000000000000000;;	// operation
0000000000000000000000000000000000000000;;	type ErrNoImageIDProvided struct{ gophercloud.ErrMissingInput }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ErrNoIDProvided is the error when a server ID isn't provided for a server
0000000000000000000000000000000000000000;;	// operation
0000000000000000000000000000000000000000;;	type ErrNoIDProvided struct{ gophercloud.ErrMissingInput }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ErrServer is a generic error type for servers HTTP operations.
0000000000000000000000000000000000000000;;	type ErrServer struct {
0000000000000000000000000000000000000000;;		gophercloud.ErrUnexpectedResponseCode
0000000000000000000000000000000000000000;;		ID string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (se ErrServer) Error() string {
0000000000000000000000000000000000000000;;		return fmt.Sprintf("Error while executing HTTP request for server [%s]", se.ID)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Error404 overrides the generic 404 error message.
0000000000000000000000000000000000000000;;	func (se ErrServer) Error404(e gophercloud.ErrUnexpectedResponseCode) error {
0000000000000000000000000000000000000000;;		se.ErrUnexpectedResponseCode = e
0000000000000000000000000000000000000000;;		return &ErrServerNotFound{se}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ErrServerNotFound is the error when a 404 is received during server HTTP
0000000000000000000000000000000000000000;;	// operations.
0000000000000000000000000000000000000000;;	type ErrServerNotFound struct {
0000000000000000000000000000000000000000;;		ErrServer
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (e ErrServerNotFound) Error() string {
0000000000000000000000000000000000000000;;		return fmt.Sprintf("I couldn't find server [%s]", e.ID)
0000000000000000000000000000000000000000;;	}

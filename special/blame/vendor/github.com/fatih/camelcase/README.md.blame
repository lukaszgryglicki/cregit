0000000000000000000000000000000000000000;;	# CamelCase [![GoDoc](http://img.shields.io/badge/go-documentation-blue.svg?style=flat-square)](http://godoc.org/github.com/fatih/camelcase) [![Build Status](http://img.shields.io/travis/fatih/camelcase.svg?style=flat-square)](https://travis-ci.org/fatih/camelcase)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	CamelCase is a Golang (Go) package to split the words of a camelcase type
0000000000000000000000000000000000000000;;	string into a slice of words. It can be used to convert a camelcase word (lower
0000000000000000000000000000000000000000;;	or upper case) into any type of word.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Splitting rules:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	1. If string is not valid UTF-8, return it without splitting as
0000000000000000000000000000000000000000;;	   single item array.
0000000000000000000000000000000000000000;;	2. Assign all unicode characters into one of 4 sets: lower case
0000000000000000000000000000000000000000;;	   letters, upper case letters, numbers, and all other characters.
0000000000000000000000000000000000000000;;	3. Iterate through characters of string, introducing splits
0000000000000000000000000000000000000000;;	   between adjacent characters that belong to different sets.
0000000000000000000000000000000000000000;;	4. Iterate through array of split strings, and if a given string
0000000000000000000000000000000000000000;;	   is upper case:
0000000000000000000000000000000000000000;;	   * if subsequent string is lower case:
0000000000000000000000000000000000000000;;	     * move last character of upper case string to beginning of
0000000000000000000000000000000000000000;;	       lower case string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Install
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```bash
0000000000000000000000000000000000000000;;	go get github.com/fatih/camelcase
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Usage and examples
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	splitted := camelcase.Split("GolangPackage")
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	fmt.Println(splitted[0], splitted[1]) // prints: "Golang", "Package"
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Both lower camel case and upper camel case are supported. For more info please
0000000000000000000000000000000000000000;;	check: [http://en.wikipedia.org/wiki/CamelCase](http://en.wikipedia.org/wiki/CamelCase)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Below are some example cases:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	"" =>                     []
0000000000000000000000000000000000000000;;	"lowercase" =>            ["lowercase"]
0000000000000000000000000000000000000000;;	"Class" =>                ["Class"]
0000000000000000000000000000000000000000;;	"MyClass" =>              ["My", "Class"]
0000000000000000000000000000000000000000;;	"MyC" =>                  ["My", "C"]
0000000000000000000000000000000000000000;;	"HTML" =>                 ["HTML"]
0000000000000000000000000000000000000000;;	"PDFLoader" =>            ["PDF", "Loader"]
0000000000000000000000000000000000000000;;	"AString" =>              ["A", "String"]
0000000000000000000000000000000000000000;;	"SimpleXMLParser" =>      ["Simple", "XML", "Parser"]
0000000000000000000000000000000000000000;;	"vimRPCPlugin" =>         ["vim", "RPC", "Plugin"]
0000000000000000000000000000000000000000;;	"GL11Version" =>          ["GL", "11", "Version"]
0000000000000000000000000000000000000000;;	"99Bottles" =>            ["99", "Bottles"]
0000000000000000000000000000000000000000;;	"May5" =>                 ["May", "5"]
0000000000000000000000000000000000000000;;	"BFG9000" =>              ["BFG", "9000"]
0000000000000000000000000000000000000000;;	"BöseÜberraschung" =>     ["Böse", "Überraschung"]
0000000000000000000000000000000000000000;;	"Two  spaces" =>          ["Two", "  ", "spaces"]
0000000000000000000000000000000000000000;;	"BadUTF8\xe2\xe2\xa1" =>  ["BadUTF8\xe2\xe2\xa1"]
0000000000000000000000000000000000000000;;	```

8337c2fc62f66cf6db7638dc013660183869f458;;	// Code generated by protoc-gen-go.
8337c2fc62f66cf6db7638dc013660183869f458;;	// source: github.com/golang/protobuf/ptypes/duration/duration.proto
8337c2fc62f66cf6db7638dc013660183869f458;;	// DO NOT EDIT!
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	/*
8337c2fc62f66cf6db7638dc013660183869f458;;	Package duration is a generated protocol buffer package.
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	It is generated from these files:
8337c2fc62f66cf6db7638dc013660183869f458;;		github.com/golang/protobuf/ptypes/duration/duration.proto
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	It has these top-level messages:
8337c2fc62f66cf6db7638dc013660183869f458;;		Duration
8337c2fc62f66cf6db7638dc013660183869f458;;	*/
8337c2fc62f66cf6db7638dc013660183869f458;;	package duration
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	import proto "github.com/golang/protobuf/proto"
8337c2fc62f66cf6db7638dc013660183869f458;;	import fmt "fmt"
8337c2fc62f66cf6db7638dc013660183869f458;;	import math "math"
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	// Reference imports to suppress errors if they are not otherwise used.
8337c2fc62f66cf6db7638dc013660183869f458;;	var _ = proto.Marshal
8337c2fc62f66cf6db7638dc013660183869f458;;	var _ = fmt.Errorf
8337c2fc62f66cf6db7638dc013660183869f458;;	var _ = math.Inf
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	// This is a compile-time assertion to ensure that this generated file
8337c2fc62f66cf6db7638dc013660183869f458;;	// is compatible with the proto package it is being compiled against.
8337c2fc62f66cf6db7638dc013660183869f458;;	// A compilation error at this line likely means your copy of the
8337c2fc62f66cf6db7638dc013660183869f458;;	// proto package needs to be updated.
8337c2fc62f66cf6db7638dc013660183869f458;;	const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	// A Duration represents a signed, fixed-length span of time represented
8337c2fc62f66cf6db7638dc013660183869f458;;	// as a count of seconds and fractions of seconds at nanosecond
8337c2fc62f66cf6db7638dc013660183869f458;;	// resolution. It is independent of any calendar and concepts like "day"
8337c2fc62f66cf6db7638dc013660183869f458;;	// or "month". It is related to Timestamp in that the difference between
8337c2fc62f66cf6db7638dc013660183869f458;;	// two Timestamp values is a Duration and it can be added or subtracted
8337c2fc62f66cf6db7638dc013660183869f458;;	// from a Timestamp. Range is approximately +-10,000 years.
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	// Example 1: Compute Duration from two Timestamps in pseudo code.
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	//     Timestamp start = ...;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     Timestamp end = ...;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     Duration duration = ...;
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	//     duration.seconds = end.seconds - start.seconds;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     duration.nanos = end.nanos - start.nanos;
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	//     if (duration.seconds < 0 && duration.nanos > 0) {
8337c2fc62f66cf6db7638dc013660183869f458;;	//       duration.seconds += 1;
8337c2fc62f66cf6db7638dc013660183869f458;;	//       duration.nanos -= 1000000000;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     } else if (durations.seconds > 0 && duration.nanos < 0) {
8337c2fc62f66cf6db7638dc013660183869f458;;	//       duration.seconds -= 1;
8337c2fc62f66cf6db7638dc013660183869f458;;	//       duration.nanos += 1000000000;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     }
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	// Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	//     Timestamp start = ...;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     Duration duration = ...;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     Timestamp end = ...;
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	//     end.seconds = start.seconds + duration.seconds;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     end.nanos = start.nanos + duration.nanos;
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	//     if (end.nanos < 0) {
8337c2fc62f66cf6db7638dc013660183869f458;;	//       end.seconds -= 1;
8337c2fc62f66cf6db7638dc013660183869f458;;	//       end.nanos += 1000000000;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     } else if (end.nanos >= 1000000000) {
8337c2fc62f66cf6db7638dc013660183869f458;;	//       end.seconds += 1;
8337c2fc62f66cf6db7638dc013660183869f458;;	//       end.nanos -= 1000000000;
8337c2fc62f66cf6db7638dc013660183869f458;;	//     }
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	//
8337c2fc62f66cf6db7638dc013660183869f458;;	type Duration struct {
8337c2fc62f66cf6db7638dc013660183869f458;;		// Signed seconds of the span of time. Must be from -315,576,000,000
8337c2fc62f66cf6db7638dc013660183869f458;;		// to +315,576,000,000 inclusive.
8337c2fc62f66cf6db7638dc013660183869f458;;		Seconds int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
8337c2fc62f66cf6db7638dc013660183869f458;;		// Signed fractions of a second at nanosecond resolution of the span
8337c2fc62f66cf6db7638dc013660183869f458;;		// of time. Durations less than one second are represented with a 0
8337c2fc62f66cf6db7638dc013660183869f458;;		// `seconds` field and a positive or negative `nanos` field. For durations
8337c2fc62f66cf6db7638dc013660183869f458;;		// of one second or more, a non-zero value for the `nanos` field must be
8337c2fc62f66cf6db7638dc013660183869f458;;		// of the same sign as the `seconds` field. Must be from -999,999,999
8337c2fc62f66cf6db7638dc013660183869f458;;		// to +999,999,999 inclusive.
8337c2fc62f66cf6db7638dc013660183869f458;;		Nanos int32 `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
8337c2fc62f66cf6db7638dc013660183869f458;;	}
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	func (m *Duration) Reset()                    { *m = Duration{} }
8337c2fc62f66cf6db7638dc013660183869f458;;	func (m *Duration) String() string            { return proto.CompactTextString(m) }
8337c2fc62f66cf6db7638dc013660183869f458;;	func (*Duration) ProtoMessage()               {}
8337c2fc62f66cf6db7638dc013660183869f458;;	func (*Duration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }
8337c2fc62f66cf6db7638dc013660183869f458;;	func (*Duration) XXX_WellKnownType() string   { return "Duration" }
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	func init() {
8337c2fc62f66cf6db7638dc013660183869f458;;		proto.RegisterType((*Duration)(nil), "google.protobuf.Duration")
8337c2fc62f66cf6db7638dc013660183869f458;;	}
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	func init() {
8337c2fc62f66cf6db7638dc013660183869f458;;		proto.RegisterFile("github.com/golang/protobuf/ptypes/duration/duration.proto", fileDescriptor0)
8337c2fc62f66cf6db7638dc013660183869f458;;	}
8337c2fc62f66cf6db7638dc013660183869f458;;	
8337c2fc62f66cf6db7638dc013660183869f458;;	var fileDescriptor0 = []byte{
8337c2fc62f66cf6db7638dc013660183869f458;;		// 189 bytes of a gzipped FileDescriptorProto
8337c2fc62f66cf6db7638dc013660183869f458;;		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xb2, 0x4c, 0xcf, 0x2c, 0xc9,
8337c2fc62f66cf6db7638dc013660183869f458;;		0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0xcf, 0x49, 0xcc, 0x4b, 0xd7, 0x2f, 0x28,
8337c2fc62f66cf6db7638dc013660183869f458;;		0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x2f, 0x28, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x4f, 0x29,
8337c2fc62f66cf6db7638dc013660183869f458;;		0x2d, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0x83, 0x33, 0xf4, 0xc0, 0x2a, 0x84, 0xf8, 0xd3, 0xf3, 0xf3,
8337c2fc62f66cf6db7638dc013660183869f458;;		0xd3, 0x73, 0x52, 0xf5, 0x60, 0xea, 0x95, 0xac, 0xb8, 0x38, 0x5c, 0xa0, 0x4a, 0x84, 0x24, 0xb8,
8337c2fc62f66cf6db7638dc013660183869f458;;		0xd8, 0x8b, 0x53, 0x93, 0xf3, 0xf3, 0x52, 0x8a, 0x25, 0x18, 0x15, 0x18, 0x35, 0x98, 0x83, 0x60,
8337c2fc62f66cf6db7638dc013660183869f458;;		0x5c, 0x21, 0x11, 0x2e, 0xd6, 0xbc, 0xc4, 0xbc, 0xfc, 0x62, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6,
8337c2fc62f66cf6db7638dc013660183869f458;;		0x20, 0x08, 0xc7, 0xa9, 0x86, 0x4b, 0x38, 0x39, 0x3f, 0x57, 0x0f, 0xcd, 0x48, 0x27, 0x5e, 0x98,
8337c2fc62f66cf6db7638dc013660183869f458;;		0x81, 0x01, 0x20, 0x91, 0x00, 0xc6, 0x28, 0x2d, 0xe2, 0xdd, 0xbb, 0x80, 0x91, 0x71, 0x11, 0x13,
8337c2fc62f66cf6db7638dc013660183869f458;;		0xb3, 0x7b, 0x80, 0xd3, 0x2a, 0x26, 0x39, 0x77, 0x88, 0xb9, 0x01, 0x50, 0xa5, 0x7a, 0xe1, 0xa9,
8337c2fc62f66cf6db7638dc013660183869f458;;		0x39, 0x39, 0xde, 0x79, 0xf9, 0xe5, 0x79, 0x21, 0x20, 0x2d, 0x49, 0x6c, 0x60, 0x33, 0x8c, 0x01,
8337c2fc62f66cf6db7638dc013660183869f458;;		0x01, 0x00, 0x00, 0xff, 0xff, 0x62, 0xfb, 0xb1, 0x51, 0x0e, 0x01, 0x00, 0x00,
8337c2fc62f66cf6db7638dc013660183869f458;;	}

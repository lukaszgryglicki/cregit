0000000000000000000000000000000000000000;;	// longpath introduces some constants and helper functions for handling long paths
0000000000000000000000000000000000000000;;	// in Windows, which are expected to be prepended with `\\?\` and followed by either
0000000000000000000000000000000000000000;;	// a drive letter, a UNC server\share, or a volume identifier.
b515bda5eede841df021a5bfcc6c5c7c7a1e907e;;	
0000000000000000000000000000000000000000;;	package longpath
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Prefix is the longpath prefix for Windows file paths.
0000000000000000000000000000000000000000;;	const Prefix = `\\?\`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AddPrefix will add the Windows long path prefix to the path provided if
0000000000000000000000000000000000000000;;	// it does not already have it.
0000000000000000000000000000000000000000;;	func AddPrefix(path string) string {
0000000000000000000000000000000000000000;;		if !strings.HasPrefix(path, Prefix) {
0000000000000000000000000000000000000000;;			if strings.HasPrefix(path, `\\`) {
0000000000000000000000000000000000000000;;				// This is a UNC path, so we need to add 'UNC' to the path as well.
0000000000000000000000000000000000000000;;				path = Prefix + `UNC` + path[1:]
0000000000000000000000000000000000000000;;			} else {
0000000000000000000000000000000000000000;;				path = Prefix + path
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return path
0000000000000000000000000000000000000000;;	}

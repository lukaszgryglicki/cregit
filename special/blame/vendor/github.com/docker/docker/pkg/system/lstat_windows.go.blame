0000000000000000000000000000000000000000;;	// +build windows
b515bda5eede841df021a5bfcc6c5c7c7a1e907e;;	
0000000000000000000000000000000000000000;;	package system
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Lstat calls os.Lstat to get a fileinfo interface back.
0000000000000000000000000000000000000000;;	// This is then copied into our own locally defined structure.
0000000000000000000000000000000000000000;;	// Note the Linux version uses fromStatT to do the copy back,
0000000000000000000000000000000000000000;;	// but that not strictly necessary when already in an OS specific module.
0000000000000000000000000000000000000000;;	func Lstat(path string) (*StatT, error) {
0000000000000000000000000000000000000000;;		fi, err := os.Lstat(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return &StatT{
0000000000000000000000000000000000000000;;			name:    fi.Name(),
0000000000000000000000000000000000000000;;			size:    fi.Size(),
0000000000000000000000000000000000000000;;			mode:    fi.Mode(),
0000000000000000000000000000000000000000;;			modTime: fi.ModTime(),
0000000000000000000000000000000000000000;;			isDir:   fi.IsDir()}, nil
0000000000000000000000000000000000000000;;	}

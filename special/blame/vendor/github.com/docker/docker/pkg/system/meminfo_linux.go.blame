0000000000000000000000000000000000000000;;	package system
b515bda5eede841df021a5bfcc6c5c7c7a1e907e;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"bufio"
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"strconv"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/docker/go-units"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ReadMemInfo retrieves memory statistics of the host system and returns a
0000000000000000000000000000000000000000;;	// MemInfo type.
0000000000000000000000000000000000000000;;	func ReadMemInfo() (*MemInfo, error) {
0000000000000000000000000000000000000000;;		file, err := os.Open("/proc/meminfo")
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		defer file.Close()
0000000000000000000000000000000000000000;;		return parseMemInfo(file)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// parseMemInfo parses the /proc/meminfo file into
0000000000000000000000000000000000000000;;	// a MemInfo object given an io.Reader to the file.
0000000000000000000000000000000000000000;;	// Throws error if there are problems reading from the file
0000000000000000000000000000000000000000;;	func parseMemInfo(reader io.Reader) (*MemInfo, error) {
0000000000000000000000000000000000000000;;		meminfo := &MemInfo{}
0000000000000000000000000000000000000000;;		scanner := bufio.NewScanner(reader)
0000000000000000000000000000000000000000;;		for scanner.Scan() {
0000000000000000000000000000000000000000;;			// Expected format: ["MemTotal:", "1234", "kB"]
0000000000000000000000000000000000000000;;			parts := strings.Fields(scanner.Text())
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			// Sanity checks: Skip malformed entries.
0000000000000000000000000000000000000000;;			if len(parts) < 3 || parts[2] != "kB" {
0000000000000000000000000000000000000000;;				continue
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			// Convert to bytes.
0000000000000000000000000000000000000000;;			size, err := strconv.Atoi(parts[1])
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				continue
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			bytes := int64(size) * units.KiB
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			switch parts[0] {
0000000000000000000000000000000000000000;;			case "MemTotal:":
0000000000000000000000000000000000000000;;				meminfo.MemTotal = bytes
0000000000000000000000000000000000000000;;			case "MemFree:":
0000000000000000000000000000000000000000;;				meminfo.MemFree = bytes
0000000000000000000000000000000000000000;;			case "SwapTotal:":
0000000000000000000000000000000000000000;;				meminfo.SwapTotal = bytes
0000000000000000000000000000000000000000;;			case "SwapFree:":
0000000000000000000000000000000000000000;;				meminfo.SwapFree = bytes
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Handle errors that may have occurred during the reading of the file.
0000000000000000000000000000000000000000;;		if err := scanner.Err(); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return meminfo, nil
0000000000000000000000000000000000000000;;	}

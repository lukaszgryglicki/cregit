0000000000000000000000000000000000000000;;	package system
b515bda5eede841df021a5bfcc6c5c7c7a1e907e;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		maxTime time.Time
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		if unsafe.Sizeof(syscall.Timespec{}.Nsec) == 8 {
0000000000000000000000000000000000000000;;			// This is a 64 bit timespec
0000000000000000000000000000000000000000;;			// os.Chtimes limits time to the following
0000000000000000000000000000000000000000;;			maxTime = time.Unix(0, 1<<63-1)
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			// This is a 32 bit timespec
0000000000000000000000000000000000000000;;			maxTime = time.Unix(1<<31-1, 0)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Chtimes changes the access time and modified time of a file at the given path
0000000000000000000000000000000000000000;;	func Chtimes(name string, atime time.Time, mtime time.Time) error {
0000000000000000000000000000000000000000;;		unixMinTime := time.Unix(0, 0)
0000000000000000000000000000000000000000;;		unixMaxTime := maxTime
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// If the modified time is prior to the Unix Epoch, or after the
0000000000000000000000000000000000000000;;		// end of Unix Time, os.Chtimes has undefined behavior
0000000000000000000000000000000000000000;;		// default to Unix Epoch in this case, just in case
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if atime.Before(unixMinTime) || atime.After(unixMaxTime) {
0000000000000000000000000000000000000000;;			atime = unixMinTime
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if mtime.Before(unixMinTime) || mtime.After(unixMaxTime) {
0000000000000000000000000000000000000000;;			mtime = unixMinTime
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := os.Chtimes(name, atime, mtime); err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Take platform specific action for setting create time.
0000000000000000000000000000000000000000;;		if err := setCTime(name, mtime); err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

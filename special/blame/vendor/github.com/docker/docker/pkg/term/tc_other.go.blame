0000000000000000000000000000000000000000;;	// +build !windows
0000000000000000000000000000000000000000;;	// +build !linux !cgo
ab71d75cf683c780361e644c5f2ee500a1c1e0f8;Godeps/_workspace/src/github.com/docker/docker/pkg/term/tc_other.go[Godeps/_workspace/src/github.com/docker/docker/pkg/term/tc_other.go][vendor/github.com/docker/docker/pkg/term/tc_other.go];	
0000000000000000000000000000000000000000;;	package term
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func tcget(fd uintptr, p *Termios) syscall.Errno {
0000000000000000000000000000000000000000;;		_, _, err := syscall.Syscall(syscall.SYS_IOCTL, fd, uintptr(getTermios), uintptr(unsafe.Pointer(p)))
0000000000000000000000000000000000000000;;		return err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func tcset(fd uintptr, p *Termios) syscall.Errno {
0000000000000000000000000000000000000000;;		_, _, err := syscall.Syscall(syscall.SYS_IOCTL, fd, setTermios, uintptr(unsafe.Pointer(p)))
0000000000000000000000000000000000000000;;		return err
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package term
b515bda5eede841df021a5bfcc6c5c7c7a1e907e;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ASCII list the possible supported ASCII key sequence
0000000000000000000000000000000000000000;;	var ASCII = []string{
0000000000000000000000000000000000000000;;		"ctrl-@",
0000000000000000000000000000000000000000;;		"ctrl-a",
0000000000000000000000000000000000000000;;		"ctrl-b",
0000000000000000000000000000000000000000;;		"ctrl-c",
0000000000000000000000000000000000000000;;		"ctrl-d",
0000000000000000000000000000000000000000;;		"ctrl-e",
0000000000000000000000000000000000000000;;		"ctrl-f",
0000000000000000000000000000000000000000;;		"ctrl-g",
0000000000000000000000000000000000000000;;		"ctrl-h",
0000000000000000000000000000000000000000;;		"ctrl-i",
0000000000000000000000000000000000000000;;		"ctrl-j",
0000000000000000000000000000000000000000;;		"ctrl-k",
0000000000000000000000000000000000000000;;		"ctrl-l",
0000000000000000000000000000000000000000;;		"ctrl-m",
0000000000000000000000000000000000000000;;		"ctrl-n",
0000000000000000000000000000000000000000;;		"ctrl-o",
0000000000000000000000000000000000000000;;		"ctrl-p",
0000000000000000000000000000000000000000;;		"ctrl-q",
0000000000000000000000000000000000000000;;		"ctrl-r",
0000000000000000000000000000000000000000;;		"ctrl-s",
0000000000000000000000000000000000000000;;		"ctrl-t",
0000000000000000000000000000000000000000;;		"ctrl-u",
0000000000000000000000000000000000000000;;		"ctrl-v",
0000000000000000000000000000000000000000;;		"ctrl-w",
0000000000000000000000000000000000000000;;		"ctrl-x",
0000000000000000000000000000000000000000;;		"ctrl-y",
0000000000000000000000000000000000000000;;		"ctrl-z",
0000000000000000000000000000000000000000;;		"ctrl-[",
0000000000000000000000000000000000000000;;		"ctrl-\\",
0000000000000000000000000000000000000000;;		"ctrl-]",
0000000000000000000000000000000000000000;;		"ctrl-^",
0000000000000000000000000000000000000000;;		"ctrl-_",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ToBytes converts a string representing a suite of key-sequence to the corresponding ASCII code.
0000000000000000000000000000000000000000;;	func ToBytes(keys string) ([]byte, error) {
0000000000000000000000000000000000000000;;		codes := []byte{}
0000000000000000000000000000000000000000;;	next:
0000000000000000000000000000000000000000;;		for _, key := range strings.Split(keys, ",") {
0000000000000000000000000000000000000000;;			if len(key) != 1 {
0000000000000000000000000000000000000000;;				for code, ctrl := range ASCII {
0000000000000000000000000000000000000000;;					if ctrl == key {
0000000000000000000000000000000000000000;;						codes = append(codes, byte(code))
0000000000000000000000000000000000000000;;						continue next
0000000000000000000000000000000000000000;;					}
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;				if key == "DEL" {
0000000000000000000000000000000000000000;;					codes = append(codes, 127)
0000000000000000000000000000000000000000;;				} else {
0000000000000000000000000000000000000000;;					return nil, fmt.Errorf("Unknown character: '%s'", key)
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			} else {
0000000000000000000000000000000000000000;;				codes = append(codes, byte(key[0]))
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return codes, nil
0000000000000000000000000000000000000000;;	}

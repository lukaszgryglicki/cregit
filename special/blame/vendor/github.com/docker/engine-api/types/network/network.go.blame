0000000000000000000000000000000000000000;;	package network
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/types/network/network.go[Godeps/_workspace/src/github.com/docker/engine-api/types/network/network.go][vendor/github.com/docker/engine-api/types/network/network.go];	
0000000000000000000000000000000000000000;;	// Address represents an IP address
0000000000000000000000000000000000000000;;	type Address struct {
0000000000000000000000000000000000000000;;		Addr      string
0000000000000000000000000000000000000000;;		PrefixLen int
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IPAM represents IP Address Management
0000000000000000000000000000000000000000;;	type IPAM struct {
0000000000000000000000000000000000000000;;		Driver  string
0000000000000000000000000000000000000000;;		Options map[string]string //Per network IPAM driver options
0000000000000000000000000000000000000000;;		Config  []IPAMConfig
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IPAMConfig represents IPAM configurations
0000000000000000000000000000000000000000;;	type IPAMConfig struct {
0000000000000000000000000000000000000000;;		Subnet     string            `json:",omitempty"`
0000000000000000000000000000000000000000;;		IPRange    string            `json:",omitempty"`
0000000000000000000000000000000000000000;;		Gateway    string            `json:",omitempty"`
0000000000000000000000000000000000000000;;		AuxAddress map[string]string `json:"AuxiliaryAddresses,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// EndpointIPAMConfig represents IPAM configurations for the endpoint
0000000000000000000000000000000000000000;;	type EndpointIPAMConfig struct {
0000000000000000000000000000000000000000;;		IPv4Address string `json:",omitempty"`
0000000000000000000000000000000000000000;;		IPv6Address string `json:",omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// EndpointSettings stores the network endpoint details
0000000000000000000000000000000000000000;;	type EndpointSettings struct {
0000000000000000000000000000000000000000;;		// Configurations
0000000000000000000000000000000000000000;;		IPAMConfig *EndpointIPAMConfig
0000000000000000000000000000000000000000;;		Links      []string
0000000000000000000000000000000000000000;;		Aliases    []string
0000000000000000000000000000000000000000;;		// Operational data
0000000000000000000000000000000000000000;;		NetworkID           string
0000000000000000000000000000000000000000;;		EndpointID          string
0000000000000000000000000000000000000000;;		Gateway             string
0000000000000000000000000000000000000000;;		IPAddress           string
0000000000000000000000000000000000000000;;		IPPrefixLen         int
0000000000000000000000000000000000000000;;		IPv6Gateway         string
0000000000000000000000000000000000000000;;		GlobalIPv6Address   string
0000000000000000000000000000000000000000;;		GlobalIPv6PrefixLen int
0000000000000000000000000000000000000000;;		MacAddress          string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NetworkingConfig represents the container's networking configuration for each of its interfaces
0000000000000000000000000000000000000000;;	// Carries the networking configs specified in the `docker run` and `docker network connect` commands
0000000000000000000000000000000000000000;;	type NetworkingConfig struct {
0000000000000000000000000000000000000000;;		EndpointsConfig map[string]*EndpointSettings // Endpoint configs for each connecting network
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package strslice
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/types/strslice/strslice.go[Godeps/_workspace/src/github.com/docker/engine-api/types/strslice/strslice.go][vendor/github.com/docker/engine-api/types/strslice/strslice.go];	
0000000000000000000000000000000000000000;;	import "encoding/json"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StrSlice represents a string or an array of strings.
0000000000000000000000000000000000000000;;	// We need to override the json decoder to accept both options.
0000000000000000000000000000000000000000;;	type StrSlice []string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// UnmarshalJSON decodes the byte slice whether it's a string or an array of
0000000000000000000000000000000000000000;;	// strings. This method is needed to implement json.Unmarshaler.
0000000000000000000000000000000000000000;;	func (e *StrSlice) UnmarshalJSON(b []byte) error {
0000000000000000000000000000000000000000;;		if len(b) == 0 {
0000000000000000000000000000000000000000;;			// With no input, we preserve the existing value by returning nil and
0000000000000000000000000000000000000000;;			// leaving the target alone. This allows defining default values for
0000000000000000000000000000000000000000;;			// the type.
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		p := make([]string, 0, 1)
0000000000000000000000000000000000000000;;		if err := json.Unmarshal(b, &p); err != nil {
0000000000000000000000000000000000000000;;			var s string
0000000000000000000000000000000000000000;;			if err := json.Unmarshal(b, &s); err != nil {
0000000000000000000000000000000000000000;;				return err
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			p = append(p, s)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		*e = p
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

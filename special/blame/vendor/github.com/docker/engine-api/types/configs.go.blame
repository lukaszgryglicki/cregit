0000000000000000000000000000000000000000;;	package types
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/types/configs.go[Godeps/_workspace/src/github.com/docker/engine-api/types/configs.go][vendor/github.com/docker/engine-api/types/configs.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/docker/engine-api/types/container"
0000000000000000000000000000000000000000;;		"github.com/docker/engine-api/types/network"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// configs holds structs used for internal communication between the
0000000000000000000000000000000000000000;;	// frontend (such as an http server) and the backend (such as the
0000000000000000000000000000000000000000;;	// docker daemon).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ContainerCreateConfig is the parameter set to ContainerCreate()
0000000000000000000000000000000000000000;;	type ContainerCreateConfig struct {
0000000000000000000000000000000000000000;;		Name             string
0000000000000000000000000000000000000000;;		Config           *container.Config
0000000000000000000000000000000000000000;;		HostConfig       *container.HostConfig
0000000000000000000000000000000000000000;;		NetworkingConfig *network.NetworkingConfig
0000000000000000000000000000000000000000;;		AdjustCPUShares  bool
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ContainerRmConfig holds arguments for the container remove
0000000000000000000000000000000000000000;;	// operation. This struct is used to tell the backend what operations
0000000000000000000000000000000000000000;;	// to perform.
0000000000000000000000000000000000000000;;	type ContainerRmConfig struct {
0000000000000000000000000000000000000000;;		ForceRemove, RemoveVolume, RemoveLink bool
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ContainerCommitConfig contains build configs for commit operation,
0000000000000000000000000000000000000000;;	// and is used when making a commit with the current state of the container.
0000000000000000000000000000000000000000;;	type ContainerCommitConfig struct {
0000000000000000000000000000000000000000;;		Pause   bool
0000000000000000000000000000000000000000;;		Repo    string
0000000000000000000000000000000000000000;;		Tag     string
0000000000000000000000000000000000000000;;		Author  string
0000000000000000000000000000000000000000;;		Comment string
0000000000000000000000000000000000000000;;		// merge container config into commit config before commit
0000000000000000000000000000000000000000;;		MergeConfigs bool
0000000000000000000000000000000000000000;;		Config       *container.Config
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ExecConfig is a small subset of the Config struct that holds the configuration
0000000000000000000000000000000000000000;;	// for the exec feature of docker.
0000000000000000000000000000000000000000;;	type ExecConfig struct {
0000000000000000000000000000000000000000;;		User         string   // User that will run the command
0000000000000000000000000000000000000000;;		Privileged   bool     // Is the container in privileged mode
0000000000000000000000000000000000000000;;		Tty          bool     // Attach standard streams to a tty.
0000000000000000000000000000000000000000;;		AttachStdin  bool     // Attach the standard input, makes possible user interaction
0000000000000000000000000000000000000000;;		AttachStderr bool     // Attach the standard output
0000000000000000000000000000000000000000;;		AttachStdout bool     // Attach the standard error
0000000000000000000000000000000000000000;;		Detach       bool     // Execute in detach mode
0000000000000000000000000000000000000000;;		DetachKeys   string   // Escape keys for detach
0000000000000000000000000000000000000000;;		Cmd          []string // Execution commands and args
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package client
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/client/image_history.go[Godeps/_workspace/src/github.com/docker/engine-api/client/image_history.go][vendor/github.com/docker/engine-api/client/image_history.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"encoding/json"
0000000000000000000000000000000000000000;;		"net/url"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/docker/engine-api/types"
0000000000000000000000000000000000000000;;		"golang.org/x/net/context"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ImageHistory returns the changes in an image in history format.
0000000000000000000000000000000000000000;;	func (cli *Client) ImageHistory(ctx context.Context, imageID string) ([]types.ImageHistory, error) {
0000000000000000000000000000000000000000;;		var history []types.ImageHistory
0000000000000000000000000000000000000000;;		serverResp, err := cli.get(ctx, "/images/"+imageID+"/history", url.Values{}, nil)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return history, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		err = json.NewDecoder(serverResp.body).Decode(&history)
0000000000000000000000000000000000000000;;		ensureReaderClosed(serverResp)
0000000000000000000000000000000000000000;;		return history, err
0000000000000000000000000000000000000000;;	}

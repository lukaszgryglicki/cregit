0000000000000000000000000000000000000000;;	package client
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/client/network_connect.go[Godeps/_workspace/src/github.com/docker/engine-api/client/network_connect.go][vendor/github.com/docker/engine-api/client/network_connect.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/docker/engine-api/types"
0000000000000000000000000000000000000000;;		"github.com/docker/engine-api/types/network"
0000000000000000000000000000000000000000;;		"golang.org/x/net/context"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NetworkConnect connects a container to an existent network in the docker host.
0000000000000000000000000000000000000000;;	func (cli *Client) NetworkConnect(ctx context.Context, networkID, containerID string, config *network.EndpointSettings) error {
0000000000000000000000000000000000000000;;		nc := types.NetworkConnect{
0000000000000000000000000000000000000000;;			Container:      containerID,
0000000000000000000000000000000000000000;;			EndpointConfig: config,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		resp, err := cli.post(ctx, "/networks/"+networkID+"/connect", nil, nc, nil)
0000000000000000000000000000000000000000;;		ensureReaderClosed(resp)
0000000000000000000000000000000000000000;;		return err
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package client
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/client/network_disconnect.go[Godeps/_workspace/src/github.com/docker/engine-api/client/network_disconnect.go][vendor/github.com/docker/engine-api/client/network_disconnect.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/docker/engine-api/types"
0000000000000000000000000000000000000000;;		"golang.org/x/net/context"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NetworkDisconnect disconnects a container from an existent network in the docker host.
0000000000000000000000000000000000000000;;	func (cli *Client) NetworkDisconnect(ctx context.Context, networkID, containerID string, force bool) error {
0000000000000000000000000000000000000000;;		nd := types.NetworkDisconnect{Container: containerID, Force: force}
0000000000000000000000000000000000000000;;		resp, err := cli.post(ctx, "/networks/"+networkID+"/disconnect", nil, nd, nil)
0000000000000000000000000000000000000000;;		ensureReaderClosed(resp)
0000000000000000000000000000000000000000;;		return err
0000000000000000000000000000000000000000;;	}

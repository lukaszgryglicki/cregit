0000000000000000000000000000000000000000;;	package client
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/client/volume_create.go[Godeps/_workspace/src/github.com/docker/engine-api/client/volume_create.go][vendor/github.com/docker/engine-api/client/volume_create.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"encoding/json"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/docker/engine-api/types"
0000000000000000000000000000000000000000;;		"golang.org/x/net/context"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// VolumeCreate creates a volume in the docker host.
0000000000000000000000000000000000000000;;	func (cli *Client) VolumeCreate(ctx context.Context, options types.VolumeCreateRequest) (types.Volume, error) {
0000000000000000000000000000000000000000;;		var volume types.Volume
0000000000000000000000000000000000000000;;		resp, err := cli.post(ctx, "/volumes/create", nil, options, nil)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return volume, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		err = json.NewDecoder(resp.body).Decode(&volume)
0000000000000000000000000000000000000000;;		ensureReaderClosed(resp)
0000000000000000000000000000000000000000;;		return volume, err
0000000000000000000000000000000000000000;;	}

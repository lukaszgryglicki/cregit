0000000000000000000000000000000000000000;;	package client
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/client/image_save.go[Godeps/_workspace/src/github.com/docker/engine-api/client/image_save.go][vendor/github.com/docker/engine-api/client/image_save.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"net/url"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"golang.org/x/net/context"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ImageSave retrieves one or more images from the docker host as an io.ReadCloser.
0000000000000000000000000000000000000000;;	// It's up to the caller to store the images and close the stream.
0000000000000000000000000000000000000000;;	func (cli *Client) ImageSave(ctx context.Context, imageIDs []string) (io.ReadCloser, error) {
0000000000000000000000000000000000000000;;		query := url.Values{
0000000000000000000000000000000000000000;;			"names": imageIDs,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		resp, err := cli.get(ctx, "/images/get", query, nil)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp.body, nil
0000000000000000000000000000000000000000;;	}

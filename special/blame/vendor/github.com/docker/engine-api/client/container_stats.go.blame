0000000000000000000000000000000000000000;;	package client
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/client/container_stats.go[Godeps/_workspace/src/github.com/docker/engine-api/client/container_stats.go][vendor/github.com/docker/engine-api/client/container_stats.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"net/url"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"golang.org/x/net/context"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ContainerStats returns near realtime stats for a given container.
0000000000000000000000000000000000000000;;	// It's up to the caller to close the io.ReadCloser returned.
0000000000000000000000000000000000000000;;	func (cli *Client) ContainerStats(ctx context.Context, containerID string, stream bool) (io.ReadCloser, error) {
0000000000000000000000000000000000000000;;		query := url.Values{}
0000000000000000000000000000000000000000;;		query.Set("stream", "0")
0000000000000000000000000000000000000000;;		if stream {
0000000000000000000000000000000000000000;;			query.Set("stream", "1")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		resp, err := cli.get(ctx, "/containers/"+containerID+"/stats", query, nil)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp.body, err
0000000000000000000000000000000000000000;;	}

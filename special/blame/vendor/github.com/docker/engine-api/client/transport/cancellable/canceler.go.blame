0000000000000000000000000000000000000000;;	// Copyright 2015 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/client/transport/cancellable/canceler.go[Godeps/_workspace/src/github.com/docker/engine-api/client/transport/cancellable/canceler.go][vendor/github.com/docker/engine-api/client/transport/cancellable/canceler.go];	
0000000000000000000000000000000000000000;;	// +build go1.5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package cancellable
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"net/http"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/docker/engine-api/client/transport"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func canceler(client transport.Sender, req *http.Request) func() {
0000000000000000000000000000000000000000;;		// TODO(djd): Respect any existing value of req.Cancel.
0000000000000000000000000000000000000000;;		ch := make(chan struct{})
0000000000000000000000000000000000000000;;		req.Cancel = ch
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return func() {
0000000000000000000000000000000000000000;;			close(ch)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

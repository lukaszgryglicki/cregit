0000000000000000000000000000000000000000;;	package client
4fd292dfb7492cc1ce958d1370115de07503bc67;Godeps/_workspace/src/github.com/docker/engine-api/client/container_export.go[Godeps/_workspace/src/github.com/docker/engine-api/client/container_export.go][vendor/github.com/docker/engine-api/client/container_export.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"net/url"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"golang.org/x/net/context"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ContainerExport retrieves the raw contents of a container
0000000000000000000000000000000000000000;;	// and returns them as an io.ReadCloser. It's up to the caller
0000000000000000000000000000000000000000;;	// to close the stream.
0000000000000000000000000000000000000000;;	func (cli *Client) ContainerExport(ctx context.Context, containerID string) (io.ReadCloser, error) {
0000000000000000000000000000000000000000;;		serverResp, err := cli.get(ctx, "/containers/"+containerID+"/export", url.Values{}, nil)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return serverResp.body, nil
0000000000000000000000000000000000000000;;	}

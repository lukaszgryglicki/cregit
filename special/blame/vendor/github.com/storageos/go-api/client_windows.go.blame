0000000000000000000000000000000000000000;;	// +build windows
0000000000000000000000000000000000000000;;	// Copyright 2016 go-dockerclient authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
bed3bbbd20d07cd2188d11c1be163c46f1d22c8d;;	
0000000000000000000000000000000000000000;;	package storageos
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"net"
0000000000000000000000000000000000000000;;		"net/http"
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/Microsoft/go-winio"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const namedPipeConnectTimeout = 2 * time.Second
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type pipeDialer struct {
0000000000000000000000000000000000000000;;		dialFunc func(network, addr string) (net.Conn, error)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (p pipeDialer) Dial(network, address string) (net.Conn, error) {
0000000000000000000000000000000000000000;;		return p.dialFunc(network, address)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// initializeNativeClient initializes the native Named Pipe client for Windows
0000000000000000000000000000000000000000;;	func (c *Client) initializeNativeClient() {
0000000000000000000000000000000000000000;;		if c.endpointURL.Scheme != namedPipeProtocol {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		namedPipePath := c.endpointURL.Path
0000000000000000000000000000000000000000;;		dialFunc := func(network, addr string) (net.Conn, error) {
0000000000000000000000000000000000000000;;			timeout := namedPipeConnectTimeout
0000000000000000000000000000000000000000;;			return winio.DialPipe(namedPipePath, &timeout)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		tr := defaultTransport()
0000000000000000000000000000000000000000;;		tr.Dial = dialFunc
0000000000000000000000000000000000000000;;		c.Dialer = &pipeDialer{dialFunc}
0000000000000000000000000000000000000000;;		c.nativeHTTPClient = &http.Client{Transport: tr}
0000000000000000000000000000000000000000;;	}

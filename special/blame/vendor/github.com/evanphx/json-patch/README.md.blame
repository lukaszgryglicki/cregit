0000000000000000000000000000000000000000;;	## JSON-Patch
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Provides the ability to modify and test a JSON according to a
0000000000000000000000000000000000000000;;	[RFC6902 JSON patch](http://tools.ietf.org/html/rfc6902) and [RFC7396 JSON Merge Patch](https://tools.ietf.org/html/rfc7396).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	*Version*: **1.0**
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[![GoDoc](https://godoc.org/github.com/evanphx/json-patch?status.svg)](http://godoc.org/github.com/evanphx/json-patch)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[![Build Status](https://travis-ci.org/evanphx/json-patch.svg?branch=master)](https://travis-ci.org/evanphx/json-patch)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### API Usage
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	* Given a `[]byte`, obtain a Patch object
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  `obj, err := jsonpatch.DecodePatch(patch)`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	* Apply the patch and get a new document back
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  `out, err := obj.Apply(doc)`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	* Create a JSON Merge Patch document based on two json documents (a to b):
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  `mergeDoc, err := jsonpatch.CreateMergePatch(a, b)`
0000000000000000000000000000000000000000;;	 
0000000000000000000000000000000000000000;;	* Bonus API: compare documents for structural equality
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  `jsonpatch.Equal(doca, docb)`
0000000000000000000000000000000000000000;;	

0000000000000000000000000000000000000000;;	# Contributing to govmomi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Getting started
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	First, fork the repository on GitHub to your personal account.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Note that _GOPATH_ can be any directory, the example below uses _$HOME/govmomi_.
0000000000000000000000000000000000000000;;	Change _$USER_ below to your github username if they are not the same.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	``` shell
0000000000000000000000000000000000000000;;	export GOPATH=$HOME/govmomi
0000000000000000000000000000000000000000;;	go get github.com/vmware/govmomi
0000000000000000000000000000000000000000;;	cd $GOPATH/src/github.com/vmware/govmomi
0000000000000000000000000000000000000000;;	git config push.default nothing # anything to avoid pushing to vmware/govmomi by default
0000000000000000000000000000000000000000;;	git remote rename origin vmware
0000000000000000000000000000000000000000;;	git remote add $USER git@github.com:$USER/govmomi.git
0000000000000000000000000000000000000000;;	git fetch $USER
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Contribution flow
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This is a rough outline of what a contributor's workflow looks like:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	- Create a topic branch from where you want to base your work.
0000000000000000000000000000000000000000;;	- Make commits of logical units.
0000000000000000000000000000000000000000;;	- Make sure your commit messages are in the proper format (see below).
0000000000000000000000000000000000000000;;	- Update CHANGELOG.md and/or govc/CHANGELOG.md when appropriate.
0000000000000000000000000000000000000000;;	- Push your changes to a topic branch in your fork of the repository.
0000000000000000000000000000000000000000;;	- Submit a pull request to vmware/govmomi.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Example:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	``` shell
0000000000000000000000000000000000000000;;	git checkout -b my-new-feature vmware/master
0000000000000000000000000000000000000000;;	git commit -a
0000000000000000000000000000000000000000;;	git push $USER my-new-feature
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Stay in sync with upstream
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	When your branch gets out of sync with the vmware/master branch, use the following to update:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	``` shell
0000000000000000000000000000000000000000;;	git checkout my-new-feature
0000000000000000000000000000000000000000;;	git fetch -a
0000000000000000000000000000000000000000;;	git rebase vmware/master
0000000000000000000000000000000000000000;;	git push --force-with-lease $USER my-new-feature
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Updating pull requests
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	If your PR fails to pass CI or needs changes based on code review, you'll most likely want to squash these changes into
0000000000000000000000000000000000000000;;	existing commits.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	If your pull request contains a single commit or your changes are related to the most recent commit, you can simply
0000000000000000000000000000000000000000;;	amend the commit.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	``` shell
0000000000000000000000000000000000000000;;	git add .
0000000000000000000000000000000000000000;;	git commit --amend
0000000000000000000000000000000000000000;;	git push --force-with-lease $USER my-new-feature
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	If you need to squash changes into an earlier commit, you can use:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	``` shell
0000000000000000000000000000000000000000;;	git add .
0000000000000000000000000000000000000000;;	git commit --fixup <commit>
0000000000000000000000000000000000000000;;	git rebase -i --autosquash vmware/master
0000000000000000000000000000000000000000;;	git push --force-with-lease $USER my-new-feature
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Be sure to add a comment to the PR indicating your new changes are ready to review, as github does not generate a
0000000000000000000000000000000000000000;;	notification when you git push.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Code style
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The coding style suggested by the Golang community is used in govmomi. See the
0000000000000000000000000000000000000000;;	[style doc](https://github.com/golang/go/wiki/CodeReviewComments) for details.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Try to limit column width to 120 characters for both code and markdown documents such as this one.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Format of the Commit Message
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	We follow the conventions on [How to Write a Git Commit Message](http://chris.beams.io/posts/git-commit/).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Be sure to include any related GitHub issue references in the commit message.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Reporting Bugs and Creating Issues
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	When opening a new issue, try to roughly follow the commit message format conventions above.

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright (c) 2014 VMware, Inc. All Rights Reserved.
7dd1f486ff5c2ccadc83b845ee9a4cebfa98c85d;Godeps/_workspace/src/github.com/vmware/govmomi/vim25/types/internal.go[Godeps/_workspace/src/github.com/vmware/govmomi/vim25/types/internal.go][vendor/github.com/vmware/govmomi/vim25/types/internal.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package types
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "reflect"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrQueryMoInstances struct {
0000000000000000000000000000000000000000;;		This       ManagedObjectReference       `xml:"_this"`
0000000000000000000000000000000000000000;;		FilterSpec BaseDynamicTypeMgrFilterSpec `xml:"filterSpec,omitempty,typeattr"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrQueryMoInstancesResponse struct {
0000000000000000000000000000000000000000;;		Returnval []DynamicTypeMgrMoInstance `xml:"urn:vim25 returnval"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeEnumTypeInfo struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name       string                     `xml:"name"`
0000000000000000000000000000000000000000;;		WsdlName   string                     `xml:"wsdlName"`
0000000000000000000000000000000000000000;;		Version    string                     `xml:"version"`
0000000000000000000000000000000000000000;;		Value      []string                   `xml:"value,omitempty"`
0000000000000000000000000000000000000000;;		Annotation []DynamicTypeMgrAnnotation `xml:"annotation,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeEnumTypeInfo"] = reflect.TypeOf((*DynamicTypeEnumTypeInfo)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrAllTypeInfo struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ManagedTypeInfo []DynamicTypeMgrManagedTypeInfo `xml:"managedTypeInfo,omitempty"`
0000000000000000000000000000000000000000;;		EnumTypeInfo    []DynamicTypeEnumTypeInfo       `xml:"enumTypeInfo,omitempty"`
0000000000000000000000000000000000000000;;		DataTypeInfo    []DynamicTypeMgrDataTypeInfo    `xml:"dataTypeInfo,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrAllTypeInfo"] = reflect.TypeOf((*DynamicTypeMgrAllTypeInfo)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrAnnotation struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name      string   `xml:"name"`
0000000000000000000000000000000000000000;;		Parameter []string `xml:"parameter,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrAnnotation"] = reflect.TypeOf((*DynamicTypeMgrAnnotation)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrDataTypeInfo struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name       string                           `xml:"name"`
0000000000000000000000000000000000000000;;		WsdlName   string                           `xml:"wsdlName"`
0000000000000000000000000000000000000000;;		Version    string                           `xml:"version"`
0000000000000000000000000000000000000000;;		Base       []string                         `xml:"base,omitempty"`
0000000000000000000000000000000000000000;;		Property   []DynamicTypeMgrPropertyTypeInfo `xml:"property,omitempty"`
0000000000000000000000000000000000000000;;		Annotation []DynamicTypeMgrAnnotation       `xml:"annotation,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrDataTypeInfo"] = reflect.TypeOf((*DynamicTypeMgrDataTypeInfo)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DynamicTypeMgrFilterSpec) GetDynamicTypeMgrFilterSpec() *DynamicTypeMgrFilterSpec { return b }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BaseDynamicTypeMgrFilterSpec interface {
0000000000000000000000000000000000000000;;		GetDynamicTypeMgrFilterSpec() *DynamicTypeMgrFilterSpec
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrFilterSpec struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrFilterSpec"] = reflect.TypeOf((*DynamicTypeMgrFilterSpec)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrManagedTypeInfo struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name       string                           `xml:"name"`
0000000000000000000000000000000000000000;;		WsdlName   string                           `xml:"wsdlName"`
0000000000000000000000000000000000000000;;		Version    string                           `xml:"version"`
0000000000000000000000000000000000000000;;		Base       []string                         `xml:"base,omitempty"`
0000000000000000000000000000000000000000;;		Property   []DynamicTypeMgrPropertyTypeInfo `xml:"property,omitempty"`
0000000000000000000000000000000000000000;;		Method     []DynamicTypeMgrMethodTypeInfo   `xml:"method,omitempty"`
0000000000000000000000000000000000000000;;		Annotation []DynamicTypeMgrAnnotation       `xml:"annotation,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrManagedTypeInfo"] = reflect.TypeOf((*DynamicTypeMgrManagedTypeInfo)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrMethodTypeInfo struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name           string                        `xml:"name"`
0000000000000000000000000000000000000000;;		WsdlName       string                        `xml:"wsdlName"`
0000000000000000000000000000000000000000;;		Version        string                        `xml:"version"`
0000000000000000000000000000000000000000;;		ParamTypeInfo  []DynamicTypeMgrParamTypeInfo `xml:"paramTypeInfo,omitempty"`
0000000000000000000000000000000000000000;;		ReturnTypeInfo *DynamicTypeMgrParamTypeInfo  `xml:"returnTypeInfo,omitempty"`
0000000000000000000000000000000000000000;;		Fault          []string                      `xml:"fault,omitempty"`
0000000000000000000000000000000000000000;;		PrivId         string                        `xml:"privId,omitempty"`
0000000000000000000000000000000000000000;;		Annotation     []DynamicTypeMgrAnnotation    `xml:"annotation,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrMethodTypeInfo"] = reflect.TypeOf((*DynamicTypeMgrMethodTypeInfo)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrMoFilterSpec struct {
0000000000000000000000000000000000000000;;		DynamicTypeMgrFilterSpec
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Id         string `xml:"id,omitempty"`
0000000000000000000000000000000000000000;;		TypeSubstr string `xml:"typeSubstr,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrMoFilterSpec"] = reflect.TypeOf((*DynamicTypeMgrMoFilterSpec)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrMoInstance struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Id     string `xml:"id"`
0000000000000000000000000000000000000000;;		MoType string `xml:"moType"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrMoInstance"] = reflect.TypeOf((*DynamicTypeMgrMoInstance)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrParamTypeInfo struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name       string                     `xml:"name"`
0000000000000000000000000000000000000000;;		Version    string                     `xml:"version"`
0000000000000000000000000000000000000000;;		Type       string                     `xml:"type"`
0000000000000000000000000000000000000000;;		PrivId     string                     `xml:"privId,omitempty"`
0000000000000000000000000000000000000000;;		Annotation []DynamicTypeMgrAnnotation `xml:"annotation,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrParamTypeInfo"] = reflect.TypeOf((*DynamicTypeMgrParamTypeInfo)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrPropertyTypeInfo struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name        string                     `xml:"name"`
0000000000000000000000000000000000000000;;		Version     string                     `xml:"version"`
0000000000000000000000000000000000000000;;		Type        string                     `xml:"type"`
0000000000000000000000000000000000000000;;		PrivId      string                     `xml:"privId,omitempty"`
0000000000000000000000000000000000000000;;		MsgIdFormat string                     `xml:"msgIdFormat,omitempty"`
0000000000000000000000000000000000000000;;		Annotation  []DynamicTypeMgrAnnotation `xml:"annotation,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrQueryTypeInfo struct {
0000000000000000000000000000000000000000;;		This       ManagedObjectReference       `xml:"_this"`
0000000000000000000000000000000000000000;;		FilterSpec BaseDynamicTypeMgrFilterSpec `xml:"filterSpec,omitempty,typeattr"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrQueryTypeInfoResponse struct {
0000000000000000000000000000000000000000;;		Returnval DynamicTypeMgrAllTypeInfo `xml:"urn:vim25 returnval"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrPropertyTypeInfo"] = reflect.TypeOf((*DynamicTypeMgrPropertyTypeInfo)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrTypeFilterSpec struct {
0000000000000000000000000000000000000000;;		DynamicTypeMgrFilterSpec
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		TypeSubstr string `xml:"typeSubstr,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["DynamicTypeMgrTypeFilterSpec"] = reflect.TypeOf((*DynamicTypeMgrTypeFilterSpec)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReflectManagedMethodExecuterSoapArgument struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name string `xml:"name"`
0000000000000000000000000000000000000000;;		Val  string `xml:"val"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["ReflectManagedMethodExecuterSoapArgument"] = reflect.TypeOf((*ReflectManagedMethodExecuterSoapArgument)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReflectManagedMethodExecuterSoapFault struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		FaultMsg    string `xml:"faultMsg"`
0000000000000000000000000000000000000000;;		FaultDetail string `xml:"faultDetail,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["ReflectManagedMethodExecuterSoapFault"] = reflect.TypeOf((*ReflectManagedMethodExecuterSoapFault)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReflectManagedMethodExecuterSoapResult struct {
0000000000000000000000000000000000000000;;		DynamicData
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Response string                                 `xml:"response,omitempty"`
0000000000000000000000000000000000000000;;		Fault    *ReflectManagedMethodExecuterSoapFault `xml:"fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveDynamicTypeManager struct {
0000000000000000000000000000000000000000;;		This ManagedObjectReference `xml:"_this"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveDynamicTypeManagerResponse struct {
0000000000000000000000000000000000000000;;		Returnval *InternalDynamicTypeManager `xml:"urn:vim25 returnval"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveManagedMethodExecuter struct {
0000000000000000000000000000000000000000;;		This ManagedObjectReference `xml:"_this"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		t["RetrieveManagedMethodExecuter"] = reflect.TypeOf((*RetrieveManagedMethodExecuter)(nil)).Elem()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveManagedMethodExecuterResponse struct {
0000000000000000000000000000000000000000;;		Returnval *ReflectManagedMethodExecuter `xml:"urn:vim25 returnval"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InternalDynamicTypeManager struct {
0000000000000000000000000000000000000000;;		ManagedObjectReference
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReflectManagedMethodExecuter struct {
0000000000000000000000000000000000000000;;		ManagedObjectReference
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExecuteSoap struct {
0000000000000000000000000000000000000000;;		This     ManagedObjectReference                     `xml:"_this"`
0000000000000000000000000000000000000000;;		Moid     string                                     `xml:"moid"`
0000000000000000000000000000000000000000;;		Version  string                                     `xml:"version"`
0000000000000000000000000000000000000000;;		Method   string                                     `xml:"method"`
0000000000000000000000000000000000000000;;		Argument []ReflectManagedMethodExecuterSoapArgument `xml:"argument,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExecuteSoapResponse struct {
0000000000000000000000000000000000000000;;		Returnval *ReflectManagedMethodExecuterSoapResult `xml:"urn:vim25 returnval"`
0000000000000000000000000000000000000000;;	}

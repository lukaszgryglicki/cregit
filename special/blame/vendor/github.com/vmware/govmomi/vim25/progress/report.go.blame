0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright (c) 2014 VMware, Inc. All Rights Reserved.
7dd1f486ff5c2ccadc83b845ee9a4cebfa98c85d;Godeps/_workspace/src/github.com/vmware/govmomi/vim25/progress/report.go[Godeps/_workspace/src/github.com/vmware/govmomi/vim25/progress/report.go][vendor/github.com/vmware/govmomi/vim25/progress/report.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package progress
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Report defines the interface for types that can deliver progress reports.
0000000000000000000000000000000000000000;;	// Examples include uploads/downloads in the http client and the task info
0000000000000000000000000000000000000000;;	// field in the task managed object.
0000000000000000000000000000000000000000;;	type Report interface {
0000000000000000000000000000000000000000;;		Percentage() float32
0000000000000000000000000000000000000000;;		Detail() string
0000000000000000000000000000000000000000;;		Error() error
0000000000000000000000000000000000000000;;	}

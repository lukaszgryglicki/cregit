0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright (c) 2014-2017 VMware, Inc. All Rights Reserved.
7dd1f486ff5c2ccadc83b845ee9a4cebfa98c85d;Godeps/_workspace/src/github.com/vmware/govmomi/vim25/methods/methods.go[Godeps/_workspace/src/github.com/vmware/govmomi/vim25/methods/methods.go][vendor/github.com/vmware/govmomi/vim25/methods/methods.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package methods
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"context"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/vmware/govmomi/vim25/soap"
0000000000000000000000000000000000000000;;		"github.com/vmware/govmomi/vim25/types"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AbdicateDomOwnershipBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AbdicateDomOwnership         `xml:"urn:vim25 AbdicateDomOwnership,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AbdicateDomOwnershipResponse `xml:"urn:vim25 AbdicateDomOwnershipResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AbdicateDomOwnershipBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AbdicateDomOwnership(ctx context.Context, r soap.RoundTripper, req *types.AbdicateDomOwnership) (*types.AbdicateDomOwnershipResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AbdicateDomOwnershipBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AcknowledgeAlarmBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AcknowledgeAlarm         `xml:"urn:vim25 AcknowledgeAlarm,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AcknowledgeAlarmResponse `xml:"urn:vim25 AcknowledgeAlarmResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AcknowledgeAlarmBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AcknowledgeAlarm(ctx context.Context, r soap.RoundTripper, req *types.AcknowledgeAlarm) (*types.AcknowledgeAlarmResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AcknowledgeAlarmBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AcquireCimServicesTicketBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AcquireCimServicesTicket         `xml:"urn:vim25 AcquireCimServicesTicket,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AcquireCimServicesTicketResponse `xml:"urn:vim25 AcquireCimServicesTicketResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AcquireCimServicesTicketBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AcquireCimServicesTicket(ctx context.Context, r soap.RoundTripper, req *types.AcquireCimServicesTicket) (*types.AcquireCimServicesTicketResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AcquireCimServicesTicketBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AcquireCloneTicketBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AcquireCloneTicket         `xml:"urn:vim25 AcquireCloneTicket,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AcquireCloneTicketResponse `xml:"urn:vim25 AcquireCloneTicketResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AcquireCloneTicketBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AcquireCloneTicket(ctx context.Context, r soap.RoundTripper, req *types.AcquireCloneTicket) (*types.AcquireCloneTicketResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AcquireCloneTicketBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AcquireCredentialsInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AcquireCredentialsInGuest         `xml:"urn:vim25 AcquireCredentialsInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AcquireCredentialsInGuestResponse `xml:"urn:vim25 AcquireCredentialsInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AcquireCredentialsInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AcquireCredentialsInGuest(ctx context.Context, r soap.RoundTripper, req *types.AcquireCredentialsInGuest) (*types.AcquireCredentialsInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AcquireCredentialsInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AcquireGenericServiceTicketBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AcquireGenericServiceTicket         `xml:"urn:vim25 AcquireGenericServiceTicket,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AcquireGenericServiceTicketResponse `xml:"urn:vim25 AcquireGenericServiceTicketResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AcquireGenericServiceTicketBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AcquireGenericServiceTicket(ctx context.Context, r soap.RoundTripper, req *types.AcquireGenericServiceTicket) (*types.AcquireGenericServiceTicketResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AcquireGenericServiceTicketBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AcquireLocalTicketBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AcquireLocalTicket         `xml:"urn:vim25 AcquireLocalTicket,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AcquireLocalTicketResponse `xml:"urn:vim25 AcquireLocalTicketResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AcquireLocalTicketBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AcquireLocalTicket(ctx context.Context, r soap.RoundTripper, req *types.AcquireLocalTicket) (*types.AcquireLocalTicketResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AcquireLocalTicketBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AcquireMksTicketBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AcquireMksTicket         `xml:"urn:vim25 AcquireMksTicket,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AcquireMksTicketResponse `xml:"urn:vim25 AcquireMksTicketResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AcquireMksTicketBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AcquireMksTicket(ctx context.Context, r soap.RoundTripper, req *types.AcquireMksTicket) (*types.AcquireMksTicketResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AcquireMksTicketBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AcquireTicketBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AcquireTicket         `xml:"urn:vim25 AcquireTicket,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AcquireTicketResponse `xml:"urn:vim25 AcquireTicketResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AcquireTicketBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AcquireTicket(ctx context.Context, r soap.RoundTripper, req *types.AcquireTicket) (*types.AcquireTicketResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AcquireTicketBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddAuthorizationRoleBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddAuthorizationRole         `xml:"urn:vim25 AddAuthorizationRole,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddAuthorizationRoleResponse `xml:"urn:vim25 AddAuthorizationRoleResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddAuthorizationRoleBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddAuthorizationRole(ctx context.Context, r soap.RoundTripper, req *types.AddAuthorizationRole) (*types.AddAuthorizationRoleResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddAuthorizationRoleBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddCustomFieldDefBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddCustomFieldDef         `xml:"urn:vim25 AddCustomFieldDef,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddCustomFieldDefResponse `xml:"urn:vim25 AddCustomFieldDefResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddCustomFieldDefBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddCustomFieldDef(ctx context.Context, r soap.RoundTripper, req *types.AddCustomFieldDef) (*types.AddCustomFieldDefResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddCustomFieldDefBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddDVPortgroup_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddDVPortgroup_Task         `xml:"urn:vim25 AddDVPortgroup_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddDVPortgroup_TaskResponse `xml:"urn:vim25 AddDVPortgroup_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddDVPortgroup_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddDVPortgroup_Task(ctx context.Context, r soap.RoundTripper, req *types.AddDVPortgroup_Task) (*types.AddDVPortgroup_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddDVPortgroup_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddDisks_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddDisks_Task         `xml:"urn:vim25 AddDisks_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddDisks_TaskResponse `xml:"urn:vim25 AddDisks_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddDisks_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddDisks_Task(ctx context.Context, r soap.RoundTripper, req *types.AddDisks_Task) (*types.AddDisks_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddDisks_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddFilterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddFilter         `xml:"urn:vim25 AddFilter,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddFilterResponse `xml:"urn:vim25 AddFilterResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddFilterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddFilter(ctx context.Context, r soap.RoundTripper, req *types.AddFilter) (*types.AddFilterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddFilterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddFilterEntitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddFilterEntities         `xml:"urn:vim25 AddFilterEntities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddFilterEntitiesResponse `xml:"urn:vim25 AddFilterEntitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddFilterEntitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddFilterEntities(ctx context.Context, r soap.RoundTripper, req *types.AddFilterEntities) (*types.AddFilterEntitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddFilterEntitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddGuestAliasBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddGuestAlias         `xml:"urn:vim25 AddGuestAlias,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddGuestAliasResponse `xml:"urn:vim25 AddGuestAliasResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddGuestAliasBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddGuestAlias(ctx context.Context, r soap.RoundTripper, req *types.AddGuestAlias) (*types.AddGuestAliasResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddGuestAliasBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddHost_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddHost_Task         `xml:"urn:vim25 AddHost_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddHost_TaskResponse `xml:"urn:vim25 AddHost_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddHost_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddHost_Task(ctx context.Context, r soap.RoundTripper, req *types.AddHost_Task) (*types.AddHost_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddHost_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddInternetScsiSendTargetsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddInternetScsiSendTargets         `xml:"urn:vim25 AddInternetScsiSendTargets,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddInternetScsiSendTargetsResponse `xml:"urn:vim25 AddInternetScsiSendTargetsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddInternetScsiSendTargetsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddInternetScsiSendTargets(ctx context.Context, r soap.RoundTripper, req *types.AddInternetScsiSendTargets) (*types.AddInternetScsiSendTargetsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddInternetScsiSendTargetsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddInternetScsiStaticTargetsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddInternetScsiStaticTargets         `xml:"urn:vim25 AddInternetScsiStaticTargets,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddInternetScsiStaticTargetsResponse `xml:"urn:vim25 AddInternetScsiStaticTargetsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddInternetScsiStaticTargetsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddInternetScsiStaticTargets(ctx context.Context, r soap.RoundTripper, req *types.AddInternetScsiStaticTargets) (*types.AddInternetScsiStaticTargetsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddInternetScsiStaticTargetsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddKeyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddKey         `xml:"urn:vim25 AddKey,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddKeyResponse `xml:"urn:vim25 AddKeyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddKeyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddKey(ctx context.Context, r soap.RoundTripper, req *types.AddKey) (*types.AddKeyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddKeyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddKeysBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddKeys         `xml:"urn:vim25 AddKeys,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddKeysResponse `xml:"urn:vim25 AddKeysResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddKeysBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddKeys(ctx context.Context, r soap.RoundTripper, req *types.AddKeys) (*types.AddKeysResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddKeysBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddLicenseBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddLicense         `xml:"urn:vim25 AddLicense,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddLicenseResponse `xml:"urn:vim25 AddLicenseResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddLicenseBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddLicense(ctx context.Context, r soap.RoundTripper, req *types.AddLicense) (*types.AddLicenseResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddLicenseBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddMonitoredEntitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddMonitoredEntities         `xml:"urn:vim25 AddMonitoredEntities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddMonitoredEntitiesResponse `xml:"urn:vim25 AddMonitoredEntitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddMonitoredEntitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddMonitoredEntities(ctx context.Context, r soap.RoundTripper, req *types.AddMonitoredEntities) (*types.AddMonitoredEntitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddMonitoredEntitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddNetworkResourcePoolBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddNetworkResourcePool         `xml:"urn:vim25 AddNetworkResourcePool,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddNetworkResourcePoolResponse `xml:"urn:vim25 AddNetworkResourcePoolResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddNetworkResourcePoolBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddNetworkResourcePool(ctx context.Context, r soap.RoundTripper, req *types.AddNetworkResourcePool) (*types.AddNetworkResourcePoolResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddNetworkResourcePoolBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddPortGroupBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddPortGroup         `xml:"urn:vim25 AddPortGroup,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddPortGroupResponse `xml:"urn:vim25 AddPortGroupResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddPortGroupBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddPortGroup(ctx context.Context, r soap.RoundTripper, req *types.AddPortGroup) (*types.AddPortGroupResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddPortGroupBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddServiceConsoleVirtualNicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddServiceConsoleVirtualNic         `xml:"urn:vim25 AddServiceConsoleVirtualNic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddServiceConsoleVirtualNicResponse `xml:"urn:vim25 AddServiceConsoleVirtualNicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddServiceConsoleVirtualNicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddServiceConsoleVirtualNic(ctx context.Context, r soap.RoundTripper, req *types.AddServiceConsoleVirtualNic) (*types.AddServiceConsoleVirtualNicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddServiceConsoleVirtualNicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddStandaloneHost_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddStandaloneHost_Task         `xml:"urn:vim25 AddStandaloneHost_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddStandaloneHost_TaskResponse `xml:"urn:vim25 AddStandaloneHost_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddStandaloneHost_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddStandaloneHost_Task(ctx context.Context, r soap.RoundTripper, req *types.AddStandaloneHost_Task) (*types.AddStandaloneHost_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddStandaloneHost_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddVirtualNicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddVirtualNic         `xml:"urn:vim25 AddVirtualNic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddVirtualNicResponse `xml:"urn:vim25 AddVirtualNicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddVirtualNicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddVirtualNic(ctx context.Context, r soap.RoundTripper, req *types.AddVirtualNic) (*types.AddVirtualNicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddVirtualNicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddVirtualSwitchBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AddVirtualSwitch         `xml:"urn:vim25 AddVirtualSwitch,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AddVirtualSwitchResponse `xml:"urn:vim25 AddVirtualSwitchResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AddVirtualSwitchBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AddVirtualSwitch(ctx context.Context, r soap.RoundTripper, req *types.AddVirtualSwitch) (*types.AddVirtualSwitchResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AddVirtualSwitchBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AllocateIpv4AddressBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AllocateIpv4Address         `xml:"urn:vim25 AllocateIpv4Address,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AllocateIpv4AddressResponse `xml:"urn:vim25 AllocateIpv4AddressResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AllocateIpv4AddressBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AllocateIpv4Address(ctx context.Context, r soap.RoundTripper, req *types.AllocateIpv4Address) (*types.AllocateIpv4AddressResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AllocateIpv4AddressBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AllocateIpv6AddressBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AllocateIpv6Address         `xml:"urn:vim25 AllocateIpv6Address,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AllocateIpv6AddressResponse `xml:"urn:vim25 AllocateIpv6AddressResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AllocateIpv6AddressBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AllocateIpv6Address(ctx context.Context, r soap.RoundTripper, req *types.AllocateIpv6Address) (*types.AllocateIpv6AddressResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AllocateIpv6AddressBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AnswerVMBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AnswerVM         `xml:"urn:vim25 AnswerVM,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AnswerVMResponse `xml:"urn:vim25 AnswerVMResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AnswerVMBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AnswerVM(ctx context.Context, r soap.RoundTripper, req *types.AnswerVM) (*types.AnswerVMResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AnswerVMBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ApplyEntitiesConfig_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ApplyEntitiesConfig_Task         `xml:"urn:vim25 ApplyEntitiesConfig_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ApplyEntitiesConfig_TaskResponse `xml:"urn:vim25 ApplyEntitiesConfig_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ApplyEntitiesConfig_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ApplyEntitiesConfig_Task(ctx context.Context, r soap.RoundTripper, req *types.ApplyEntitiesConfig_Task) (*types.ApplyEntitiesConfig_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ApplyEntitiesConfig_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ApplyHostConfig_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ApplyHostConfig_Task         `xml:"urn:vim25 ApplyHostConfig_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ApplyHostConfig_TaskResponse `xml:"urn:vim25 ApplyHostConfig_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ApplyHostConfig_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ApplyHostConfig_Task(ctx context.Context, r soap.RoundTripper, req *types.ApplyHostConfig_Task) (*types.ApplyHostConfig_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ApplyHostConfig_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ApplyRecommendationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ApplyRecommendation         `xml:"urn:vim25 ApplyRecommendation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ApplyRecommendationResponse `xml:"urn:vim25 ApplyRecommendationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ApplyRecommendationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ApplyRecommendation(ctx context.Context, r soap.RoundTripper, req *types.ApplyRecommendation) (*types.ApplyRecommendationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ApplyRecommendationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ApplyStorageDrsRecommendationToPod_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ApplyStorageDrsRecommendationToPod_Task         `xml:"urn:vim25 ApplyStorageDrsRecommendationToPod_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ApplyStorageDrsRecommendationToPod_TaskResponse `xml:"urn:vim25 ApplyStorageDrsRecommendationToPod_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ApplyStorageDrsRecommendationToPod_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ApplyStorageDrsRecommendationToPod_Task(ctx context.Context, r soap.RoundTripper, req *types.ApplyStorageDrsRecommendationToPod_Task) (*types.ApplyStorageDrsRecommendationToPod_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ApplyStorageDrsRecommendationToPod_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ApplyStorageDrsRecommendation_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ApplyStorageDrsRecommendation_Task         `xml:"urn:vim25 ApplyStorageDrsRecommendation_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ApplyStorageDrsRecommendation_TaskResponse `xml:"urn:vim25 ApplyStorageDrsRecommendation_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ApplyStorageDrsRecommendation_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ApplyStorageDrsRecommendation_Task(ctx context.Context, r soap.RoundTripper, req *types.ApplyStorageDrsRecommendation_Task) (*types.ApplyStorageDrsRecommendation_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ApplyStorageDrsRecommendation_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AreAlarmActionsEnabledBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AreAlarmActionsEnabled         `xml:"urn:vim25 AreAlarmActionsEnabled,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AreAlarmActionsEnabledResponse `xml:"urn:vim25 AreAlarmActionsEnabledResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AreAlarmActionsEnabledBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AreAlarmActionsEnabled(ctx context.Context, r soap.RoundTripper, req *types.AreAlarmActionsEnabled) (*types.AreAlarmActionsEnabledResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AreAlarmActionsEnabledBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AssignUserToGroupBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AssignUserToGroup         `xml:"urn:vim25 AssignUserToGroup,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AssignUserToGroupResponse `xml:"urn:vim25 AssignUserToGroupResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AssignUserToGroupBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AssignUserToGroup(ctx context.Context, r soap.RoundTripper, req *types.AssignUserToGroup) (*types.AssignUserToGroupResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AssignUserToGroupBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AssociateProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AssociateProfile         `xml:"urn:vim25 AssociateProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AssociateProfileResponse `xml:"urn:vim25 AssociateProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AssociateProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AssociateProfile(ctx context.Context, r soap.RoundTripper, req *types.AssociateProfile) (*types.AssociateProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AssociateProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AttachDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AttachDisk_Task         `xml:"urn:vim25 AttachDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AttachDisk_TaskResponse `xml:"urn:vim25 AttachDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AttachDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AttachDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.AttachDisk_Task) (*types.AttachDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AttachDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AttachScsiLunBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AttachScsiLun         `xml:"urn:vim25 AttachScsiLun,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AttachScsiLunResponse `xml:"urn:vim25 AttachScsiLunResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AttachScsiLunBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AttachScsiLun(ctx context.Context, r soap.RoundTripper, req *types.AttachScsiLun) (*types.AttachScsiLunResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AttachScsiLunBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AttachScsiLunEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AttachScsiLunEx_Task         `xml:"urn:vim25 AttachScsiLunEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AttachScsiLunEx_TaskResponse `xml:"urn:vim25 AttachScsiLunEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AttachScsiLunEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AttachScsiLunEx_Task(ctx context.Context, r soap.RoundTripper, req *types.AttachScsiLunEx_Task) (*types.AttachScsiLunEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AttachScsiLunEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AttachTagToVStorageObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AttachTagToVStorageObject         `xml:"urn:vim25 AttachTagToVStorageObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AttachTagToVStorageObjectResponse `xml:"urn:vim25 AttachTagToVStorageObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AttachTagToVStorageObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AttachTagToVStorageObject(ctx context.Context, r soap.RoundTripper, req *types.AttachTagToVStorageObject) (*types.AttachTagToVStorageObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AttachTagToVStorageObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AttachVmfsExtentBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AttachVmfsExtent         `xml:"urn:vim25 AttachVmfsExtent,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AttachVmfsExtentResponse `xml:"urn:vim25 AttachVmfsExtentResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AttachVmfsExtentBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AttachVmfsExtent(ctx context.Context, r soap.RoundTripper, req *types.AttachVmfsExtent) (*types.AttachVmfsExtentResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AttachVmfsExtentBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AutoStartPowerOffBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AutoStartPowerOff         `xml:"urn:vim25 AutoStartPowerOff,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AutoStartPowerOffResponse `xml:"urn:vim25 AutoStartPowerOffResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AutoStartPowerOffBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AutoStartPowerOff(ctx context.Context, r soap.RoundTripper, req *types.AutoStartPowerOff) (*types.AutoStartPowerOffResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AutoStartPowerOffBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AutoStartPowerOnBody struct {
0000000000000000000000000000000000000000;;		Req    *types.AutoStartPowerOn         `xml:"urn:vim25 AutoStartPowerOn,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.AutoStartPowerOnResponse `xml:"urn:vim25 AutoStartPowerOnResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *AutoStartPowerOnBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func AutoStartPowerOn(ctx context.Context, r soap.RoundTripper, req *types.AutoStartPowerOn) (*types.AutoStartPowerOnResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody AutoStartPowerOnBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BackupFirmwareConfigurationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.BackupFirmwareConfiguration         `xml:"urn:vim25 BackupFirmwareConfiguration,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.BackupFirmwareConfigurationResponse `xml:"urn:vim25 BackupFirmwareConfigurationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *BackupFirmwareConfigurationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func BackupFirmwareConfiguration(ctx context.Context, r soap.RoundTripper, req *types.BackupFirmwareConfiguration) (*types.BackupFirmwareConfigurationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody BackupFirmwareConfigurationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BindVnicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.BindVnic         `xml:"urn:vim25 BindVnic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.BindVnicResponse `xml:"urn:vim25 BindVnicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *BindVnicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func BindVnic(ctx context.Context, r soap.RoundTripper, req *types.BindVnic) (*types.BindVnicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody BindVnicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BrowseDiagnosticLogBody struct {
0000000000000000000000000000000000000000;;		Req    *types.BrowseDiagnosticLog         `xml:"urn:vim25 BrowseDiagnosticLog,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.BrowseDiagnosticLogResponse `xml:"urn:vim25 BrowseDiagnosticLogResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *BrowseDiagnosticLogBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func BrowseDiagnosticLog(ctx context.Context, r soap.RoundTripper, req *types.BrowseDiagnosticLog) (*types.BrowseDiagnosticLogResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody BrowseDiagnosticLogBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CanProvisionObjectsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CanProvisionObjects         `xml:"urn:vim25 CanProvisionObjects,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CanProvisionObjectsResponse `xml:"urn:vim25 CanProvisionObjectsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CanProvisionObjectsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CanProvisionObjects(ctx context.Context, r soap.RoundTripper, req *types.CanProvisionObjects) (*types.CanProvisionObjectsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CanProvisionObjectsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CancelRecommendationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CancelRecommendation         `xml:"urn:vim25 CancelRecommendation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CancelRecommendationResponse `xml:"urn:vim25 CancelRecommendationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CancelRecommendationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CancelRecommendation(ctx context.Context, r soap.RoundTripper, req *types.CancelRecommendation) (*types.CancelRecommendationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CancelRecommendationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CancelRetrievePropertiesExBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CancelRetrievePropertiesEx         `xml:"urn:vim25 CancelRetrievePropertiesEx,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CancelRetrievePropertiesExResponse `xml:"urn:vim25 CancelRetrievePropertiesExResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CancelRetrievePropertiesExBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CancelRetrievePropertiesEx(ctx context.Context, r soap.RoundTripper, req *types.CancelRetrievePropertiesEx) (*types.CancelRetrievePropertiesExResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CancelRetrievePropertiesExBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CancelStorageDrsRecommendationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CancelStorageDrsRecommendation         `xml:"urn:vim25 CancelStorageDrsRecommendation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CancelStorageDrsRecommendationResponse `xml:"urn:vim25 CancelStorageDrsRecommendationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CancelStorageDrsRecommendationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CancelStorageDrsRecommendation(ctx context.Context, r soap.RoundTripper, req *types.CancelStorageDrsRecommendation) (*types.CancelStorageDrsRecommendationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CancelStorageDrsRecommendationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CancelTaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CancelTask         `xml:"urn:vim25 CancelTask,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CancelTaskResponse `xml:"urn:vim25 CancelTaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CancelTaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CancelTask(ctx context.Context, r soap.RoundTripper, req *types.CancelTask) (*types.CancelTaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CancelTaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CancelWaitForUpdatesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CancelWaitForUpdates         `xml:"urn:vim25 CancelWaitForUpdates,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CancelWaitForUpdatesResponse `xml:"urn:vim25 CancelWaitForUpdatesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CancelWaitForUpdatesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CancelWaitForUpdates(ctx context.Context, r soap.RoundTripper, req *types.CancelWaitForUpdates) (*types.CancelWaitForUpdatesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CancelWaitForUpdatesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CertMgrRefreshCACertificatesAndCRLs_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CertMgrRefreshCACertificatesAndCRLs_Task         `xml:"urn:vim25 CertMgrRefreshCACertificatesAndCRLs_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CertMgrRefreshCACertificatesAndCRLs_TaskResponse `xml:"urn:vim25 CertMgrRefreshCACertificatesAndCRLs_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CertMgrRefreshCACertificatesAndCRLs_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CertMgrRefreshCACertificatesAndCRLs_Task(ctx context.Context, r soap.RoundTripper, req *types.CertMgrRefreshCACertificatesAndCRLs_Task) (*types.CertMgrRefreshCACertificatesAndCRLs_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CertMgrRefreshCACertificatesAndCRLs_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CertMgrRefreshCertificates_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CertMgrRefreshCertificates_Task         `xml:"urn:vim25 CertMgrRefreshCertificates_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CertMgrRefreshCertificates_TaskResponse `xml:"urn:vim25 CertMgrRefreshCertificates_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CertMgrRefreshCertificates_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CertMgrRefreshCertificates_Task(ctx context.Context, r soap.RoundTripper, req *types.CertMgrRefreshCertificates_Task) (*types.CertMgrRefreshCertificates_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CertMgrRefreshCertificates_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CertMgrRevokeCertificates_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CertMgrRevokeCertificates_Task         `xml:"urn:vim25 CertMgrRevokeCertificates_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CertMgrRevokeCertificates_TaskResponse `xml:"urn:vim25 CertMgrRevokeCertificates_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CertMgrRevokeCertificates_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CertMgrRevokeCertificates_Task(ctx context.Context, r soap.RoundTripper, req *types.CertMgrRevokeCertificates_Task) (*types.CertMgrRevokeCertificates_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CertMgrRevokeCertificates_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ChangeAccessModeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ChangeAccessMode         `xml:"urn:vim25 ChangeAccessMode,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ChangeAccessModeResponse `xml:"urn:vim25 ChangeAccessModeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ChangeAccessModeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ChangeAccessMode(ctx context.Context, r soap.RoundTripper, req *types.ChangeAccessMode) (*types.ChangeAccessModeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ChangeAccessModeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ChangeFileAttributesInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ChangeFileAttributesInGuest         `xml:"urn:vim25 ChangeFileAttributesInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ChangeFileAttributesInGuestResponse `xml:"urn:vim25 ChangeFileAttributesInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ChangeFileAttributesInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ChangeFileAttributesInGuest(ctx context.Context, r soap.RoundTripper, req *types.ChangeFileAttributesInGuest) (*types.ChangeFileAttributesInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ChangeFileAttributesInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ChangeLockdownModeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ChangeLockdownMode         `xml:"urn:vim25 ChangeLockdownMode,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ChangeLockdownModeResponse `xml:"urn:vim25 ChangeLockdownModeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ChangeLockdownModeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ChangeLockdownMode(ctx context.Context, r soap.RoundTripper, req *types.ChangeLockdownMode) (*types.ChangeLockdownModeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ChangeLockdownModeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ChangeNFSUserPasswordBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ChangeNFSUserPassword         `xml:"urn:vim25 ChangeNFSUserPassword,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ChangeNFSUserPasswordResponse `xml:"urn:vim25 ChangeNFSUserPasswordResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ChangeNFSUserPasswordBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ChangeNFSUserPassword(ctx context.Context, r soap.RoundTripper, req *types.ChangeNFSUserPassword) (*types.ChangeNFSUserPasswordResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ChangeNFSUserPasswordBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ChangeOwnerBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ChangeOwner         `xml:"urn:vim25 ChangeOwner,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ChangeOwnerResponse `xml:"urn:vim25 ChangeOwnerResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ChangeOwnerBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ChangeOwner(ctx context.Context, r soap.RoundTripper, req *types.ChangeOwner) (*types.ChangeOwnerResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ChangeOwnerBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckAddHostEvc_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckAddHostEvc_Task         `xml:"urn:vim25 CheckAddHostEvc_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckAddHostEvc_TaskResponse `xml:"urn:vim25 CheckAddHostEvc_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckAddHostEvc_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckAddHostEvc_Task(ctx context.Context, r soap.RoundTripper, req *types.CheckAddHostEvc_Task) (*types.CheckAddHostEvc_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckAddHostEvc_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckAnswerFileStatus_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckAnswerFileStatus_Task         `xml:"urn:vim25 CheckAnswerFileStatus_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckAnswerFileStatus_TaskResponse `xml:"urn:vim25 CheckAnswerFileStatus_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckAnswerFileStatus_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckAnswerFileStatus_Task(ctx context.Context, r soap.RoundTripper, req *types.CheckAnswerFileStatus_Task) (*types.CheckAnswerFileStatus_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckAnswerFileStatus_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckCompatibility_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckCompatibility_Task         `xml:"urn:vim25 CheckCompatibility_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckCompatibility_TaskResponse `xml:"urn:vim25 CheckCompatibility_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckCompatibility_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckCompatibility_Task(ctx context.Context, r soap.RoundTripper, req *types.CheckCompatibility_Task) (*types.CheckCompatibility_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckCompatibility_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckCompliance_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckCompliance_Task         `xml:"urn:vim25 CheckCompliance_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckCompliance_TaskResponse `xml:"urn:vim25 CheckCompliance_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckCompliance_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckCompliance_Task(ctx context.Context, r soap.RoundTripper, req *types.CheckCompliance_Task) (*types.CheckCompliance_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckCompliance_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckConfigureEvcMode_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckConfigureEvcMode_Task         `xml:"urn:vim25 CheckConfigureEvcMode_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckConfigureEvcMode_TaskResponse `xml:"urn:vim25 CheckConfigureEvcMode_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckConfigureEvcMode_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckConfigureEvcMode_Task(ctx context.Context, r soap.RoundTripper, req *types.CheckConfigureEvcMode_Task) (*types.CheckConfigureEvcMode_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckConfigureEvcMode_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckCustomizationResourcesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckCustomizationResources         `xml:"urn:vim25 CheckCustomizationResources,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckCustomizationResourcesResponse `xml:"urn:vim25 CheckCustomizationResourcesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckCustomizationResourcesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckCustomizationResources(ctx context.Context, r soap.RoundTripper, req *types.CheckCustomizationResources) (*types.CheckCustomizationResourcesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckCustomizationResourcesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckCustomizationSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckCustomizationSpec         `xml:"urn:vim25 CheckCustomizationSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckCustomizationSpecResponse `xml:"urn:vim25 CheckCustomizationSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckCustomizationSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckCustomizationSpec(ctx context.Context, r soap.RoundTripper, req *types.CheckCustomizationSpec) (*types.CheckCustomizationSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckCustomizationSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckForUpdatesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckForUpdates         `xml:"urn:vim25 CheckForUpdates,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckForUpdatesResponse `xml:"urn:vim25 CheckForUpdatesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckForUpdatesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckForUpdates(ctx context.Context, r soap.RoundTripper, req *types.CheckForUpdates) (*types.CheckForUpdatesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckForUpdatesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckHostPatch_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckHostPatch_Task         `xml:"urn:vim25 CheckHostPatch_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckHostPatch_TaskResponse `xml:"urn:vim25 CheckHostPatch_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckHostPatch_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckHostPatch_Task(ctx context.Context, r soap.RoundTripper, req *types.CheckHostPatch_Task) (*types.CheckHostPatch_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckHostPatch_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckLicenseFeatureBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckLicenseFeature         `xml:"urn:vim25 CheckLicenseFeature,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckLicenseFeatureResponse `xml:"urn:vim25 CheckLicenseFeatureResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckLicenseFeatureBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckLicenseFeature(ctx context.Context, r soap.RoundTripper, req *types.CheckLicenseFeature) (*types.CheckLicenseFeatureResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckLicenseFeatureBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckMigrate_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckMigrate_Task         `xml:"urn:vim25 CheckMigrate_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckMigrate_TaskResponse `xml:"urn:vim25 CheckMigrate_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckMigrate_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckMigrate_Task(ctx context.Context, r soap.RoundTripper, req *types.CheckMigrate_Task) (*types.CheckMigrate_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckMigrate_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckProfileCompliance_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckProfileCompliance_Task         `xml:"urn:vim25 CheckProfileCompliance_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckProfileCompliance_TaskResponse `xml:"urn:vim25 CheckProfileCompliance_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckProfileCompliance_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckProfileCompliance_Task(ctx context.Context, r soap.RoundTripper, req *types.CheckProfileCompliance_Task) (*types.CheckProfileCompliance_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckProfileCompliance_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CheckRelocate_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CheckRelocate_Task         `xml:"urn:vim25 CheckRelocate_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CheckRelocate_TaskResponse `xml:"urn:vim25 CheckRelocate_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CheckRelocate_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CheckRelocate_Task(ctx context.Context, r soap.RoundTripper, req *types.CheckRelocate_Task) (*types.CheckRelocate_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CheckRelocate_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ClearComplianceStatusBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ClearComplianceStatus         `xml:"urn:vim25 ClearComplianceStatus,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ClearComplianceStatusResponse `xml:"urn:vim25 ClearComplianceStatusResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ClearComplianceStatusBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ClearComplianceStatus(ctx context.Context, r soap.RoundTripper, req *types.ClearComplianceStatus) (*types.ClearComplianceStatusResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ClearComplianceStatusBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ClearNFSUserBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ClearNFSUser         `xml:"urn:vim25 ClearNFSUser,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ClearNFSUserResponse `xml:"urn:vim25 ClearNFSUserResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ClearNFSUserBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ClearNFSUser(ctx context.Context, r soap.RoundTripper, req *types.ClearNFSUser) (*types.ClearNFSUserResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ClearNFSUserBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ClearSystemEventLogBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ClearSystemEventLog         `xml:"urn:vim25 ClearSystemEventLog,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ClearSystemEventLogResponse `xml:"urn:vim25 ClearSystemEventLogResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ClearSystemEventLogBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ClearSystemEventLog(ctx context.Context, r soap.RoundTripper, req *types.ClearSystemEventLog) (*types.ClearSystemEventLogResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ClearSystemEventLogBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CloneSessionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CloneSession         `xml:"urn:vim25 CloneSession,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CloneSessionResponse `xml:"urn:vim25 CloneSessionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CloneSessionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CloneSession(ctx context.Context, r soap.RoundTripper, req *types.CloneSession) (*types.CloneSessionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CloneSessionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CloneVApp_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CloneVApp_Task         `xml:"urn:vim25 CloneVApp_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CloneVApp_TaskResponse `xml:"urn:vim25 CloneVApp_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CloneVApp_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CloneVApp_Task(ctx context.Context, r soap.RoundTripper, req *types.CloneVApp_Task) (*types.CloneVApp_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CloneVApp_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CloneVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CloneVM_Task         `xml:"urn:vim25 CloneVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CloneVM_TaskResponse `xml:"urn:vim25 CloneVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CloneVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CloneVM_Task(ctx context.Context, r soap.RoundTripper, req *types.CloneVM_Task) (*types.CloneVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CloneVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CloneVStorageObject_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CloneVStorageObject_Task         `xml:"urn:vim25 CloneVStorageObject_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CloneVStorageObject_TaskResponse `xml:"urn:vim25 CloneVStorageObject_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CloneVStorageObject_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CloneVStorageObject_Task(ctx context.Context, r soap.RoundTripper, req *types.CloneVStorageObject_Task) (*types.CloneVStorageObject_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CloneVStorageObject_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CloseInventoryViewFolderBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CloseInventoryViewFolder         `xml:"urn:vim25 CloseInventoryViewFolder,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CloseInventoryViewFolderResponse `xml:"urn:vim25 CloseInventoryViewFolderResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CloseInventoryViewFolderBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CloseInventoryViewFolder(ctx context.Context, r soap.RoundTripper, req *types.CloseInventoryViewFolder) (*types.CloseInventoryViewFolderResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CloseInventoryViewFolderBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ClusterEnterMaintenanceModeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ClusterEnterMaintenanceMode         `xml:"urn:vim25 ClusterEnterMaintenanceMode,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ClusterEnterMaintenanceModeResponse `xml:"urn:vim25 ClusterEnterMaintenanceModeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ClusterEnterMaintenanceModeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ClusterEnterMaintenanceMode(ctx context.Context, r soap.RoundTripper, req *types.ClusterEnterMaintenanceMode) (*types.ClusterEnterMaintenanceModeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ClusterEnterMaintenanceModeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ComputeDiskPartitionInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ComputeDiskPartitionInfo         `xml:"urn:vim25 ComputeDiskPartitionInfo,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ComputeDiskPartitionInfoResponse `xml:"urn:vim25 ComputeDiskPartitionInfoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ComputeDiskPartitionInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ComputeDiskPartitionInfo(ctx context.Context, r soap.RoundTripper, req *types.ComputeDiskPartitionInfo) (*types.ComputeDiskPartitionInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ComputeDiskPartitionInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ComputeDiskPartitionInfoForResizeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ComputeDiskPartitionInfoForResize         `xml:"urn:vim25 ComputeDiskPartitionInfoForResize,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ComputeDiskPartitionInfoForResizeResponse `xml:"urn:vim25 ComputeDiskPartitionInfoForResizeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ComputeDiskPartitionInfoForResizeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ComputeDiskPartitionInfoForResize(ctx context.Context, r soap.RoundTripper, req *types.ComputeDiskPartitionInfoForResize) (*types.ComputeDiskPartitionInfoForResizeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ComputeDiskPartitionInfoForResizeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConfigureCryptoKeyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConfigureCryptoKey         `xml:"urn:vim25 ConfigureCryptoKey,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConfigureCryptoKeyResponse `xml:"urn:vim25 ConfigureCryptoKeyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConfigureCryptoKeyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConfigureCryptoKey(ctx context.Context, r soap.RoundTripper, req *types.ConfigureCryptoKey) (*types.ConfigureCryptoKeyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConfigureCryptoKeyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConfigureDatastoreIORM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConfigureDatastoreIORM_Task         `xml:"urn:vim25 ConfigureDatastoreIORM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConfigureDatastoreIORM_TaskResponse `xml:"urn:vim25 ConfigureDatastoreIORM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConfigureDatastoreIORM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConfigureDatastoreIORM_Task(ctx context.Context, r soap.RoundTripper, req *types.ConfigureDatastoreIORM_Task) (*types.ConfigureDatastoreIORM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConfigureDatastoreIORM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConfigureDatastorePrincipalBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConfigureDatastorePrincipal         `xml:"urn:vim25 ConfigureDatastorePrincipal,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConfigureDatastorePrincipalResponse `xml:"urn:vim25 ConfigureDatastorePrincipalResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConfigureDatastorePrincipalBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConfigureDatastorePrincipal(ctx context.Context, r soap.RoundTripper, req *types.ConfigureDatastorePrincipal) (*types.ConfigureDatastorePrincipalResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConfigureDatastorePrincipalBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConfigureEvcMode_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConfigureEvcMode_Task         `xml:"urn:vim25 ConfigureEvcMode_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConfigureEvcMode_TaskResponse `xml:"urn:vim25 ConfigureEvcMode_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConfigureEvcMode_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConfigureEvcMode_Task(ctx context.Context, r soap.RoundTripper, req *types.ConfigureEvcMode_Task) (*types.ConfigureEvcMode_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConfigureEvcMode_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConfigureHostCache_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConfigureHostCache_Task         `xml:"urn:vim25 ConfigureHostCache_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConfigureHostCache_TaskResponse `xml:"urn:vim25 ConfigureHostCache_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConfigureHostCache_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConfigureHostCache_Task(ctx context.Context, r soap.RoundTripper, req *types.ConfigureHostCache_Task) (*types.ConfigureHostCache_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConfigureHostCache_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConfigureLicenseSourceBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConfigureLicenseSource         `xml:"urn:vim25 ConfigureLicenseSource,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConfigureLicenseSourceResponse `xml:"urn:vim25 ConfigureLicenseSourceResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConfigureLicenseSourceBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConfigureLicenseSource(ctx context.Context, r soap.RoundTripper, req *types.ConfigureLicenseSource) (*types.ConfigureLicenseSourceResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConfigureLicenseSourceBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConfigurePowerPolicyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConfigurePowerPolicy         `xml:"urn:vim25 ConfigurePowerPolicy,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConfigurePowerPolicyResponse `xml:"urn:vim25 ConfigurePowerPolicyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConfigurePowerPolicyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConfigurePowerPolicy(ctx context.Context, r soap.RoundTripper, req *types.ConfigurePowerPolicy) (*types.ConfigurePowerPolicyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConfigurePowerPolicyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConfigureStorageDrsForPod_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConfigureStorageDrsForPod_Task         `xml:"urn:vim25 ConfigureStorageDrsForPod_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConfigureStorageDrsForPod_TaskResponse `xml:"urn:vim25 ConfigureStorageDrsForPod_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConfigureStorageDrsForPod_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConfigureStorageDrsForPod_Task(ctx context.Context, r soap.RoundTripper, req *types.ConfigureStorageDrsForPod_Task) (*types.ConfigureStorageDrsForPod_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConfigureStorageDrsForPod_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConfigureVFlashResourceEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConfigureVFlashResourceEx_Task         `xml:"urn:vim25 ConfigureVFlashResourceEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConfigureVFlashResourceEx_TaskResponse `xml:"urn:vim25 ConfigureVFlashResourceEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConfigureVFlashResourceEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConfigureVFlashResourceEx_Task(ctx context.Context, r soap.RoundTripper, req *types.ConfigureVFlashResourceEx_Task) (*types.ConfigureVFlashResourceEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConfigureVFlashResourceEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConsolidateVMDisks_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConsolidateVMDisks_Task         `xml:"urn:vim25 ConsolidateVMDisks_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConsolidateVMDisks_TaskResponse `xml:"urn:vim25 ConsolidateVMDisks_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConsolidateVMDisks_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConsolidateVMDisks_Task(ctx context.Context, r soap.RoundTripper, req *types.ConsolidateVMDisks_Task) (*types.ConsolidateVMDisks_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConsolidateVMDisks_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ContinueRetrievePropertiesExBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ContinueRetrievePropertiesEx         `xml:"urn:vim25 ContinueRetrievePropertiesEx,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ContinueRetrievePropertiesExResponse `xml:"urn:vim25 ContinueRetrievePropertiesExResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ContinueRetrievePropertiesExBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ContinueRetrievePropertiesEx(ctx context.Context, r soap.RoundTripper, req *types.ContinueRetrievePropertiesEx) (*types.ContinueRetrievePropertiesExResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ContinueRetrievePropertiesExBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ConvertNamespacePathToUuidPathBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ConvertNamespacePathToUuidPath         `xml:"urn:vim25 ConvertNamespacePathToUuidPath,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ConvertNamespacePathToUuidPathResponse `xml:"urn:vim25 ConvertNamespacePathToUuidPathResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ConvertNamespacePathToUuidPathBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConvertNamespacePathToUuidPath(ctx context.Context, r soap.RoundTripper, req *types.ConvertNamespacePathToUuidPath) (*types.ConvertNamespacePathToUuidPathResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ConvertNamespacePathToUuidPathBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CopyDatastoreFile_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CopyDatastoreFile_Task         `xml:"urn:vim25 CopyDatastoreFile_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CopyDatastoreFile_TaskResponse `xml:"urn:vim25 CopyDatastoreFile_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CopyDatastoreFile_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CopyDatastoreFile_Task(ctx context.Context, r soap.RoundTripper, req *types.CopyDatastoreFile_Task) (*types.CopyDatastoreFile_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CopyDatastoreFile_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CopyVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CopyVirtualDisk_Task         `xml:"urn:vim25 CopyVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CopyVirtualDisk_TaskResponse `xml:"urn:vim25 CopyVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CopyVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CopyVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.CopyVirtualDisk_Task) (*types.CopyVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CopyVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateAlarmBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateAlarm         `xml:"urn:vim25 CreateAlarm,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateAlarmResponse `xml:"urn:vim25 CreateAlarmResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateAlarmBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateAlarm(ctx context.Context, r soap.RoundTripper, req *types.CreateAlarm) (*types.CreateAlarmResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateAlarmBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateChildVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateChildVM_Task         `xml:"urn:vim25 CreateChildVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateChildVM_TaskResponse `xml:"urn:vim25 CreateChildVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateChildVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateChildVM_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateChildVM_Task) (*types.CreateChildVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateChildVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateClusterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateCluster         `xml:"urn:vim25 CreateCluster,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateClusterResponse `xml:"urn:vim25 CreateClusterResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateClusterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateCluster(ctx context.Context, r soap.RoundTripper, req *types.CreateCluster) (*types.CreateClusterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateClusterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateClusterExBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateClusterEx         `xml:"urn:vim25 CreateClusterEx,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateClusterExResponse `xml:"urn:vim25 CreateClusterExResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateClusterExBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateClusterEx(ctx context.Context, r soap.RoundTripper, req *types.CreateClusterEx) (*types.CreateClusterExResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateClusterExBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateCollectorForEventsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateCollectorForEvents         `xml:"urn:vim25 CreateCollectorForEvents,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateCollectorForEventsResponse `xml:"urn:vim25 CreateCollectorForEventsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateCollectorForEventsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateCollectorForEvents(ctx context.Context, r soap.RoundTripper, req *types.CreateCollectorForEvents) (*types.CreateCollectorForEventsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateCollectorForEventsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateCollectorForTasksBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateCollectorForTasks         `xml:"urn:vim25 CreateCollectorForTasks,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateCollectorForTasksResponse `xml:"urn:vim25 CreateCollectorForTasksResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateCollectorForTasksBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateCollectorForTasks(ctx context.Context, r soap.RoundTripper, req *types.CreateCollectorForTasks) (*types.CreateCollectorForTasksResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateCollectorForTasksBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateContainerViewBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateContainerView         `xml:"urn:vim25 CreateContainerView,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateContainerViewResponse `xml:"urn:vim25 CreateContainerViewResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateContainerViewBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateContainerView(ctx context.Context, r soap.RoundTripper, req *types.CreateContainerView) (*types.CreateContainerViewResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateContainerViewBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateCustomizationSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateCustomizationSpec         `xml:"urn:vim25 CreateCustomizationSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateCustomizationSpecResponse `xml:"urn:vim25 CreateCustomizationSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateCustomizationSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateCustomizationSpec(ctx context.Context, r soap.RoundTripper, req *types.CreateCustomizationSpec) (*types.CreateCustomizationSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateCustomizationSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateDVPortgroup_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateDVPortgroup_Task         `xml:"urn:vim25 CreateDVPortgroup_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateDVPortgroup_TaskResponse `xml:"urn:vim25 CreateDVPortgroup_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateDVPortgroup_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateDVPortgroup_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateDVPortgroup_Task) (*types.CreateDVPortgroup_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateDVPortgroup_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateDVS_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateDVS_Task         `xml:"urn:vim25 CreateDVS_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateDVS_TaskResponse `xml:"urn:vim25 CreateDVS_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateDVS_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateDVS_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateDVS_Task) (*types.CreateDVS_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateDVS_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateDatacenterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateDatacenter         `xml:"urn:vim25 CreateDatacenter,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateDatacenterResponse `xml:"urn:vim25 CreateDatacenterResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateDatacenterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateDatacenter(ctx context.Context, r soap.RoundTripper, req *types.CreateDatacenter) (*types.CreateDatacenterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateDatacenterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateDefaultProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateDefaultProfile         `xml:"urn:vim25 CreateDefaultProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateDefaultProfileResponse `xml:"urn:vim25 CreateDefaultProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateDefaultProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateDefaultProfile(ctx context.Context, r soap.RoundTripper, req *types.CreateDefaultProfile) (*types.CreateDefaultProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateDefaultProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateDescriptorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateDescriptor         `xml:"urn:vim25 CreateDescriptor,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateDescriptorResponse `xml:"urn:vim25 CreateDescriptorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateDescriptorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateDescriptor(ctx context.Context, r soap.RoundTripper, req *types.CreateDescriptor) (*types.CreateDescriptorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateDescriptorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateDiagnosticPartitionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateDiagnosticPartition         `xml:"urn:vim25 CreateDiagnosticPartition,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateDiagnosticPartitionResponse `xml:"urn:vim25 CreateDiagnosticPartitionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateDiagnosticPartitionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateDiagnosticPartition(ctx context.Context, r soap.RoundTripper, req *types.CreateDiagnosticPartition) (*types.CreateDiagnosticPartitionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateDiagnosticPartitionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateDirectoryBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateDirectory         `xml:"urn:vim25 CreateDirectory,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateDirectoryResponse `xml:"urn:vim25 CreateDirectoryResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateDirectoryBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateDirectory(ctx context.Context, r soap.RoundTripper, req *types.CreateDirectory) (*types.CreateDirectoryResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateDirectoryBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateDisk_Task         `xml:"urn:vim25 CreateDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateDisk_TaskResponse `xml:"urn:vim25 CreateDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateDisk_Task) (*types.CreateDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateFilterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateFilter         `xml:"urn:vim25 CreateFilter,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateFilterResponse `xml:"urn:vim25 CreateFilterResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateFilterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateFilter(ctx context.Context, r soap.RoundTripper, req *types.CreateFilter) (*types.CreateFilterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateFilterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateFolderBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateFolder         `xml:"urn:vim25 CreateFolder,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateFolderResponse `xml:"urn:vim25 CreateFolderResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateFolderBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateFolder(ctx context.Context, r soap.RoundTripper, req *types.CreateFolder) (*types.CreateFolderResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateFolderBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateGroupBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateGroup         `xml:"urn:vim25 CreateGroup,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateGroupResponse `xml:"urn:vim25 CreateGroupResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateGroupBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateGroup(ctx context.Context, r soap.RoundTripper, req *types.CreateGroup) (*types.CreateGroupResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateGroupBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateImportSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateImportSpec         `xml:"urn:vim25 CreateImportSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateImportSpecResponse `xml:"urn:vim25 CreateImportSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateImportSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateImportSpec(ctx context.Context, r soap.RoundTripper, req *types.CreateImportSpec) (*types.CreateImportSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateImportSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateInventoryViewBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateInventoryView         `xml:"urn:vim25 CreateInventoryView,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateInventoryViewResponse `xml:"urn:vim25 CreateInventoryViewResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateInventoryViewBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateInventoryView(ctx context.Context, r soap.RoundTripper, req *types.CreateInventoryView) (*types.CreateInventoryViewResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateInventoryViewBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateIpPoolBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateIpPool         `xml:"urn:vim25 CreateIpPool,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateIpPoolResponse `xml:"urn:vim25 CreateIpPoolResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateIpPoolBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateIpPool(ctx context.Context, r soap.RoundTripper, req *types.CreateIpPool) (*types.CreateIpPoolResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateIpPoolBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateListViewBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateListView         `xml:"urn:vim25 CreateListView,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateListViewResponse `xml:"urn:vim25 CreateListViewResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateListViewBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateListView(ctx context.Context, r soap.RoundTripper, req *types.CreateListView) (*types.CreateListViewResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateListViewBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateListViewFromViewBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateListViewFromView         `xml:"urn:vim25 CreateListViewFromView,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateListViewFromViewResponse `xml:"urn:vim25 CreateListViewFromViewResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateListViewFromViewBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateListViewFromView(ctx context.Context, r soap.RoundTripper, req *types.CreateListViewFromView) (*types.CreateListViewFromViewResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateListViewFromViewBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateLocalDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateLocalDatastore         `xml:"urn:vim25 CreateLocalDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateLocalDatastoreResponse `xml:"urn:vim25 CreateLocalDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateLocalDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateLocalDatastore(ctx context.Context, r soap.RoundTripper, req *types.CreateLocalDatastore) (*types.CreateLocalDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateLocalDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateNasDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateNasDatastore         `xml:"urn:vim25 CreateNasDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateNasDatastoreResponse `xml:"urn:vim25 CreateNasDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateNasDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateNasDatastore(ctx context.Context, r soap.RoundTripper, req *types.CreateNasDatastore) (*types.CreateNasDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateNasDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateObjectScheduledTaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateObjectScheduledTask         `xml:"urn:vim25 CreateObjectScheduledTask,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateObjectScheduledTaskResponse `xml:"urn:vim25 CreateObjectScheduledTaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateObjectScheduledTaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateObjectScheduledTask(ctx context.Context, r soap.RoundTripper, req *types.CreateObjectScheduledTask) (*types.CreateObjectScheduledTaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateObjectScheduledTaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreatePerfIntervalBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreatePerfInterval         `xml:"urn:vim25 CreatePerfInterval,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreatePerfIntervalResponse `xml:"urn:vim25 CreatePerfIntervalResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreatePerfIntervalBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreatePerfInterval(ctx context.Context, r soap.RoundTripper, req *types.CreatePerfInterval) (*types.CreatePerfIntervalResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreatePerfIntervalBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateProfile         `xml:"urn:vim25 CreateProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateProfileResponse `xml:"urn:vim25 CreateProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateProfile(ctx context.Context, r soap.RoundTripper, req *types.CreateProfile) (*types.CreateProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreatePropertyCollectorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreatePropertyCollector         `xml:"urn:vim25 CreatePropertyCollector,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreatePropertyCollectorResponse `xml:"urn:vim25 CreatePropertyCollectorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreatePropertyCollectorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreatePropertyCollector(ctx context.Context, r soap.RoundTripper, req *types.CreatePropertyCollector) (*types.CreatePropertyCollectorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreatePropertyCollectorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateRegistryKeyInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateRegistryKeyInGuest         `xml:"urn:vim25 CreateRegistryKeyInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateRegistryKeyInGuestResponse `xml:"urn:vim25 CreateRegistryKeyInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateRegistryKeyInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateRegistryKeyInGuest(ctx context.Context, r soap.RoundTripper, req *types.CreateRegistryKeyInGuest) (*types.CreateRegistryKeyInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateRegistryKeyInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateResourcePoolBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateResourcePool         `xml:"urn:vim25 CreateResourcePool,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateResourcePoolResponse `xml:"urn:vim25 CreateResourcePoolResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateResourcePoolBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateResourcePool(ctx context.Context, r soap.RoundTripper, req *types.CreateResourcePool) (*types.CreateResourcePoolResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateResourcePoolBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateScheduledTaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateScheduledTask         `xml:"urn:vim25 CreateScheduledTask,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateScheduledTaskResponse `xml:"urn:vim25 CreateScheduledTaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateScheduledTaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateScheduledTask(ctx context.Context, r soap.RoundTripper, req *types.CreateScheduledTask) (*types.CreateScheduledTaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateScheduledTaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateScreenshot_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateScreenshot_Task         `xml:"urn:vim25 CreateScreenshot_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateScreenshot_TaskResponse `xml:"urn:vim25 CreateScreenshot_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateScreenshot_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateScreenshot_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateScreenshot_Task) (*types.CreateScreenshot_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateScreenshot_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateSecondaryVMEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateSecondaryVMEx_Task         `xml:"urn:vim25 CreateSecondaryVMEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateSecondaryVMEx_TaskResponse `xml:"urn:vim25 CreateSecondaryVMEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateSecondaryVMEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateSecondaryVMEx_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateSecondaryVMEx_Task) (*types.CreateSecondaryVMEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateSecondaryVMEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateSecondaryVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateSecondaryVM_Task         `xml:"urn:vim25 CreateSecondaryVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateSecondaryVM_TaskResponse `xml:"urn:vim25 CreateSecondaryVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateSecondaryVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateSecondaryVM_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateSecondaryVM_Task) (*types.CreateSecondaryVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateSecondaryVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateSnapshotEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateSnapshotEx_Task         `xml:"urn:vim25 CreateSnapshotEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateSnapshotEx_TaskResponse `xml:"urn:vim25 CreateSnapshotEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateSnapshotEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateSnapshotEx_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateSnapshotEx_Task) (*types.CreateSnapshotEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateSnapshotEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateSnapshot_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateSnapshot_Task         `xml:"urn:vim25 CreateSnapshot_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateSnapshot_TaskResponse `xml:"urn:vim25 CreateSnapshot_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateSnapshot_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateSnapshot_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateSnapshot_Task) (*types.CreateSnapshot_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateSnapshot_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateStoragePodBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateStoragePod         `xml:"urn:vim25 CreateStoragePod,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateStoragePodResponse `xml:"urn:vim25 CreateStoragePodResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateStoragePodBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateStoragePod(ctx context.Context, r soap.RoundTripper, req *types.CreateStoragePod) (*types.CreateStoragePodResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateStoragePodBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateTaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateTask         `xml:"urn:vim25 CreateTask,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateTaskResponse `xml:"urn:vim25 CreateTaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateTaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateTask(ctx context.Context, r soap.RoundTripper, req *types.CreateTask) (*types.CreateTaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateTaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateTemporaryDirectoryInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateTemporaryDirectoryInGuest         `xml:"urn:vim25 CreateTemporaryDirectoryInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateTemporaryDirectoryInGuestResponse `xml:"urn:vim25 CreateTemporaryDirectoryInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateTemporaryDirectoryInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateTemporaryDirectoryInGuest(ctx context.Context, r soap.RoundTripper, req *types.CreateTemporaryDirectoryInGuest) (*types.CreateTemporaryDirectoryInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateTemporaryDirectoryInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateTemporaryFileInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateTemporaryFileInGuest         `xml:"urn:vim25 CreateTemporaryFileInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateTemporaryFileInGuestResponse `xml:"urn:vim25 CreateTemporaryFileInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateTemporaryFileInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateTemporaryFileInGuest(ctx context.Context, r soap.RoundTripper, req *types.CreateTemporaryFileInGuest) (*types.CreateTemporaryFileInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateTemporaryFileInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateUserBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateUser         `xml:"urn:vim25 CreateUser,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateUserResponse `xml:"urn:vim25 CreateUserResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateUserBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateUser(ctx context.Context, r soap.RoundTripper, req *types.CreateUser) (*types.CreateUserResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateUserBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateVAppBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateVApp         `xml:"urn:vim25 CreateVApp,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateVAppResponse `xml:"urn:vim25 CreateVAppResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateVAppBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateVApp(ctx context.Context, r soap.RoundTripper, req *types.CreateVApp) (*types.CreateVAppResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateVAppBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateVM_Task         `xml:"urn:vim25 CreateVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateVM_TaskResponse `xml:"urn:vim25 CreateVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateVM_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateVM_Task) (*types.CreateVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateVirtualDisk_Task         `xml:"urn:vim25 CreateVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateVirtualDisk_TaskResponse `xml:"urn:vim25 CreateVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.CreateVirtualDisk_Task) (*types.CreateVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateVmfsDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateVmfsDatastore         `xml:"urn:vim25 CreateVmfsDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateVmfsDatastoreResponse `xml:"urn:vim25 CreateVmfsDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateVmfsDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateVmfsDatastore(ctx context.Context, r soap.RoundTripper, req *types.CreateVmfsDatastore) (*types.CreateVmfsDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateVmfsDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CreateVvolDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CreateVvolDatastore         `xml:"urn:vim25 CreateVvolDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CreateVvolDatastoreResponse `xml:"urn:vim25 CreateVvolDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CreateVvolDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CreateVvolDatastore(ctx context.Context, r soap.RoundTripper, req *types.CreateVvolDatastore) (*types.CreateVvolDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CreateVvolDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CurrentTimeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CurrentTime         `xml:"urn:vim25 CurrentTime,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CurrentTimeResponse `xml:"urn:vim25 CurrentTimeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CurrentTimeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CurrentTime(ctx context.Context, r soap.RoundTripper, req *types.CurrentTime) (*types.CurrentTimeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CurrentTimeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CustomizationSpecItemToXmlBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CustomizationSpecItemToXml         `xml:"urn:vim25 CustomizationSpecItemToXml,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CustomizationSpecItemToXmlResponse `xml:"urn:vim25 CustomizationSpecItemToXmlResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CustomizationSpecItemToXmlBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CustomizationSpecItemToXml(ctx context.Context, r soap.RoundTripper, req *types.CustomizationSpecItemToXml) (*types.CustomizationSpecItemToXmlResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CustomizationSpecItemToXmlBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type CustomizeVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.CustomizeVM_Task         `xml:"urn:vim25 CustomizeVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.CustomizeVM_TaskResponse `xml:"urn:vim25 CustomizeVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *CustomizeVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func CustomizeVM_Task(ctx context.Context, r soap.RoundTripper, req *types.CustomizeVM_Task) (*types.CustomizeVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody CustomizeVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DVPortgroupRollback_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DVPortgroupRollback_Task         `xml:"urn:vim25 DVPortgroupRollback_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DVPortgroupRollback_TaskResponse `xml:"urn:vim25 DVPortgroupRollback_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DVPortgroupRollback_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DVPortgroupRollback_Task(ctx context.Context, r soap.RoundTripper, req *types.DVPortgroupRollback_Task) (*types.DVPortgroupRollback_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DVPortgroupRollback_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DVSManagerExportEntity_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DVSManagerExportEntity_Task         `xml:"urn:vim25 DVSManagerExportEntity_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DVSManagerExportEntity_TaskResponse `xml:"urn:vim25 DVSManagerExportEntity_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DVSManagerExportEntity_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DVSManagerExportEntity_Task(ctx context.Context, r soap.RoundTripper, req *types.DVSManagerExportEntity_Task) (*types.DVSManagerExportEntity_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DVSManagerExportEntity_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DVSManagerImportEntity_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DVSManagerImportEntity_Task         `xml:"urn:vim25 DVSManagerImportEntity_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DVSManagerImportEntity_TaskResponse `xml:"urn:vim25 DVSManagerImportEntity_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DVSManagerImportEntity_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DVSManagerImportEntity_Task(ctx context.Context, r soap.RoundTripper, req *types.DVSManagerImportEntity_Task) (*types.DVSManagerImportEntity_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DVSManagerImportEntity_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DVSManagerLookupDvPortGroupBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DVSManagerLookupDvPortGroup         `xml:"urn:vim25 DVSManagerLookupDvPortGroup,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DVSManagerLookupDvPortGroupResponse `xml:"urn:vim25 DVSManagerLookupDvPortGroupResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DVSManagerLookupDvPortGroupBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DVSManagerLookupDvPortGroup(ctx context.Context, r soap.RoundTripper, req *types.DVSManagerLookupDvPortGroup) (*types.DVSManagerLookupDvPortGroupResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DVSManagerLookupDvPortGroupBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DVSRollback_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DVSRollback_Task         `xml:"urn:vim25 DVSRollback_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DVSRollback_TaskResponse `xml:"urn:vim25 DVSRollback_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DVSRollback_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DVSRollback_Task(ctx context.Context, r soap.RoundTripper, req *types.DVSRollback_Task) (*types.DVSRollback_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DVSRollback_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DatastoreEnterMaintenanceModeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DatastoreEnterMaintenanceMode         `xml:"urn:vim25 DatastoreEnterMaintenanceMode,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DatastoreEnterMaintenanceModeResponse `xml:"urn:vim25 DatastoreEnterMaintenanceModeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DatastoreEnterMaintenanceModeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DatastoreEnterMaintenanceMode(ctx context.Context, r soap.RoundTripper, req *types.DatastoreEnterMaintenanceMode) (*types.DatastoreEnterMaintenanceModeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DatastoreEnterMaintenanceModeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DatastoreExitMaintenanceMode_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DatastoreExitMaintenanceMode_Task         `xml:"urn:vim25 DatastoreExitMaintenanceMode_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DatastoreExitMaintenanceMode_TaskResponse `xml:"urn:vim25 DatastoreExitMaintenanceMode_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DatastoreExitMaintenanceMode_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DatastoreExitMaintenanceMode_Task(ctx context.Context, r soap.RoundTripper, req *types.DatastoreExitMaintenanceMode_Task) (*types.DatastoreExitMaintenanceMode_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DatastoreExitMaintenanceMode_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DecodeLicenseBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DecodeLicense         `xml:"urn:vim25 DecodeLicense,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DecodeLicenseResponse `xml:"urn:vim25 DecodeLicenseResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DecodeLicenseBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DecodeLicense(ctx context.Context, r soap.RoundTripper, req *types.DecodeLicense) (*types.DecodeLicenseResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DecodeLicenseBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DefragmentAllDisksBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DefragmentAllDisks         `xml:"urn:vim25 DefragmentAllDisks,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DefragmentAllDisksResponse `xml:"urn:vim25 DefragmentAllDisksResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DefragmentAllDisksBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DefragmentAllDisks(ctx context.Context, r soap.RoundTripper, req *types.DefragmentAllDisks) (*types.DefragmentAllDisksResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DefragmentAllDisksBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DefragmentVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DefragmentVirtualDisk_Task         `xml:"urn:vim25 DefragmentVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DefragmentVirtualDisk_TaskResponse `xml:"urn:vim25 DefragmentVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DefragmentVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DefragmentVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.DefragmentVirtualDisk_Task) (*types.DefragmentVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DefragmentVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteCustomizationSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteCustomizationSpec         `xml:"urn:vim25 DeleteCustomizationSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteCustomizationSpecResponse `xml:"urn:vim25 DeleteCustomizationSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteCustomizationSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteCustomizationSpec(ctx context.Context, r soap.RoundTripper, req *types.DeleteCustomizationSpec) (*types.DeleteCustomizationSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteCustomizationSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteDatastoreFile_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteDatastoreFile_Task         `xml:"urn:vim25 DeleteDatastoreFile_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteDatastoreFile_TaskResponse `xml:"urn:vim25 DeleteDatastoreFile_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteDatastoreFile_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteDatastoreFile_Task(ctx context.Context, r soap.RoundTripper, req *types.DeleteDatastoreFile_Task) (*types.DeleteDatastoreFile_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteDatastoreFile_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteDirectoryBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteDirectory         `xml:"urn:vim25 DeleteDirectory,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteDirectoryResponse `xml:"urn:vim25 DeleteDirectoryResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteDirectoryBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteDirectory(ctx context.Context, r soap.RoundTripper, req *types.DeleteDirectory) (*types.DeleteDirectoryResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteDirectoryBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteDirectoryInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteDirectoryInGuest         `xml:"urn:vim25 DeleteDirectoryInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteDirectoryInGuestResponse `xml:"urn:vim25 DeleteDirectoryInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteDirectoryInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteDirectoryInGuest(ctx context.Context, r soap.RoundTripper, req *types.DeleteDirectoryInGuest) (*types.DeleteDirectoryInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteDirectoryInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteFileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteFile         `xml:"urn:vim25 DeleteFile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteFileResponse `xml:"urn:vim25 DeleteFileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteFileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteFile(ctx context.Context, r soap.RoundTripper, req *types.DeleteFile) (*types.DeleteFileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteFileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteFileInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteFileInGuest         `xml:"urn:vim25 DeleteFileInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteFileInGuestResponse `xml:"urn:vim25 DeleteFileInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteFileInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteFileInGuest(ctx context.Context, r soap.RoundTripper, req *types.DeleteFileInGuest) (*types.DeleteFileInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteFileInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteHostSpecificationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteHostSpecification         `xml:"urn:vim25 DeleteHostSpecification,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteHostSpecificationResponse `xml:"urn:vim25 DeleteHostSpecificationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteHostSpecificationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteHostSpecification(ctx context.Context, r soap.RoundTripper, req *types.DeleteHostSpecification) (*types.DeleteHostSpecificationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteHostSpecificationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteHostSubSpecificationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteHostSubSpecification         `xml:"urn:vim25 DeleteHostSubSpecification,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteHostSubSpecificationResponse `xml:"urn:vim25 DeleteHostSubSpecificationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteHostSubSpecificationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteHostSubSpecification(ctx context.Context, r soap.RoundTripper, req *types.DeleteHostSubSpecification) (*types.DeleteHostSubSpecificationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteHostSubSpecificationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteRegistryKeyInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteRegistryKeyInGuest         `xml:"urn:vim25 DeleteRegistryKeyInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteRegistryKeyInGuestResponse `xml:"urn:vim25 DeleteRegistryKeyInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteRegistryKeyInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteRegistryKeyInGuest(ctx context.Context, r soap.RoundTripper, req *types.DeleteRegistryKeyInGuest) (*types.DeleteRegistryKeyInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteRegistryKeyInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteRegistryValueInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteRegistryValueInGuest         `xml:"urn:vim25 DeleteRegistryValueInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteRegistryValueInGuestResponse `xml:"urn:vim25 DeleteRegistryValueInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteRegistryValueInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteRegistryValueInGuest(ctx context.Context, r soap.RoundTripper, req *types.DeleteRegistryValueInGuest) (*types.DeleteRegistryValueInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteRegistryValueInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteScsiLunStateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteScsiLunState         `xml:"urn:vim25 DeleteScsiLunState,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteScsiLunStateResponse `xml:"urn:vim25 DeleteScsiLunStateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteScsiLunStateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteScsiLunState(ctx context.Context, r soap.RoundTripper, req *types.DeleteScsiLunState) (*types.DeleteScsiLunStateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteScsiLunStateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteVStorageObject_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteVStorageObject_Task         `xml:"urn:vim25 DeleteVStorageObject_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteVStorageObject_TaskResponse `xml:"urn:vim25 DeleteVStorageObject_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteVStorageObject_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteVStorageObject_Task(ctx context.Context, r soap.RoundTripper, req *types.DeleteVStorageObject_Task) (*types.DeleteVStorageObject_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteVStorageObject_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteVffsVolumeStateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteVffsVolumeState         `xml:"urn:vim25 DeleteVffsVolumeState,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteVffsVolumeStateResponse `xml:"urn:vim25 DeleteVffsVolumeStateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteVffsVolumeStateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteVffsVolumeState(ctx context.Context, r soap.RoundTripper, req *types.DeleteVffsVolumeState) (*types.DeleteVffsVolumeStateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteVffsVolumeStateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteVirtualDisk_Task         `xml:"urn:vim25 DeleteVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteVirtualDisk_TaskResponse `xml:"urn:vim25 DeleteVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.DeleteVirtualDisk_Task) (*types.DeleteVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteVmfsVolumeStateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteVmfsVolumeState         `xml:"urn:vim25 DeleteVmfsVolumeState,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteVmfsVolumeStateResponse `xml:"urn:vim25 DeleteVmfsVolumeStateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteVmfsVolumeStateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteVmfsVolumeState(ctx context.Context, r soap.RoundTripper, req *types.DeleteVmfsVolumeState) (*types.DeleteVmfsVolumeStateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteVmfsVolumeStateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeleteVsanObjectsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeleteVsanObjects         `xml:"urn:vim25 DeleteVsanObjects,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeleteVsanObjectsResponse `xml:"urn:vim25 DeleteVsanObjectsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeleteVsanObjectsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeleteVsanObjects(ctx context.Context, r soap.RoundTripper, req *types.DeleteVsanObjects) (*types.DeleteVsanObjectsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeleteVsanObjectsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeselectVnicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeselectVnic         `xml:"urn:vim25 DeselectVnic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeselectVnicResponse `xml:"urn:vim25 DeselectVnicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeselectVnicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeselectVnic(ctx context.Context, r soap.RoundTripper, req *types.DeselectVnic) (*types.DeselectVnicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeselectVnicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DeselectVnicForNicTypeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DeselectVnicForNicType         `xml:"urn:vim25 DeselectVnicForNicType,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DeselectVnicForNicTypeResponse `xml:"urn:vim25 DeselectVnicForNicTypeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DeselectVnicForNicTypeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeselectVnicForNicType(ctx context.Context, r soap.RoundTripper, req *types.DeselectVnicForNicType) (*types.DeselectVnicForNicTypeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DeselectVnicForNicTypeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyChildrenBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyChildren         `xml:"urn:vim25 DestroyChildren,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyChildrenResponse `xml:"urn:vim25 DestroyChildrenResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyChildrenBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyChildren(ctx context.Context, r soap.RoundTripper, req *types.DestroyChildren) (*types.DestroyChildrenResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyChildrenBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyCollectorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyCollector         `xml:"urn:vim25 DestroyCollector,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyCollectorResponse `xml:"urn:vim25 DestroyCollectorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyCollectorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyCollector(ctx context.Context, r soap.RoundTripper, req *types.DestroyCollector) (*types.DestroyCollectorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyCollectorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyDatastore         `xml:"urn:vim25 DestroyDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyDatastoreResponse `xml:"urn:vim25 DestroyDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyDatastore(ctx context.Context, r soap.RoundTripper, req *types.DestroyDatastore) (*types.DestroyDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyIpPoolBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyIpPool         `xml:"urn:vim25 DestroyIpPool,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyIpPoolResponse `xml:"urn:vim25 DestroyIpPoolResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyIpPoolBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyIpPool(ctx context.Context, r soap.RoundTripper, req *types.DestroyIpPool) (*types.DestroyIpPoolResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyIpPoolBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyNetworkBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyNetwork         `xml:"urn:vim25 DestroyNetwork,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyNetworkResponse `xml:"urn:vim25 DestroyNetworkResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyNetworkBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyNetwork(ctx context.Context, r soap.RoundTripper, req *types.DestroyNetwork) (*types.DestroyNetworkResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyNetworkBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyProfile         `xml:"urn:vim25 DestroyProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyProfileResponse `xml:"urn:vim25 DestroyProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyProfile(ctx context.Context, r soap.RoundTripper, req *types.DestroyProfile) (*types.DestroyProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyPropertyCollectorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyPropertyCollector         `xml:"urn:vim25 DestroyPropertyCollector,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyPropertyCollectorResponse `xml:"urn:vim25 DestroyPropertyCollectorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyPropertyCollectorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyPropertyCollector(ctx context.Context, r soap.RoundTripper, req *types.DestroyPropertyCollector) (*types.DestroyPropertyCollectorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyPropertyCollectorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyPropertyFilterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyPropertyFilter         `xml:"urn:vim25 DestroyPropertyFilter,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyPropertyFilterResponse `xml:"urn:vim25 DestroyPropertyFilterResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyPropertyFilterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyPropertyFilter(ctx context.Context, r soap.RoundTripper, req *types.DestroyPropertyFilter) (*types.DestroyPropertyFilterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyPropertyFilterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyVffsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyVffs         `xml:"urn:vim25 DestroyVffs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyVffsResponse `xml:"urn:vim25 DestroyVffsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyVffsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyVffs(ctx context.Context, r soap.RoundTripper, req *types.DestroyVffs) (*types.DestroyVffsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyVffsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DestroyViewBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DestroyView         `xml:"urn:vim25 DestroyView,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DestroyViewResponse `xml:"urn:vim25 DestroyViewResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DestroyViewBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DestroyView(ctx context.Context, r soap.RoundTripper, req *types.DestroyView) (*types.DestroyViewResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DestroyViewBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Destroy_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.Destroy_Task         `xml:"urn:vim25 Destroy_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.Destroy_TaskResponse `xml:"urn:vim25 Destroy_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *Destroy_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Destroy_Task(ctx context.Context, r soap.RoundTripper, req *types.Destroy_Task) (*types.Destroy_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody Destroy_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DetachDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DetachDisk_Task         `xml:"urn:vim25 DetachDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DetachDisk_TaskResponse `xml:"urn:vim25 DetachDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DetachDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DetachDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.DetachDisk_Task) (*types.DetachDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DetachDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DetachScsiLunBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DetachScsiLun         `xml:"urn:vim25 DetachScsiLun,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DetachScsiLunResponse `xml:"urn:vim25 DetachScsiLunResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DetachScsiLunBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DetachScsiLun(ctx context.Context, r soap.RoundTripper, req *types.DetachScsiLun) (*types.DetachScsiLunResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DetachScsiLunBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DetachScsiLunEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DetachScsiLunEx_Task         `xml:"urn:vim25 DetachScsiLunEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DetachScsiLunEx_TaskResponse `xml:"urn:vim25 DetachScsiLunEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DetachScsiLunEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DetachScsiLunEx_Task(ctx context.Context, r soap.RoundTripper, req *types.DetachScsiLunEx_Task) (*types.DetachScsiLunEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DetachScsiLunEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DetachTagFromVStorageObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DetachTagFromVStorageObject         `xml:"urn:vim25 DetachTagFromVStorageObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DetachTagFromVStorageObjectResponse `xml:"urn:vim25 DetachTagFromVStorageObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DetachTagFromVStorageObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DetachTagFromVStorageObject(ctx context.Context, r soap.RoundTripper, req *types.DetachTagFromVStorageObject) (*types.DetachTagFromVStorageObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DetachTagFromVStorageObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DisableEvcMode_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DisableEvcMode_Task         `xml:"urn:vim25 DisableEvcMode_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DisableEvcMode_TaskResponse `xml:"urn:vim25 DisableEvcMode_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DisableEvcMode_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DisableEvcMode_Task(ctx context.Context, r soap.RoundTripper, req *types.DisableEvcMode_Task) (*types.DisableEvcMode_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DisableEvcMode_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DisableFeatureBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DisableFeature         `xml:"urn:vim25 DisableFeature,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DisableFeatureResponse `xml:"urn:vim25 DisableFeatureResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DisableFeatureBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DisableFeature(ctx context.Context, r soap.RoundTripper, req *types.DisableFeature) (*types.DisableFeatureResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DisableFeatureBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DisableHyperThreadingBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DisableHyperThreading         `xml:"urn:vim25 DisableHyperThreading,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DisableHyperThreadingResponse `xml:"urn:vim25 DisableHyperThreadingResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DisableHyperThreadingBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DisableHyperThreading(ctx context.Context, r soap.RoundTripper, req *types.DisableHyperThreading) (*types.DisableHyperThreadingResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DisableHyperThreadingBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DisableMultipathPathBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DisableMultipathPath         `xml:"urn:vim25 DisableMultipathPath,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DisableMultipathPathResponse `xml:"urn:vim25 DisableMultipathPathResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DisableMultipathPathBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DisableMultipathPath(ctx context.Context, r soap.RoundTripper, req *types.DisableMultipathPath) (*types.DisableMultipathPathResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DisableMultipathPathBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DisableRulesetBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DisableRuleset         `xml:"urn:vim25 DisableRuleset,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DisableRulesetResponse `xml:"urn:vim25 DisableRulesetResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DisableRulesetBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DisableRuleset(ctx context.Context, r soap.RoundTripper, req *types.DisableRuleset) (*types.DisableRulesetResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DisableRulesetBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DisableSecondaryVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DisableSecondaryVM_Task         `xml:"urn:vim25 DisableSecondaryVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DisableSecondaryVM_TaskResponse `xml:"urn:vim25 DisableSecondaryVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DisableSecondaryVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DisableSecondaryVM_Task(ctx context.Context, r soap.RoundTripper, req *types.DisableSecondaryVM_Task) (*types.DisableSecondaryVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DisableSecondaryVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DisableSmartCardAuthenticationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DisableSmartCardAuthentication         `xml:"urn:vim25 DisableSmartCardAuthentication,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DisableSmartCardAuthenticationResponse `xml:"urn:vim25 DisableSmartCardAuthenticationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DisableSmartCardAuthenticationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DisableSmartCardAuthentication(ctx context.Context, r soap.RoundTripper, req *types.DisableSmartCardAuthentication) (*types.DisableSmartCardAuthenticationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DisableSmartCardAuthenticationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DisconnectHost_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DisconnectHost_Task         `xml:"urn:vim25 DisconnectHost_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DisconnectHost_TaskResponse `xml:"urn:vim25 DisconnectHost_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DisconnectHost_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DisconnectHost_Task(ctx context.Context, r soap.RoundTripper, req *types.DisconnectHost_Task) (*types.DisconnectHost_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DisconnectHost_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DiscoverFcoeHbasBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DiscoverFcoeHbas         `xml:"urn:vim25 DiscoverFcoeHbas,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DiscoverFcoeHbasResponse `xml:"urn:vim25 DiscoverFcoeHbasResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DiscoverFcoeHbasBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DiscoverFcoeHbas(ctx context.Context, r soap.RoundTripper, req *types.DiscoverFcoeHbas) (*types.DiscoverFcoeHbasResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DiscoverFcoeHbasBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DissociateProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DissociateProfile         `xml:"urn:vim25 DissociateProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DissociateProfileResponse `xml:"urn:vim25 DissociateProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DissociateProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DissociateProfile(ctx context.Context, r soap.RoundTripper, req *types.DissociateProfile) (*types.DissociateProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DissociateProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DoesCustomizationSpecExistBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DoesCustomizationSpecExist         `xml:"urn:vim25 DoesCustomizationSpecExist,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DoesCustomizationSpecExistResponse `xml:"urn:vim25 DoesCustomizationSpecExistResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DoesCustomizationSpecExistBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DoesCustomizationSpecExist(ctx context.Context, r soap.RoundTripper, req *types.DoesCustomizationSpecExist) (*types.DoesCustomizationSpecExistResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DoesCustomizationSpecExistBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DuplicateCustomizationSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DuplicateCustomizationSpec         `xml:"urn:vim25 DuplicateCustomizationSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DuplicateCustomizationSpecResponse `xml:"urn:vim25 DuplicateCustomizationSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DuplicateCustomizationSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DuplicateCustomizationSpec(ctx context.Context, r soap.RoundTripper, req *types.DuplicateCustomizationSpec) (*types.DuplicateCustomizationSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DuplicateCustomizationSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DvsReconfigureVmVnicNetworkResourcePool_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DvsReconfigureVmVnicNetworkResourcePool_Task         `xml:"urn:vim25 DvsReconfigureVmVnicNetworkResourcePool_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.DvsReconfigureVmVnicNetworkResourcePool_TaskResponse `xml:"urn:vim25 DvsReconfigureVmVnicNetworkResourcePool_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DvsReconfigureVmVnicNetworkResourcePool_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DvsReconfigureVmVnicNetworkResourcePool_Task(ctx context.Context, r soap.RoundTripper, req *types.DvsReconfigureVmVnicNetworkResourcePool_Task) (*types.DvsReconfigureVmVnicNetworkResourcePool_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DvsReconfigureVmVnicNetworkResourcePool_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EagerZeroVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EagerZeroVirtualDisk_Task         `xml:"urn:vim25 EagerZeroVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EagerZeroVirtualDisk_TaskResponse `xml:"urn:vim25 EagerZeroVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EagerZeroVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EagerZeroVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.EagerZeroVirtualDisk_Task) (*types.EagerZeroVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EagerZeroVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnableAlarmActionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnableAlarmActions         `xml:"urn:vim25 EnableAlarmActions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnableAlarmActionsResponse `xml:"urn:vim25 EnableAlarmActionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnableAlarmActionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnableAlarmActions(ctx context.Context, r soap.RoundTripper, req *types.EnableAlarmActions) (*types.EnableAlarmActionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnableAlarmActionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnableCryptoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnableCrypto         `xml:"urn:vim25 EnableCrypto,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnableCryptoResponse `xml:"urn:vim25 EnableCryptoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnableCryptoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnableCrypto(ctx context.Context, r soap.RoundTripper, req *types.EnableCrypto) (*types.EnableCryptoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnableCryptoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnableFeatureBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnableFeature         `xml:"urn:vim25 EnableFeature,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnableFeatureResponse `xml:"urn:vim25 EnableFeatureResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnableFeatureBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnableFeature(ctx context.Context, r soap.RoundTripper, req *types.EnableFeature) (*types.EnableFeatureResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnableFeatureBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnableHyperThreadingBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnableHyperThreading         `xml:"urn:vim25 EnableHyperThreading,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnableHyperThreadingResponse `xml:"urn:vim25 EnableHyperThreadingResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnableHyperThreadingBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnableHyperThreading(ctx context.Context, r soap.RoundTripper, req *types.EnableHyperThreading) (*types.EnableHyperThreadingResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnableHyperThreadingBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnableMultipathPathBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnableMultipathPath         `xml:"urn:vim25 EnableMultipathPath,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnableMultipathPathResponse `xml:"urn:vim25 EnableMultipathPathResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnableMultipathPathBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnableMultipathPath(ctx context.Context, r soap.RoundTripper, req *types.EnableMultipathPath) (*types.EnableMultipathPathResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnableMultipathPathBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnableNetworkResourceManagementBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnableNetworkResourceManagement         `xml:"urn:vim25 EnableNetworkResourceManagement,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnableNetworkResourceManagementResponse `xml:"urn:vim25 EnableNetworkResourceManagementResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnableNetworkResourceManagementBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnableNetworkResourceManagement(ctx context.Context, r soap.RoundTripper, req *types.EnableNetworkResourceManagement) (*types.EnableNetworkResourceManagementResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnableNetworkResourceManagementBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnableRulesetBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnableRuleset         `xml:"urn:vim25 EnableRuleset,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnableRulesetResponse `xml:"urn:vim25 EnableRulesetResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnableRulesetBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnableRuleset(ctx context.Context, r soap.RoundTripper, req *types.EnableRuleset) (*types.EnableRulesetResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnableRulesetBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnableSecondaryVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnableSecondaryVM_Task         `xml:"urn:vim25 EnableSecondaryVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnableSecondaryVM_TaskResponse `xml:"urn:vim25 EnableSecondaryVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnableSecondaryVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnableSecondaryVM_Task(ctx context.Context, r soap.RoundTripper, req *types.EnableSecondaryVM_Task) (*types.EnableSecondaryVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnableSecondaryVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnableSmartCardAuthenticationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnableSmartCardAuthentication         `xml:"urn:vim25 EnableSmartCardAuthentication,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnableSmartCardAuthenticationResponse `xml:"urn:vim25 EnableSmartCardAuthenticationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnableSmartCardAuthenticationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnableSmartCardAuthentication(ctx context.Context, r soap.RoundTripper, req *types.EnableSmartCardAuthentication) (*types.EnableSmartCardAuthenticationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnableSmartCardAuthenticationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnterLockdownModeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnterLockdownMode         `xml:"urn:vim25 EnterLockdownMode,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnterLockdownModeResponse `xml:"urn:vim25 EnterLockdownModeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnterLockdownModeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnterLockdownMode(ctx context.Context, r soap.RoundTripper, req *types.EnterLockdownMode) (*types.EnterLockdownModeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnterLockdownModeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnterMaintenanceMode_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EnterMaintenanceMode_Task         `xml:"urn:vim25 EnterMaintenanceMode_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EnterMaintenanceMode_TaskResponse `xml:"urn:vim25 EnterMaintenanceMode_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EnterMaintenanceMode_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EnterMaintenanceMode_Task(ctx context.Context, r soap.RoundTripper, req *types.EnterMaintenanceMode_Task) (*types.EnterMaintenanceMode_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EnterMaintenanceMode_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EstimateDatabaseSizeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EstimateDatabaseSize         `xml:"urn:vim25 EstimateDatabaseSize,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EstimateDatabaseSizeResponse `xml:"urn:vim25 EstimateDatabaseSizeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EstimateDatabaseSizeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EstimateDatabaseSize(ctx context.Context, r soap.RoundTripper, req *types.EstimateDatabaseSize) (*types.EstimateDatabaseSizeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EstimateDatabaseSizeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EstimateStorageForConsolidateSnapshots_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EstimateStorageForConsolidateSnapshots_Task         `xml:"urn:vim25 EstimateStorageForConsolidateSnapshots_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EstimateStorageForConsolidateSnapshots_TaskResponse `xml:"urn:vim25 EstimateStorageForConsolidateSnapshots_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EstimateStorageForConsolidateSnapshots_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EstimateStorageForConsolidateSnapshots_Task(ctx context.Context, r soap.RoundTripper, req *types.EstimateStorageForConsolidateSnapshots_Task) (*types.EstimateStorageForConsolidateSnapshots_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EstimateStorageForConsolidateSnapshots_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EsxAgentHostManagerUpdateConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EsxAgentHostManagerUpdateConfig         `xml:"urn:vim25 EsxAgentHostManagerUpdateConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EsxAgentHostManagerUpdateConfigResponse `xml:"urn:vim25 EsxAgentHostManagerUpdateConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EsxAgentHostManagerUpdateConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EsxAgentHostManagerUpdateConfig(ctx context.Context, r soap.RoundTripper, req *types.EsxAgentHostManagerUpdateConfig) (*types.EsxAgentHostManagerUpdateConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EsxAgentHostManagerUpdateConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EvacuateVsanNode_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EvacuateVsanNode_Task         `xml:"urn:vim25 EvacuateVsanNode_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EvacuateVsanNode_TaskResponse `xml:"urn:vim25 EvacuateVsanNode_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EvacuateVsanNode_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EvacuateVsanNode_Task(ctx context.Context, r soap.RoundTripper, req *types.EvacuateVsanNode_Task) (*types.EvacuateVsanNode_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EvacuateVsanNode_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EvcManagerBody struct {
0000000000000000000000000000000000000000;;		Req    *types.EvcManager         `xml:"urn:vim25 EvcManager,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.EvcManagerResponse `xml:"urn:vim25 EvcManagerResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *EvcManagerBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func EvcManager(ctx context.Context, r soap.RoundTripper, req *types.EvcManager) (*types.EvcManagerResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody EvcManagerBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExecuteHostProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExecuteHostProfile         `xml:"urn:vim25 ExecuteHostProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExecuteHostProfileResponse `xml:"urn:vim25 ExecuteHostProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExecuteHostProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExecuteHostProfile(ctx context.Context, r soap.RoundTripper, req *types.ExecuteHostProfile) (*types.ExecuteHostProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExecuteHostProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExecuteSimpleCommandBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExecuteSimpleCommand         `xml:"urn:vim25 ExecuteSimpleCommand,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExecuteSimpleCommandResponse `xml:"urn:vim25 ExecuteSimpleCommandResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExecuteSimpleCommandBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExecuteSimpleCommand(ctx context.Context, r soap.RoundTripper, req *types.ExecuteSimpleCommand) (*types.ExecuteSimpleCommandResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExecuteSimpleCommandBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExitLockdownModeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExitLockdownMode         `xml:"urn:vim25 ExitLockdownMode,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExitLockdownModeResponse `xml:"urn:vim25 ExitLockdownModeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExitLockdownModeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExitLockdownMode(ctx context.Context, r soap.RoundTripper, req *types.ExitLockdownMode) (*types.ExitLockdownModeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExitLockdownModeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExitMaintenanceMode_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExitMaintenanceMode_Task         `xml:"urn:vim25 ExitMaintenanceMode_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExitMaintenanceMode_TaskResponse `xml:"urn:vim25 ExitMaintenanceMode_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExitMaintenanceMode_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExitMaintenanceMode_Task(ctx context.Context, r soap.RoundTripper, req *types.ExitMaintenanceMode_Task) (*types.ExitMaintenanceMode_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExitMaintenanceMode_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExpandVmfsDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExpandVmfsDatastore         `xml:"urn:vim25 ExpandVmfsDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExpandVmfsDatastoreResponse `xml:"urn:vim25 ExpandVmfsDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExpandVmfsDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExpandVmfsDatastore(ctx context.Context, r soap.RoundTripper, req *types.ExpandVmfsDatastore) (*types.ExpandVmfsDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExpandVmfsDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExpandVmfsExtentBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExpandVmfsExtent         `xml:"urn:vim25 ExpandVmfsExtent,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExpandVmfsExtentResponse `xml:"urn:vim25 ExpandVmfsExtentResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExpandVmfsExtentBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExpandVmfsExtent(ctx context.Context, r soap.RoundTripper, req *types.ExpandVmfsExtent) (*types.ExpandVmfsExtentResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExpandVmfsExtentBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExportAnswerFile_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExportAnswerFile_Task         `xml:"urn:vim25 ExportAnswerFile_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExportAnswerFile_TaskResponse `xml:"urn:vim25 ExportAnswerFile_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExportAnswerFile_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExportAnswerFile_Task(ctx context.Context, r soap.RoundTripper, req *types.ExportAnswerFile_Task) (*types.ExportAnswerFile_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExportAnswerFile_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExportProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExportProfile         `xml:"urn:vim25 ExportProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExportProfileResponse `xml:"urn:vim25 ExportProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExportProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExportProfile(ctx context.Context, r soap.RoundTripper, req *types.ExportProfile) (*types.ExportProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExportProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExportSnapshotBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExportSnapshot         `xml:"urn:vim25 ExportSnapshot,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExportSnapshotResponse `xml:"urn:vim25 ExportSnapshotResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExportSnapshotBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExportSnapshot(ctx context.Context, r soap.RoundTripper, req *types.ExportSnapshot) (*types.ExportSnapshotResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExportSnapshotBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExportVAppBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExportVApp         `xml:"urn:vim25 ExportVApp,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExportVAppResponse `xml:"urn:vim25 ExportVAppResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExportVAppBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExportVApp(ctx context.Context, r soap.RoundTripper, req *types.ExportVApp) (*types.ExportVAppResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExportVAppBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExportVmBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExportVm         `xml:"urn:vim25 ExportVm,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExportVmResponse `xml:"urn:vim25 ExportVmResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExportVmBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExportVm(ctx context.Context, r soap.RoundTripper, req *types.ExportVm) (*types.ExportVmResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExportVmBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExtendDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExtendDisk_Task         `xml:"urn:vim25 ExtendDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExtendDisk_TaskResponse `xml:"urn:vim25 ExtendDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExtendDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExtendDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.ExtendDisk_Task) (*types.ExtendDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExtendDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExtendVffsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExtendVffs         `xml:"urn:vim25 ExtendVffs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExtendVffsResponse `xml:"urn:vim25 ExtendVffsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExtendVffsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExtendVffs(ctx context.Context, r soap.RoundTripper, req *types.ExtendVffs) (*types.ExtendVffsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExtendVffsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExtendVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExtendVirtualDisk_Task         `xml:"urn:vim25 ExtendVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExtendVirtualDisk_TaskResponse `xml:"urn:vim25 ExtendVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExtendVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExtendVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.ExtendVirtualDisk_Task) (*types.ExtendVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExtendVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExtendVmfsDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExtendVmfsDatastore         `xml:"urn:vim25 ExtendVmfsDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExtendVmfsDatastoreResponse `xml:"urn:vim25 ExtendVmfsDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExtendVmfsDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExtendVmfsDatastore(ctx context.Context, r soap.RoundTripper, req *types.ExtendVmfsDatastore) (*types.ExtendVmfsDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExtendVmfsDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExtractOvfEnvironmentBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExtractOvfEnvironment         `xml:"urn:vim25 ExtractOvfEnvironment,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ExtractOvfEnvironmentResponse `xml:"urn:vim25 ExtractOvfEnvironmentResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExtractOvfEnvironmentBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExtractOvfEnvironment(ctx context.Context, r soap.RoundTripper, req *types.ExtractOvfEnvironment) (*types.ExtractOvfEnvironmentResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExtractOvfEnvironmentBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FetchDVPortKeysBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FetchDVPortKeys         `xml:"urn:vim25 FetchDVPortKeys,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FetchDVPortKeysResponse `xml:"urn:vim25 FetchDVPortKeysResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FetchDVPortKeysBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FetchDVPortKeys(ctx context.Context, r soap.RoundTripper, req *types.FetchDVPortKeys) (*types.FetchDVPortKeysResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FetchDVPortKeysBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FetchDVPortsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FetchDVPorts         `xml:"urn:vim25 FetchDVPorts,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FetchDVPortsResponse `xml:"urn:vim25 FetchDVPortsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FetchDVPortsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FetchDVPorts(ctx context.Context, r soap.RoundTripper, req *types.FetchDVPorts) (*types.FetchDVPortsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FetchDVPortsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FetchSystemEventLogBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FetchSystemEventLog         `xml:"urn:vim25 FetchSystemEventLog,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FetchSystemEventLogResponse `xml:"urn:vim25 FetchSystemEventLogResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FetchSystemEventLogBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FetchSystemEventLog(ctx context.Context, r soap.RoundTripper, req *types.FetchSystemEventLog) (*types.FetchSystemEventLogResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FetchSystemEventLogBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FetchUserPrivilegeOnEntitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FetchUserPrivilegeOnEntities         `xml:"urn:vim25 FetchUserPrivilegeOnEntities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FetchUserPrivilegeOnEntitiesResponse `xml:"urn:vim25 FetchUserPrivilegeOnEntitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FetchUserPrivilegeOnEntitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FetchUserPrivilegeOnEntities(ctx context.Context, r soap.RoundTripper, req *types.FetchUserPrivilegeOnEntities) (*types.FetchUserPrivilegeOnEntitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FetchUserPrivilegeOnEntitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindAllByDnsNameBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindAllByDnsName         `xml:"urn:vim25 FindAllByDnsName,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindAllByDnsNameResponse `xml:"urn:vim25 FindAllByDnsNameResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindAllByDnsNameBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindAllByDnsName(ctx context.Context, r soap.RoundTripper, req *types.FindAllByDnsName) (*types.FindAllByDnsNameResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindAllByDnsNameBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindAllByIpBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindAllByIp         `xml:"urn:vim25 FindAllByIp,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindAllByIpResponse `xml:"urn:vim25 FindAllByIpResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindAllByIpBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindAllByIp(ctx context.Context, r soap.RoundTripper, req *types.FindAllByIp) (*types.FindAllByIpResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindAllByIpBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindAllByUuidBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindAllByUuid         `xml:"urn:vim25 FindAllByUuid,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindAllByUuidResponse `xml:"urn:vim25 FindAllByUuidResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindAllByUuidBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindAllByUuid(ctx context.Context, r soap.RoundTripper, req *types.FindAllByUuid) (*types.FindAllByUuidResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindAllByUuidBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindAssociatedProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindAssociatedProfile         `xml:"urn:vim25 FindAssociatedProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindAssociatedProfileResponse `xml:"urn:vim25 FindAssociatedProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindAssociatedProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindAssociatedProfile(ctx context.Context, r soap.RoundTripper, req *types.FindAssociatedProfile) (*types.FindAssociatedProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindAssociatedProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindByDatastorePathBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindByDatastorePath         `xml:"urn:vim25 FindByDatastorePath,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindByDatastorePathResponse `xml:"urn:vim25 FindByDatastorePathResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindByDatastorePathBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindByDatastorePath(ctx context.Context, r soap.RoundTripper, req *types.FindByDatastorePath) (*types.FindByDatastorePathResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindByDatastorePathBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindByDnsNameBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindByDnsName         `xml:"urn:vim25 FindByDnsName,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindByDnsNameResponse `xml:"urn:vim25 FindByDnsNameResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindByDnsNameBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindByDnsName(ctx context.Context, r soap.RoundTripper, req *types.FindByDnsName) (*types.FindByDnsNameResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindByDnsNameBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindByInventoryPathBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindByInventoryPath         `xml:"urn:vim25 FindByInventoryPath,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindByInventoryPathResponse `xml:"urn:vim25 FindByInventoryPathResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindByInventoryPathBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindByInventoryPath(ctx context.Context, r soap.RoundTripper, req *types.FindByInventoryPath) (*types.FindByInventoryPathResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindByInventoryPathBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindByIpBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindByIp         `xml:"urn:vim25 FindByIp,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindByIpResponse `xml:"urn:vim25 FindByIpResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindByIpBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindByIp(ctx context.Context, r soap.RoundTripper, req *types.FindByIp) (*types.FindByIpResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindByIpBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindByUuidBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindByUuid         `xml:"urn:vim25 FindByUuid,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindByUuidResponse `xml:"urn:vim25 FindByUuidResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindByUuidBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindByUuid(ctx context.Context, r soap.RoundTripper, req *types.FindByUuid) (*types.FindByUuidResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindByUuidBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindChildBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindChild         `xml:"urn:vim25 FindChild,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindChildResponse `xml:"urn:vim25 FindChildResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindChildBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindChild(ctx context.Context, r soap.RoundTripper, req *types.FindChild) (*types.FindChildResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindChildBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindExtensionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindExtension         `xml:"urn:vim25 FindExtension,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindExtensionResponse `xml:"urn:vim25 FindExtensionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindExtensionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindExtension(ctx context.Context, r soap.RoundTripper, req *types.FindExtension) (*types.FindExtensionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindExtensionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FindRulesForVmBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FindRulesForVm         `xml:"urn:vim25 FindRulesForVm,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FindRulesForVmResponse `xml:"urn:vim25 FindRulesForVmResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FindRulesForVmBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FindRulesForVm(ctx context.Context, r soap.RoundTripper, req *types.FindRulesForVm) (*types.FindRulesForVmResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FindRulesForVmBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FormatVffsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FormatVffs         `xml:"urn:vim25 FormatVffs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FormatVffsResponse `xml:"urn:vim25 FormatVffsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FormatVffsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FormatVffs(ctx context.Context, r soap.RoundTripper, req *types.FormatVffs) (*types.FormatVffsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FormatVffsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FormatVmfsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.FormatVmfs         `xml:"urn:vim25 FormatVmfs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.FormatVmfsResponse `xml:"urn:vim25 FormatVmfsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *FormatVmfsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func FormatVmfs(ctx context.Context, r soap.RoundTripper, req *types.FormatVmfs) (*types.FormatVmfsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody FormatVmfsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GenerateCertificateSigningRequestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GenerateCertificateSigningRequest         `xml:"urn:vim25 GenerateCertificateSigningRequest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GenerateCertificateSigningRequestResponse `xml:"urn:vim25 GenerateCertificateSigningRequestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GenerateCertificateSigningRequestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GenerateCertificateSigningRequest(ctx context.Context, r soap.RoundTripper, req *types.GenerateCertificateSigningRequest) (*types.GenerateCertificateSigningRequestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GenerateCertificateSigningRequestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GenerateCertificateSigningRequestByDnBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GenerateCertificateSigningRequestByDn         `xml:"urn:vim25 GenerateCertificateSigningRequestByDn,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GenerateCertificateSigningRequestByDnResponse `xml:"urn:vim25 GenerateCertificateSigningRequestByDnResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GenerateCertificateSigningRequestByDnBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GenerateCertificateSigningRequestByDn(ctx context.Context, r soap.RoundTripper, req *types.GenerateCertificateSigningRequestByDn) (*types.GenerateCertificateSigningRequestByDnResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GenerateCertificateSigningRequestByDnBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GenerateClientCsrBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GenerateClientCsr         `xml:"urn:vim25 GenerateClientCsr,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GenerateClientCsrResponse `xml:"urn:vim25 GenerateClientCsrResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GenerateClientCsrBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GenerateClientCsr(ctx context.Context, r soap.RoundTripper, req *types.GenerateClientCsr) (*types.GenerateClientCsrResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GenerateClientCsrBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GenerateConfigTaskListBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GenerateConfigTaskList         `xml:"urn:vim25 GenerateConfigTaskList,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GenerateConfigTaskListResponse `xml:"urn:vim25 GenerateConfigTaskListResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GenerateConfigTaskListBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GenerateConfigTaskList(ctx context.Context, r soap.RoundTripper, req *types.GenerateConfigTaskList) (*types.GenerateConfigTaskListResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GenerateConfigTaskListBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GenerateHostConfigTaskSpec_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GenerateHostConfigTaskSpec_Task         `xml:"urn:vim25 GenerateHostConfigTaskSpec_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GenerateHostConfigTaskSpec_TaskResponse `xml:"urn:vim25 GenerateHostConfigTaskSpec_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GenerateHostConfigTaskSpec_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GenerateHostConfigTaskSpec_Task(ctx context.Context, r soap.RoundTripper, req *types.GenerateHostConfigTaskSpec_Task) (*types.GenerateHostConfigTaskSpec_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GenerateHostConfigTaskSpec_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GenerateHostProfileTaskList_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GenerateHostProfileTaskList_Task         `xml:"urn:vim25 GenerateHostProfileTaskList_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GenerateHostProfileTaskList_TaskResponse `xml:"urn:vim25 GenerateHostProfileTaskList_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GenerateHostProfileTaskList_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GenerateHostProfileTaskList_Task(ctx context.Context, r soap.RoundTripper, req *types.GenerateHostProfileTaskList_Task) (*types.GenerateHostProfileTaskList_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GenerateHostProfileTaskList_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GenerateKeyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GenerateKey         `xml:"urn:vim25 GenerateKey,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GenerateKeyResponse `xml:"urn:vim25 GenerateKeyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GenerateKeyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GenerateKey(ctx context.Context, r soap.RoundTripper, req *types.GenerateKey) (*types.GenerateKeyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GenerateKeyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GenerateLogBundles_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GenerateLogBundles_Task         `xml:"urn:vim25 GenerateLogBundles_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GenerateLogBundles_TaskResponse `xml:"urn:vim25 GenerateLogBundles_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GenerateLogBundles_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GenerateLogBundles_Task(ctx context.Context, r soap.RoundTripper, req *types.GenerateLogBundles_Task) (*types.GenerateLogBundles_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GenerateLogBundles_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GenerateSelfSignedClientCertBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GenerateSelfSignedClientCert         `xml:"urn:vim25 GenerateSelfSignedClientCert,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GenerateSelfSignedClientCertResponse `xml:"urn:vim25 GenerateSelfSignedClientCertResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GenerateSelfSignedClientCertBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GenerateSelfSignedClientCert(ctx context.Context, r soap.RoundTripper, req *types.GenerateSelfSignedClientCert) (*types.GenerateSelfSignedClientCertResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GenerateSelfSignedClientCertBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GetAlarmBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GetAlarm         `xml:"urn:vim25 GetAlarm,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GetAlarmResponse `xml:"urn:vim25 GetAlarmResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GetAlarmBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetAlarm(ctx context.Context, r soap.RoundTripper, req *types.GetAlarm) (*types.GetAlarmResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GetAlarmBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GetAlarmStateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GetAlarmState         `xml:"urn:vim25 GetAlarmState,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GetAlarmStateResponse `xml:"urn:vim25 GetAlarmStateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GetAlarmStateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetAlarmState(ctx context.Context, r soap.RoundTripper, req *types.GetAlarmState) (*types.GetAlarmStateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GetAlarmStateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GetCustomizationSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GetCustomizationSpec         `xml:"urn:vim25 GetCustomizationSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GetCustomizationSpecResponse `xml:"urn:vim25 GetCustomizationSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GetCustomizationSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetCustomizationSpec(ctx context.Context, r soap.RoundTripper, req *types.GetCustomizationSpec) (*types.GetCustomizationSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GetCustomizationSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GetPublicKeyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GetPublicKey         `xml:"urn:vim25 GetPublicKey,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GetPublicKeyResponse `xml:"urn:vim25 GetPublicKeyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GetPublicKeyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetPublicKey(ctx context.Context, r soap.RoundTripper, req *types.GetPublicKey) (*types.GetPublicKeyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GetPublicKeyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GetResourceUsageBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GetResourceUsage         `xml:"urn:vim25 GetResourceUsage,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GetResourceUsageResponse `xml:"urn:vim25 GetResourceUsageResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GetResourceUsageBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetResourceUsage(ctx context.Context, r soap.RoundTripper, req *types.GetResourceUsage) (*types.GetResourceUsageResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GetResourceUsageBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GetVchaClusterHealthBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GetVchaClusterHealth         `xml:"urn:vim25 GetVchaClusterHealth,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GetVchaClusterHealthResponse `xml:"urn:vim25 GetVchaClusterHealthResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GetVchaClusterHealthBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetVchaClusterHealth(ctx context.Context, r soap.RoundTripper, req *types.GetVchaClusterHealth) (*types.GetVchaClusterHealthResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GetVchaClusterHealthBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type GetVsanObjExtAttrsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.GetVsanObjExtAttrs         `xml:"urn:vim25 GetVsanObjExtAttrs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.GetVsanObjExtAttrsResponse `xml:"urn:vim25 GetVsanObjExtAttrsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *GetVsanObjExtAttrsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetVsanObjExtAttrs(ctx context.Context, r soap.RoundTripper, req *types.GetVsanObjExtAttrs) (*types.GetVsanObjExtAttrsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody GetVsanObjExtAttrsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HasMonitoredEntityBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HasMonitoredEntity         `xml:"urn:vim25 HasMonitoredEntity,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HasMonitoredEntityResponse `xml:"urn:vim25 HasMonitoredEntityResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HasMonitoredEntityBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HasMonitoredEntity(ctx context.Context, r soap.RoundTripper, req *types.HasMonitoredEntity) (*types.HasMonitoredEntityResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HasMonitoredEntityBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HasPrivilegeOnEntitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HasPrivilegeOnEntities         `xml:"urn:vim25 HasPrivilegeOnEntities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HasPrivilegeOnEntitiesResponse `xml:"urn:vim25 HasPrivilegeOnEntitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HasPrivilegeOnEntitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HasPrivilegeOnEntities(ctx context.Context, r soap.RoundTripper, req *types.HasPrivilegeOnEntities) (*types.HasPrivilegeOnEntitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HasPrivilegeOnEntitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HasPrivilegeOnEntityBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HasPrivilegeOnEntity         `xml:"urn:vim25 HasPrivilegeOnEntity,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HasPrivilegeOnEntityResponse `xml:"urn:vim25 HasPrivilegeOnEntityResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HasPrivilegeOnEntityBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HasPrivilegeOnEntity(ctx context.Context, r soap.RoundTripper, req *types.HasPrivilegeOnEntity) (*types.HasPrivilegeOnEntityResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HasPrivilegeOnEntityBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HasProviderBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HasProvider         `xml:"urn:vim25 HasProvider,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HasProviderResponse `xml:"urn:vim25 HasProviderResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HasProviderBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HasProvider(ctx context.Context, r soap.RoundTripper, req *types.HasProvider) (*types.HasProviderResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HasProviderBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HasUserPrivilegeOnEntitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HasUserPrivilegeOnEntities         `xml:"urn:vim25 HasUserPrivilegeOnEntities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HasUserPrivilegeOnEntitiesResponse `xml:"urn:vim25 HasUserPrivilegeOnEntitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HasUserPrivilegeOnEntitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HasUserPrivilegeOnEntities(ctx context.Context, r soap.RoundTripper, req *types.HasUserPrivilegeOnEntities) (*types.HasUserPrivilegeOnEntitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HasUserPrivilegeOnEntitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostCloneVStorageObject_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostCloneVStorageObject_Task         `xml:"urn:vim25 HostCloneVStorageObject_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostCloneVStorageObject_TaskResponse `xml:"urn:vim25 HostCloneVStorageObject_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostCloneVStorageObject_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostCloneVStorageObject_Task(ctx context.Context, r soap.RoundTripper, req *types.HostCloneVStorageObject_Task) (*types.HostCloneVStorageObject_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostCloneVStorageObject_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostConfigVFlashCacheBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostConfigVFlashCache         `xml:"urn:vim25 HostConfigVFlashCache,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostConfigVFlashCacheResponse `xml:"urn:vim25 HostConfigVFlashCacheResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostConfigVFlashCacheBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostConfigVFlashCache(ctx context.Context, r soap.RoundTripper, req *types.HostConfigVFlashCache) (*types.HostConfigVFlashCacheResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostConfigVFlashCacheBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostConfigureVFlashResourceBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostConfigureVFlashResource         `xml:"urn:vim25 HostConfigureVFlashResource,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostConfigureVFlashResourceResponse `xml:"urn:vim25 HostConfigureVFlashResourceResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostConfigureVFlashResourceBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostConfigureVFlashResource(ctx context.Context, r soap.RoundTripper, req *types.HostConfigureVFlashResource) (*types.HostConfigureVFlashResourceResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostConfigureVFlashResourceBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostCreateDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostCreateDisk_Task         `xml:"urn:vim25 HostCreateDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostCreateDisk_TaskResponse `xml:"urn:vim25 HostCreateDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostCreateDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostCreateDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.HostCreateDisk_Task) (*types.HostCreateDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostCreateDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostDeleteVStorageObject_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostDeleteVStorageObject_Task         `xml:"urn:vim25 HostDeleteVStorageObject_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostDeleteVStorageObject_TaskResponse `xml:"urn:vim25 HostDeleteVStorageObject_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostDeleteVStorageObject_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostDeleteVStorageObject_Task(ctx context.Context, r soap.RoundTripper, req *types.HostDeleteVStorageObject_Task) (*types.HostDeleteVStorageObject_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostDeleteVStorageObject_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostExtendDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostExtendDisk_Task         `xml:"urn:vim25 HostExtendDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostExtendDisk_TaskResponse `xml:"urn:vim25 HostExtendDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostExtendDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostExtendDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.HostExtendDisk_Task) (*types.HostExtendDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostExtendDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostGetVFlashModuleDefaultConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostGetVFlashModuleDefaultConfig         `xml:"urn:vim25 HostGetVFlashModuleDefaultConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostGetVFlashModuleDefaultConfigResponse `xml:"urn:vim25 HostGetVFlashModuleDefaultConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostGetVFlashModuleDefaultConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostGetVFlashModuleDefaultConfig(ctx context.Context, r soap.RoundTripper, req *types.HostGetVFlashModuleDefaultConfig) (*types.HostGetVFlashModuleDefaultConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostGetVFlashModuleDefaultConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostImageConfigGetAcceptanceBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostImageConfigGetAcceptance         `xml:"urn:vim25 HostImageConfigGetAcceptance,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostImageConfigGetAcceptanceResponse `xml:"urn:vim25 HostImageConfigGetAcceptanceResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostImageConfigGetAcceptanceBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostImageConfigGetAcceptance(ctx context.Context, r soap.RoundTripper, req *types.HostImageConfigGetAcceptance) (*types.HostImageConfigGetAcceptanceResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostImageConfigGetAcceptanceBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostImageConfigGetProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostImageConfigGetProfile         `xml:"urn:vim25 HostImageConfigGetProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostImageConfigGetProfileResponse `xml:"urn:vim25 HostImageConfigGetProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostImageConfigGetProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostImageConfigGetProfile(ctx context.Context, r soap.RoundTripper, req *types.HostImageConfigGetProfile) (*types.HostImageConfigGetProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostImageConfigGetProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostInflateDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostInflateDisk_Task         `xml:"urn:vim25 HostInflateDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostInflateDisk_TaskResponse `xml:"urn:vim25 HostInflateDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostInflateDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostInflateDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.HostInflateDisk_Task) (*types.HostInflateDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostInflateDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostListVStorageObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostListVStorageObject         `xml:"urn:vim25 HostListVStorageObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostListVStorageObjectResponse `xml:"urn:vim25 HostListVStorageObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostListVStorageObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostListVStorageObject(ctx context.Context, r soap.RoundTripper, req *types.HostListVStorageObject) (*types.HostListVStorageObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostListVStorageObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostReconcileDatastoreInventory_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostReconcileDatastoreInventory_Task         `xml:"urn:vim25 HostReconcileDatastoreInventory_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostReconcileDatastoreInventory_TaskResponse `xml:"urn:vim25 HostReconcileDatastoreInventory_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostReconcileDatastoreInventory_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostReconcileDatastoreInventory_Task(ctx context.Context, r soap.RoundTripper, req *types.HostReconcileDatastoreInventory_Task) (*types.HostReconcileDatastoreInventory_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostReconcileDatastoreInventory_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostRegisterDiskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostRegisterDisk         `xml:"urn:vim25 HostRegisterDisk,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostRegisterDiskResponse `xml:"urn:vim25 HostRegisterDiskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostRegisterDiskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostRegisterDisk(ctx context.Context, r soap.RoundTripper, req *types.HostRegisterDisk) (*types.HostRegisterDiskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostRegisterDiskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostRelocateVStorageObject_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostRelocateVStorageObject_Task         `xml:"urn:vim25 HostRelocateVStorageObject_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostRelocateVStorageObject_TaskResponse `xml:"urn:vim25 HostRelocateVStorageObject_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostRelocateVStorageObject_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostRelocateVStorageObject_Task(ctx context.Context, r soap.RoundTripper, req *types.HostRelocateVStorageObject_Task) (*types.HostRelocateVStorageObject_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostRelocateVStorageObject_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostRemoveVFlashResourceBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostRemoveVFlashResource         `xml:"urn:vim25 HostRemoveVFlashResource,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostRemoveVFlashResourceResponse `xml:"urn:vim25 HostRemoveVFlashResourceResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostRemoveVFlashResourceBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostRemoveVFlashResource(ctx context.Context, r soap.RoundTripper, req *types.HostRemoveVFlashResource) (*types.HostRemoveVFlashResourceResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostRemoveVFlashResourceBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostRenameVStorageObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostRenameVStorageObject         `xml:"urn:vim25 HostRenameVStorageObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostRenameVStorageObjectResponse `xml:"urn:vim25 HostRenameVStorageObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostRenameVStorageObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostRenameVStorageObject(ctx context.Context, r soap.RoundTripper, req *types.HostRenameVStorageObject) (*types.HostRenameVStorageObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostRenameVStorageObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostRetrieveVStorageObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostRetrieveVStorageObject         `xml:"urn:vim25 HostRetrieveVStorageObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostRetrieveVStorageObjectResponse `xml:"urn:vim25 HostRetrieveVStorageObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostRetrieveVStorageObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostRetrieveVStorageObject(ctx context.Context, r soap.RoundTripper, req *types.HostRetrieveVStorageObject) (*types.HostRetrieveVStorageObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostRetrieveVStorageObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostRetrieveVStorageObjectStateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostRetrieveVStorageObjectState         `xml:"urn:vim25 HostRetrieveVStorageObjectState,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostRetrieveVStorageObjectStateResponse `xml:"urn:vim25 HostRetrieveVStorageObjectStateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostRetrieveVStorageObjectStateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostRetrieveVStorageObjectState(ctx context.Context, r soap.RoundTripper, req *types.HostRetrieveVStorageObjectState) (*types.HostRetrieveVStorageObjectStateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostRetrieveVStorageObjectStateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostScheduleReconcileDatastoreInventoryBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostScheduleReconcileDatastoreInventory         `xml:"urn:vim25 HostScheduleReconcileDatastoreInventory,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostScheduleReconcileDatastoreInventoryResponse `xml:"urn:vim25 HostScheduleReconcileDatastoreInventoryResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostScheduleReconcileDatastoreInventoryBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostScheduleReconcileDatastoreInventory(ctx context.Context, r soap.RoundTripper, req *types.HostScheduleReconcileDatastoreInventory) (*types.HostScheduleReconcileDatastoreInventoryResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostScheduleReconcileDatastoreInventoryBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HostSpecGetUpdatedHostsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HostSpecGetUpdatedHosts         `xml:"urn:vim25 HostSpecGetUpdatedHosts,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HostSpecGetUpdatedHostsResponse `xml:"urn:vim25 HostSpecGetUpdatedHostsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HostSpecGetUpdatedHostsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HostSpecGetUpdatedHosts(ctx context.Context, r soap.RoundTripper, req *types.HostSpecGetUpdatedHosts) (*types.HostSpecGetUpdatedHostsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HostSpecGetUpdatedHostsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HttpNfcLeaseAbortBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HttpNfcLeaseAbort         `xml:"urn:vim25 HttpNfcLeaseAbort,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HttpNfcLeaseAbortResponse `xml:"urn:vim25 HttpNfcLeaseAbortResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HttpNfcLeaseAbortBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HttpNfcLeaseAbort(ctx context.Context, r soap.RoundTripper, req *types.HttpNfcLeaseAbort) (*types.HttpNfcLeaseAbortResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HttpNfcLeaseAbortBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HttpNfcLeaseCompleteBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HttpNfcLeaseComplete         `xml:"urn:vim25 HttpNfcLeaseComplete,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HttpNfcLeaseCompleteResponse `xml:"urn:vim25 HttpNfcLeaseCompleteResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HttpNfcLeaseCompleteBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HttpNfcLeaseComplete(ctx context.Context, r soap.RoundTripper, req *types.HttpNfcLeaseComplete) (*types.HttpNfcLeaseCompleteResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HttpNfcLeaseCompleteBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HttpNfcLeaseGetManifestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HttpNfcLeaseGetManifest         `xml:"urn:vim25 HttpNfcLeaseGetManifest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HttpNfcLeaseGetManifestResponse `xml:"urn:vim25 HttpNfcLeaseGetManifestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HttpNfcLeaseGetManifestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HttpNfcLeaseGetManifest(ctx context.Context, r soap.RoundTripper, req *types.HttpNfcLeaseGetManifest) (*types.HttpNfcLeaseGetManifestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HttpNfcLeaseGetManifestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HttpNfcLeaseProgressBody struct {
0000000000000000000000000000000000000000;;		Req    *types.HttpNfcLeaseProgress         `xml:"urn:vim25 HttpNfcLeaseProgress,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.HttpNfcLeaseProgressResponse `xml:"urn:vim25 HttpNfcLeaseProgressResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *HttpNfcLeaseProgressBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func HttpNfcLeaseProgress(ctx context.Context, r soap.RoundTripper, req *types.HttpNfcLeaseProgress) (*types.HttpNfcLeaseProgressResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody HttpNfcLeaseProgressBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ImpersonateUserBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ImpersonateUser         `xml:"urn:vim25 ImpersonateUser,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ImpersonateUserResponse `xml:"urn:vim25 ImpersonateUserResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ImpersonateUserBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ImpersonateUser(ctx context.Context, r soap.RoundTripper, req *types.ImpersonateUser) (*types.ImpersonateUserResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ImpersonateUserBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ImportCertificateForCAM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ImportCertificateForCAM_Task         `xml:"urn:vim25 ImportCertificateForCAM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ImportCertificateForCAM_TaskResponse `xml:"urn:vim25 ImportCertificateForCAM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ImportCertificateForCAM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ImportCertificateForCAM_Task(ctx context.Context, r soap.RoundTripper, req *types.ImportCertificateForCAM_Task) (*types.ImportCertificateForCAM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ImportCertificateForCAM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ImportUnmanagedSnapshotBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ImportUnmanagedSnapshot         `xml:"urn:vim25 ImportUnmanagedSnapshot,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ImportUnmanagedSnapshotResponse `xml:"urn:vim25 ImportUnmanagedSnapshotResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ImportUnmanagedSnapshotBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ImportUnmanagedSnapshot(ctx context.Context, r soap.RoundTripper, req *types.ImportUnmanagedSnapshot) (*types.ImportUnmanagedSnapshotResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ImportUnmanagedSnapshotBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ImportVAppBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ImportVApp         `xml:"urn:vim25 ImportVApp,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ImportVAppResponse `xml:"urn:vim25 ImportVAppResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ImportVAppBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ImportVApp(ctx context.Context, r soap.RoundTripper, req *types.ImportVApp) (*types.ImportVAppResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ImportVAppBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InflateDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InflateDisk_Task         `xml:"urn:vim25 InflateDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InflateDisk_TaskResponse `xml:"urn:vim25 InflateDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InflateDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InflateDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.InflateDisk_Task) (*types.InflateDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InflateDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InflateVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InflateVirtualDisk_Task         `xml:"urn:vim25 InflateVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InflateVirtualDisk_TaskResponse `xml:"urn:vim25 InflateVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InflateVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InflateVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.InflateVirtualDisk_Task) (*types.InflateVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InflateVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InitializeDisks_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InitializeDisks_Task         `xml:"urn:vim25 InitializeDisks_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InitializeDisks_TaskResponse `xml:"urn:vim25 InitializeDisks_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InitializeDisks_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InitializeDisks_Task(ctx context.Context, r soap.RoundTripper, req *types.InitializeDisks_Task) (*types.InitializeDisks_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InitializeDisks_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InitiateFileTransferFromGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InitiateFileTransferFromGuest         `xml:"urn:vim25 InitiateFileTransferFromGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InitiateFileTransferFromGuestResponse `xml:"urn:vim25 InitiateFileTransferFromGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InitiateFileTransferFromGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InitiateFileTransferFromGuest(ctx context.Context, r soap.RoundTripper, req *types.InitiateFileTransferFromGuest) (*types.InitiateFileTransferFromGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InitiateFileTransferFromGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InitiateFileTransferToGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InitiateFileTransferToGuest         `xml:"urn:vim25 InitiateFileTransferToGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InitiateFileTransferToGuestResponse `xml:"urn:vim25 InitiateFileTransferToGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InitiateFileTransferToGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InitiateFileTransferToGuest(ctx context.Context, r soap.RoundTripper, req *types.InitiateFileTransferToGuest) (*types.InitiateFileTransferToGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InitiateFileTransferToGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InstallHostPatchV2_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InstallHostPatchV2_Task         `xml:"urn:vim25 InstallHostPatchV2_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InstallHostPatchV2_TaskResponse `xml:"urn:vim25 InstallHostPatchV2_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InstallHostPatchV2_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InstallHostPatchV2_Task(ctx context.Context, r soap.RoundTripper, req *types.InstallHostPatchV2_Task) (*types.InstallHostPatchV2_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InstallHostPatchV2_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InstallHostPatch_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InstallHostPatch_Task         `xml:"urn:vim25 InstallHostPatch_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InstallHostPatch_TaskResponse `xml:"urn:vim25 InstallHostPatch_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InstallHostPatch_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InstallHostPatch_Task(ctx context.Context, r soap.RoundTripper, req *types.InstallHostPatch_Task) (*types.InstallHostPatch_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InstallHostPatch_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InstallIoFilter_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InstallIoFilter_Task         `xml:"urn:vim25 InstallIoFilter_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InstallIoFilter_TaskResponse `xml:"urn:vim25 InstallIoFilter_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InstallIoFilter_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InstallIoFilter_Task(ctx context.Context, r soap.RoundTripper, req *types.InstallIoFilter_Task) (*types.InstallIoFilter_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InstallIoFilter_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InstallServerCertificateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InstallServerCertificate         `xml:"urn:vim25 InstallServerCertificate,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InstallServerCertificateResponse `xml:"urn:vim25 InstallServerCertificateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InstallServerCertificateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InstallServerCertificate(ctx context.Context, r soap.RoundTripper, req *types.InstallServerCertificate) (*types.InstallServerCertificateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InstallServerCertificateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InstallSmartCardTrustAnchorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.InstallSmartCardTrustAnchor         `xml:"urn:vim25 InstallSmartCardTrustAnchor,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.InstallSmartCardTrustAnchorResponse `xml:"urn:vim25 InstallSmartCardTrustAnchorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *InstallSmartCardTrustAnchorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InstallSmartCardTrustAnchor(ctx context.Context, r soap.RoundTripper, req *types.InstallSmartCardTrustAnchor) (*types.InstallSmartCardTrustAnchorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody InstallSmartCardTrustAnchorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type IsSharedGraphicsActiveBody struct {
0000000000000000000000000000000000000000;;		Req    *types.IsSharedGraphicsActive         `xml:"urn:vim25 IsSharedGraphicsActive,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.IsSharedGraphicsActiveResponse `xml:"urn:vim25 IsSharedGraphicsActiveResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *IsSharedGraphicsActiveBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func IsSharedGraphicsActive(ctx context.Context, r soap.RoundTripper, req *types.IsSharedGraphicsActive) (*types.IsSharedGraphicsActiveResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody IsSharedGraphicsActiveBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type JoinDomainWithCAM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.JoinDomainWithCAM_Task         `xml:"urn:vim25 JoinDomainWithCAM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.JoinDomainWithCAM_TaskResponse `xml:"urn:vim25 JoinDomainWithCAM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *JoinDomainWithCAM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func JoinDomainWithCAM_Task(ctx context.Context, r soap.RoundTripper, req *types.JoinDomainWithCAM_Task) (*types.JoinDomainWithCAM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody JoinDomainWithCAM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type JoinDomain_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.JoinDomain_Task         `xml:"urn:vim25 JoinDomain_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.JoinDomain_TaskResponse `xml:"urn:vim25 JoinDomain_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *JoinDomain_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func JoinDomain_Task(ctx context.Context, r soap.RoundTripper, req *types.JoinDomain_Task) (*types.JoinDomain_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody JoinDomain_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LeaveCurrentDomain_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.LeaveCurrentDomain_Task         `xml:"urn:vim25 LeaveCurrentDomain_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LeaveCurrentDomain_TaskResponse `xml:"urn:vim25 LeaveCurrentDomain_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LeaveCurrentDomain_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func LeaveCurrentDomain_Task(ctx context.Context, r soap.RoundTripper, req *types.LeaveCurrentDomain_Task) (*types.LeaveCurrentDomain_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LeaveCurrentDomain_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListCACertificateRevocationListsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListCACertificateRevocationLists         `xml:"urn:vim25 ListCACertificateRevocationLists,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListCACertificateRevocationListsResponse `xml:"urn:vim25 ListCACertificateRevocationListsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListCACertificateRevocationListsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListCACertificateRevocationLists(ctx context.Context, r soap.RoundTripper, req *types.ListCACertificateRevocationLists) (*types.ListCACertificateRevocationListsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListCACertificateRevocationListsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListCACertificatesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListCACertificates         `xml:"urn:vim25 ListCACertificates,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListCACertificatesResponse `xml:"urn:vim25 ListCACertificatesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListCACertificatesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListCACertificates(ctx context.Context, r soap.RoundTripper, req *types.ListCACertificates) (*types.ListCACertificatesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListCACertificatesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListFilesInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListFilesInGuest         `xml:"urn:vim25 ListFilesInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListFilesInGuestResponse `xml:"urn:vim25 ListFilesInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListFilesInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListFilesInGuest(ctx context.Context, r soap.RoundTripper, req *types.ListFilesInGuest) (*types.ListFilesInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListFilesInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListGuestAliasesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListGuestAliases         `xml:"urn:vim25 ListGuestAliases,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListGuestAliasesResponse `xml:"urn:vim25 ListGuestAliasesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListGuestAliasesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListGuestAliases(ctx context.Context, r soap.RoundTripper, req *types.ListGuestAliases) (*types.ListGuestAliasesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListGuestAliasesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListGuestMappedAliasesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListGuestMappedAliases         `xml:"urn:vim25 ListGuestMappedAliases,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListGuestMappedAliasesResponse `xml:"urn:vim25 ListGuestMappedAliasesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListGuestMappedAliasesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListGuestMappedAliases(ctx context.Context, r soap.RoundTripper, req *types.ListGuestMappedAliases) (*types.ListGuestMappedAliasesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListGuestMappedAliasesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListKeysBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListKeys         `xml:"urn:vim25 ListKeys,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListKeysResponse `xml:"urn:vim25 ListKeysResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListKeysBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListKeys(ctx context.Context, r soap.RoundTripper, req *types.ListKeys) (*types.ListKeysResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListKeysBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListKmipServersBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListKmipServers         `xml:"urn:vim25 ListKmipServers,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListKmipServersResponse `xml:"urn:vim25 ListKmipServersResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListKmipServersBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListKmipServers(ctx context.Context, r soap.RoundTripper, req *types.ListKmipServers) (*types.ListKmipServersResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListKmipServersBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListProcessesInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListProcessesInGuest         `xml:"urn:vim25 ListProcessesInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListProcessesInGuestResponse `xml:"urn:vim25 ListProcessesInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListProcessesInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListProcessesInGuest(ctx context.Context, r soap.RoundTripper, req *types.ListProcessesInGuest) (*types.ListProcessesInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListProcessesInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListRegistryKeysInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListRegistryKeysInGuest         `xml:"urn:vim25 ListRegistryKeysInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListRegistryKeysInGuestResponse `xml:"urn:vim25 ListRegistryKeysInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListRegistryKeysInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListRegistryKeysInGuest(ctx context.Context, r soap.RoundTripper, req *types.ListRegistryKeysInGuest) (*types.ListRegistryKeysInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListRegistryKeysInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListRegistryValuesInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListRegistryValuesInGuest         `xml:"urn:vim25 ListRegistryValuesInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListRegistryValuesInGuestResponse `xml:"urn:vim25 ListRegistryValuesInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListRegistryValuesInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListRegistryValuesInGuest(ctx context.Context, r soap.RoundTripper, req *types.ListRegistryValuesInGuest) (*types.ListRegistryValuesInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListRegistryValuesInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListSmartCardTrustAnchorsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListSmartCardTrustAnchors         `xml:"urn:vim25 ListSmartCardTrustAnchors,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListSmartCardTrustAnchorsResponse `xml:"urn:vim25 ListSmartCardTrustAnchorsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListSmartCardTrustAnchorsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListSmartCardTrustAnchors(ctx context.Context, r soap.RoundTripper, req *types.ListSmartCardTrustAnchors) (*types.ListSmartCardTrustAnchorsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListSmartCardTrustAnchorsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListTagsAttachedToVStorageObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListTagsAttachedToVStorageObject         `xml:"urn:vim25 ListTagsAttachedToVStorageObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListTagsAttachedToVStorageObjectResponse `xml:"urn:vim25 ListTagsAttachedToVStorageObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListTagsAttachedToVStorageObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListTagsAttachedToVStorageObject(ctx context.Context, r soap.RoundTripper, req *types.ListTagsAttachedToVStorageObject) (*types.ListTagsAttachedToVStorageObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListTagsAttachedToVStorageObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListVStorageObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListVStorageObject         `xml:"urn:vim25 ListVStorageObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListVStorageObjectResponse `xml:"urn:vim25 ListVStorageObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListVStorageObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListVStorageObject(ctx context.Context, r soap.RoundTripper, req *types.ListVStorageObject) (*types.ListVStorageObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListVStorageObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ListVStorageObjectsAttachedToTagBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ListVStorageObjectsAttachedToTag         `xml:"urn:vim25 ListVStorageObjectsAttachedToTag,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ListVStorageObjectsAttachedToTagResponse `xml:"urn:vim25 ListVStorageObjectsAttachedToTagResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ListVStorageObjectsAttachedToTagBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ListVStorageObjectsAttachedToTag(ctx context.Context, r soap.RoundTripper, req *types.ListVStorageObjectsAttachedToTag) (*types.ListVStorageObjectsAttachedToTagResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ListVStorageObjectsAttachedToTagBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LogUserEventBody struct {
0000000000000000000000000000000000000000;;		Req    *types.LogUserEvent         `xml:"urn:vim25 LogUserEvent,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LogUserEventResponse `xml:"urn:vim25 LogUserEventResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LogUserEventBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func LogUserEvent(ctx context.Context, r soap.RoundTripper, req *types.LogUserEvent) (*types.LogUserEventResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LogUserEventBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LoginBody struct {
0000000000000000000000000000000000000000;;		Req    *types.Login         `xml:"urn:vim25 Login,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LoginResponse `xml:"urn:vim25 LoginResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LoginBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Login(ctx context.Context, r soap.RoundTripper, req *types.Login) (*types.LoginResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LoginBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LoginBySSPIBody struct {
0000000000000000000000000000000000000000;;		Req    *types.LoginBySSPI         `xml:"urn:vim25 LoginBySSPI,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LoginBySSPIResponse `xml:"urn:vim25 LoginBySSPIResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LoginBySSPIBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func LoginBySSPI(ctx context.Context, r soap.RoundTripper, req *types.LoginBySSPI) (*types.LoginBySSPIResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LoginBySSPIBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LoginByTokenBody struct {
0000000000000000000000000000000000000000;;		Req    *types.LoginByToken         `xml:"urn:vim25 LoginByToken,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LoginByTokenResponse `xml:"urn:vim25 LoginByTokenResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LoginByTokenBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func LoginByToken(ctx context.Context, r soap.RoundTripper, req *types.LoginByToken) (*types.LoginByTokenResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LoginByTokenBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LoginExtensionByCertificateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.LoginExtensionByCertificate         `xml:"urn:vim25 LoginExtensionByCertificate,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LoginExtensionByCertificateResponse `xml:"urn:vim25 LoginExtensionByCertificateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LoginExtensionByCertificateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func LoginExtensionByCertificate(ctx context.Context, r soap.RoundTripper, req *types.LoginExtensionByCertificate) (*types.LoginExtensionByCertificateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LoginExtensionByCertificateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LoginExtensionBySubjectNameBody struct {
0000000000000000000000000000000000000000;;		Req    *types.LoginExtensionBySubjectName         `xml:"urn:vim25 LoginExtensionBySubjectName,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LoginExtensionBySubjectNameResponse `xml:"urn:vim25 LoginExtensionBySubjectNameResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LoginExtensionBySubjectNameBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func LoginExtensionBySubjectName(ctx context.Context, r soap.RoundTripper, req *types.LoginExtensionBySubjectName) (*types.LoginExtensionBySubjectNameResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LoginExtensionBySubjectNameBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LogoutBody struct {
0000000000000000000000000000000000000000;;		Req    *types.Logout         `xml:"urn:vim25 Logout,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LogoutResponse `xml:"urn:vim25 LogoutResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LogoutBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Logout(ctx context.Context, r soap.RoundTripper, req *types.Logout) (*types.LogoutResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LogoutBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LookupDvPortGroupBody struct {
0000000000000000000000000000000000000000;;		Req    *types.LookupDvPortGroup         `xml:"urn:vim25 LookupDvPortGroup,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LookupDvPortGroupResponse `xml:"urn:vim25 LookupDvPortGroupResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LookupDvPortGroupBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func LookupDvPortGroup(ctx context.Context, r soap.RoundTripper, req *types.LookupDvPortGroup) (*types.LookupDvPortGroupResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LookupDvPortGroupBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LookupVmOverheadMemoryBody struct {
0000000000000000000000000000000000000000;;		Req    *types.LookupVmOverheadMemory         `xml:"urn:vim25 LookupVmOverheadMemory,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.LookupVmOverheadMemoryResponse `xml:"urn:vim25 LookupVmOverheadMemoryResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *LookupVmOverheadMemoryBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func LookupVmOverheadMemory(ctx context.Context, r soap.RoundTripper, req *types.LookupVmOverheadMemory) (*types.LookupVmOverheadMemoryResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody LookupVmOverheadMemoryBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MakeDirectoryBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MakeDirectory         `xml:"urn:vim25 MakeDirectory,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MakeDirectoryResponse `xml:"urn:vim25 MakeDirectoryResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MakeDirectoryBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MakeDirectory(ctx context.Context, r soap.RoundTripper, req *types.MakeDirectory) (*types.MakeDirectoryResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MakeDirectoryBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MakeDirectoryInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MakeDirectoryInGuest         `xml:"urn:vim25 MakeDirectoryInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MakeDirectoryInGuestResponse `xml:"urn:vim25 MakeDirectoryInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MakeDirectoryInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MakeDirectoryInGuest(ctx context.Context, r soap.RoundTripper, req *types.MakeDirectoryInGuest) (*types.MakeDirectoryInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MakeDirectoryInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MakePrimaryVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MakePrimaryVM_Task         `xml:"urn:vim25 MakePrimaryVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MakePrimaryVM_TaskResponse `xml:"urn:vim25 MakePrimaryVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MakePrimaryVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MakePrimaryVM_Task(ctx context.Context, r soap.RoundTripper, req *types.MakePrimaryVM_Task) (*types.MakePrimaryVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MakePrimaryVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MarkAsLocal_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MarkAsLocal_Task         `xml:"urn:vim25 MarkAsLocal_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MarkAsLocal_TaskResponse `xml:"urn:vim25 MarkAsLocal_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MarkAsLocal_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MarkAsLocal_Task(ctx context.Context, r soap.RoundTripper, req *types.MarkAsLocal_Task) (*types.MarkAsLocal_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MarkAsLocal_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MarkAsNonLocal_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MarkAsNonLocal_Task         `xml:"urn:vim25 MarkAsNonLocal_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MarkAsNonLocal_TaskResponse `xml:"urn:vim25 MarkAsNonLocal_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MarkAsNonLocal_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MarkAsNonLocal_Task(ctx context.Context, r soap.RoundTripper, req *types.MarkAsNonLocal_Task) (*types.MarkAsNonLocal_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MarkAsNonLocal_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MarkAsNonSsd_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MarkAsNonSsd_Task         `xml:"urn:vim25 MarkAsNonSsd_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MarkAsNonSsd_TaskResponse `xml:"urn:vim25 MarkAsNonSsd_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MarkAsNonSsd_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MarkAsNonSsd_Task(ctx context.Context, r soap.RoundTripper, req *types.MarkAsNonSsd_Task) (*types.MarkAsNonSsd_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MarkAsNonSsd_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MarkAsSsd_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MarkAsSsd_Task         `xml:"urn:vim25 MarkAsSsd_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MarkAsSsd_TaskResponse `xml:"urn:vim25 MarkAsSsd_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MarkAsSsd_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MarkAsSsd_Task(ctx context.Context, r soap.RoundTripper, req *types.MarkAsSsd_Task) (*types.MarkAsSsd_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MarkAsSsd_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MarkAsTemplateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MarkAsTemplate         `xml:"urn:vim25 MarkAsTemplate,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MarkAsTemplateResponse `xml:"urn:vim25 MarkAsTemplateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MarkAsTemplateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MarkAsTemplate(ctx context.Context, r soap.RoundTripper, req *types.MarkAsTemplate) (*types.MarkAsTemplateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MarkAsTemplateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MarkAsVirtualMachineBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MarkAsVirtualMachine         `xml:"urn:vim25 MarkAsVirtualMachine,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MarkAsVirtualMachineResponse `xml:"urn:vim25 MarkAsVirtualMachineResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MarkAsVirtualMachineBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MarkAsVirtualMachine(ctx context.Context, r soap.RoundTripper, req *types.MarkAsVirtualMachine) (*types.MarkAsVirtualMachineResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MarkAsVirtualMachineBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MarkDefaultBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MarkDefault         `xml:"urn:vim25 MarkDefault,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MarkDefaultResponse `xml:"urn:vim25 MarkDefaultResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MarkDefaultBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MarkDefault(ctx context.Context, r soap.RoundTripper, req *types.MarkDefault) (*types.MarkDefaultResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MarkDefaultBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MarkForRemovalBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MarkForRemoval         `xml:"urn:vim25 MarkForRemoval,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MarkForRemovalResponse `xml:"urn:vim25 MarkForRemovalResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MarkForRemovalBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MarkForRemoval(ctx context.Context, r soap.RoundTripper, req *types.MarkForRemoval) (*types.MarkForRemovalResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MarkForRemovalBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MergeDvs_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MergeDvs_Task         `xml:"urn:vim25 MergeDvs_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MergeDvs_TaskResponse `xml:"urn:vim25 MergeDvs_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MergeDvs_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MergeDvs_Task(ctx context.Context, r soap.RoundTripper, req *types.MergeDvs_Task) (*types.MergeDvs_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MergeDvs_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MergePermissionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MergePermissions         `xml:"urn:vim25 MergePermissions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MergePermissionsResponse `xml:"urn:vim25 MergePermissionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MergePermissionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MergePermissions(ctx context.Context, r soap.RoundTripper, req *types.MergePermissions) (*types.MergePermissionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MergePermissionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MigrateVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MigrateVM_Task         `xml:"urn:vim25 MigrateVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MigrateVM_TaskResponse `xml:"urn:vim25 MigrateVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MigrateVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MigrateVM_Task(ctx context.Context, r soap.RoundTripper, req *types.MigrateVM_Task) (*types.MigrateVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MigrateVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ModifyListViewBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ModifyListView         `xml:"urn:vim25 ModifyListView,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ModifyListViewResponse `xml:"urn:vim25 ModifyListViewResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ModifyListViewBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ModifyListView(ctx context.Context, r soap.RoundTripper, req *types.ModifyListView) (*types.ModifyListViewResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ModifyListViewBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MountToolsInstallerBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MountToolsInstaller         `xml:"urn:vim25 MountToolsInstaller,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MountToolsInstallerResponse `xml:"urn:vim25 MountToolsInstallerResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MountToolsInstallerBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MountToolsInstaller(ctx context.Context, r soap.RoundTripper, req *types.MountToolsInstaller) (*types.MountToolsInstallerResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MountToolsInstallerBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MountVffsVolumeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MountVffsVolume         `xml:"urn:vim25 MountVffsVolume,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MountVffsVolumeResponse `xml:"urn:vim25 MountVffsVolumeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MountVffsVolumeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MountVffsVolume(ctx context.Context, r soap.RoundTripper, req *types.MountVffsVolume) (*types.MountVffsVolumeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MountVffsVolumeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MountVmfsVolumeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MountVmfsVolume         `xml:"urn:vim25 MountVmfsVolume,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MountVmfsVolumeResponse `xml:"urn:vim25 MountVmfsVolumeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MountVmfsVolumeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MountVmfsVolume(ctx context.Context, r soap.RoundTripper, req *types.MountVmfsVolume) (*types.MountVmfsVolumeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MountVmfsVolumeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MountVmfsVolumeEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MountVmfsVolumeEx_Task         `xml:"urn:vim25 MountVmfsVolumeEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MountVmfsVolumeEx_TaskResponse `xml:"urn:vim25 MountVmfsVolumeEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MountVmfsVolumeEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MountVmfsVolumeEx_Task(ctx context.Context, r soap.RoundTripper, req *types.MountVmfsVolumeEx_Task) (*types.MountVmfsVolumeEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MountVmfsVolumeEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MoveDVPort_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MoveDVPort_Task         `xml:"urn:vim25 MoveDVPort_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MoveDVPort_TaskResponse `xml:"urn:vim25 MoveDVPort_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MoveDVPort_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MoveDVPort_Task(ctx context.Context, r soap.RoundTripper, req *types.MoveDVPort_Task) (*types.MoveDVPort_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MoveDVPort_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MoveDatastoreFile_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MoveDatastoreFile_Task         `xml:"urn:vim25 MoveDatastoreFile_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MoveDatastoreFile_TaskResponse `xml:"urn:vim25 MoveDatastoreFile_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MoveDatastoreFile_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MoveDatastoreFile_Task(ctx context.Context, r soap.RoundTripper, req *types.MoveDatastoreFile_Task) (*types.MoveDatastoreFile_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MoveDatastoreFile_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MoveDirectoryInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MoveDirectoryInGuest         `xml:"urn:vim25 MoveDirectoryInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MoveDirectoryInGuestResponse `xml:"urn:vim25 MoveDirectoryInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MoveDirectoryInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MoveDirectoryInGuest(ctx context.Context, r soap.RoundTripper, req *types.MoveDirectoryInGuest) (*types.MoveDirectoryInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MoveDirectoryInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MoveFileInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MoveFileInGuest         `xml:"urn:vim25 MoveFileInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MoveFileInGuestResponse `xml:"urn:vim25 MoveFileInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MoveFileInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MoveFileInGuest(ctx context.Context, r soap.RoundTripper, req *types.MoveFileInGuest) (*types.MoveFileInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MoveFileInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MoveHostInto_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MoveHostInto_Task         `xml:"urn:vim25 MoveHostInto_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MoveHostInto_TaskResponse `xml:"urn:vim25 MoveHostInto_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MoveHostInto_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MoveHostInto_Task(ctx context.Context, r soap.RoundTripper, req *types.MoveHostInto_Task) (*types.MoveHostInto_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MoveHostInto_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MoveIntoFolder_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MoveIntoFolder_Task         `xml:"urn:vim25 MoveIntoFolder_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MoveIntoFolder_TaskResponse `xml:"urn:vim25 MoveIntoFolder_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MoveIntoFolder_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MoveIntoFolder_Task(ctx context.Context, r soap.RoundTripper, req *types.MoveIntoFolder_Task) (*types.MoveIntoFolder_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MoveIntoFolder_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MoveIntoResourcePoolBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MoveIntoResourcePool         `xml:"urn:vim25 MoveIntoResourcePool,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MoveIntoResourcePoolResponse `xml:"urn:vim25 MoveIntoResourcePoolResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MoveIntoResourcePoolBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MoveIntoResourcePool(ctx context.Context, r soap.RoundTripper, req *types.MoveIntoResourcePool) (*types.MoveIntoResourcePoolResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MoveIntoResourcePoolBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MoveInto_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MoveInto_Task         `xml:"urn:vim25 MoveInto_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MoveInto_TaskResponse `xml:"urn:vim25 MoveInto_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MoveInto_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MoveInto_Task(ctx context.Context, r soap.RoundTripper, req *types.MoveInto_Task) (*types.MoveInto_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MoveInto_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type MoveVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.MoveVirtualDisk_Task         `xml:"urn:vim25 MoveVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.MoveVirtualDisk_TaskResponse `xml:"urn:vim25 MoveVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *MoveVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func MoveVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.MoveVirtualDisk_Task) (*types.MoveVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody MoveVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type OpenInventoryViewFolderBody struct {
0000000000000000000000000000000000000000;;		Req    *types.OpenInventoryViewFolder         `xml:"urn:vim25 OpenInventoryViewFolder,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.OpenInventoryViewFolderResponse `xml:"urn:vim25 OpenInventoryViewFolderResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *OpenInventoryViewFolderBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func OpenInventoryViewFolder(ctx context.Context, r soap.RoundTripper, req *types.OpenInventoryViewFolder) (*types.OpenInventoryViewFolderResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody OpenInventoryViewFolderBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type OverwriteCustomizationSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.OverwriteCustomizationSpec         `xml:"urn:vim25 OverwriteCustomizationSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.OverwriteCustomizationSpecResponse `xml:"urn:vim25 OverwriteCustomizationSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *OverwriteCustomizationSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func OverwriteCustomizationSpec(ctx context.Context, r soap.RoundTripper, req *types.OverwriteCustomizationSpec) (*types.OverwriteCustomizationSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody OverwriteCustomizationSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ParseDescriptorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ParseDescriptor         `xml:"urn:vim25 ParseDescriptor,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ParseDescriptorResponse `xml:"urn:vim25 ParseDescriptorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ParseDescriptorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ParseDescriptor(ctx context.Context, r soap.RoundTripper, req *types.ParseDescriptor) (*types.ParseDescriptorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ParseDescriptorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PerformDvsProductSpecOperation_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PerformDvsProductSpecOperation_Task         `xml:"urn:vim25 PerformDvsProductSpecOperation_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PerformDvsProductSpecOperation_TaskResponse `xml:"urn:vim25 PerformDvsProductSpecOperation_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PerformDvsProductSpecOperation_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PerformDvsProductSpecOperation_Task(ctx context.Context, r soap.RoundTripper, req *types.PerformDvsProductSpecOperation_Task) (*types.PerformDvsProductSpecOperation_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PerformDvsProductSpecOperation_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PerformVsanUpgradePreflightCheckBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PerformVsanUpgradePreflightCheck         `xml:"urn:vim25 PerformVsanUpgradePreflightCheck,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PerformVsanUpgradePreflightCheckResponse `xml:"urn:vim25 PerformVsanUpgradePreflightCheckResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PerformVsanUpgradePreflightCheckBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PerformVsanUpgradePreflightCheck(ctx context.Context, r soap.RoundTripper, req *types.PerformVsanUpgradePreflightCheck) (*types.PerformVsanUpgradePreflightCheckResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PerformVsanUpgradePreflightCheckBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PerformVsanUpgrade_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PerformVsanUpgrade_Task         `xml:"urn:vim25 PerformVsanUpgrade_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PerformVsanUpgrade_TaskResponse `xml:"urn:vim25 PerformVsanUpgrade_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PerformVsanUpgrade_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PerformVsanUpgrade_Task(ctx context.Context, r soap.RoundTripper, req *types.PerformVsanUpgrade_Task) (*types.PerformVsanUpgrade_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PerformVsanUpgrade_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PlaceVmBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PlaceVm         `xml:"urn:vim25 PlaceVm,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PlaceVmResponse `xml:"urn:vim25 PlaceVmResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PlaceVmBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PlaceVm(ctx context.Context, r soap.RoundTripper, req *types.PlaceVm) (*types.PlaceVmResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PlaceVmBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PostEventBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PostEvent         `xml:"urn:vim25 PostEvent,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PostEventResponse `xml:"urn:vim25 PostEventResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PostEventBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PostEvent(ctx context.Context, r soap.RoundTripper, req *types.PostEvent) (*types.PostEventResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PostEventBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PostHealthUpdatesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PostHealthUpdates         `xml:"urn:vim25 PostHealthUpdates,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PostHealthUpdatesResponse `xml:"urn:vim25 PostHealthUpdatesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PostHealthUpdatesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PostHealthUpdates(ctx context.Context, r soap.RoundTripper, req *types.PostHealthUpdates) (*types.PostHealthUpdatesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PostHealthUpdatesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PowerDownHostToStandBy_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PowerDownHostToStandBy_Task         `xml:"urn:vim25 PowerDownHostToStandBy_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PowerDownHostToStandBy_TaskResponse `xml:"urn:vim25 PowerDownHostToStandBy_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PowerDownHostToStandBy_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PowerDownHostToStandBy_Task(ctx context.Context, r soap.RoundTripper, req *types.PowerDownHostToStandBy_Task) (*types.PowerDownHostToStandBy_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PowerDownHostToStandBy_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PowerOffVApp_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PowerOffVApp_Task         `xml:"urn:vim25 PowerOffVApp_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PowerOffVApp_TaskResponse `xml:"urn:vim25 PowerOffVApp_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PowerOffVApp_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PowerOffVApp_Task(ctx context.Context, r soap.RoundTripper, req *types.PowerOffVApp_Task) (*types.PowerOffVApp_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PowerOffVApp_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PowerOffVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PowerOffVM_Task         `xml:"urn:vim25 PowerOffVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PowerOffVM_TaskResponse `xml:"urn:vim25 PowerOffVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PowerOffVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PowerOffVM_Task(ctx context.Context, r soap.RoundTripper, req *types.PowerOffVM_Task) (*types.PowerOffVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PowerOffVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PowerOnMultiVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PowerOnMultiVM_Task         `xml:"urn:vim25 PowerOnMultiVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PowerOnMultiVM_TaskResponse `xml:"urn:vim25 PowerOnMultiVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PowerOnMultiVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PowerOnMultiVM_Task(ctx context.Context, r soap.RoundTripper, req *types.PowerOnMultiVM_Task) (*types.PowerOnMultiVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PowerOnMultiVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PowerOnVApp_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PowerOnVApp_Task         `xml:"urn:vim25 PowerOnVApp_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PowerOnVApp_TaskResponse `xml:"urn:vim25 PowerOnVApp_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PowerOnVApp_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PowerOnVApp_Task(ctx context.Context, r soap.RoundTripper, req *types.PowerOnVApp_Task) (*types.PowerOnVApp_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PowerOnVApp_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PowerOnVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PowerOnVM_Task         `xml:"urn:vim25 PowerOnVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PowerOnVM_TaskResponse `xml:"urn:vim25 PowerOnVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PowerOnVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PowerOnVM_Task(ctx context.Context, r soap.RoundTripper, req *types.PowerOnVM_Task) (*types.PowerOnVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PowerOnVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PowerUpHostFromStandBy_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PowerUpHostFromStandBy_Task         `xml:"urn:vim25 PowerUpHostFromStandBy_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PowerUpHostFromStandBy_TaskResponse `xml:"urn:vim25 PowerUpHostFromStandBy_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PowerUpHostFromStandBy_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PowerUpHostFromStandBy_Task(ctx context.Context, r soap.RoundTripper, req *types.PowerUpHostFromStandBy_Task) (*types.PowerUpHostFromStandBy_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PowerUpHostFromStandBy_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PrepareCryptoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PrepareCrypto         `xml:"urn:vim25 PrepareCrypto,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PrepareCryptoResponse `xml:"urn:vim25 PrepareCryptoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PrepareCryptoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PrepareCrypto(ctx context.Context, r soap.RoundTripper, req *types.PrepareCrypto) (*types.PrepareCryptoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PrepareCryptoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PromoteDisks_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PromoteDisks_Task         `xml:"urn:vim25 PromoteDisks_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PromoteDisks_TaskResponse `xml:"urn:vim25 PromoteDisks_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PromoteDisks_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PromoteDisks_Task(ctx context.Context, r soap.RoundTripper, req *types.PromoteDisks_Task) (*types.PromoteDisks_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PromoteDisks_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PutUsbScanCodesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.PutUsbScanCodes         `xml:"urn:vim25 PutUsbScanCodes,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.PutUsbScanCodesResponse `xml:"urn:vim25 PutUsbScanCodesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *PutUsbScanCodesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func PutUsbScanCodes(ctx context.Context, r soap.RoundTripper, req *types.PutUsbScanCodes) (*types.PutUsbScanCodesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody PutUsbScanCodesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryAnswerFileStatusBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryAnswerFileStatus         `xml:"urn:vim25 QueryAnswerFileStatus,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryAnswerFileStatusResponse `xml:"urn:vim25 QueryAnswerFileStatusResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryAnswerFileStatusBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryAnswerFileStatus(ctx context.Context, r soap.RoundTripper, req *types.QueryAnswerFileStatus) (*types.QueryAnswerFileStatusResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryAnswerFileStatusBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryAssignedLicensesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryAssignedLicenses         `xml:"urn:vim25 QueryAssignedLicenses,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryAssignedLicensesResponse `xml:"urn:vim25 QueryAssignedLicensesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryAssignedLicensesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryAssignedLicenses(ctx context.Context, r soap.RoundTripper, req *types.QueryAssignedLicenses) (*types.QueryAssignedLicensesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryAssignedLicensesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryAvailableDisksForVmfsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryAvailableDisksForVmfs         `xml:"urn:vim25 QueryAvailableDisksForVmfs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryAvailableDisksForVmfsResponse `xml:"urn:vim25 QueryAvailableDisksForVmfsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryAvailableDisksForVmfsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryAvailableDisksForVmfs(ctx context.Context, r soap.RoundTripper, req *types.QueryAvailableDisksForVmfs) (*types.QueryAvailableDisksForVmfsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryAvailableDisksForVmfsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryAvailableDvsSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryAvailableDvsSpec         `xml:"urn:vim25 QueryAvailableDvsSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryAvailableDvsSpecResponse `xml:"urn:vim25 QueryAvailableDvsSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryAvailableDvsSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryAvailableDvsSpec(ctx context.Context, r soap.RoundTripper, req *types.QueryAvailableDvsSpec) (*types.QueryAvailableDvsSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryAvailableDvsSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryAvailablePartitionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryAvailablePartition         `xml:"urn:vim25 QueryAvailablePartition,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryAvailablePartitionResponse `xml:"urn:vim25 QueryAvailablePartitionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryAvailablePartitionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryAvailablePartition(ctx context.Context, r soap.RoundTripper, req *types.QueryAvailablePartition) (*types.QueryAvailablePartitionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryAvailablePartitionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryAvailablePerfMetricBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryAvailablePerfMetric         `xml:"urn:vim25 QueryAvailablePerfMetric,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryAvailablePerfMetricResponse `xml:"urn:vim25 QueryAvailablePerfMetricResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryAvailablePerfMetricBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryAvailablePerfMetric(ctx context.Context, r soap.RoundTripper, req *types.QueryAvailablePerfMetric) (*types.QueryAvailablePerfMetricResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryAvailablePerfMetricBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryAvailableSsdsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryAvailableSsds         `xml:"urn:vim25 QueryAvailableSsds,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryAvailableSsdsResponse `xml:"urn:vim25 QueryAvailableSsdsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryAvailableSsdsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryAvailableSsds(ctx context.Context, r soap.RoundTripper, req *types.QueryAvailableSsds) (*types.QueryAvailableSsdsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryAvailableSsdsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryAvailableTimeZonesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryAvailableTimeZones         `xml:"urn:vim25 QueryAvailableTimeZones,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryAvailableTimeZonesResponse `xml:"urn:vim25 QueryAvailableTimeZonesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryAvailableTimeZonesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryAvailableTimeZones(ctx context.Context, r soap.RoundTripper, req *types.QueryAvailableTimeZones) (*types.QueryAvailableTimeZonesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryAvailableTimeZonesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryBootDevicesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryBootDevices         `xml:"urn:vim25 QueryBootDevices,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryBootDevicesResponse `xml:"urn:vim25 QueryBootDevicesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryBootDevicesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryBootDevices(ctx context.Context, r soap.RoundTripper, req *types.QueryBootDevices) (*types.QueryBootDevicesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryBootDevicesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryBoundVnicsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryBoundVnics         `xml:"urn:vim25 QueryBoundVnics,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryBoundVnicsResponse `xml:"urn:vim25 QueryBoundVnicsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryBoundVnicsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryBoundVnics(ctx context.Context, r soap.RoundTripper, req *types.QueryBoundVnics) (*types.QueryBoundVnicsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryBoundVnicsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryCandidateNicsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryCandidateNics         `xml:"urn:vim25 QueryCandidateNics,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryCandidateNicsResponse `xml:"urn:vim25 QueryCandidateNicsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryCandidateNicsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryCandidateNics(ctx context.Context, r soap.RoundTripper, req *types.QueryCandidateNics) (*types.QueryCandidateNicsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryCandidateNicsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryChangedDiskAreasBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryChangedDiskAreas         `xml:"urn:vim25 QueryChangedDiskAreas,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryChangedDiskAreasResponse `xml:"urn:vim25 QueryChangedDiskAreasResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryChangedDiskAreasBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryChangedDiskAreas(ctx context.Context, r soap.RoundTripper, req *types.QueryChangedDiskAreas) (*types.QueryChangedDiskAreasResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryChangedDiskAreasBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryCmmdsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryCmmds         `xml:"urn:vim25 QueryCmmds,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryCmmdsResponse `xml:"urn:vim25 QueryCmmdsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryCmmdsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryCmmds(ctx context.Context, r soap.RoundTripper, req *types.QueryCmmds) (*types.QueryCmmdsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryCmmdsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryCompatibleHostForExistingDvsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryCompatibleHostForExistingDvs         `xml:"urn:vim25 QueryCompatibleHostForExistingDvs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryCompatibleHostForExistingDvsResponse `xml:"urn:vim25 QueryCompatibleHostForExistingDvsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryCompatibleHostForExistingDvsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryCompatibleHostForExistingDvs(ctx context.Context, r soap.RoundTripper, req *types.QueryCompatibleHostForExistingDvs) (*types.QueryCompatibleHostForExistingDvsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryCompatibleHostForExistingDvsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryCompatibleHostForNewDvsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryCompatibleHostForNewDvs         `xml:"urn:vim25 QueryCompatibleHostForNewDvs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryCompatibleHostForNewDvsResponse `xml:"urn:vim25 QueryCompatibleHostForNewDvsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryCompatibleHostForNewDvsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryCompatibleHostForNewDvs(ctx context.Context, r soap.RoundTripper, req *types.QueryCompatibleHostForNewDvs) (*types.QueryCompatibleHostForNewDvsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryCompatibleHostForNewDvsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryComplianceStatusBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryComplianceStatus         `xml:"urn:vim25 QueryComplianceStatus,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryComplianceStatusResponse `xml:"urn:vim25 QueryComplianceStatusResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryComplianceStatusBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryComplianceStatus(ctx context.Context, r soap.RoundTripper, req *types.QueryComplianceStatus) (*types.QueryComplianceStatusResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryComplianceStatusBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryConfigOptionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryConfigOption         `xml:"urn:vim25 QueryConfigOption,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryConfigOptionResponse `xml:"urn:vim25 QueryConfigOptionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryConfigOptionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryConfigOption(ctx context.Context, r soap.RoundTripper, req *types.QueryConfigOption) (*types.QueryConfigOptionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryConfigOptionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryConfigOptionDescriptorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryConfigOptionDescriptor         `xml:"urn:vim25 QueryConfigOptionDescriptor,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryConfigOptionDescriptorResponse `xml:"urn:vim25 QueryConfigOptionDescriptorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryConfigOptionDescriptorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryConfigOptionDescriptor(ctx context.Context, r soap.RoundTripper, req *types.QueryConfigOptionDescriptor) (*types.QueryConfigOptionDescriptorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryConfigOptionDescriptorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryConfigOptionExBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryConfigOptionEx         `xml:"urn:vim25 QueryConfigOptionEx,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryConfigOptionExResponse `xml:"urn:vim25 QueryConfigOptionExResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryConfigOptionExBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryConfigOptionEx(ctx context.Context, r soap.RoundTripper, req *types.QueryConfigOptionEx) (*types.QueryConfigOptionExResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryConfigOptionExBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryConfigTargetBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryConfigTarget         `xml:"urn:vim25 QueryConfigTarget,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryConfigTargetResponse `xml:"urn:vim25 QueryConfigTargetResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryConfigTargetBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryConfigTarget(ctx context.Context, r soap.RoundTripper, req *types.QueryConfigTarget) (*types.QueryConfigTargetResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryConfigTargetBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryConfiguredModuleOptionStringBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryConfiguredModuleOptionString         `xml:"urn:vim25 QueryConfiguredModuleOptionString,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryConfiguredModuleOptionStringResponse `xml:"urn:vim25 QueryConfiguredModuleOptionStringResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryConfiguredModuleOptionStringBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryConfiguredModuleOptionString(ctx context.Context, r soap.RoundTripper, req *types.QueryConfiguredModuleOptionString) (*types.QueryConfiguredModuleOptionStringResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryConfiguredModuleOptionStringBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryConnectionInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryConnectionInfo         `xml:"urn:vim25 QueryConnectionInfo,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryConnectionInfoResponse `xml:"urn:vim25 QueryConnectionInfoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryConnectionInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryConnectionInfo(ctx context.Context, r soap.RoundTripper, req *types.QueryConnectionInfo) (*types.QueryConnectionInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryConnectionInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryConnectionInfoViaSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryConnectionInfoViaSpec         `xml:"urn:vim25 QueryConnectionInfoViaSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryConnectionInfoViaSpecResponse `xml:"urn:vim25 QueryConnectionInfoViaSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryConnectionInfoViaSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryConnectionInfoViaSpec(ctx context.Context, r soap.RoundTripper, req *types.QueryConnectionInfoViaSpec) (*types.QueryConnectionInfoViaSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryConnectionInfoViaSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDatastorePerformanceSummaryBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDatastorePerformanceSummary         `xml:"urn:vim25 QueryDatastorePerformanceSummary,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDatastorePerformanceSummaryResponse `xml:"urn:vim25 QueryDatastorePerformanceSummaryResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDatastorePerformanceSummaryBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDatastorePerformanceSummary(ctx context.Context, r soap.RoundTripper, req *types.QueryDatastorePerformanceSummary) (*types.QueryDatastorePerformanceSummaryResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDatastorePerformanceSummaryBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDateTimeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDateTime         `xml:"urn:vim25 QueryDateTime,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDateTimeResponse `xml:"urn:vim25 QueryDateTimeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDateTimeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDateTime(ctx context.Context, r soap.RoundTripper, req *types.QueryDateTime) (*types.QueryDateTimeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDateTimeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDescriptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDescriptions         `xml:"urn:vim25 QueryDescriptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDescriptionsResponse `xml:"urn:vim25 QueryDescriptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDescriptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDescriptions(ctx context.Context, r soap.RoundTripper, req *types.QueryDescriptions) (*types.QueryDescriptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDescriptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDisksForVsanBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDisksForVsan         `xml:"urn:vim25 QueryDisksForVsan,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDisksForVsanResponse `xml:"urn:vim25 QueryDisksForVsanResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDisksForVsanBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDisksForVsan(ctx context.Context, r soap.RoundTripper, req *types.QueryDisksForVsan) (*types.QueryDisksForVsanResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDisksForVsanBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDisksUsingFilterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDisksUsingFilter         `xml:"urn:vim25 QueryDisksUsingFilter,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDisksUsingFilterResponse `xml:"urn:vim25 QueryDisksUsingFilterResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDisksUsingFilterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDisksUsingFilter(ctx context.Context, r soap.RoundTripper, req *types.QueryDisksUsingFilter) (*types.QueryDisksUsingFilterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDisksUsingFilterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDvsByUuidBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDvsByUuid         `xml:"urn:vim25 QueryDvsByUuid,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDvsByUuidResponse `xml:"urn:vim25 QueryDvsByUuidResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDvsByUuidBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDvsByUuid(ctx context.Context, r soap.RoundTripper, req *types.QueryDvsByUuid) (*types.QueryDvsByUuidResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDvsByUuidBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDvsCheckCompatibilityBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDvsCheckCompatibility         `xml:"urn:vim25 QueryDvsCheckCompatibility,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDvsCheckCompatibilityResponse `xml:"urn:vim25 QueryDvsCheckCompatibilityResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDvsCheckCompatibilityBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDvsCheckCompatibility(ctx context.Context, r soap.RoundTripper, req *types.QueryDvsCheckCompatibility) (*types.QueryDvsCheckCompatibilityResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDvsCheckCompatibilityBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDvsCompatibleHostSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDvsCompatibleHostSpec         `xml:"urn:vim25 QueryDvsCompatibleHostSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDvsCompatibleHostSpecResponse `xml:"urn:vim25 QueryDvsCompatibleHostSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDvsCompatibleHostSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDvsCompatibleHostSpec(ctx context.Context, r soap.RoundTripper, req *types.QueryDvsCompatibleHostSpec) (*types.QueryDvsCompatibleHostSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDvsCompatibleHostSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDvsConfigTargetBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDvsConfigTarget         `xml:"urn:vim25 QueryDvsConfigTarget,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDvsConfigTargetResponse `xml:"urn:vim25 QueryDvsConfigTargetResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDvsConfigTargetBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDvsConfigTarget(ctx context.Context, r soap.RoundTripper, req *types.QueryDvsConfigTarget) (*types.QueryDvsConfigTargetResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDvsConfigTargetBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryDvsFeatureCapabilityBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryDvsFeatureCapability         `xml:"urn:vim25 QueryDvsFeatureCapability,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryDvsFeatureCapabilityResponse `xml:"urn:vim25 QueryDvsFeatureCapabilityResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryDvsFeatureCapabilityBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryDvsFeatureCapability(ctx context.Context, r soap.RoundTripper, req *types.QueryDvsFeatureCapability) (*types.QueryDvsFeatureCapabilityResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryDvsFeatureCapabilityBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryEventsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryEvents         `xml:"urn:vim25 QueryEvents,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryEventsResponse `xml:"urn:vim25 QueryEventsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryEventsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryEvents(ctx context.Context, r soap.RoundTripper, req *types.QueryEvents) (*types.QueryEventsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryEventsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryExpressionMetadataBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryExpressionMetadata         `xml:"urn:vim25 QueryExpressionMetadata,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryExpressionMetadataResponse `xml:"urn:vim25 QueryExpressionMetadataResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryExpressionMetadataBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryExpressionMetadata(ctx context.Context, r soap.RoundTripper, req *types.QueryExpressionMetadata) (*types.QueryExpressionMetadataResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryExpressionMetadataBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryExtensionIpAllocationUsageBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryExtensionIpAllocationUsage         `xml:"urn:vim25 QueryExtensionIpAllocationUsage,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryExtensionIpAllocationUsageResponse `xml:"urn:vim25 QueryExtensionIpAllocationUsageResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryExtensionIpAllocationUsageBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryExtensionIpAllocationUsage(ctx context.Context, r soap.RoundTripper, req *types.QueryExtensionIpAllocationUsage) (*types.QueryExtensionIpAllocationUsageResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryExtensionIpAllocationUsageBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryFaultToleranceCompatibilityBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryFaultToleranceCompatibility         `xml:"urn:vim25 QueryFaultToleranceCompatibility,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryFaultToleranceCompatibilityResponse `xml:"urn:vim25 QueryFaultToleranceCompatibilityResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryFaultToleranceCompatibilityBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryFaultToleranceCompatibility(ctx context.Context, r soap.RoundTripper, req *types.QueryFaultToleranceCompatibility) (*types.QueryFaultToleranceCompatibilityResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryFaultToleranceCompatibilityBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryFaultToleranceCompatibilityExBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryFaultToleranceCompatibilityEx         `xml:"urn:vim25 QueryFaultToleranceCompatibilityEx,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryFaultToleranceCompatibilityExResponse `xml:"urn:vim25 QueryFaultToleranceCompatibilityExResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryFaultToleranceCompatibilityExBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryFaultToleranceCompatibilityEx(ctx context.Context, r soap.RoundTripper, req *types.QueryFaultToleranceCompatibilityEx) (*types.QueryFaultToleranceCompatibilityExResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryFaultToleranceCompatibilityExBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryFilterEntitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryFilterEntities         `xml:"urn:vim25 QueryFilterEntities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryFilterEntitiesResponse `xml:"urn:vim25 QueryFilterEntitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryFilterEntitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryFilterEntities(ctx context.Context, r soap.RoundTripper, req *types.QueryFilterEntities) (*types.QueryFilterEntitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryFilterEntitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryFilterInfoIdsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryFilterInfoIds         `xml:"urn:vim25 QueryFilterInfoIds,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryFilterInfoIdsResponse `xml:"urn:vim25 QueryFilterInfoIdsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryFilterInfoIdsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryFilterInfoIds(ctx context.Context, r soap.RoundTripper, req *types.QueryFilterInfoIds) (*types.QueryFilterInfoIdsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryFilterInfoIdsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryFilterListBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryFilterList         `xml:"urn:vim25 QueryFilterList,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryFilterListResponse `xml:"urn:vim25 QueryFilterListResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryFilterListBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryFilterList(ctx context.Context, r soap.RoundTripper, req *types.QueryFilterList) (*types.QueryFilterListResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryFilterListBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryFilterNameBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryFilterName         `xml:"urn:vim25 QueryFilterName,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryFilterNameResponse `xml:"urn:vim25 QueryFilterNameResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryFilterNameBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryFilterName(ctx context.Context, r soap.RoundTripper, req *types.QueryFilterName) (*types.QueryFilterNameResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryFilterNameBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryFirmwareConfigUploadURLBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryFirmwareConfigUploadURL         `xml:"urn:vim25 QueryFirmwareConfigUploadURL,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryFirmwareConfigUploadURLResponse `xml:"urn:vim25 QueryFirmwareConfigUploadURLResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryFirmwareConfigUploadURLBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryFirmwareConfigUploadURL(ctx context.Context, r soap.RoundTripper, req *types.QueryFirmwareConfigUploadURL) (*types.QueryFirmwareConfigUploadURLResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryFirmwareConfigUploadURLBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryHealthUpdateInfosBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryHealthUpdateInfos         `xml:"urn:vim25 QueryHealthUpdateInfos,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryHealthUpdateInfosResponse `xml:"urn:vim25 QueryHealthUpdateInfosResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryHealthUpdateInfosBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryHealthUpdateInfos(ctx context.Context, r soap.RoundTripper, req *types.QueryHealthUpdateInfos) (*types.QueryHealthUpdateInfosResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryHealthUpdateInfosBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryHealthUpdatesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryHealthUpdates         `xml:"urn:vim25 QueryHealthUpdates,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryHealthUpdatesResponse `xml:"urn:vim25 QueryHealthUpdatesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryHealthUpdatesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryHealthUpdates(ctx context.Context, r soap.RoundTripper, req *types.QueryHealthUpdates) (*types.QueryHealthUpdatesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryHealthUpdatesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryHostConnectionInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryHostConnectionInfo         `xml:"urn:vim25 QueryHostConnectionInfo,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryHostConnectionInfoResponse `xml:"urn:vim25 QueryHostConnectionInfoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryHostConnectionInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryHostConnectionInfo(ctx context.Context, r soap.RoundTripper, req *types.QueryHostConnectionInfo) (*types.QueryHostConnectionInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryHostConnectionInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryHostPatch_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryHostPatch_Task         `xml:"urn:vim25 QueryHostPatch_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryHostPatch_TaskResponse `xml:"urn:vim25 QueryHostPatch_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryHostPatch_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryHostPatch_Task(ctx context.Context, r soap.RoundTripper, req *types.QueryHostPatch_Task) (*types.QueryHostPatch_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryHostPatch_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryHostProfileMetadataBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryHostProfileMetadata         `xml:"urn:vim25 QueryHostProfileMetadata,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryHostProfileMetadataResponse `xml:"urn:vim25 QueryHostProfileMetadataResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryHostProfileMetadataBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryHostProfileMetadata(ctx context.Context, r soap.RoundTripper, req *types.QueryHostProfileMetadata) (*types.QueryHostProfileMetadataResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryHostProfileMetadataBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryHostStatusBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryHostStatus         `xml:"urn:vim25 QueryHostStatus,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryHostStatusResponse `xml:"urn:vim25 QueryHostStatusResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryHostStatusBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryHostStatus(ctx context.Context, r soap.RoundTripper, req *types.QueryHostStatus) (*types.QueryHostStatusResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryHostStatusBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryIORMConfigOptionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryIORMConfigOption         `xml:"urn:vim25 QueryIORMConfigOption,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryIORMConfigOptionResponse `xml:"urn:vim25 QueryIORMConfigOptionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryIORMConfigOptionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryIORMConfigOption(ctx context.Context, r soap.RoundTripper, req *types.QueryIORMConfigOption) (*types.QueryIORMConfigOptionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryIORMConfigOptionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryIPAllocationsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryIPAllocations         `xml:"urn:vim25 QueryIPAllocations,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryIPAllocationsResponse `xml:"urn:vim25 QueryIPAllocationsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryIPAllocationsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryIPAllocations(ctx context.Context, r soap.RoundTripper, req *types.QueryIPAllocations) (*types.QueryIPAllocationsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryIPAllocationsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryIoFilterInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryIoFilterInfo         `xml:"urn:vim25 QueryIoFilterInfo,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryIoFilterInfoResponse `xml:"urn:vim25 QueryIoFilterInfoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryIoFilterInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryIoFilterInfo(ctx context.Context, r soap.RoundTripper, req *types.QueryIoFilterInfo) (*types.QueryIoFilterInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryIoFilterInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryIoFilterIssuesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryIoFilterIssues         `xml:"urn:vim25 QueryIoFilterIssues,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryIoFilterIssuesResponse `xml:"urn:vim25 QueryIoFilterIssuesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryIoFilterIssuesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryIoFilterIssues(ctx context.Context, r soap.RoundTripper, req *types.QueryIoFilterIssues) (*types.QueryIoFilterIssuesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryIoFilterIssuesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryIpPoolsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryIpPools         `xml:"urn:vim25 QueryIpPools,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryIpPoolsResponse `xml:"urn:vim25 QueryIpPoolsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryIpPoolsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryIpPools(ctx context.Context, r soap.RoundTripper, req *types.QueryIpPools) (*types.QueryIpPoolsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryIpPoolsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryLicenseSourceAvailabilityBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryLicenseSourceAvailability         `xml:"urn:vim25 QueryLicenseSourceAvailability,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryLicenseSourceAvailabilityResponse `xml:"urn:vim25 QueryLicenseSourceAvailabilityResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryLicenseSourceAvailabilityBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryLicenseSourceAvailability(ctx context.Context, r soap.RoundTripper, req *types.QueryLicenseSourceAvailability) (*types.QueryLicenseSourceAvailabilityResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryLicenseSourceAvailabilityBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryLicenseUsageBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryLicenseUsage         `xml:"urn:vim25 QueryLicenseUsage,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryLicenseUsageResponse `xml:"urn:vim25 QueryLicenseUsageResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryLicenseUsageBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryLicenseUsage(ctx context.Context, r soap.RoundTripper, req *types.QueryLicenseUsage) (*types.QueryLicenseUsageResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryLicenseUsageBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryLockdownExceptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryLockdownExceptions         `xml:"urn:vim25 QueryLockdownExceptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryLockdownExceptionsResponse `xml:"urn:vim25 QueryLockdownExceptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryLockdownExceptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryLockdownExceptions(ctx context.Context, r soap.RoundTripper, req *types.QueryLockdownExceptions) (*types.QueryLockdownExceptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryLockdownExceptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryManagedByBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryManagedBy         `xml:"urn:vim25 QueryManagedBy,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryManagedByResponse `xml:"urn:vim25 QueryManagedByResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryManagedByBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryManagedBy(ctx context.Context, r soap.RoundTripper, req *types.QueryManagedBy) (*types.QueryManagedByResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryManagedByBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryMemoryOverheadBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryMemoryOverhead         `xml:"urn:vim25 QueryMemoryOverhead,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryMemoryOverheadResponse `xml:"urn:vim25 QueryMemoryOverheadResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryMemoryOverheadBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryMemoryOverhead(ctx context.Context, r soap.RoundTripper, req *types.QueryMemoryOverhead) (*types.QueryMemoryOverheadResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryMemoryOverheadBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryMemoryOverheadExBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryMemoryOverheadEx         `xml:"urn:vim25 QueryMemoryOverheadEx,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryMemoryOverheadExResponse `xml:"urn:vim25 QueryMemoryOverheadExResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryMemoryOverheadExBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryMemoryOverheadEx(ctx context.Context, r soap.RoundTripper, req *types.QueryMemoryOverheadEx) (*types.QueryMemoryOverheadExResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryMemoryOverheadExBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryMigrationDependenciesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryMigrationDependencies         `xml:"urn:vim25 QueryMigrationDependencies,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryMigrationDependenciesResponse `xml:"urn:vim25 QueryMigrationDependenciesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryMigrationDependenciesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryMigrationDependencies(ctx context.Context, r soap.RoundTripper, req *types.QueryMigrationDependencies) (*types.QueryMigrationDependenciesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryMigrationDependenciesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryModulesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryModules         `xml:"urn:vim25 QueryModules,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryModulesResponse `xml:"urn:vim25 QueryModulesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryModulesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryModules(ctx context.Context, r soap.RoundTripper, req *types.QueryModules) (*types.QueryModulesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryModulesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryMonitoredEntitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryMonitoredEntities         `xml:"urn:vim25 QueryMonitoredEntities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryMonitoredEntitiesResponse `xml:"urn:vim25 QueryMonitoredEntitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryMonitoredEntitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryMonitoredEntities(ctx context.Context, r soap.RoundTripper, req *types.QueryMonitoredEntities) (*types.QueryMonitoredEntitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryMonitoredEntitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryNFSUserBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryNFSUser         `xml:"urn:vim25 QueryNFSUser,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryNFSUserResponse `xml:"urn:vim25 QueryNFSUserResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryNFSUserBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryNFSUser(ctx context.Context, r soap.RoundTripper, req *types.QueryNFSUser) (*types.QueryNFSUserResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryNFSUserBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryNetConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryNetConfig         `xml:"urn:vim25 QueryNetConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryNetConfigResponse `xml:"urn:vim25 QueryNetConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryNetConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryNetConfig(ctx context.Context, r soap.RoundTripper, req *types.QueryNetConfig) (*types.QueryNetConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryNetConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryNetworkHintBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryNetworkHint         `xml:"urn:vim25 QueryNetworkHint,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryNetworkHintResponse `xml:"urn:vim25 QueryNetworkHintResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryNetworkHintBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryNetworkHint(ctx context.Context, r soap.RoundTripper, req *types.QueryNetworkHint) (*types.QueryNetworkHintResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryNetworkHintBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryObjectsOnPhysicalVsanDiskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryObjectsOnPhysicalVsanDisk         `xml:"urn:vim25 QueryObjectsOnPhysicalVsanDisk,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryObjectsOnPhysicalVsanDiskResponse `xml:"urn:vim25 QueryObjectsOnPhysicalVsanDiskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryObjectsOnPhysicalVsanDiskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryObjectsOnPhysicalVsanDisk(ctx context.Context, r soap.RoundTripper, req *types.QueryObjectsOnPhysicalVsanDisk) (*types.QueryObjectsOnPhysicalVsanDiskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryObjectsOnPhysicalVsanDiskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryOptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryOptions         `xml:"urn:vim25 QueryOptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryOptionsResponse `xml:"urn:vim25 QueryOptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryOptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryOptions(ctx context.Context, r soap.RoundTripper, req *types.QueryOptions) (*types.QueryOptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryOptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPartitionCreateDescBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPartitionCreateDesc         `xml:"urn:vim25 QueryPartitionCreateDesc,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPartitionCreateDescResponse `xml:"urn:vim25 QueryPartitionCreateDescResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPartitionCreateDescBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPartitionCreateDesc(ctx context.Context, r soap.RoundTripper, req *types.QueryPartitionCreateDesc) (*types.QueryPartitionCreateDescResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPartitionCreateDescBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPartitionCreateOptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPartitionCreateOptions         `xml:"urn:vim25 QueryPartitionCreateOptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPartitionCreateOptionsResponse `xml:"urn:vim25 QueryPartitionCreateOptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPartitionCreateOptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPartitionCreateOptions(ctx context.Context, r soap.RoundTripper, req *types.QueryPartitionCreateOptions) (*types.QueryPartitionCreateOptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPartitionCreateOptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPathSelectionPolicyOptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPathSelectionPolicyOptions         `xml:"urn:vim25 QueryPathSelectionPolicyOptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPathSelectionPolicyOptionsResponse `xml:"urn:vim25 QueryPathSelectionPolicyOptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPathSelectionPolicyOptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPathSelectionPolicyOptions(ctx context.Context, r soap.RoundTripper, req *types.QueryPathSelectionPolicyOptions) (*types.QueryPathSelectionPolicyOptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPathSelectionPolicyOptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPerfBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPerf         `xml:"urn:vim25 QueryPerf,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPerfResponse `xml:"urn:vim25 QueryPerfResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPerfBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPerf(ctx context.Context, r soap.RoundTripper, req *types.QueryPerf) (*types.QueryPerfResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPerfBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPerfCompositeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPerfComposite         `xml:"urn:vim25 QueryPerfComposite,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPerfCompositeResponse `xml:"urn:vim25 QueryPerfCompositeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPerfCompositeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPerfComposite(ctx context.Context, r soap.RoundTripper, req *types.QueryPerfComposite) (*types.QueryPerfCompositeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPerfCompositeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPerfCounterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPerfCounter         `xml:"urn:vim25 QueryPerfCounter,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPerfCounterResponse `xml:"urn:vim25 QueryPerfCounterResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPerfCounterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPerfCounter(ctx context.Context, r soap.RoundTripper, req *types.QueryPerfCounter) (*types.QueryPerfCounterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPerfCounterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPerfCounterByLevelBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPerfCounterByLevel         `xml:"urn:vim25 QueryPerfCounterByLevel,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPerfCounterByLevelResponse `xml:"urn:vim25 QueryPerfCounterByLevelResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPerfCounterByLevelBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPerfCounterByLevel(ctx context.Context, r soap.RoundTripper, req *types.QueryPerfCounterByLevel) (*types.QueryPerfCounterByLevelResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPerfCounterByLevelBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPerfProviderSummaryBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPerfProviderSummary         `xml:"urn:vim25 QueryPerfProviderSummary,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPerfProviderSummaryResponse `xml:"urn:vim25 QueryPerfProviderSummaryResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPerfProviderSummaryBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPerfProviderSummary(ctx context.Context, r soap.RoundTripper, req *types.QueryPerfProviderSummary) (*types.QueryPerfProviderSummaryResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPerfProviderSummaryBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPhysicalVsanDisksBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPhysicalVsanDisks         `xml:"urn:vim25 QueryPhysicalVsanDisks,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPhysicalVsanDisksResponse `xml:"urn:vim25 QueryPhysicalVsanDisksResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPhysicalVsanDisksBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPhysicalVsanDisks(ctx context.Context, r soap.RoundTripper, req *types.QueryPhysicalVsanDisks) (*types.QueryPhysicalVsanDisksResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPhysicalVsanDisksBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPnicStatusBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPnicStatus         `xml:"urn:vim25 QueryPnicStatus,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPnicStatusResponse `xml:"urn:vim25 QueryPnicStatusResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPnicStatusBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPnicStatus(ctx context.Context, r soap.RoundTripper, req *types.QueryPnicStatus) (*types.QueryPnicStatusResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPnicStatusBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryPolicyMetadataBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryPolicyMetadata         `xml:"urn:vim25 QueryPolicyMetadata,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryPolicyMetadataResponse `xml:"urn:vim25 QueryPolicyMetadataResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryPolicyMetadataBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryPolicyMetadata(ctx context.Context, r soap.RoundTripper, req *types.QueryPolicyMetadata) (*types.QueryPolicyMetadataResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryPolicyMetadataBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryProfileStructureBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryProfileStructure         `xml:"urn:vim25 QueryProfileStructure,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryProfileStructureResponse `xml:"urn:vim25 QueryProfileStructureResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryProfileStructureBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryProfileStructure(ctx context.Context, r soap.RoundTripper, req *types.QueryProfileStructure) (*types.QueryProfileStructureResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryProfileStructureBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryProviderListBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryProviderList         `xml:"urn:vim25 QueryProviderList,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryProviderListResponse `xml:"urn:vim25 QueryProviderListResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryProviderListBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryProviderList(ctx context.Context, r soap.RoundTripper, req *types.QueryProviderList) (*types.QueryProviderListResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryProviderListBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryProviderNameBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryProviderName         `xml:"urn:vim25 QueryProviderName,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryProviderNameResponse `xml:"urn:vim25 QueryProviderNameResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryProviderNameBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryProviderName(ctx context.Context, r soap.RoundTripper, req *types.QueryProviderName) (*types.QueryProviderNameResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryProviderNameBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryResourceConfigOptionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryResourceConfigOption         `xml:"urn:vim25 QueryResourceConfigOption,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryResourceConfigOptionResponse `xml:"urn:vim25 QueryResourceConfigOptionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryResourceConfigOptionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryResourceConfigOption(ctx context.Context, r soap.RoundTripper, req *types.QueryResourceConfigOption) (*types.QueryResourceConfigOptionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryResourceConfigOptionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryServiceListBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryServiceList         `xml:"urn:vim25 QueryServiceList,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryServiceListResponse `xml:"urn:vim25 QueryServiceListResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryServiceListBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryServiceList(ctx context.Context, r soap.RoundTripper, req *types.QueryServiceList) (*types.QueryServiceListResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryServiceListBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryStorageArrayTypePolicyOptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryStorageArrayTypePolicyOptions         `xml:"urn:vim25 QueryStorageArrayTypePolicyOptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryStorageArrayTypePolicyOptionsResponse `xml:"urn:vim25 QueryStorageArrayTypePolicyOptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryStorageArrayTypePolicyOptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryStorageArrayTypePolicyOptions(ctx context.Context, r soap.RoundTripper, req *types.QueryStorageArrayTypePolicyOptions) (*types.QueryStorageArrayTypePolicyOptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryStorageArrayTypePolicyOptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QuerySupportedFeaturesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QuerySupportedFeatures         `xml:"urn:vim25 QuerySupportedFeatures,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QuerySupportedFeaturesResponse `xml:"urn:vim25 QuerySupportedFeaturesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QuerySupportedFeaturesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QuerySupportedFeatures(ctx context.Context, r soap.RoundTripper, req *types.QuerySupportedFeatures) (*types.QuerySupportedFeaturesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QuerySupportedFeaturesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QuerySyncingVsanObjectsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QuerySyncingVsanObjects         `xml:"urn:vim25 QuerySyncingVsanObjects,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QuerySyncingVsanObjectsResponse `xml:"urn:vim25 QuerySyncingVsanObjectsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QuerySyncingVsanObjectsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QuerySyncingVsanObjects(ctx context.Context, r soap.RoundTripper, req *types.QuerySyncingVsanObjects) (*types.QuerySyncingVsanObjectsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QuerySyncingVsanObjectsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QuerySystemUsersBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QuerySystemUsers         `xml:"urn:vim25 QuerySystemUsers,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QuerySystemUsersResponse `xml:"urn:vim25 QuerySystemUsersResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QuerySystemUsersBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QuerySystemUsers(ctx context.Context, r soap.RoundTripper, req *types.QuerySystemUsers) (*types.QuerySystemUsersResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QuerySystemUsersBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryTargetCapabilitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryTargetCapabilities         `xml:"urn:vim25 QueryTargetCapabilities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryTargetCapabilitiesResponse `xml:"urn:vim25 QueryTargetCapabilitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryTargetCapabilitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryTargetCapabilities(ctx context.Context, r soap.RoundTripper, req *types.QueryTargetCapabilities) (*types.QueryTargetCapabilitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryTargetCapabilitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryTpmAttestationReportBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryTpmAttestationReport         `xml:"urn:vim25 QueryTpmAttestationReport,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryTpmAttestationReportResponse `xml:"urn:vim25 QueryTpmAttestationReportResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryTpmAttestationReportBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryTpmAttestationReport(ctx context.Context, r soap.RoundTripper, req *types.QueryTpmAttestationReport) (*types.QueryTpmAttestationReportResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryTpmAttestationReportBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryUnmonitoredHostsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryUnmonitoredHosts         `xml:"urn:vim25 QueryUnmonitoredHosts,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryUnmonitoredHostsResponse `xml:"urn:vim25 QueryUnmonitoredHostsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryUnmonitoredHostsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryUnmonitoredHosts(ctx context.Context, r soap.RoundTripper, req *types.QueryUnmonitoredHosts) (*types.QueryUnmonitoredHostsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryUnmonitoredHostsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryUnownedFilesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryUnownedFiles         `xml:"urn:vim25 QueryUnownedFiles,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryUnownedFilesResponse `xml:"urn:vim25 QueryUnownedFilesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryUnownedFilesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryUnownedFiles(ctx context.Context, r soap.RoundTripper, req *types.QueryUnownedFiles) (*types.QueryUnownedFilesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryUnownedFilesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryUnresolvedVmfsVolumeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryUnresolvedVmfsVolume         `xml:"urn:vim25 QueryUnresolvedVmfsVolume,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryUnresolvedVmfsVolumeResponse `xml:"urn:vim25 QueryUnresolvedVmfsVolumeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryUnresolvedVmfsVolumeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryUnresolvedVmfsVolume(ctx context.Context, r soap.RoundTripper, req *types.QueryUnresolvedVmfsVolume) (*types.QueryUnresolvedVmfsVolumeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryUnresolvedVmfsVolumeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryUnresolvedVmfsVolumesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryUnresolvedVmfsVolumes         `xml:"urn:vim25 QueryUnresolvedVmfsVolumes,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryUnresolvedVmfsVolumesResponse `xml:"urn:vim25 QueryUnresolvedVmfsVolumesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryUnresolvedVmfsVolumesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryUnresolvedVmfsVolumes(ctx context.Context, r soap.RoundTripper, req *types.QueryUnresolvedVmfsVolumes) (*types.QueryUnresolvedVmfsVolumesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryUnresolvedVmfsVolumesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryUsedVlanIdInDvsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryUsedVlanIdInDvs         `xml:"urn:vim25 QueryUsedVlanIdInDvs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryUsedVlanIdInDvsResponse `xml:"urn:vim25 QueryUsedVlanIdInDvsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryUsedVlanIdInDvsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryUsedVlanIdInDvs(ctx context.Context, r soap.RoundTripper, req *types.QueryUsedVlanIdInDvs) (*types.QueryUsedVlanIdInDvsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryUsedVlanIdInDvsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVMotionCompatibilityBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVMotionCompatibility         `xml:"urn:vim25 QueryVMotionCompatibility,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVMotionCompatibilityResponse `xml:"urn:vim25 QueryVMotionCompatibilityResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVMotionCompatibilityBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVMotionCompatibility(ctx context.Context, r soap.RoundTripper, req *types.QueryVMotionCompatibility) (*types.QueryVMotionCompatibilityResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVMotionCompatibilityBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVMotionCompatibilityEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVMotionCompatibilityEx_Task         `xml:"urn:vim25 QueryVMotionCompatibilityEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVMotionCompatibilityEx_TaskResponse `xml:"urn:vim25 QueryVMotionCompatibilityEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVMotionCompatibilityEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVMotionCompatibilityEx_Task(ctx context.Context, r soap.RoundTripper, req *types.QueryVMotionCompatibilityEx_Task) (*types.QueryVMotionCompatibilityEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVMotionCompatibilityEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVirtualDiskFragmentationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVirtualDiskFragmentation         `xml:"urn:vim25 QueryVirtualDiskFragmentation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVirtualDiskFragmentationResponse `xml:"urn:vim25 QueryVirtualDiskFragmentationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVirtualDiskFragmentationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVirtualDiskFragmentation(ctx context.Context, r soap.RoundTripper, req *types.QueryVirtualDiskFragmentation) (*types.QueryVirtualDiskFragmentationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVirtualDiskFragmentationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVirtualDiskGeometryBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVirtualDiskGeometry         `xml:"urn:vim25 QueryVirtualDiskGeometry,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVirtualDiskGeometryResponse `xml:"urn:vim25 QueryVirtualDiskGeometryResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVirtualDiskGeometryBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVirtualDiskGeometry(ctx context.Context, r soap.RoundTripper, req *types.QueryVirtualDiskGeometry) (*types.QueryVirtualDiskGeometryResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVirtualDiskGeometryBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVirtualDiskUuidBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVirtualDiskUuid         `xml:"urn:vim25 QueryVirtualDiskUuid,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVirtualDiskUuidResponse `xml:"urn:vim25 QueryVirtualDiskUuidResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVirtualDiskUuidBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVirtualDiskUuid(ctx context.Context, r soap.RoundTripper, req *types.QueryVirtualDiskUuid) (*types.QueryVirtualDiskUuidResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVirtualDiskUuidBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVmfsConfigOptionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVmfsConfigOption         `xml:"urn:vim25 QueryVmfsConfigOption,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVmfsConfigOptionResponse `xml:"urn:vim25 QueryVmfsConfigOptionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVmfsConfigOptionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVmfsConfigOption(ctx context.Context, r soap.RoundTripper, req *types.QueryVmfsConfigOption) (*types.QueryVmfsConfigOptionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVmfsConfigOptionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVmfsDatastoreCreateOptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVmfsDatastoreCreateOptions         `xml:"urn:vim25 QueryVmfsDatastoreCreateOptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVmfsDatastoreCreateOptionsResponse `xml:"urn:vim25 QueryVmfsDatastoreCreateOptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVmfsDatastoreCreateOptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVmfsDatastoreCreateOptions(ctx context.Context, r soap.RoundTripper, req *types.QueryVmfsDatastoreCreateOptions) (*types.QueryVmfsDatastoreCreateOptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVmfsDatastoreCreateOptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVmfsDatastoreExpandOptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVmfsDatastoreExpandOptions         `xml:"urn:vim25 QueryVmfsDatastoreExpandOptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVmfsDatastoreExpandOptionsResponse `xml:"urn:vim25 QueryVmfsDatastoreExpandOptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVmfsDatastoreExpandOptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVmfsDatastoreExpandOptions(ctx context.Context, r soap.RoundTripper, req *types.QueryVmfsDatastoreExpandOptions) (*types.QueryVmfsDatastoreExpandOptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVmfsDatastoreExpandOptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVmfsDatastoreExtendOptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVmfsDatastoreExtendOptions         `xml:"urn:vim25 QueryVmfsDatastoreExtendOptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVmfsDatastoreExtendOptionsResponse `xml:"urn:vim25 QueryVmfsDatastoreExtendOptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVmfsDatastoreExtendOptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVmfsDatastoreExtendOptions(ctx context.Context, r soap.RoundTripper, req *types.QueryVmfsDatastoreExtendOptions) (*types.QueryVmfsDatastoreExtendOptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVmfsDatastoreExtendOptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVnicStatusBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVnicStatus         `xml:"urn:vim25 QueryVnicStatus,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVnicStatusResponse `xml:"urn:vim25 QueryVnicStatusResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVnicStatusBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVnicStatus(ctx context.Context, r soap.RoundTripper, req *types.QueryVnicStatus) (*types.QueryVnicStatusResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVnicStatusBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVsanObjectUuidsByFilterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVsanObjectUuidsByFilter         `xml:"urn:vim25 QueryVsanObjectUuidsByFilter,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVsanObjectUuidsByFilterResponse `xml:"urn:vim25 QueryVsanObjectUuidsByFilterResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVsanObjectUuidsByFilterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVsanObjectUuidsByFilter(ctx context.Context, r soap.RoundTripper, req *types.QueryVsanObjectUuidsByFilter) (*types.QueryVsanObjectUuidsByFilterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVsanObjectUuidsByFilterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVsanObjectsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVsanObjects         `xml:"urn:vim25 QueryVsanObjects,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVsanObjectsResponse `xml:"urn:vim25 QueryVsanObjectsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVsanObjectsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVsanObjects(ctx context.Context, r soap.RoundTripper, req *types.QueryVsanObjects) (*types.QueryVsanObjectsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVsanObjectsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVsanStatisticsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVsanStatistics         `xml:"urn:vim25 QueryVsanStatistics,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVsanStatisticsResponse `xml:"urn:vim25 QueryVsanStatisticsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVsanStatisticsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVsanStatistics(ctx context.Context, r soap.RoundTripper, req *types.QueryVsanStatistics) (*types.QueryVsanStatisticsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVsanStatisticsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type QueryVsanUpgradeStatusBody struct {
0000000000000000000000000000000000000000;;		Req    *types.QueryVsanUpgradeStatus         `xml:"urn:vim25 QueryVsanUpgradeStatus,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.QueryVsanUpgradeStatusResponse `xml:"urn:vim25 QueryVsanUpgradeStatusResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *QueryVsanUpgradeStatusBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func QueryVsanUpgradeStatus(ctx context.Context, r soap.RoundTripper, req *types.QueryVsanUpgradeStatus) (*types.QueryVsanUpgradeStatusResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody QueryVsanUpgradeStatusBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReadEnvironmentVariableInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReadEnvironmentVariableInGuest         `xml:"urn:vim25 ReadEnvironmentVariableInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReadEnvironmentVariableInGuestResponse `xml:"urn:vim25 ReadEnvironmentVariableInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReadEnvironmentVariableInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReadEnvironmentVariableInGuest(ctx context.Context, r soap.RoundTripper, req *types.ReadEnvironmentVariableInGuest) (*types.ReadEnvironmentVariableInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReadEnvironmentVariableInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReadNextEventsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReadNextEvents         `xml:"urn:vim25 ReadNextEvents,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReadNextEventsResponse `xml:"urn:vim25 ReadNextEventsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReadNextEventsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReadNextEvents(ctx context.Context, r soap.RoundTripper, req *types.ReadNextEvents) (*types.ReadNextEventsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReadNextEventsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReadNextTasksBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReadNextTasks         `xml:"urn:vim25 ReadNextTasks,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReadNextTasksResponse `xml:"urn:vim25 ReadNextTasksResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReadNextTasksBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReadNextTasks(ctx context.Context, r soap.RoundTripper, req *types.ReadNextTasks) (*types.ReadNextTasksResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReadNextTasksBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReadPreviousEventsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReadPreviousEvents         `xml:"urn:vim25 ReadPreviousEvents,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReadPreviousEventsResponse `xml:"urn:vim25 ReadPreviousEventsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReadPreviousEventsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReadPreviousEvents(ctx context.Context, r soap.RoundTripper, req *types.ReadPreviousEvents) (*types.ReadPreviousEventsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReadPreviousEventsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReadPreviousTasksBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReadPreviousTasks         `xml:"urn:vim25 ReadPreviousTasks,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReadPreviousTasksResponse `xml:"urn:vim25 ReadPreviousTasksResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReadPreviousTasksBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReadPreviousTasks(ctx context.Context, r soap.RoundTripper, req *types.ReadPreviousTasks) (*types.ReadPreviousTasksResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReadPreviousTasksBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RebootGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RebootGuest         `xml:"urn:vim25 RebootGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RebootGuestResponse `xml:"urn:vim25 RebootGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RebootGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RebootGuest(ctx context.Context, r soap.RoundTripper, req *types.RebootGuest) (*types.RebootGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RebootGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RebootHost_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RebootHost_Task         `xml:"urn:vim25 RebootHost_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RebootHost_TaskResponse `xml:"urn:vim25 RebootHost_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RebootHost_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RebootHost_Task(ctx context.Context, r soap.RoundTripper, req *types.RebootHost_Task) (*types.RebootHost_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RebootHost_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RecommendDatastoresBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RecommendDatastores         `xml:"urn:vim25 RecommendDatastores,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RecommendDatastoresResponse `xml:"urn:vim25 RecommendDatastoresResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RecommendDatastoresBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RecommendDatastores(ctx context.Context, r soap.RoundTripper, req *types.RecommendDatastores) (*types.RecommendDatastoresResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RecommendDatastoresBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RecommendHostsForVmBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RecommendHostsForVm         `xml:"urn:vim25 RecommendHostsForVm,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RecommendHostsForVmResponse `xml:"urn:vim25 RecommendHostsForVmResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RecommendHostsForVmBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RecommendHostsForVm(ctx context.Context, r soap.RoundTripper, req *types.RecommendHostsForVm) (*types.RecommendHostsForVmResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RecommendHostsForVmBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RecommissionVsanNode_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RecommissionVsanNode_Task         `xml:"urn:vim25 RecommissionVsanNode_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RecommissionVsanNode_TaskResponse `xml:"urn:vim25 RecommissionVsanNode_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RecommissionVsanNode_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RecommissionVsanNode_Task(ctx context.Context, r soap.RoundTripper, req *types.RecommissionVsanNode_Task) (*types.RecommissionVsanNode_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RecommissionVsanNode_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconcileDatastoreInventory_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconcileDatastoreInventory_Task         `xml:"urn:vim25 ReconcileDatastoreInventory_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconcileDatastoreInventory_TaskResponse `xml:"urn:vim25 ReconcileDatastoreInventory_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconcileDatastoreInventory_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconcileDatastoreInventory_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconcileDatastoreInventory_Task) (*types.ReconcileDatastoreInventory_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconcileDatastoreInventory_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigVM_Task         `xml:"urn:vim25 ReconfigVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigVM_TaskResponse `xml:"urn:vim25 ReconfigVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigVM_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconfigVM_Task) (*types.ReconfigVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigurationSatisfiableBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigurationSatisfiable         `xml:"urn:vim25 ReconfigurationSatisfiable,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigurationSatisfiableResponse `xml:"urn:vim25 ReconfigurationSatisfiableResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigurationSatisfiableBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigurationSatisfiable(ctx context.Context, r soap.RoundTripper, req *types.ReconfigurationSatisfiable) (*types.ReconfigurationSatisfiableResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigurationSatisfiableBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureAlarmBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureAlarm         `xml:"urn:vim25 ReconfigureAlarm,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureAlarmResponse `xml:"urn:vim25 ReconfigureAlarmResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureAlarmBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureAlarm(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureAlarm) (*types.ReconfigureAlarmResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureAlarmBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureAutostartBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureAutostart         `xml:"urn:vim25 ReconfigureAutostart,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureAutostartResponse `xml:"urn:vim25 ReconfigureAutostartResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureAutostartBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureAutostart(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureAutostart) (*types.ReconfigureAutostartResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureAutostartBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureCluster_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureCluster_Task         `xml:"urn:vim25 ReconfigureCluster_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureCluster_TaskResponse `xml:"urn:vim25 ReconfigureCluster_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureCluster_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureCluster_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureCluster_Task) (*types.ReconfigureCluster_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureCluster_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureComputeResource_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureComputeResource_Task         `xml:"urn:vim25 ReconfigureComputeResource_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureComputeResource_TaskResponse `xml:"urn:vim25 ReconfigureComputeResource_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureComputeResource_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureComputeResource_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureComputeResource_Task) (*types.ReconfigureComputeResource_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureComputeResource_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureDVPort_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureDVPort_Task         `xml:"urn:vim25 ReconfigureDVPort_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureDVPort_TaskResponse `xml:"urn:vim25 ReconfigureDVPort_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureDVPort_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureDVPort_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureDVPort_Task) (*types.ReconfigureDVPort_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureDVPort_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureDVPortgroup_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureDVPortgroup_Task         `xml:"urn:vim25 ReconfigureDVPortgroup_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureDVPortgroup_TaskResponse `xml:"urn:vim25 ReconfigureDVPortgroup_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureDVPortgroup_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureDVPortgroup_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureDVPortgroup_Task) (*types.ReconfigureDVPortgroup_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureDVPortgroup_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureDatacenter_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureDatacenter_Task         `xml:"urn:vim25 ReconfigureDatacenter_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureDatacenter_TaskResponse `xml:"urn:vim25 ReconfigureDatacenter_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureDatacenter_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureDatacenter_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureDatacenter_Task) (*types.ReconfigureDatacenter_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureDatacenter_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureDomObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureDomObject         `xml:"urn:vim25 ReconfigureDomObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureDomObjectResponse `xml:"urn:vim25 ReconfigureDomObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureDomObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureDomObject(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureDomObject) (*types.ReconfigureDomObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureDomObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureDvs_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureDvs_Task         `xml:"urn:vim25 ReconfigureDvs_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureDvs_TaskResponse `xml:"urn:vim25 ReconfigureDvs_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureDvs_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureDvs_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureDvs_Task) (*types.ReconfigureDvs_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureDvs_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureHostForDAS_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureHostForDAS_Task         `xml:"urn:vim25 ReconfigureHostForDAS_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureHostForDAS_TaskResponse `xml:"urn:vim25 ReconfigureHostForDAS_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureHostForDAS_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureHostForDAS_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureHostForDAS_Task) (*types.ReconfigureHostForDAS_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureHostForDAS_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureScheduledTaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureScheduledTask         `xml:"urn:vim25 ReconfigureScheduledTask,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureScheduledTaskResponse `xml:"urn:vim25 ReconfigureScheduledTaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureScheduledTaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureScheduledTask(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureScheduledTask) (*types.ReconfigureScheduledTaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureScheduledTaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureServiceConsoleReservationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureServiceConsoleReservation         `xml:"urn:vim25 ReconfigureServiceConsoleReservation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureServiceConsoleReservationResponse `xml:"urn:vim25 ReconfigureServiceConsoleReservationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureServiceConsoleReservationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureServiceConsoleReservation(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureServiceConsoleReservation) (*types.ReconfigureServiceConsoleReservationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureServiceConsoleReservationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureSnmpAgentBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureSnmpAgent         `xml:"urn:vim25 ReconfigureSnmpAgent,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureSnmpAgentResponse `xml:"urn:vim25 ReconfigureSnmpAgentResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureSnmpAgentBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureSnmpAgent(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureSnmpAgent) (*types.ReconfigureSnmpAgentResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureSnmpAgentBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconfigureVirtualMachineReservationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconfigureVirtualMachineReservation         `xml:"urn:vim25 ReconfigureVirtualMachineReservation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconfigureVirtualMachineReservationResponse `xml:"urn:vim25 ReconfigureVirtualMachineReservationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconfigureVirtualMachineReservationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconfigureVirtualMachineReservation(ctx context.Context, r soap.RoundTripper, req *types.ReconfigureVirtualMachineReservation) (*types.ReconfigureVirtualMachineReservationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconfigureVirtualMachineReservationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReconnectHost_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReconnectHost_Task         `xml:"urn:vim25 ReconnectHost_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReconnectHost_TaskResponse `xml:"urn:vim25 ReconnectHost_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReconnectHost_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReconnectHost_Task(ctx context.Context, r soap.RoundTripper, req *types.ReconnectHost_Task) (*types.ReconnectHost_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReconnectHost_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RectifyDvsHost_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RectifyDvsHost_Task         `xml:"urn:vim25 RectifyDvsHost_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RectifyDvsHost_TaskResponse `xml:"urn:vim25 RectifyDvsHost_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RectifyDvsHost_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RectifyDvsHost_Task(ctx context.Context, r soap.RoundTripper, req *types.RectifyDvsHost_Task) (*types.RectifyDvsHost_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RectifyDvsHost_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RectifyDvsOnHost_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RectifyDvsOnHost_Task         `xml:"urn:vim25 RectifyDvsOnHost_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RectifyDvsOnHost_TaskResponse `xml:"urn:vim25 RectifyDvsOnHost_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RectifyDvsOnHost_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RectifyDvsOnHost_Task(ctx context.Context, r soap.RoundTripper, req *types.RectifyDvsOnHost_Task) (*types.RectifyDvsOnHost_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RectifyDvsOnHost_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshBody struct {
0000000000000000000000000000000000000000;;		Req    *types.Refresh         `xml:"urn:vim25 Refresh,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshResponse `xml:"urn:vim25 RefreshResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Refresh(ctx context.Context, r soap.RoundTripper, req *types.Refresh) (*types.RefreshResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshDVPortStateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshDVPortState         `xml:"urn:vim25 RefreshDVPortState,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshDVPortStateResponse `xml:"urn:vim25 RefreshDVPortStateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshDVPortStateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshDVPortState(ctx context.Context, r soap.RoundTripper, req *types.RefreshDVPortState) (*types.RefreshDVPortStateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshDVPortStateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshDatastore         `xml:"urn:vim25 RefreshDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshDatastoreResponse `xml:"urn:vim25 RefreshDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshDatastore(ctx context.Context, r soap.RoundTripper, req *types.RefreshDatastore) (*types.RefreshDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshDatastoreStorageInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshDatastoreStorageInfo         `xml:"urn:vim25 RefreshDatastoreStorageInfo,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshDatastoreStorageInfoResponse `xml:"urn:vim25 RefreshDatastoreStorageInfoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshDatastoreStorageInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshDatastoreStorageInfo(ctx context.Context, r soap.RoundTripper, req *types.RefreshDatastoreStorageInfo) (*types.RefreshDatastoreStorageInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshDatastoreStorageInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshDateTimeSystemBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshDateTimeSystem         `xml:"urn:vim25 RefreshDateTimeSystem,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshDateTimeSystemResponse `xml:"urn:vim25 RefreshDateTimeSystemResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshDateTimeSystemBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshDateTimeSystem(ctx context.Context, r soap.RoundTripper, req *types.RefreshDateTimeSystem) (*types.RefreshDateTimeSystemResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshDateTimeSystemBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshFirewallBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshFirewall         `xml:"urn:vim25 RefreshFirewall,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshFirewallResponse `xml:"urn:vim25 RefreshFirewallResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshFirewallBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshFirewall(ctx context.Context, r soap.RoundTripper, req *types.RefreshFirewall) (*types.RefreshFirewallResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshFirewallBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshGraphicsManagerBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshGraphicsManager         `xml:"urn:vim25 RefreshGraphicsManager,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshGraphicsManagerResponse `xml:"urn:vim25 RefreshGraphicsManagerResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshGraphicsManagerBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshGraphicsManager(ctx context.Context, r soap.RoundTripper, req *types.RefreshGraphicsManager) (*types.RefreshGraphicsManagerResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshGraphicsManagerBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshHealthStatusSystemBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshHealthStatusSystem         `xml:"urn:vim25 RefreshHealthStatusSystem,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshHealthStatusSystemResponse `xml:"urn:vim25 RefreshHealthStatusSystemResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshHealthStatusSystemBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshHealthStatusSystem(ctx context.Context, r soap.RoundTripper, req *types.RefreshHealthStatusSystem) (*types.RefreshHealthStatusSystemResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshHealthStatusSystemBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshNetworkSystemBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshNetworkSystem         `xml:"urn:vim25 RefreshNetworkSystem,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshNetworkSystemResponse `xml:"urn:vim25 RefreshNetworkSystemResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshNetworkSystemBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshNetworkSystem(ctx context.Context, r soap.RoundTripper, req *types.RefreshNetworkSystem) (*types.RefreshNetworkSystemResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshNetworkSystemBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshRecommendationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshRecommendation         `xml:"urn:vim25 RefreshRecommendation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshRecommendationResponse `xml:"urn:vim25 RefreshRecommendationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshRecommendationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshRecommendation(ctx context.Context, r soap.RoundTripper, req *types.RefreshRecommendation) (*types.RefreshRecommendationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshRecommendationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshRuntimeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshRuntime         `xml:"urn:vim25 RefreshRuntime,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshRuntimeResponse `xml:"urn:vim25 RefreshRuntimeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshRuntimeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshRuntime(ctx context.Context, r soap.RoundTripper, req *types.RefreshRuntime) (*types.RefreshRuntimeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshRuntimeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshServicesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshServices         `xml:"urn:vim25 RefreshServices,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshServicesResponse `xml:"urn:vim25 RefreshServicesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshServicesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshServices(ctx context.Context, r soap.RoundTripper, req *types.RefreshServices) (*types.RefreshServicesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshServicesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshStorageDrsRecommendationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshStorageDrsRecommendation         `xml:"urn:vim25 RefreshStorageDrsRecommendation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshStorageDrsRecommendationResponse `xml:"urn:vim25 RefreshStorageDrsRecommendationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshStorageDrsRecommendationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshStorageDrsRecommendation(ctx context.Context, r soap.RoundTripper, req *types.RefreshStorageDrsRecommendation) (*types.RefreshStorageDrsRecommendationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshStorageDrsRecommendationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshStorageInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshStorageInfo         `xml:"urn:vim25 RefreshStorageInfo,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshStorageInfoResponse `xml:"urn:vim25 RefreshStorageInfoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshStorageInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshStorageInfo(ctx context.Context, r soap.RoundTripper, req *types.RefreshStorageInfo) (*types.RefreshStorageInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshStorageInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RefreshStorageSystemBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RefreshStorageSystem         `xml:"urn:vim25 RefreshStorageSystem,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RefreshStorageSystemResponse `xml:"urn:vim25 RefreshStorageSystemResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RefreshStorageSystemBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RefreshStorageSystem(ctx context.Context, r soap.RoundTripper, req *types.RefreshStorageSystem) (*types.RefreshStorageSystemResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RefreshStorageSystemBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RegisterChildVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RegisterChildVM_Task         `xml:"urn:vim25 RegisterChildVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RegisterChildVM_TaskResponse `xml:"urn:vim25 RegisterChildVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RegisterChildVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RegisterChildVM_Task(ctx context.Context, r soap.RoundTripper, req *types.RegisterChildVM_Task) (*types.RegisterChildVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RegisterChildVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RegisterDiskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RegisterDisk         `xml:"urn:vim25 RegisterDisk,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RegisterDiskResponse `xml:"urn:vim25 RegisterDiskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RegisterDiskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RegisterDisk(ctx context.Context, r soap.RoundTripper, req *types.RegisterDisk) (*types.RegisterDiskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RegisterDiskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RegisterExtensionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RegisterExtension         `xml:"urn:vim25 RegisterExtension,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RegisterExtensionResponse `xml:"urn:vim25 RegisterExtensionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RegisterExtensionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RegisterExtension(ctx context.Context, r soap.RoundTripper, req *types.RegisterExtension) (*types.RegisterExtensionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RegisterExtensionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RegisterHealthUpdateProviderBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RegisterHealthUpdateProvider         `xml:"urn:vim25 RegisterHealthUpdateProvider,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RegisterHealthUpdateProviderResponse `xml:"urn:vim25 RegisterHealthUpdateProviderResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RegisterHealthUpdateProviderBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RegisterHealthUpdateProvider(ctx context.Context, r soap.RoundTripper, req *types.RegisterHealthUpdateProvider) (*types.RegisterHealthUpdateProviderResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RegisterHealthUpdateProviderBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RegisterKmipServerBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RegisterKmipServer         `xml:"urn:vim25 RegisterKmipServer,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RegisterKmipServerResponse `xml:"urn:vim25 RegisterKmipServerResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RegisterKmipServerBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RegisterKmipServer(ctx context.Context, r soap.RoundTripper, req *types.RegisterKmipServer) (*types.RegisterKmipServerResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RegisterKmipServerBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RegisterVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RegisterVM_Task         `xml:"urn:vim25 RegisterVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RegisterVM_TaskResponse `xml:"urn:vim25 RegisterVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RegisterVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RegisterVM_Task(ctx context.Context, r soap.RoundTripper, req *types.RegisterVM_Task) (*types.RegisterVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RegisterVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReleaseCredentialsInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReleaseCredentialsInGuest         `xml:"urn:vim25 ReleaseCredentialsInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReleaseCredentialsInGuestResponse `xml:"urn:vim25 ReleaseCredentialsInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReleaseCredentialsInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReleaseCredentialsInGuest(ctx context.Context, r soap.RoundTripper, req *types.ReleaseCredentialsInGuest) (*types.ReleaseCredentialsInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReleaseCredentialsInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReleaseIpAllocationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReleaseIpAllocation         `xml:"urn:vim25 ReleaseIpAllocation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReleaseIpAllocationResponse `xml:"urn:vim25 ReleaseIpAllocationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReleaseIpAllocationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReleaseIpAllocation(ctx context.Context, r soap.RoundTripper, req *types.ReleaseIpAllocation) (*types.ReleaseIpAllocationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReleaseIpAllocationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReleaseManagedSnapshotBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReleaseManagedSnapshot         `xml:"urn:vim25 ReleaseManagedSnapshot,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReleaseManagedSnapshotResponse `xml:"urn:vim25 ReleaseManagedSnapshotResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReleaseManagedSnapshotBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReleaseManagedSnapshot(ctx context.Context, r soap.RoundTripper, req *types.ReleaseManagedSnapshot) (*types.ReleaseManagedSnapshotResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReleaseManagedSnapshotBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReloadBody struct {
0000000000000000000000000000000000000000;;		Req    *types.Reload         `xml:"urn:vim25 Reload,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReloadResponse `xml:"urn:vim25 ReloadResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReloadBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Reload(ctx context.Context, r soap.RoundTripper, req *types.Reload) (*types.ReloadResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReloadBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RelocateVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RelocateVM_Task         `xml:"urn:vim25 RelocateVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RelocateVM_TaskResponse `xml:"urn:vim25 RelocateVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RelocateVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RelocateVM_Task(ctx context.Context, r soap.RoundTripper, req *types.RelocateVM_Task) (*types.RelocateVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RelocateVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RelocateVStorageObject_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RelocateVStorageObject_Task         `xml:"urn:vim25 RelocateVStorageObject_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RelocateVStorageObject_TaskResponse `xml:"urn:vim25 RelocateVStorageObject_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RelocateVStorageObject_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RelocateVStorageObject_Task(ctx context.Context, r soap.RoundTripper, req *types.RelocateVStorageObject_Task) (*types.RelocateVStorageObject_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RelocateVStorageObject_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveAlarmBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveAlarm         `xml:"urn:vim25 RemoveAlarm,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveAlarmResponse `xml:"urn:vim25 RemoveAlarmResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveAlarmBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveAlarm(ctx context.Context, r soap.RoundTripper, req *types.RemoveAlarm) (*types.RemoveAlarmResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveAlarmBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveAllSnapshots_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveAllSnapshots_Task         `xml:"urn:vim25 RemoveAllSnapshots_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveAllSnapshots_TaskResponse `xml:"urn:vim25 RemoveAllSnapshots_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveAllSnapshots_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveAllSnapshots_Task(ctx context.Context, r soap.RoundTripper, req *types.RemoveAllSnapshots_Task) (*types.RemoveAllSnapshots_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveAllSnapshots_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveAssignedLicenseBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveAssignedLicense         `xml:"urn:vim25 RemoveAssignedLicense,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveAssignedLicenseResponse `xml:"urn:vim25 RemoveAssignedLicenseResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveAssignedLicenseBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveAssignedLicense(ctx context.Context, r soap.RoundTripper, req *types.RemoveAssignedLicense) (*types.RemoveAssignedLicenseResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveAssignedLicenseBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveAuthorizationRoleBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveAuthorizationRole         `xml:"urn:vim25 RemoveAuthorizationRole,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveAuthorizationRoleResponse `xml:"urn:vim25 RemoveAuthorizationRoleResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveAuthorizationRoleBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveAuthorizationRole(ctx context.Context, r soap.RoundTripper, req *types.RemoveAuthorizationRole) (*types.RemoveAuthorizationRoleResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveAuthorizationRoleBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveCustomFieldDefBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveCustomFieldDef         `xml:"urn:vim25 RemoveCustomFieldDef,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveCustomFieldDefResponse `xml:"urn:vim25 RemoveCustomFieldDefResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveCustomFieldDefBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveCustomFieldDef(ctx context.Context, r soap.RoundTripper, req *types.RemoveCustomFieldDef) (*types.RemoveCustomFieldDefResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveCustomFieldDefBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveDatastore         `xml:"urn:vim25 RemoveDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveDatastoreResponse `xml:"urn:vim25 RemoveDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveDatastore(ctx context.Context, r soap.RoundTripper, req *types.RemoveDatastore) (*types.RemoveDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveDatastoreEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveDatastoreEx_Task         `xml:"urn:vim25 RemoveDatastoreEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveDatastoreEx_TaskResponse `xml:"urn:vim25 RemoveDatastoreEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveDatastoreEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveDatastoreEx_Task(ctx context.Context, r soap.RoundTripper, req *types.RemoveDatastoreEx_Task) (*types.RemoveDatastoreEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveDatastoreEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveDiskMapping_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveDiskMapping_Task         `xml:"urn:vim25 RemoveDiskMapping_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveDiskMapping_TaskResponse `xml:"urn:vim25 RemoveDiskMapping_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveDiskMapping_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveDiskMapping_Task(ctx context.Context, r soap.RoundTripper, req *types.RemoveDiskMapping_Task) (*types.RemoveDiskMapping_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveDiskMapping_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveDisk_Task         `xml:"urn:vim25 RemoveDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveDisk_TaskResponse `xml:"urn:vim25 RemoveDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.RemoveDisk_Task) (*types.RemoveDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveEntityPermissionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveEntityPermission         `xml:"urn:vim25 RemoveEntityPermission,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveEntityPermissionResponse `xml:"urn:vim25 RemoveEntityPermissionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveEntityPermissionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveEntityPermission(ctx context.Context, r soap.RoundTripper, req *types.RemoveEntityPermission) (*types.RemoveEntityPermissionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveEntityPermissionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveFilterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveFilter         `xml:"urn:vim25 RemoveFilter,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveFilterResponse `xml:"urn:vim25 RemoveFilterResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveFilterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveFilter(ctx context.Context, r soap.RoundTripper, req *types.RemoveFilter) (*types.RemoveFilterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveFilterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveFilterEntitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveFilterEntities         `xml:"urn:vim25 RemoveFilterEntities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveFilterEntitiesResponse `xml:"urn:vim25 RemoveFilterEntitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveFilterEntitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveFilterEntities(ctx context.Context, r soap.RoundTripper, req *types.RemoveFilterEntities) (*types.RemoveFilterEntitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveFilterEntitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveGroupBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveGroup         `xml:"urn:vim25 RemoveGroup,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveGroupResponse `xml:"urn:vim25 RemoveGroupResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveGroupBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveGroup(ctx context.Context, r soap.RoundTripper, req *types.RemoveGroup) (*types.RemoveGroupResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveGroupBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveGuestAliasBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveGuestAlias         `xml:"urn:vim25 RemoveGuestAlias,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveGuestAliasResponse `xml:"urn:vim25 RemoveGuestAliasResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveGuestAliasBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveGuestAlias(ctx context.Context, r soap.RoundTripper, req *types.RemoveGuestAlias) (*types.RemoveGuestAliasResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveGuestAliasBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveGuestAliasByCertBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveGuestAliasByCert         `xml:"urn:vim25 RemoveGuestAliasByCert,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveGuestAliasByCertResponse `xml:"urn:vim25 RemoveGuestAliasByCertResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveGuestAliasByCertBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveGuestAliasByCert(ctx context.Context, r soap.RoundTripper, req *types.RemoveGuestAliasByCert) (*types.RemoveGuestAliasByCertResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveGuestAliasByCertBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveInternetScsiSendTargetsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveInternetScsiSendTargets         `xml:"urn:vim25 RemoveInternetScsiSendTargets,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveInternetScsiSendTargetsResponse `xml:"urn:vim25 RemoveInternetScsiSendTargetsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveInternetScsiSendTargetsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveInternetScsiSendTargets(ctx context.Context, r soap.RoundTripper, req *types.RemoveInternetScsiSendTargets) (*types.RemoveInternetScsiSendTargetsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveInternetScsiSendTargetsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveInternetScsiStaticTargetsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveInternetScsiStaticTargets         `xml:"urn:vim25 RemoveInternetScsiStaticTargets,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveInternetScsiStaticTargetsResponse `xml:"urn:vim25 RemoveInternetScsiStaticTargetsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveInternetScsiStaticTargetsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveInternetScsiStaticTargets(ctx context.Context, r soap.RoundTripper, req *types.RemoveInternetScsiStaticTargets) (*types.RemoveInternetScsiStaticTargetsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveInternetScsiStaticTargetsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveKeyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveKey         `xml:"urn:vim25 RemoveKey,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveKeyResponse `xml:"urn:vim25 RemoveKeyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveKeyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveKey(ctx context.Context, r soap.RoundTripper, req *types.RemoveKey) (*types.RemoveKeyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveKeyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveKeysBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveKeys         `xml:"urn:vim25 RemoveKeys,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveKeysResponse `xml:"urn:vim25 RemoveKeysResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveKeysBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveKeys(ctx context.Context, r soap.RoundTripper, req *types.RemoveKeys) (*types.RemoveKeysResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveKeysBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveKmipServerBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveKmipServer         `xml:"urn:vim25 RemoveKmipServer,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveKmipServerResponse `xml:"urn:vim25 RemoveKmipServerResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveKmipServerBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveKmipServer(ctx context.Context, r soap.RoundTripper, req *types.RemoveKmipServer) (*types.RemoveKmipServerResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveKmipServerBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveLicenseBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveLicense         `xml:"urn:vim25 RemoveLicense,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveLicenseResponse `xml:"urn:vim25 RemoveLicenseResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveLicenseBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveLicense(ctx context.Context, r soap.RoundTripper, req *types.RemoveLicense) (*types.RemoveLicenseResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveLicenseBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveLicenseLabelBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveLicenseLabel         `xml:"urn:vim25 RemoveLicenseLabel,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveLicenseLabelResponse `xml:"urn:vim25 RemoveLicenseLabelResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveLicenseLabelBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveLicenseLabel(ctx context.Context, r soap.RoundTripper, req *types.RemoveLicenseLabel) (*types.RemoveLicenseLabelResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveLicenseLabelBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveMonitoredEntitiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveMonitoredEntities         `xml:"urn:vim25 RemoveMonitoredEntities,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveMonitoredEntitiesResponse `xml:"urn:vim25 RemoveMonitoredEntitiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveMonitoredEntitiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveMonitoredEntities(ctx context.Context, r soap.RoundTripper, req *types.RemoveMonitoredEntities) (*types.RemoveMonitoredEntitiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveMonitoredEntitiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveNetworkResourcePoolBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveNetworkResourcePool         `xml:"urn:vim25 RemoveNetworkResourcePool,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveNetworkResourcePoolResponse `xml:"urn:vim25 RemoveNetworkResourcePoolResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveNetworkResourcePoolBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveNetworkResourcePool(ctx context.Context, r soap.RoundTripper, req *types.RemoveNetworkResourcePool) (*types.RemoveNetworkResourcePoolResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveNetworkResourcePoolBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemovePerfIntervalBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemovePerfInterval         `xml:"urn:vim25 RemovePerfInterval,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemovePerfIntervalResponse `xml:"urn:vim25 RemovePerfIntervalResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemovePerfIntervalBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemovePerfInterval(ctx context.Context, r soap.RoundTripper, req *types.RemovePerfInterval) (*types.RemovePerfIntervalResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemovePerfIntervalBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemovePortGroupBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemovePortGroup         `xml:"urn:vim25 RemovePortGroup,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemovePortGroupResponse `xml:"urn:vim25 RemovePortGroupResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemovePortGroupBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemovePortGroup(ctx context.Context, r soap.RoundTripper, req *types.RemovePortGroup) (*types.RemovePortGroupResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemovePortGroupBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveScheduledTaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveScheduledTask         `xml:"urn:vim25 RemoveScheduledTask,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveScheduledTaskResponse `xml:"urn:vim25 RemoveScheduledTaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveScheduledTaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveScheduledTask(ctx context.Context, r soap.RoundTripper, req *types.RemoveScheduledTask) (*types.RemoveScheduledTaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveScheduledTaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveServiceConsoleVirtualNicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveServiceConsoleVirtualNic         `xml:"urn:vim25 RemoveServiceConsoleVirtualNic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveServiceConsoleVirtualNicResponse `xml:"urn:vim25 RemoveServiceConsoleVirtualNicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveServiceConsoleVirtualNicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveServiceConsoleVirtualNic(ctx context.Context, r soap.RoundTripper, req *types.RemoveServiceConsoleVirtualNic) (*types.RemoveServiceConsoleVirtualNicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveServiceConsoleVirtualNicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveSmartCardTrustAnchorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveSmartCardTrustAnchor         `xml:"urn:vim25 RemoveSmartCardTrustAnchor,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveSmartCardTrustAnchorResponse `xml:"urn:vim25 RemoveSmartCardTrustAnchorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveSmartCardTrustAnchorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveSmartCardTrustAnchor(ctx context.Context, r soap.RoundTripper, req *types.RemoveSmartCardTrustAnchor) (*types.RemoveSmartCardTrustAnchorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveSmartCardTrustAnchorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveSmartCardTrustAnchorByFingerprintBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveSmartCardTrustAnchorByFingerprint         `xml:"urn:vim25 RemoveSmartCardTrustAnchorByFingerprint,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveSmartCardTrustAnchorByFingerprintResponse `xml:"urn:vim25 RemoveSmartCardTrustAnchorByFingerprintResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveSmartCardTrustAnchorByFingerprintBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveSmartCardTrustAnchorByFingerprint(ctx context.Context, r soap.RoundTripper, req *types.RemoveSmartCardTrustAnchorByFingerprint) (*types.RemoveSmartCardTrustAnchorByFingerprintResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveSmartCardTrustAnchorByFingerprintBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveSnapshot_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveSnapshot_Task         `xml:"urn:vim25 RemoveSnapshot_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveSnapshot_TaskResponse `xml:"urn:vim25 RemoveSnapshot_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveSnapshot_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveSnapshot_Task(ctx context.Context, r soap.RoundTripper, req *types.RemoveSnapshot_Task) (*types.RemoveSnapshot_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveSnapshot_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveUserBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveUser         `xml:"urn:vim25 RemoveUser,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveUserResponse `xml:"urn:vim25 RemoveUserResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveUserBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveUser(ctx context.Context, r soap.RoundTripper, req *types.RemoveUser) (*types.RemoveUserResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveUserBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveVirtualNicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveVirtualNic         `xml:"urn:vim25 RemoveVirtualNic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveVirtualNicResponse `xml:"urn:vim25 RemoveVirtualNicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveVirtualNicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveVirtualNic(ctx context.Context, r soap.RoundTripper, req *types.RemoveVirtualNic) (*types.RemoveVirtualNicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveVirtualNicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoveVirtualSwitchBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RemoveVirtualSwitch         `xml:"urn:vim25 RemoveVirtualSwitch,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RemoveVirtualSwitchResponse `xml:"urn:vim25 RemoveVirtualSwitchResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RemoveVirtualSwitchBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RemoveVirtualSwitch(ctx context.Context, r soap.RoundTripper, req *types.RemoveVirtualSwitch) (*types.RemoveVirtualSwitchResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RemoveVirtualSwitchBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RenameCustomFieldDefBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RenameCustomFieldDef         `xml:"urn:vim25 RenameCustomFieldDef,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RenameCustomFieldDefResponse `xml:"urn:vim25 RenameCustomFieldDefResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RenameCustomFieldDefBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RenameCustomFieldDef(ctx context.Context, r soap.RoundTripper, req *types.RenameCustomFieldDef) (*types.RenameCustomFieldDefResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RenameCustomFieldDefBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RenameCustomizationSpecBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RenameCustomizationSpec         `xml:"urn:vim25 RenameCustomizationSpec,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RenameCustomizationSpecResponse `xml:"urn:vim25 RenameCustomizationSpecResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RenameCustomizationSpecBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RenameCustomizationSpec(ctx context.Context, r soap.RoundTripper, req *types.RenameCustomizationSpec) (*types.RenameCustomizationSpecResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RenameCustomizationSpecBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RenameDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RenameDatastore         `xml:"urn:vim25 RenameDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RenameDatastoreResponse `xml:"urn:vim25 RenameDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RenameDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RenameDatastore(ctx context.Context, r soap.RoundTripper, req *types.RenameDatastore) (*types.RenameDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RenameDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RenameSnapshotBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RenameSnapshot         `xml:"urn:vim25 RenameSnapshot,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RenameSnapshotResponse `xml:"urn:vim25 RenameSnapshotResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RenameSnapshotBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RenameSnapshot(ctx context.Context, r soap.RoundTripper, req *types.RenameSnapshot) (*types.RenameSnapshotResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RenameSnapshotBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RenameVStorageObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RenameVStorageObject         `xml:"urn:vim25 RenameVStorageObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RenameVStorageObjectResponse `xml:"urn:vim25 RenameVStorageObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RenameVStorageObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RenameVStorageObject(ctx context.Context, r soap.RoundTripper, req *types.RenameVStorageObject) (*types.RenameVStorageObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RenameVStorageObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Rename_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.Rename_Task         `xml:"urn:vim25 Rename_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.Rename_TaskResponse `xml:"urn:vim25 Rename_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *Rename_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Rename_Task(ctx context.Context, r soap.RoundTripper, req *types.Rename_Task) (*types.Rename_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody Rename_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReplaceCACertificatesAndCRLsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReplaceCACertificatesAndCRLs         `xml:"urn:vim25 ReplaceCACertificatesAndCRLs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReplaceCACertificatesAndCRLsResponse `xml:"urn:vim25 ReplaceCACertificatesAndCRLsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReplaceCACertificatesAndCRLsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReplaceCACertificatesAndCRLs(ctx context.Context, r soap.RoundTripper, req *types.ReplaceCACertificatesAndCRLs) (*types.ReplaceCACertificatesAndCRLsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReplaceCACertificatesAndCRLsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ReplaceSmartCardTrustAnchorsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ReplaceSmartCardTrustAnchors         `xml:"urn:vim25 ReplaceSmartCardTrustAnchors,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ReplaceSmartCardTrustAnchorsResponse `xml:"urn:vim25 ReplaceSmartCardTrustAnchorsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ReplaceSmartCardTrustAnchorsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ReplaceSmartCardTrustAnchors(ctx context.Context, r soap.RoundTripper, req *types.ReplaceSmartCardTrustAnchors) (*types.ReplaceSmartCardTrustAnchorsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ReplaceSmartCardTrustAnchorsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RescanAllHbaBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RescanAllHba         `xml:"urn:vim25 RescanAllHba,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RescanAllHbaResponse `xml:"urn:vim25 RescanAllHbaResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RescanAllHbaBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RescanAllHba(ctx context.Context, r soap.RoundTripper, req *types.RescanAllHba) (*types.RescanAllHbaResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RescanAllHbaBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RescanHbaBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RescanHba         `xml:"urn:vim25 RescanHba,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RescanHbaResponse `xml:"urn:vim25 RescanHbaResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RescanHbaBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RescanHba(ctx context.Context, r soap.RoundTripper, req *types.RescanHba) (*types.RescanHbaResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RescanHbaBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RescanVffsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RescanVffs         `xml:"urn:vim25 RescanVffs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RescanVffsResponse `xml:"urn:vim25 RescanVffsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RescanVffsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RescanVffs(ctx context.Context, r soap.RoundTripper, req *types.RescanVffs) (*types.RescanVffsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RescanVffsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RescanVmfsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RescanVmfs         `xml:"urn:vim25 RescanVmfs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RescanVmfsResponse `xml:"urn:vim25 RescanVmfsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RescanVmfsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RescanVmfs(ctx context.Context, r soap.RoundTripper, req *types.RescanVmfs) (*types.RescanVmfsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RescanVmfsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResetCollectorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResetCollector         `xml:"urn:vim25 ResetCollector,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResetCollectorResponse `xml:"urn:vim25 ResetCollectorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResetCollectorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResetCollector(ctx context.Context, r soap.RoundTripper, req *types.ResetCollector) (*types.ResetCollectorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResetCollectorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResetCounterLevelMappingBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResetCounterLevelMapping         `xml:"urn:vim25 ResetCounterLevelMapping,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResetCounterLevelMappingResponse `xml:"urn:vim25 ResetCounterLevelMappingResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResetCounterLevelMappingBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResetCounterLevelMapping(ctx context.Context, r soap.RoundTripper, req *types.ResetCounterLevelMapping) (*types.ResetCounterLevelMappingResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResetCounterLevelMappingBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResetEntityPermissionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResetEntityPermissions         `xml:"urn:vim25 ResetEntityPermissions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResetEntityPermissionsResponse `xml:"urn:vim25 ResetEntityPermissionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResetEntityPermissionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResetEntityPermissions(ctx context.Context, r soap.RoundTripper, req *types.ResetEntityPermissions) (*types.ResetEntityPermissionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResetEntityPermissionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResetFirmwareToFactoryDefaultsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResetFirmwareToFactoryDefaults         `xml:"urn:vim25 ResetFirmwareToFactoryDefaults,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResetFirmwareToFactoryDefaultsResponse `xml:"urn:vim25 ResetFirmwareToFactoryDefaultsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResetFirmwareToFactoryDefaultsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResetFirmwareToFactoryDefaults(ctx context.Context, r soap.RoundTripper, req *types.ResetFirmwareToFactoryDefaults) (*types.ResetFirmwareToFactoryDefaultsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResetFirmwareToFactoryDefaultsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResetGuestInformationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResetGuestInformation         `xml:"urn:vim25 ResetGuestInformation,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResetGuestInformationResponse `xml:"urn:vim25 ResetGuestInformationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResetGuestInformationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResetGuestInformation(ctx context.Context, r soap.RoundTripper, req *types.ResetGuestInformation) (*types.ResetGuestInformationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResetGuestInformationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResetListViewBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResetListView         `xml:"urn:vim25 ResetListView,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResetListViewResponse `xml:"urn:vim25 ResetListViewResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResetListViewBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResetListView(ctx context.Context, r soap.RoundTripper, req *types.ResetListView) (*types.ResetListViewResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResetListViewBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResetListViewFromViewBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResetListViewFromView         `xml:"urn:vim25 ResetListViewFromView,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResetListViewFromViewResponse `xml:"urn:vim25 ResetListViewFromViewResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResetListViewFromViewBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResetListViewFromView(ctx context.Context, r soap.RoundTripper, req *types.ResetListViewFromView) (*types.ResetListViewFromViewResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResetListViewFromViewBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResetSystemHealthInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResetSystemHealthInfo         `xml:"urn:vim25 ResetSystemHealthInfo,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResetSystemHealthInfoResponse `xml:"urn:vim25 ResetSystemHealthInfoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResetSystemHealthInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResetSystemHealthInfo(ctx context.Context, r soap.RoundTripper, req *types.ResetSystemHealthInfo) (*types.ResetSystemHealthInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResetSystemHealthInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResetVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResetVM_Task         `xml:"urn:vim25 ResetVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResetVM_TaskResponse `xml:"urn:vim25 ResetVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResetVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResetVM_Task(ctx context.Context, r soap.RoundTripper, req *types.ResetVM_Task) (*types.ResetVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResetVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResignatureUnresolvedVmfsVolume_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResignatureUnresolvedVmfsVolume_Task         `xml:"urn:vim25 ResignatureUnresolvedVmfsVolume_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResignatureUnresolvedVmfsVolume_TaskResponse `xml:"urn:vim25 ResignatureUnresolvedVmfsVolume_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResignatureUnresolvedVmfsVolume_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResignatureUnresolvedVmfsVolume_Task(ctx context.Context, r soap.RoundTripper, req *types.ResignatureUnresolvedVmfsVolume_Task) (*types.ResignatureUnresolvedVmfsVolume_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResignatureUnresolvedVmfsVolume_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResolveInstallationErrorsOnCluster_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResolveInstallationErrorsOnCluster_Task         `xml:"urn:vim25 ResolveInstallationErrorsOnCluster_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResolveInstallationErrorsOnCluster_TaskResponse `xml:"urn:vim25 ResolveInstallationErrorsOnCluster_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResolveInstallationErrorsOnCluster_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResolveInstallationErrorsOnCluster_Task(ctx context.Context, r soap.RoundTripper, req *types.ResolveInstallationErrorsOnCluster_Task) (*types.ResolveInstallationErrorsOnCluster_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResolveInstallationErrorsOnCluster_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResolveInstallationErrorsOnHost_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResolveInstallationErrorsOnHost_Task         `xml:"urn:vim25 ResolveInstallationErrorsOnHost_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResolveInstallationErrorsOnHost_TaskResponse `xml:"urn:vim25 ResolveInstallationErrorsOnHost_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResolveInstallationErrorsOnHost_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResolveInstallationErrorsOnHost_Task(ctx context.Context, r soap.RoundTripper, req *types.ResolveInstallationErrorsOnHost_Task) (*types.ResolveInstallationErrorsOnHost_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResolveInstallationErrorsOnHost_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResolveMultipleUnresolvedVmfsVolumesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResolveMultipleUnresolvedVmfsVolumes         `xml:"urn:vim25 ResolveMultipleUnresolvedVmfsVolumes,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResolveMultipleUnresolvedVmfsVolumesResponse `xml:"urn:vim25 ResolveMultipleUnresolvedVmfsVolumesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResolveMultipleUnresolvedVmfsVolumesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResolveMultipleUnresolvedVmfsVolumes(ctx context.Context, r soap.RoundTripper, req *types.ResolveMultipleUnresolvedVmfsVolumes) (*types.ResolveMultipleUnresolvedVmfsVolumesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResolveMultipleUnresolvedVmfsVolumesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ResolveMultipleUnresolvedVmfsVolumesEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ResolveMultipleUnresolvedVmfsVolumesEx_Task         `xml:"urn:vim25 ResolveMultipleUnresolvedVmfsVolumesEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ResolveMultipleUnresolvedVmfsVolumesEx_TaskResponse `xml:"urn:vim25 ResolveMultipleUnresolvedVmfsVolumesEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ResolveMultipleUnresolvedVmfsVolumesEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ResolveMultipleUnresolvedVmfsVolumesEx_Task(ctx context.Context, r soap.RoundTripper, req *types.ResolveMultipleUnresolvedVmfsVolumesEx_Task) (*types.ResolveMultipleUnresolvedVmfsVolumesEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ResolveMultipleUnresolvedVmfsVolumesEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RestartServiceBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RestartService         `xml:"urn:vim25 RestartService,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RestartServiceResponse `xml:"urn:vim25 RestartServiceResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RestartServiceBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RestartService(ctx context.Context, r soap.RoundTripper, req *types.RestartService) (*types.RestartServiceResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RestartServiceBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RestartServiceConsoleVirtualNicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RestartServiceConsoleVirtualNic         `xml:"urn:vim25 RestartServiceConsoleVirtualNic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RestartServiceConsoleVirtualNicResponse `xml:"urn:vim25 RestartServiceConsoleVirtualNicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RestartServiceConsoleVirtualNicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RestartServiceConsoleVirtualNic(ctx context.Context, r soap.RoundTripper, req *types.RestartServiceConsoleVirtualNic) (*types.RestartServiceConsoleVirtualNicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RestartServiceConsoleVirtualNicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RestoreFirmwareConfigurationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RestoreFirmwareConfiguration         `xml:"urn:vim25 RestoreFirmwareConfiguration,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RestoreFirmwareConfigurationResponse `xml:"urn:vim25 RestoreFirmwareConfigurationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RestoreFirmwareConfigurationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RestoreFirmwareConfiguration(ctx context.Context, r soap.RoundTripper, req *types.RestoreFirmwareConfiguration) (*types.RestoreFirmwareConfigurationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RestoreFirmwareConfigurationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveAllPermissionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveAllPermissions         `xml:"urn:vim25 RetrieveAllPermissions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveAllPermissionsResponse `xml:"urn:vim25 RetrieveAllPermissionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveAllPermissionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveAllPermissions(ctx context.Context, r soap.RoundTripper, req *types.RetrieveAllPermissions) (*types.RetrieveAllPermissionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveAllPermissionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveAnswerFileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveAnswerFile         `xml:"urn:vim25 RetrieveAnswerFile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveAnswerFileResponse `xml:"urn:vim25 RetrieveAnswerFileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveAnswerFileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveAnswerFile(ctx context.Context, r soap.RoundTripper, req *types.RetrieveAnswerFile) (*types.RetrieveAnswerFileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveAnswerFileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveAnswerFileForProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveAnswerFileForProfile         `xml:"urn:vim25 RetrieveAnswerFileForProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveAnswerFileForProfileResponse `xml:"urn:vim25 RetrieveAnswerFileForProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveAnswerFileForProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveAnswerFileForProfile(ctx context.Context, r soap.RoundTripper, req *types.RetrieveAnswerFileForProfile) (*types.RetrieveAnswerFileForProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveAnswerFileForProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveArgumentDescriptionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveArgumentDescription         `xml:"urn:vim25 RetrieveArgumentDescription,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveArgumentDescriptionResponse `xml:"urn:vim25 RetrieveArgumentDescriptionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveArgumentDescriptionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveArgumentDescription(ctx context.Context, r soap.RoundTripper, req *types.RetrieveArgumentDescription) (*types.RetrieveArgumentDescriptionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveArgumentDescriptionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveClientCertBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveClientCert         `xml:"urn:vim25 RetrieveClientCert,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveClientCertResponse `xml:"urn:vim25 RetrieveClientCertResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveClientCertBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveClientCert(ctx context.Context, r soap.RoundTripper, req *types.RetrieveClientCert) (*types.RetrieveClientCertResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveClientCertBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveClientCsrBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveClientCsr         `xml:"urn:vim25 RetrieveClientCsr,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveClientCsrResponse `xml:"urn:vim25 RetrieveClientCsrResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveClientCsrBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveClientCsr(ctx context.Context, r soap.RoundTripper, req *types.RetrieveClientCsr) (*types.RetrieveClientCsrResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveClientCsrBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveDasAdvancedRuntimeInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveDasAdvancedRuntimeInfo         `xml:"urn:vim25 RetrieveDasAdvancedRuntimeInfo,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveDasAdvancedRuntimeInfoResponse `xml:"urn:vim25 RetrieveDasAdvancedRuntimeInfoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveDasAdvancedRuntimeInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveDasAdvancedRuntimeInfo(ctx context.Context, r soap.RoundTripper, req *types.RetrieveDasAdvancedRuntimeInfo) (*types.RetrieveDasAdvancedRuntimeInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveDasAdvancedRuntimeInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveDescriptionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveDescription         `xml:"urn:vim25 RetrieveDescription,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveDescriptionResponse `xml:"urn:vim25 RetrieveDescriptionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveDescriptionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveDescription(ctx context.Context, r soap.RoundTripper, req *types.RetrieveDescription) (*types.RetrieveDescriptionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveDescriptionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveDiskPartitionInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveDiskPartitionInfo         `xml:"urn:vim25 RetrieveDiskPartitionInfo,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveDiskPartitionInfoResponse `xml:"urn:vim25 RetrieveDiskPartitionInfoResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveDiskPartitionInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveDiskPartitionInfo(ctx context.Context, r soap.RoundTripper, req *types.RetrieveDiskPartitionInfo) (*types.RetrieveDiskPartitionInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveDiskPartitionInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveEntityPermissionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveEntityPermissions         `xml:"urn:vim25 RetrieveEntityPermissions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveEntityPermissionsResponse `xml:"urn:vim25 RetrieveEntityPermissionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveEntityPermissionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveEntityPermissions(ctx context.Context, r soap.RoundTripper, req *types.RetrieveEntityPermissions) (*types.RetrieveEntityPermissionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveEntityPermissionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveEntityScheduledTaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveEntityScheduledTask         `xml:"urn:vim25 RetrieveEntityScheduledTask,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveEntityScheduledTaskResponse `xml:"urn:vim25 RetrieveEntityScheduledTaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveEntityScheduledTaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveEntityScheduledTask(ctx context.Context, r soap.RoundTripper, req *types.RetrieveEntityScheduledTask) (*types.RetrieveEntityScheduledTaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveEntityScheduledTaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveHardwareUptimeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveHardwareUptime         `xml:"urn:vim25 RetrieveHardwareUptime,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveHardwareUptimeResponse `xml:"urn:vim25 RetrieveHardwareUptimeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveHardwareUptimeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveHardwareUptime(ctx context.Context, r soap.RoundTripper, req *types.RetrieveHardwareUptime) (*types.RetrieveHardwareUptimeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveHardwareUptimeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveHostAccessControlEntriesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveHostAccessControlEntries         `xml:"urn:vim25 RetrieveHostAccessControlEntries,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveHostAccessControlEntriesResponse `xml:"urn:vim25 RetrieveHostAccessControlEntriesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveHostAccessControlEntriesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveHostAccessControlEntries(ctx context.Context, r soap.RoundTripper, req *types.RetrieveHostAccessControlEntries) (*types.RetrieveHostAccessControlEntriesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveHostAccessControlEntriesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveHostCustomizationsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveHostCustomizations         `xml:"urn:vim25 RetrieveHostCustomizations,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveHostCustomizationsResponse `xml:"urn:vim25 RetrieveHostCustomizationsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveHostCustomizationsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveHostCustomizations(ctx context.Context, r soap.RoundTripper, req *types.RetrieveHostCustomizations) (*types.RetrieveHostCustomizationsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveHostCustomizationsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveHostCustomizationsForProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveHostCustomizationsForProfile         `xml:"urn:vim25 RetrieveHostCustomizationsForProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveHostCustomizationsForProfileResponse `xml:"urn:vim25 RetrieveHostCustomizationsForProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveHostCustomizationsForProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveHostCustomizationsForProfile(ctx context.Context, r soap.RoundTripper, req *types.RetrieveHostCustomizationsForProfile) (*types.RetrieveHostCustomizationsForProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveHostCustomizationsForProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveHostSpecificationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveHostSpecification         `xml:"urn:vim25 RetrieveHostSpecification,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveHostSpecificationResponse `xml:"urn:vim25 RetrieveHostSpecificationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveHostSpecificationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveHostSpecification(ctx context.Context, r soap.RoundTripper, req *types.RetrieveHostSpecification) (*types.RetrieveHostSpecificationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveHostSpecificationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveKmipServerCertBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveKmipServerCert         `xml:"urn:vim25 RetrieveKmipServerCert,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveKmipServerCertResponse `xml:"urn:vim25 RetrieveKmipServerCertResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveKmipServerCertBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveKmipServerCert(ctx context.Context, r soap.RoundTripper, req *types.RetrieveKmipServerCert) (*types.RetrieveKmipServerCertResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveKmipServerCertBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveKmipServersStatus_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveKmipServersStatus_Task         `xml:"urn:vim25 RetrieveKmipServersStatus_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveKmipServersStatus_TaskResponse `xml:"urn:vim25 RetrieveKmipServersStatus_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveKmipServersStatus_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveKmipServersStatus_Task(ctx context.Context, r soap.RoundTripper, req *types.RetrieveKmipServersStatus_Task) (*types.RetrieveKmipServersStatus_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveKmipServersStatus_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveObjectScheduledTaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveObjectScheduledTask         `xml:"urn:vim25 RetrieveObjectScheduledTask,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveObjectScheduledTaskResponse `xml:"urn:vim25 RetrieveObjectScheduledTaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveObjectScheduledTaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveObjectScheduledTask(ctx context.Context, r soap.RoundTripper, req *types.RetrieveObjectScheduledTask) (*types.RetrieveObjectScheduledTaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveObjectScheduledTaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveProductComponentsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveProductComponents         `xml:"urn:vim25 RetrieveProductComponents,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveProductComponentsResponse `xml:"urn:vim25 RetrieveProductComponentsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveProductComponentsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveProductComponents(ctx context.Context, r soap.RoundTripper, req *types.RetrieveProductComponents) (*types.RetrieveProductComponentsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveProductComponentsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrievePropertiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveProperties         `xml:"urn:vim25 RetrieveProperties,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrievePropertiesResponse `xml:"urn:vim25 RetrievePropertiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrievePropertiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveProperties(ctx context.Context, r soap.RoundTripper, req *types.RetrieveProperties) (*types.RetrievePropertiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrievePropertiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrievePropertiesExBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrievePropertiesEx         `xml:"urn:vim25 RetrievePropertiesEx,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrievePropertiesExResponse `xml:"urn:vim25 RetrievePropertiesExResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrievePropertiesExBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrievePropertiesEx(ctx context.Context, r soap.RoundTripper, req *types.RetrievePropertiesEx) (*types.RetrievePropertiesExResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrievePropertiesExBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveRolePermissionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveRolePermissions         `xml:"urn:vim25 RetrieveRolePermissions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveRolePermissionsResponse `xml:"urn:vim25 RetrieveRolePermissionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveRolePermissionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveRolePermissions(ctx context.Context, r soap.RoundTripper, req *types.RetrieveRolePermissions) (*types.RetrieveRolePermissionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveRolePermissionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveSelfSignedClientCertBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveSelfSignedClientCert         `xml:"urn:vim25 RetrieveSelfSignedClientCert,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveSelfSignedClientCertResponse `xml:"urn:vim25 RetrieveSelfSignedClientCertResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveSelfSignedClientCertBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveSelfSignedClientCert(ctx context.Context, r soap.RoundTripper, req *types.RetrieveSelfSignedClientCert) (*types.RetrieveSelfSignedClientCertResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveSelfSignedClientCertBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveServiceContentBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveServiceContent         `xml:"urn:vim25 RetrieveServiceContent,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveServiceContentResponse `xml:"urn:vim25 RetrieveServiceContentResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveServiceContentBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveServiceContent(ctx context.Context, r soap.RoundTripper, req *types.RetrieveServiceContent) (*types.RetrieveServiceContentResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveServiceContentBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveUserGroupsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveUserGroups         `xml:"urn:vim25 RetrieveUserGroups,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveUserGroupsResponse `xml:"urn:vim25 RetrieveUserGroupsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveUserGroupsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveUserGroups(ctx context.Context, r soap.RoundTripper, req *types.RetrieveUserGroups) (*types.RetrieveUserGroupsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveUserGroupsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveVStorageObjectBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveVStorageObject         `xml:"urn:vim25 RetrieveVStorageObject,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveVStorageObjectResponse `xml:"urn:vim25 RetrieveVStorageObjectResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveVStorageObjectBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveVStorageObject(ctx context.Context, r soap.RoundTripper, req *types.RetrieveVStorageObject) (*types.RetrieveVStorageObjectResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveVStorageObjectBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveVStorageObjectStateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveVStorageObjectState         `xml:"urn:vim25 RetrieveVStorageObjectState,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveVStorageObjectStateResponse `xml:"urn:vim25 RetrieveVStorageObjectStateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveVStorageObjectStateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveVStorageObjectState(ctx context.Context, r soap.RoundTripper, req *types.RetrieveVStorageObjectState) (*types.RetrieveVStorageObjectStateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveVStorageObjectStateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RevertToCurrentSnapshot_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RevertToCurrentSnapshot_Task         `xml:"urn:vim25 RevertToCurrentSnapshot_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RevertToCurrentSnapshot_TaskResponse `xml:"urn:vim25 RevertToCurrentSnapshot_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RevertToCurrentSnapshot_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RevertToCurrentSnapshot_Task(ctx context.Context, r soap.RoundTripper, req *types.RevertToCurrentSnapshot_Task) (*types.RevertToCurrentSnapshot_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RevertToCurrentSnapshot_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RevertToSnapshot_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RevertToSnapshot_Task         `xml:"urn:vim25 RevertToSnapshot_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RevertToSnapshot_TaskResponse `xml:"urn:vim25 RevertToSnapshot_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RevertToSnapshot_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RevertToSnapshot_Task(ctx context.Context, r soap.RoundTripper, req *types.RevertToSnapshot_Task) (*types.RevertToSnapshot_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RevertToSnapshot_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RewindCollectorBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RewindCollector         `xml:"urn:vim25 RewindCollector,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RewindCollectorResponse `xml:"urn:vim25 RewindCollectorResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RewindCollectorBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RewindCollector(ctx context.Context, r soap.RoundTripper, req *types.RewindCollector) (*types.RewindCollectorResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RewindCollectorBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RunScheduledTaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RunScheduledTask         `xml:"urn:vim25 RunScheduledTask,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RunScheduledTaskResponse `xml:"urn:vim25 RunScheduledTaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RunScheduledTaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RunScheduledTask(ctx context.Context, r soap.RoundTripper, req *types.RunScheduledTask) (*types.RunScheduledTaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RunScheduledTaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RunVsanPhysicalDiskDiagnosticsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RunVsanPhysicalDiskDiagnostics         `xml:"urn:vim25 RunVsanPhysicalDiskDiagnostics,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.RunVsanPhysicalDiskDiagnosticsResponse `xml:"urn:vim25 RunVsanPhysicalDiskDiagnosticsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RunVsanPhysicalDiskDiagnosticsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RunVsanPhysicalDiskDiagnostics(ctx context.Context, r soap.RoundTripper, req *types.RunVsanPhysicalDiskDiagnostics) (*types.RunVsanPhysicalDiskDiagnosticsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RunVsanPhysicalDiskDiagnosticsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ScanHostPatchV2_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ScanHostPatchV2_Task         `xml:"urn:vim25 ScanHostPatchV2_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ScanHostPatchV2_TaskResponse `xml:"urn:vim25 ScanHostPatchV2_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ScanHostPatchV2_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ScanHostPatchV2_Task(ctx context.Context, r soap.RoundTripper, req *types.ScanHostPatchV2_Task) (*types.ScanHostPatchV2_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ScanHostPatchV2_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ScanHostPatch_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ScanHostPatch_Task         `xml:"urn:vim25 ScanHostPatch_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ScanHostPatch_TaskResponse `xml:"urn:vim25 ScanHostPatch_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ScanHostPatch_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ScanHostPatch_Task(ctx context.Context, r soap.RoundTripper, req *types.ScanHostPatch_Task) (*types.ScanHostPatch_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ScanHostPatch_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ScheduleReconcileDatastoreInventoryBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ScheduleReconcileDatastoreInventory         `xml:"urn:vim25 ScheduleReconcileDatastoreInventory,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ScheduleReconcileDatastoreInventoryResponse `xml:"urn:vim25 ScheduleReconcileDatastoreInventoryResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ScheduleReconcileDatastoreInventoryBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ScheduleReconcileDatastoreInventory(ctx context.Context, r soap.RoundTripper, req *types.ScheduleReconcileDatastoreInventory) (*types.ScheduleReconcileDatastoreInventoryResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ScheduleReconcileDatastoreInventoryBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SearchDatastoreSubFolders_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SearchDatastoreSubFolders_Task         `xml:"urn:vim25 SearchDatastoreSubFolders_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SearchDatastoreSubFolders_TaskResponse `xml:"urn:vim25 SearchDatastoreSubFolders_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SearchDatastoreSubFolders_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SearchDatastoreSubFolders_Task(ctx context.Context, r soap.RoundTripper, req *types.SearchDatastoreSubFolders_Task) (*types.SearchDatastoreSubFolders_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SearchDatastoreSubFolders_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SearchDatastore_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SearchDatastore_Task         `xml:"urn:vim25 SearchDatastore_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SearchDatastore_TaskResponse `xml:"urn:vim25 SearchDatastore_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SearchDatastore_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SearchDatastore_Task(ctx context.Context, r soap.RoundTripper, req *types.SearchDatastore_Task) (*types.SearchDatastore_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SearchDatastore_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SelectActivePartitionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SelectActivePartition         `xml:"urn:vim25 SelectActivePartition,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SelectActivePartitionResponse `xml:"urn:vim25 SelectActivePartitionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SelectActivePartitionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SelectActivePartition(ctx context.Context, r soap.RoundTripper, req *types.SelectActivePartition) (*types.SelectActivePartitionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SelectActivePartitionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SelectVnicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SelectVnic         `xml:"urn:vim25 SelectVnic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SelectVnicResponse `xml:"urn:vim25 SelectVnicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SelectVnicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SelectVnic(ctx context.Context, r soap.RoundTripper, req *types.SelectVnic) (*types.SelectVnicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SelectVnicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SelectVnicForNicTypeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SelectVnicForNicType         `xml:"urn:vim25 SelectVnicForNicType,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SelectVnicForNicTypeResponse `xml:"urn:vim25 SelectVnicForNicTypeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SelectVnicForNicTypeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SelectVnicForNicType(ctx context.Context, r soap.RoundTripper, req *types.SelectVnicForNicType) (*types.SelectVnicForNicTypeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SelectVnicForNicTypeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SendNMIBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SendNMI         `xml:"urn:vim25 SendNMI,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SendNMIResponse `xml:"urn:vim25 SendNMIResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SendNMIBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SendNMI(ctx context.Context, r soap.RoundTripper, req *types.SendNMI) (*types.SendNMIResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SendNMIBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SendTestNotificationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SendTestNotification         `xml:"urn:vim25 SendTestNotification,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SendTestNotificationResponse `xml:"urn:vim25 SendTestNotificationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SendTestNotificationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SendTestNotification(ctx context.Context, r soap.RoundTripper, req *types.SendTestNotification) (*types.SendTestNotificationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SendTestNotificationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SessionIsActiveBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SessionIsActive         `xml:"urn:vim25 SessionIsActive,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SessionIsActiveResponse `xml:"urn:vim25 SessionIsActiveResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SessionIsActiveBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SessionIsActive(ctx context.Context, r soap.RoundTripper, req *types.SessionIsActive) (*types.SessionIsActiveResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SessionIsActiveBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetCollectorPageSizeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetCollectorPageSize         `xml:"urn:vim25 SetCollectorPageSize,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetCollectorPageSizeResponse `xml:"urn:vim25 SetCollectorPageSizeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetCollectorPageSizeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetCollectorPageSize(ctx context.Context, r soap.RoundTripper, req *types.SetCollectorPageSize) (*types.SetCollectorPageSizeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetCollectorPageSizeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetDisplayTopologyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetDisplayTopology         `xml:"urn:vim25 SetDisplayTopology,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetDisplayTopologyResponse `xml:"urn:vim25 SetDisplayTopologyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetDisplayTopologyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetDisplayTopology(ctx context.Context, r soap.RoundTripper, req *types.SetDisplayTopology) (*types.SetDisplayTopologyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetDisplayTopologyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetEntityPermissionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetEntityPermissions         `xml:"urn:vim25 SetEntityPermissions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetEntityPermissionsResponse `xml:"urn:vim25 SetEntityPermissionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetEntityPermissionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetEntityPermissions(ctx context.Context, r soap.RoundTripper, req *types.SetEntityPermissions) (*types.SetEntityPermissionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetEntityPermissionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetExtensionCertificateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetExtensionCertificate         `xml:"urn:vim25 SetExtensionCertificate,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetExtensionCertificateResponse `xml:"urn:vim25 SetExtensionCertificateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetExtensionCertificateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetExtensionCertificate(ctx context.Context, r soap.RoundTripper, req *types.SetExtensionCertificate) (*types.SetExtensionCertificateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetExtensionCertificateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetFieldBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetField         `xml:"urn:vim25 SetField,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetFieldResponse `xml:"urn:vim25 SetFieldResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetFieldBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetField(ctx context.Context, r soap.RoundTripper, req *types.SetField) (*types.SetFieldResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetFieldBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetLicenseEditionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetLicenseEdition         `xml:"urn:vim25 SetLicenseEdition,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetLicenseEditionResponse `xml:"urn:vim25 SetLicenseEditionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetLicenseEditionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetLicenseEdition(ctx context.Context, r soap.RoundTripper, req *types.SetLicenseEdition) (*types.SetLicenseEditionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetLicenseEditionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetLocaleBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetLocale         `xml:"urn:vim25 SetLocale,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetLocaleResponse `xml:"urn:vim25 SetLocaleResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetLocaleBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetLocale(ctx context.Context, r soap.RoundTripper, req *types.SetLocale) (*types.SetLocaleResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetLocaleBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetMultipathLunPolicyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetMultipathLunPolicy         `xml:"urn:vim25 SetMultipathLunPolicy,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetMultipathLunPolicyResponse `xml:"urn:vim25 SetMultipathLunPolicyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetMultipathLunPolicyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetMultipathLunPolicy(ctx context.Context, r soap.RoundTripper, req *types.SetMultipathLunPolicy) (*types.SetMultipathLunPolicyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetMultipathLunPolicyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetNFSUserBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetNFSUser         `xml:"urn:vim25 SetNFSUser,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetNFSUserResponse `xml:"urn:vim25 SetNFSUserResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetNFSUserBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetNFSUser(ctx context.Context, r soap.RoundTripper, req *types.SetNFSUser) (*types.SetNFSUserResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetNFSUserBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetPublicKeyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetPublicKey         `xml:"urn:vim25 SetPublicKey,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetPublicKeyResponse `xml:"urn:vim25 SetPublicKeyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetPublicKeyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetPublicKey(ctx context.Context, r soap.RoundTripper, req *types.SetPublicKey) (*types.SetPublicKeyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetPublicKeyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetRegistryValueInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetRegistryValueInGuest         `xml:"urn:vim25 SetRegistryValueInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetRegistryValueInGuestResponse `xml:"urn:vim25 SetRegistryValueInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetRegistryValueInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetRegistryValueInGuest(ctx context.Context, r soap.RoundTripper, req *types.SetRegistryValueInGuest) (*types.SetRegistryValueInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetRegistryValueInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetScreenResolutionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetScreenResolution         `xml:"urn:vim25 SetScreenResolution,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetScreenResolutionResponse `xml:"urn:vim25 SetScreenResolutionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetScreenResolutionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetScreenResolution(ctx context.Context, r soap.RoundTripper, req *types.SetScreenResolution) (*types.SetScreenResolutionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetScreenResolutionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetTaskDescriptionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetTaskDescription         `xml:"urn:vim25 SetTaskDescription,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetTaskDescriptionResponse `xml:"urn:vim25 SetTaskDescriptionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetTaskDescriptionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetTaskDescription(ctx context.Context, r soap.RoundTripper, req *types.SetTaskDescription) (*types.SetTaskDescriptionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetTaskDescriptionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetTaskStateBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetTaskState         `xml:"urn:vim25 SetTaskState,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetTaskStateResponse `xml:"urn:vim25 SetTaskStateResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetTaskStateBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetTaskState(ctx context.Context, r soap.RoundTripper, req *types.SetTaskState) (*types.SetTaskStateResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetTaskStateBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetVirtualDiskUuidBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SetVirtualDiskUuid         `xml:"urn:vim25 SetVirtualDiskUuid,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SetVirtualDiskUuidResponse `xml:"urn:vim25 SetVirtualDiskUuidResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SetVirtualDiskUuidBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetVirtualDiskUuid(ctx context.Context, r soap.RoundTripper, req *types.SetVirtualDiskUuid) (*types.SetVirtualDiskUuidResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SetVirtualDiskUuidBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ShrinkVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ShrinkVirtualDisk_Task         `xml:"urn:vim25 ShrinkVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ShrinkVirtualDisk_TaskResponse `xml:"urn:vim25 ShrinkVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ShrinkVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ShrinkVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.ShrinkVirtualDisk_Task) (*types.ShrinkVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ShrinkVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ShutdownGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ShutdownGuest         `xml:"urn:vim25 ShutdownGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ShutdownGuestResponse `xml:"urn:vim25 ShutdownGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ShutdownGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ShutdownGuest(ctx context.Context, r soap.RoundTripper, req *types.ShutdownGuest) (*types.ShutdownGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ShutdownGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ShutdownHost_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ShutdownHost_Task         `xml:"urn:vim25 ShutdownHost_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ShutdownHost_TaskResponse `xml:"urn:vim25 ShutdownHost_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ShutdownHost_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ShutdownHost_Task(ctx context.Context, r soap.RoundTripper, req *types.ShutdownHost_Task) (*types.ShutdownHost_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ShutdownHost_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StageHostPatch_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StageHostPatch_Task         `xml:"urn:vim25 StageHostPatch_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StageHostPatch_TaskResponse `xml:"urn:vim25 StageHostPatch_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StageHostPatch_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StageHostPatch_Task(ctx context.Context, r soap.RoundTripper, req *types.StageHostPatch_Task) (*types.StageHostPatch_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StageHostPatch_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StampAllRulesWithUuid_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StampAllRulesWithUuid_Task         `xml:"urn:vim25 StampAllRulesWithUuid_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StampAllRulesWithUuid_TaskResponse `xml:"urn:vim25 StampAllRulesWithUuid_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StampAllRulesWithUuid_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StampAllRulesWithUuid_Task(ctx context.Context, r soap.RoundTripper, req *types.StampAllRulesWithUuid_Task) (*types.StampAllRulesWithUuid_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StampAllRulesWithUuid_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StandbyGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StandbyGuest         `xml:"urn:vim25 StandbyGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StandbyGuestResponse `xml:"urn:vim25 StandbyGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StandbyGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StandbyGuest(ctx context.Context, r soap.RoundTripper, req *types.StandbyGuest) (*types.StandbyGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StandbyGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StartProgramInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StartProgramInGuest         `xml:"urn:vim25 StartProgramInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StartProgramInGuestResponse `xml:"urn:vim25 StartProgramInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StartProgramInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StartProgramInGuest(ctx context.Context, r soap.RoundTripper, req *types.StartProgramInGuest) (*types.StartProgramInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StartProgramInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StartRecording_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StartRecording_Task         `xml:"urn:vim25 StartRecording_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StartRecording_TaskResponse `xml:"urn:vim25 StartRecording_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StartRecording_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StartRecording_Task(ctx context.Context, r soap.RoundTripper, req *types.StartRecording_Task) (*types.StartRecording_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StartRecording_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StartReplaying_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StartReplaying_Task         `xml:"urn:vim25 StartReplaying_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StartReplaying_TaskResponse `xml:"urn:vim25 StartReplaying_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StartReplaying_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StartReplaying_Task(ctx context.Context, r soap.RoundTripper, req *types.StartReplaying_Task) (*types.StartReplaying_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StartReplaying_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StartServiceBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StartService         `xml:"urn:vim25 StartService,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StartServiceResponse `xml:"urn:vim25 StartServiceResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StartServiceBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StartService(ctx context.Context, r soap.RoundTripper, req *types.StartService) (*types.StartServiceResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StartServiceBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StopRecording_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StopRecording_Task         `xml:"urn:vim25 StopRecording_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StopRecording_TaskResponse `xml:"urn:vim25 StopRecording_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StopRecording_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StopRecording_Task(ctx context.Context, r soap.RoundTripper, req *types.StopRecording_Task) (*types.StopRecording_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StopRecording_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StopReplaying_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StopReplaying_Task         `xml:"urn:vim25 StopReplaying_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StopReplaying_TaskResponse `xml:"urn:vim25 StopReplaying_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StopReplaying_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StopReplaying_Task(ctx context.Context, r soap.RoundTripper, req *types.StopReplaying_Task) (*types.StopReplaying_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StopReplaying_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StopServiceBody struct {
0000000000000000000000000000000000000000;;		Req    *types.StopService         `xml:"urn:vim25 StopService,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.StopServiceResponse `xml:"urn:vim25 StopServiceResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *StopServiceBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func StopService(ctx context.Context, r soap.RoundTripper, req *types.StopService) (*types.StopServiceResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody StopServiceBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SuspendVApp_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SuspendVApp_Task         `xml:"urn:vim25 SuspendVApp_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SuspendVApp_TaskResponse `xml:"urn:vim25 SuspendVApp_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SuspendVApp_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SuspendVApp_Task(ctx context.Context, r soap.RoundTripper, req *types.SuspendVApp_Task) (*types.SuspendVApp_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SuspendVApp_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SuspendVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.SuspendVM_Task         `xml:"urn:vim25 SuspendVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.SuspendVM_TaskResponse `xml:"urn:vim25 SuspendVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *SuspendVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SuspendVM_Task(ctx context.Context, r soap.RoundTripper, req *types.SuspendVM_Task) (*types.SuspendVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody SuspendVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type TerminateFaultTolerantVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.TerminateFaultTolerantVM_Task         `xml:"urn:vim25 TerminateFaultTolerantVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.TerminateFaultTolerantVM_TaskResponse `xml:"urn:vim25 TerminateFaultTolerantVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *TerminateFaultTolerantVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TerminateFaultTolerantVM_Task(ctx context.Context, r soap.RoundTripper, req *types.TerminateFaultTolerantVM_Task) (*types.TerminateFaultTolerantVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody TerminateFaultTolerantVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type TerminateProcessInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.TerminateProcessInGuest         `xml:"urn:vim25 TerminateProcessInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.TerminateProcessInGuestResponse `xml:"urn:vim25 TerminateProcessInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *TerminateProcessInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TerminateProcessInGuest(ctx context.Context, r soap.RoundTripper, req *types.TerminateProcessInGuest) (*types.TerminateProcessInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody TerminateProcessInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type TerminateSessionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.TerminateSession         `xml:"urn:vim25 TerminateSession,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.TerminateSessionResponse `xml:"urn:vim25 TerminateSessionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *TerminateSessionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TerminateSession(ctx context.Context, r soap.RoundTripper, req *types.TerminateSession) (*types.TerminateSessionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody TerminateSessionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type TerminateVMBody struct {
0000000000000000000000000000000000000000;;		Req    *types.TerminateVM         `xml:"urn:vim25 TerminateVM,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.TerminateVMResponse `xml:"urn:vim25 TerminateVMResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *TerminateVMBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TerminateVM(ctx context.Context, r soap.RoundTripper, req *types.TerminateVM) (*types.TerminateVMResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody TerminateVMBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type TurnDiskLocatorLedOff_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.TurnDiskLocatorLedOff_Task         `xml:"urn:vim25 TurnDiskLocatorLedOff_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.TurnDiskLocatorLedOff_TaskResponse `xml:"urn:vim25 TurnDiskLocatorLedOff_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *TurnDiskLocatorLedOff_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TurnDiskLocatorLedOff_Task(ctx context.Context, r soap.RoundTripper, req *types.TurnDiskLocatorLedOff_Task) (*types.TurnDiskLocatorLedOff_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody TurnDiskLocatorLedOff_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type TurnDiskLocatorLedOn_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.TurnDiskLocatorLedOn_Task         `xml:"urn:vim25 TurnDiskLocatorLedOn_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.TurnDiskLocatorLedOn_TaskResponse `xml:"urn:vim25 TurnDiskLocatorLedOn_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *TurnDiskLocatorLedOn_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TurnDiskLocatorLedOn_Task(ctx context.Context, r soap.RoundTripper, req *types.TurnDiskLocatorLedOn_Task) (*types.TurnDiskLocatorLedOn_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody TurnDiskLocatorLedOn_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type TurnOffFaultToleranceForVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.TurnOffFaultToleranceForVM_Task         `xml:"urn:vim25 TurnOffFaultToleranceForVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.TurnOffFaultToleranceForVM_TaskResponse `xml:"urn:vim25 TurnOffFaultToleranceForVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *TurnOffFaultToleranceForVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TurnOffFaultToleranceForVM_Task(ctx context.Context, r soap.RoundTripper, req *types.TurnOffFaultToleranceForVM_Task) (*types.TurnOffFaultToleranceForVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody TurnOffFaultToleranceForVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnassignUserFromGroupBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnassignUserFromGroup         `xml:"urn:vim25 UnassignUserFromGroup,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnassignUserFromGroupResponse `xml:"urn:vim25 UnassignUserFromGroupResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnassignUserFromGroupBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnassignUserFromGroup(ctx context.Context, r soap.RoundTripper, req *types.UnassignUserFromGroup) (*types.UnassignUserFromGroupResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnassignUserFromGroupBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnbindVnicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnbindVnic         `xml:"urn:vim25 UnbindVnic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnbindVnicResponse `xml:"urn:vim25 UnbindVnicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnbindVnicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnbindVnic(ctx context.Context, r soap.RoundTripper, req *types.UnbindVnic) (*types.UnbindVnicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnbindVnicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UninstallHostPatch_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UninstallHostPatch_Task         `xml:"urn:vim25 UninstallHostPatch_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UninstallHostPatch_TaskResponse `xml:"urn:vim25 UninstallHostPatch_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UninstallHostPatch_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UninstallHostPatch_Task(ctx context.Context, r soap.RoundTripper, req *types.UninstallHostPatch_Task) (*types.UninstallHostPatch_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UninstallHostPatch_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UninstallIoFilter_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UninstallIoFilter_Task         `xml:"urn:vim25 UninstallIoFilter_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UninstallIoFilter_TaskResponse `xml:"urn:vim25 UninstallIoFilter_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UninstallIoFilter_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UninstallIoFilter_Task(ctx context.Context, r soap.RoundTripper, req *types.UninstallIoFilter_Task) (*types.UninstallIoFilter_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UninstallIoFilter_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UninstallServiceBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UninstallService         `xml:"urn:vim25 UninstallService,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UninstallServiceResponse `xml:"urn:vim25 UninstallServiceResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UninstallServiceBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UninstallService(ctx context.Context, r soap.RoundTripper, req *types.UninstallService) (*types.UninstallServiceResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UninstallServiceBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnmapVmfsVolumeEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnmapVmfsVolumeEx_Task         `xml:"urn:vim25 UnmapVmfsVolumeEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnmapVmfsVolumeEx_TaskResponse `xml:"urn:vim25 UnmapVmfsVolumeEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnmapVmfsVolumeEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnmapVmfsVolumeEx_Task(ctx context.Context, r soap.RoundTripper, req *types.UnmapVmfsVolumeEx_Task) (*types.UnmapVmfsVolumeEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnmapVmfsVolumeEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnmountDiskMapping_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnmountDiskMapping_Task         `xml:"urn:vim25 UnmountDiskMapping_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnmountDiskMapping_TaskResponse `xml:"urn:vim25 UnmountDiskMapping_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnmountDiskMapping_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnmountDiskMapping_Task(ctx context.Context, r soap.RoundTripper, req *types.UnmountDiskMapping_Task) (*types.UnmountDiskMapping_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnmountDiskMapping_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnmountForceMountedVmfsVolumeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnmountForceMountedVmfsVolume         `xml:"urn:vim25 UnmountForceMountedVmfsVolume,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnmountForceMountedVmfsVolumeResponse `xml:"urn:vim25 UnmountForceMountedVmfsVolumeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnmountForceMountedVmfsVolumeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnmountForceMountedVmfsVolume(ctx context.Context, r soap.RoundTripper, req *types.UnmountForceMountedVmfsVolume) (*types.UnmountForceMountedVmfsVolumeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnmountForceMountedVmfsVolumeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnmountToolsInstallerBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnmountToolsInstaller         `xml:"urn:vim25 UnmountToolsInstaller,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnmountToolsInstallerResponse `xml:"urn:vim25 UnmountToolsInstallerResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnmountToolsInstallerBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnmountToolsInstaller(ctx context.Context, r soap.RoundTripper, req *types.UnmountToolsInstaller) (*types.UnmountToolsInstallerResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnmountToolsInstallerBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnmountVffsVolumeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnmountVffsVolume         `xml:"urn:vim25 UnmountVffsVolume,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnmountVffsVolumeResponse `xml:"urn:vim25 UnmountVffsVolumeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnmountVffsVolumeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnmountVffsVolume(ctx context.Context, r soap.RoundTripper, req *types.UnmountVffsVolume) (*types.UnmountVffsVolumeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnmountVffsVolumeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnmountVmfsVolumeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnmountVmfsVolume         `xml:"urn:vim25 UnmountVmfsVolume,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnmountVmfsVolumeResponse `xml:"urn:vim25 UnmountVmfsVolumeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnmountVmfsVolumeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnmountVmfsVolume(ctx context.Context, r soap.RoundTripper, req *types.UnmountVmfsVolume) (*types.UnmountVmfsVolumeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnmountVmfsVolumeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnmountVmfsVolumeEx_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnmountVmfsVolumeEx_Task         `xml:"urn:vim25 UnmountVmfsVolumeEx_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnmountVmfsVolumeEx_TaskResponse `xml:"urn:vim25 UnmountVmfsVolumeEx_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnmountVmfsVolumeEx_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnmountVmfsVolumeEx_Task(ctx context.Context, r soap.RoundTripper, req *types.UnmountVmfsVolumeEx_Task) (*types.UnmountVmfsVolumeEx_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnmountVmfsVolumeEx_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnregisterAndDestroy_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnregisterAndDestroy_Task         `xml:"urn:vim25 UnregisterAndDestroy_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnregisterAndDestroy_TaskResponse `xml:"urn:vim25 UnregisterAndDestroy_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnregisterAndDestroy_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnregisterAndDestroy_Task(ctx context.Context, r soap.RoundTripper, req *types.UnregisterAndDestroy_Task) (*types.UnregisterAndDestroy_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnregisterAndDestroy_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnregisterExtensionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnregisterExtension         `xml:"urn:vim25 UnregisterExtension,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnregisterExtensionResponse `xml:"urn:vim25 UnregisterExtensionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnregisterExtensionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnregisterExtension(ctx context.Context, r soap.RoundTripper, req *types.UnregisterExtension) (*types.UnregisterExtensionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnregisterExtensionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnregisterHealthUpdateProviderBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnregisterHealthUpdateProvider         `xml:"urn:vim25 UnregisterHealthUpdateProvider,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnregisterHealthUpdateProviderResponse `xml:"urn:vim25 UnregisterHealthUpdateProviderResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnregisterHealthUpdateProviderBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnregisterHealthUpdateProvider(ctx context.Context, r soap.RoundTripper, req *types.UnregisterHealthUpdateProvider) (*types.UnregisterHealthUpdateProviderResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnregisterHealthUpdateProviderBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UnregisterVMBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UnregisterVM         `xml:"urn:vim25 UnregisterVM,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UnregisterVMResponse `xml:"urn:vim25 UnregisterVMResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UnregisterVMBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnregisterVM(ctx context.Context, r soap.RoundTripper, req *types.UnregisterVM) (*types.UnregisterVMResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UnregisterVMBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateAnswerFile_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateAnswerFile_Task         `xml:"urn:vim25 UpdateAnswerFile_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateAnswerFile_TaskResponse `xml:"urn:vim25 UpdateAnswerFile_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateAnswerFile_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateAnswerFile_Task(ctx context.Context, r soap.RoundTripper, req *types.UpdateAnswerFile_Task) (*types.UpdateAnswerFile_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateAnswerFile_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateAssignedLicenseBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateAssignedLicense         `xml:"urn:vim25 UpdateAssignedLicense,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateAssignedLicenseResponse `xml:"urn:vim25 UpdateAssignedLicenseResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateAssignedLicenseBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateAssignedLicense(ctx context.Context, r soap.RoundTripper, req *types.UpdateAssignedLicense) (*types.UpdateAssignedLicenseResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateAssignedLicenseBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateAuthorizationRoleBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateAuthorizationRole         `xml:"urn:vim25 UpdateAuthorizationRole,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateAuthorizationRoleResponse `xml:"urn:vim25 UpdateAuthorizationRoleResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateAuthorizationRoleBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateAuthorizationRole(ctx context.Context, r soap.RoundTripper, req *types.UpdateAuthorizationRole) (*types.UpdateAuthorizationRoleResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateAuthorizationRoleBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateBootDeviceBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateBootDevice         `xml:"urn:vim25 UpdateBootDevice,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateBootDeviceResponse `xml:"urn:vim25 UpdateBootDeviceResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateBootDeviceBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateBootDevice(ctx context.Context, r soap.RoundTripper, req *types.UpdateBootDevice) (*types.UpdateBootDeviceResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateBootDeviceBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateChildResourceConfigurationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateChildResourceConfiguration         `xml:"urn:vim25 UpdateChildResourceConfiguration,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateChildResourceConfigurationResponse `xml:"urn:vim25 UpdateChildResourceConfigurationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateChildResourceConfigurationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateChildResourceConfiguration(ctx context.Context, r soap.RoundTripper, req *types.UpdateChildResourceConfiguration) (*types.UpdateChildResourceConfigurationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateChildResourceConfigurationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateClusterProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateClusterProfile         `xml:"urn:vim25 UpdateClusterProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateClusterProfileResponse `xml:"urn:vim25 UpdateClusterProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateClusterProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateClusterProfile(ctx context.Context, r soap.RoundTripper, req *types.UpdateClusterProfile) (*types.UpdateClusterProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateClusterProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateConfig         `xml:"urn:vim25 UpdateConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateConfigResponse `xml:"urn:vim25 UpdateConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateConfig) (*types.UpdateConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateConsoleIpRouteConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateConsoleIpRouteConfig         `xml:"urn:vim25 UpdateConsoleIpRouteConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateConsoleIpRouteConfigResponse `xml:"urn:vim25 UpdateConsoleIpRouteConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateConsoleIpRouteConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateConsoleIpRouteConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateConsoleIpRouteConfig) (*types.UpdateConsoleIpRouteConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateConsoleIpRouteConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateCounterLevelMappingBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateCounterLevelMapping         `xml:"urn:vim25 UpdateCounterLevelMapping,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateCounterLevelMappingResponse `xml:"urn:vim25 UpdateCounterLevelMappingResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateCounterLevelMappingBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateCounterLevelMapping(ctx context.Context, r soap.RoundTripper, req *types.UpdateCounterLevelMapping) (*types.UpdateCounterLevelMappingResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateCounterLevelMappingBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateDVSHealthCheckConfig_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateDVSHealthCheckConfig_Task         `xml:"urn:vim25 UpdateDVSHealthCheckConfig_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateDVSHealthCheckConfig_TaskResponse `xml:"urn:vim25 UpdateDVSHealthCheckConfig_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateDVSHealthCheckConfig_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateDVSHealthCheckConfig_Task(ctx context.Context, r soap.RoundTripper, req *types.UpdateDVSHealthCheckConfig_Task) (*types.UpdateDVSHealthCheckConfig_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateDVSHealthCheckConfig_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateDVSLacpGroupConfig_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateDVSLacpGroupConfig_Task         `xml:"urn:vim25 UpdateDVSLacpGroupConfig_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateDVSLacpGroupConfig_TaskResponse `xml:"urn:vim25 UpdateDVSLacpGroupConfig_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateDVSLacpGroupConfig_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateDVSLacpGroupConfig_Task(ctx context.Context, r soap.RoundTripper, req *types.UpdateDVSLacpGroupConfig_Task) (*types.UpdateDVSLacpGroupConfig_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateDVSLacpGroupConfig_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateDateTimeBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateDateTime         `xml:"urn:vim25 UpdateDateTime,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateDateTimeResponse `xml:"urn:vim25 UpdateDateTimeResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateDateTimeBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateDateTime(ctx context.Context, r soap.RoundTripper, req *types.UpdateDateTime) (*types.UpdateDateTimeResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateDateTimeBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateDateTimeConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateDateTimeConfig         `xml:"urn:vim25 UpdateDateTimeConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateDateTimeConfigResponse `xml:"urn:vim25 UpdateDateTimeConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateDateTimeConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateDateTimeConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateDateTimeConfig) (*types.UpdateDateTimeConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateDateTimeConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateDefaultPolicyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateDefaultPolicy         `xml:"urn:vim25 UpdateDefaultPolicy,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateDefaultPolicyResponse `xml:"urn:vim25 UpdateDefaultPolicyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateDefaultPolicyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateDefaultPolicy(ctx context.Context, r soap.RoundTripper, req *types.UpdateDefaultPolicy) (*types.UpdateDefaultPolicyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateDefaultPolicyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateDiskPartitionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateDiskPartitions         `xml:"urn:vim25 UpdateDiskPartitions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateDiskPartitionsResponse `xml:"urn:vim25 UpdateDiskPartitionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateDiskPartitionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateDiskPartitions(ctx context.Context, r soap.RoundTripper, req *types.UpdateDiskPartitions) (*types.UpdateDiskPartitionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateDiskPartitionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateDnsConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateDnsConfig         `xml:"urn:vim25 UpdateDnsConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateDnsConfigResponse `xml:"urn:vim25 UpdateDnsConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateDnsConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateDnsConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateDnsConfig) (*types.UpdateDnsConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateDnsConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateDvsCapabilityBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateDvsCapability         `xml:"urn:vim25 UpdateDvsCapability,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateDvsCapabilityResponse `xml:"urn:vim25 UpdateDvsCapabilityResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateDvsCapabilityBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateDvsCapability(ctx context.Context, r soap.RoundTripper, req *types.UpdateDvsCapability) (*types.UpdateDvsCapabilityResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateDvsCapabilityBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateExtensionBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateExtension         `xml:"urn:vim25 UpdateExtension,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateExtensionResponse `xml:"urn:vim25 UpdateExtensionResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateExtensionBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateExtension(ctx context.Context, r soap.RoundTripper, req *types.UpdateExtension) (*types.UpdateExtensionResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateExtensionBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateFlagsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateFlags         `xml:"urn:vim25 UpdateFlags,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateFlagsResponse `xml:"urn:vim25 UpdateFlagsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateFlagsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateFlags(ctx context.Context, r soap.RoundTripper, req *types.UpdateFlags) (*types.UpdateFlagsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateFlagsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateGraphicsConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateGraphicsConfig         `xml:"urn:vim25 UpdateGraphicsConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateGraphicsConfigResponse `xml:"urn:vim25 UpdateGraphicsConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateGraphicsConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateGraphicsConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateGraphicsConfig) (*types.UpdateGraphicsConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateGraphicsConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateHostCustomizations_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateHostCustomizations_Task         `xml:"urn:vim25 UpdateHostCustomizations_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateHostCustomizations_TaskResponse `xml:"urn:vim25 UpdateHostCustomizations_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateHostCustomizations_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateHostCustomizations_Task(ctx context.Context, r soap.RoundTripper, req *types.UpdateHostCustomizations_Task) (*types.UpdateHostCustomizations_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateHostCustomizations_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateHostImageAcceptanceLevelBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateHostImageAcceptanceLevel         `xml:"urn:vim25 UpdateHostImageAcceptanceLevel,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateHostImageAcceptanceLevelResponse `xml:"urn:vim25 UpdateHostImageAcceptanceLevelResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateHostImageAcceptanceLevelBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateHostImageAcceptanceLevel(ctx context.Context, r soap.RoundTripper, req *types.UpdateHostImageAcceptanceLevel) (*types.UpdateHostImageAcceptanceLevelResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateHostImageAcceptanceLevelBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateHostProfileBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateHostProfile         `xml:"urn:vim25 UpdateHostProfile,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateHostProfileResponse `xml:"urn:vim25 UpdateHostProfileResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateHostProfileBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateHostProfile(ctx context.Context, r soap.RoundTripper, req *types.UpdateHostProfile) (*types.UpdateHostProfileResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateHostProfileBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateHostSpecificationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateHostSpecification         `xml:"urn:vim25 UpdateHostSpecification,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateHostSpecificationResponse `xml:"urn:vim25 UpdateHostSpecificationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateHostSpecificationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateHostSpecification(ctx context.Context, r soap.RoundTripper, req *types.UpdateHostSpecification) (*types.UpdateHostSpecificationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateHostSpecificationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateHostSubSpecificationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateHostSubSpecification         `xml:"urn:vim25 UpdateHostSubSpecification,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateHostSubSpecificationResponse `xml:"urn:vim25 UpdateHostSubSpecificationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateHostSubSpecificationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateHostSubSpecification(ctx context.Context, r soap.RoundTripper, req *types.UpdateHostSubSpecification) (*types.UpdateHostSubSpecificationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateHostSubSpecificationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateInternetScsiAdvancedOptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateInternetScsiAdvancedOptions         `xml:"urn:vim25 UpdateInternetScsiAdvancedOptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateInternetScsiAdvancedOptionsResponse `xml:"urn:vim25 UpdateInternetScsiAdvancedOptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateInternetScsiAdvancedOptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateInternetScsiAdvancedOptions(ctx context.Context, r soap.RoundTripper, req *types.UpdateInternetScsiAdvancedOptions) (*types.UpdateInternetScsiAdvancedOptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateInternetScsiAdvancedOptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateInternetScsiAliasBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateInternetScsiAlias         `xml:"urn:vim25 UpdateInternetScsiAlias,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateInternetScsiAliasResponse `xml:"urn:vim25 UpdateInternetScsiAliasResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateInternetScsiAliasBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateInternetScsiAlias(ctx context.Context, r soap.RoundTripper, req *types.UpdateInternetScsiAlias) (*types.UpdateInternetScsiAliasResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateInternetScsiAliasBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateInternetScsiAuthenticationPropertiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateInternetScsiAuthenticationProperties         `xml:"urn:vim25 UpdateInternetScsiAuthenticationProperties,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateInternetScsiAuthenticationPropertiesResponse `xml:"urn:vim25 UpdateInternetScsiAuthenticationPropertiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateInternetScsiAuthenticationPropertiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateInternetScsiAuthenticationProperties(ctx context.Context, r soap.RoundTripper, req *types.UpdateInternetScsiAuthenticationProperties) (*types.UpdateInternetScsiAuthenticationPropertiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateInternetScsiAuthenticationPropertiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateInternetScsiDigestPropertiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateInternetScsiDigestProperties         `xml:"urn:vim25 UpdateInternetScsiDigestProperties,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateInternetScsiDigestPropertiesResponse `xml:"urn:vim25 UpdateInternetScsiDigestPropertiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateInternetScsiDigestPropertiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateInternetScsiDigestProperties(ctx context.Context, r soap.RoundTripper, req *types.UpdateInternetScsiDigestProperties) (*types.UpdateInternetScsiDigestPropertiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateInternetScsiDigestPropertiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateInternetScsiDiscoveryPropertiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateInternetScsiDiscoveryProperties         `xml:"urn:vim25 UpdateInternetScsiDiscoveryProperties,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateInternetScsiDiscoveryPropertiesResponse `xml:"urn:vim25 UpdateInternetScsiDiscoveryPropertiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateInternetScsiDiscoveryPropertiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateInternetScsiDiscoveryProperties(ctx context.Context, r soap.RoundTripper, req *types.UpdateInternetScsiDiscoveryProperties) (*types.UpdateInternetScsiDiscoveryPropertiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateInternetScsiDiscoveryPropertiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateInternetScsiIPPropertiesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateInternetScsiIPProperties         `xml:"urn:vim25 UpdateInternetScsiIPProperties,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateInternetScsiIPPropertiesResponse `xml:"urn:vim25 UpdateInternetScsiIPPropertiesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateInternetScsiIPPropertiesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateInternetScsiIPProperties(ctx context.Context, r soap.RoundTripper, req *types.UpdateInternetScsiIPProperties) (*types.UpdateInternetScsiIPPropertiesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateInternetScsiIPPropertiesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateInternetScsiNameBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateInternetScsiName         `xml:"urn:vim25 UpdateInternetScsiName,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateInternetScsiNameResponse `xml:"urn:vim25 UpdateInternetScsiNameResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                           `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateInternetScsiNameBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateInternetScsiName(ctx context.Context, r soap.RoundTripper, req *types.UpdateInternetScsiName) (*types.UpdateInternetScsiNameResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateInternetScsiNameBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateIpConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateIpConfig         `xml:"urn:vim25 UpdateIpConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateIpConfigResponse `xml:"urn:vim25 UpdateIpConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateIpConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateIpConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateIpConfig) (*types.UpdateIpConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateIpConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateIpPoolBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateIpPool         `xml:"urn:vim25 UpdateIpPool,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateIpPoolResponse `xml:"urn:vim25 UpdateIpPoolResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateIpPoolBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateIpPool(ctx context.Context, r soap.RoundTripper, req *types.UpdateIpPool) (*types.UpdateIpPoolResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateIpPoolBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateIpRouteConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateIpRouteConfig         `xml:"urn:vim25 UpdateIpRouteConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateIpRouteConfigResponse `xml:"urn:vim25 UpdateIpRouteConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateIpRouteConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateIpRouteConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateIpRouteConfig) (*types.UpdateIpRouteConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateIpRouteConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateIpRouteTableConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateIpRouteTableConfig         `xml:"urn:vim25 UpdateIpRouteTableConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateIpRouteTableConfigResponse `xml:"urn:vim25 UpdateIpRouteTableConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateIpRouteTableConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateIpRouteTableConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateIpRouteTableConfig) (*types.UpdateIpRouteTableConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateIpRouteTableConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateIpmiBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateIpmi         `xml:"urn:vim25 UpdateIpmi,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateIpmiResponse `xml:"urn:vim25 UpdateIpmiResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateIpmiBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateIpmi(ctx context.Context, r soap.RoundTripper, req *types.UpdateIpmi) (*types.UpdateIpmiResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateIpmiBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateKmipServerBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateKmipServer         `xml:"urn:vim25 UpdateKmipServer,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateKmipServerResponse `xml:"urn:vim25 UpdateKmipServerResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateKmipServerBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateKmipServer(ctx context.Context, r soap.RoundTripper, req *types.UpdateKmipServer) (*types.UpdateKmipServerResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateKmipServerBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateKmsSignedCsrClientCertBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateKmsSignedCsrClientCert         `xml:"urn:vim25 UpdateKmsSignedCsrClientCert,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateKmsSignedCsrClientCertResponse `xml:"urn:vim25 UpdateKmsSignedCsrClientCertResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateKmsSignedCsrClientCertBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateKmsSignedCsrClientCert(ctx context.Context, r soap.RoundTripper, req *types.UpdateKmsSignedCsrClientCert) (*types.UpdateKmsSignedCsrClientCertResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateKmsSignedCsrClientCertBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateLicenseBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateLicense         `xml:"urn:vim25 UpdateLicense,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateLicenseResponse `xml:"urn:vim25 UpdateLicenseResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateLicenseBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateLicense(ctx context.Context, r soap.RoundTripper, req *types.UpdateLicense) (*types.UpdateLicenseResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateLicenseBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateLicenseLabelBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateLicenseLabel         `xml:"urn:vim25 UpdateLicenseLabel,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateLicenseLabelResponse `xml:"urn:vim25 UpdateLicenseLabelResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateLicenseLabelBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateLicenseLabel(ctx context.Context, r soap.RoundTripper, req *types.UpdateLicenseLabel) (*types.UpdateLicenseLabelResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateLicenseLabelBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateLinkedChildrenBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateLinkedChildren         `xml:"urn:vim25 UpdateLinkedChildren,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateLinkedChildrenResponse `xml:"urn:vim25 UpdateLinkedChildrenResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateLinkedChildrenBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateLinkedChildren(ctx context.Context, r soap.RoundTripper, req *types.UpdateLinkedChildren) (*types.UpdateLinkedChildrenResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateLinkedChildrenBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateLocalSwapDatastoreBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateLocalSwapDatastore         `xml:"urn:vim25 UpdateLocalSwapDatastore,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateLocalSwapDatastoreResponse `xml:"urn:vim25 UpdateLocalSwapDatastoreResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateLocalSwapDatastoreBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateLocalSwapDatastore(ctx context.Context, r soap.RoundTripper, req *types.UpdateLocalSwapDatastore) (*types.UpdateLocalSwapDatastoreResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateLocalSwapDatastoreBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateLockdownExceptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateLockdownExceptions         `xml:"urn:vim25 UpdateLockdownExceptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateLockdownExceptionsResponse `xml:"urn:vim25 UpdateLockdownExceptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateLockdownExceptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateLockdownExceptions(ctx context.Context, r soap.RoundTripper, req *types.UpdateLockdownExceptions) (*types.UpdateLockdownExceptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateLockdownExceptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateModuleOptionStringBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateModuleOptionString         `xml:"urn:vim25 UpdateModuleOptionString,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateModuleOptionStringResponse `xml:"urn:vim25 UpdateModuleOptionStringResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateModuleOptionStringBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateModuleOptionString(ctx context.Context, r soap.RoundTripper, req *types.UpdateModuleOptionString) (*types.UpdateModuleOptionStringResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateModuleOptionStringBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateNetworkConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateNetworkConfig         `xml:"urn:vim25 UpdateNetworkConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateNetworkConfigResponse `xml:"urn:vim25 UpdateNetworkConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateNetworkConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateNetworkConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateNetworkConfig) (*types.UpdateNetworkConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateNetworkConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateNetworkResourcePoolBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateNetworkResourcePool         `xml:"urn:vim25 UpdateNetworkResourcePool,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateNetworkResourcePoolResponse `xml:"urn:vim25 UpdateNetworkResourcePoolResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                              `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateNetworkResourcePoolBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateNetworkResourcePool(ctx context.Context, r soap.RoundTripper, req *types.UpdateNetworkResourcePool) (*types.UpdateNetworkResourcePoolResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateNetworkResourcePoolBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateOptionsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateOptions         `xml:"urn:vim25 UpdateOptions,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateOptionsResponse `xml:"urn:vim25 UpdateOptionsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateOptionsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateOptions(ctx context.Context, r soap.RoundTripper, req *types.UpdateOptions) (*types.UpdateOptionsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateOptionsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdatePassthruConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdatePassthruConfig         `xml:"urn:vim25 UpdatePassthruConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdatePassthruConfigResponse `xml:"urn:vim25 UpdatePassthruConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdatePassthruConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdatePassthruConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdatePassthruConfig) (*types.UpdatePassthruConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdatePassthruConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdatePerfIntervalBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdatePerfInterval         `xml:"urn:vim25 UpdatePerfInterval,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdatePerfIntervalResponse `xml:"urn:vim25 UpdatePerfIntervalResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdatePerfIntervalBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdatePerfInterval(ctx context.Context, r soap.RoundTripper, req *types.UpdatePerfInterval) (*types.UpdatePerfIntervalResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdatePerfIntervalBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdatePhysicalNicLinkSpeedBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdatePhysicalNicLinkSpeed         `xml:"urn:vim25 UpdatePhysicalNicLinkSpeed,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdatePhysicalNicLinkSpeedResponse `xml:"urn:vim25 UpdatePhysicalNicLinkSpeedResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdatePhysicalNicLinkSpeedBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdatePhysicalNicLinkSpeed(ctx context.Context, r soap.RoundTripper, req *types.UpdatePhysicalNicLinkSpeed) (*types.UpdatePhysicalNicLinkSpeedResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdatePhysicalNicLinkSpeedBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdatePortGroupBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdatePortGroup         `xml:"urn:vim25 UpdatePortGroup,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdatePortGroupResponse `xml:"urn:vim25 UpdatePortGroupResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdatePortGroupBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdatePortGroup(ctx context.Context, r soap.RoundTripper, req *types.UpdatePortGroup) (*types.UpdatePortGroupResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdatePortGroupBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateProgressBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateProgress         `xml:"urn:vim25 UpdateProgress,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateProgressResponse `xml:"urn:vim25 UpdateProgressResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateProgressBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateProgress(ctx context.Context, r soap.RoundTripper, req *types.UpdateProgress) (*types.UpdateProgressResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateProgressBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateReferenceHostBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateReferenceHost         `xml:"urn:vim25 UpdateReferenceHost,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateReferenceHostResponse `xml:"urn:vim25 UpdateReferenceHostResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateReferenceHostBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateReferenceHost(ctx context.Context, r soap.RoundTripper, req *types.UpdateReferenceHost) (*types.UpdateReferenceHostResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateReferenceHostBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateRulesetBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateRuleset         `xml:"urn:vim25 UpdateRuleset,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateRulesetResponse `xml:"urn:vim25 UpdateRulesetResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateRulesetBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateRuleset(ctx context.Context, r soap.RoundTripper, req *types.UpdateRuleset) (*types.UpdateRulesetResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateRulesetBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateScsiLunDisplayNameBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateScsiLunDisplayName         `xml:"urn:vim25 UpdateScsiLunDisplayName,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateScsiLunDisplayNameResponse `xml:"urn:vim25 UpdateScsiLunDisplayNameResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateScsiLunDisplayNameBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateScsiLunDisplayName(ctx context.Context, r soap.RoundTripper, req *types.UpdateScsiLunDisplayName) (*types.UpdateScsiLunDisplayNameResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateScsiLunDisplayNameBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateSelfSignedClientCertBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateSelfSignedClientCert         `xml:"urn:vim25 UpdateSelfSignedClientCert,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateSelfSignedClientCertResponse `xml:"urn:vim25 UpdateSelfSignedClientCertResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateSelfSignedClientCertBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateSelfSignedClientCert(ctx context.Context, r soap.RoundTripper, req *types.UpdateSelfSignedClientCert) (*types.UpdateSelfSignedClientCertResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateSelfSignedClientCertBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateServiceConsoleVirtualNicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateServiceConsoleVirtualNic         `xml:"urn:vim25 UpdateServiceConsoleVirtualNic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateServiceConsoleVirtualNicResponse `xml:"urn:vim25 UpdateServiceConsoleVirtualNicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateServiceConsoleVirtualNicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateServiceConsoleVirtualNic(ctx context.Context, r soap.RoundTripper, req *types.UpdateServiceConsoleVirtualNic) (*types.UpdateServiceConsoleVirtualNicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateServiceConsoleVirtualNicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateServiceMessageBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateServiceMessage         `xml:"urn:vim25 UpdateServiceMessage,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateServiceMessageResponse `xml:"urn:vim25 UpdateServiceMessageResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateServiceMessageBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateServiceMessage(ctx context.Context, r soap.RoundTripper, req *types.UpdateServiceMessage) (*types.UpdateServiceMessageResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateServiceMessageBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateServicePolicyBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateServicePolicy         `xml:"urn:vim25 UpdateServicePolicy,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateServicePolicyResponse `xml:"urn:vim25 UpdateServicePolicyResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateServicePolicyBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateServicePolicy(ctx context.Context, r soap.RoundTripper, req *types.UpdateServicePolicy) (*types.UpdateServicePolicyResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateServicePolicyBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateSoftwareInternetScsiEnabledBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateSoftwareInternetScsiEnabled         `xml:"urn:vim25 UpdateSoftwareInternetScsiEnabled,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateSoftwareInternetScsiEnabledResponse `xml:"urn:vim25 UpdateSoftwareInternetScsiEnabledResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateSoftwareInternetScsiEnabledBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateSoftwareInternetScsiEnabled(ctx context.Context, r soap.RoundTripper, req *types.UpdateSoftwareInternetScsiEnabled) (*types.UpdateSoftwareInternetScsiEnabledResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateSoftwareInternetScsiEnabledBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateSystemResourcesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateSystemResources         `xml:"urn:vim25 UpdateSystemResources,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateSystemResourcesResponse `xml:"urn:vim25 UpdateSystemResourcesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                          `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateSystemResourcesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateSystemResources(ctx context.Context, r soap.RoundTripper, req *types.UpdateSystemResources) (*types.UpdateSystemResourcesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateSystemResourcesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateSystemSwapConfigurationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateSystemSwapConfiguration         `xml:"urn:vim25 UpdateSystemSwapConfiguration,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateSystemSwapConfigurationResponse `xml:"urn:vim25 UpdateSystemSwapConfigurationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                  `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateSystemSwapConfigurationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateSystemSwapConfiguration(ctx context.Context, r soap.RoundTripper, req *types.UpdateSystemSwapConfiguration) (*types.UpdateSystemSwapConfigurationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateSystemSwapConfigurationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateSystemUsersBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateSystemUsers         `xml:"urn:vim25 UpdateSystemUsers,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateSystemUsersResponse `xml:"urn:vim25 UpdateSystemUsersResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateSystemUsersBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateSystemUsers(ctx context.Context, r soap.RoundTripper, req *types.UpdateSystemUsers) (*types.UpdateSystemUsersResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateSystemUsersBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateUserBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateUser         `xml:"urn:vim25 UpdateUser,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateUserResponse `xml:"urn:vim25 UpdateUserResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateUserBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateUser(ctx context.Context, r soap.RoundTripper, req *types.UpdateUser) (*types.UpdateUserResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateUserBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateVAppConfigBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateVAppConfig         `xml:"urn:vim25 UpdateVAppConfig,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateVAppConfigResponse `xml:"urn:vim25 UpdateVAppConfigResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateVAppConfigBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateVAppConfig(ctx context.Context, r soap.RoundTripper, req *types.UpdateVAppConfig) (*types.UpdateVAppConfigResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateVAppConfigBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateVVolVirtualMachineFiles_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateVVolVirtualMachineFiles_Task         `xml:"urn:vim25 UpdateVVolVirtualMachineFiles_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateVVolVirtualMachineFiles_TaskResponse `xml:"urn:vim25 UpdateVVolVirtualMachineFiles_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateVVolVirtualMachineFiles_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateVVolVirtualMachineFiles_Task(ctx context.Context, r soap.RoundTripper, req *types.UpdateVVolVirtualMachineFiles_Task) (*types.UpdateVVolVirtualMachineFiles_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateVVolVirtualMachineFiles_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateVirtualMachineFiles_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateVirtualMachineFiles_Task         `xml:"urn:vim25 UpdateVirtualMachineFiles_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateVirtualMachineFiles_TaskResponse `xml:"urn:vim25 UpdateVirtualMachineFiles_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateVirtualMachineFiles_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateVirtualMachineFiles_Task(ctx context.Context, r soap.RoundTripper, req *types.UpdateVirtualMachineFiles_Task) (*types.UpdateVirtualMachineFiles_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateVirtualMachineFiles_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateVirtualNicBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateVirtualNic         `xml:"urn:vim25 UpdateVirtualNic,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateVirtualNicResponse `xml:"urn:vim25 UpdateVirtualNicResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateVirtualNicBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateVirtualNic(ctx context.Context, r soap.RoundTripper, req *types.UpdateVirtualNic) (*types.UpdateVirtualNicResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateVirtualNicBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateVirtualSwitchBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateVirtualSwitch         `xml:"urn:vim25 UpdateVirtualSwitch,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateVirtualSwitchResponse `xml:"urn:vim25 UpdateVirtualSwitchResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                        `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateVirtualSwitchBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateVirtualSwitch(ctx context.Context, r soap.RoundTripper, req *types.UpdateVirtualSwitch) (*types.UpdateVirtualSwitchResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateVirtualSwitchBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateVmfsUnmapPriorityBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateVmfsUnmapPriority         `xml:"urn:vim25 UpdateVmfsUnmapPriority,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateVmfsUnmapPriorityResponse `xml:"urn:vim25 UpdateVmfsUnmapPriorityResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                            `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateVmfsUnmapPriorityBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateVmfsUnmapPriority(ctx context.Context, r soap.RoundTripper, req *types.UpdateVmfsUnmapPriority) (*types.UpdateVmfsUnmapPriorityResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateVmfsUnmapPriorityBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpdateVsan_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpdateVsan_Task         `xml:"urn:vim25 UpdateVsan_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpdateVsan_TaskResponse `xml:"urn:vim25 UpdateVsan_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpdateVsan_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpdateVsan_Task(ctx context.Context, r soap.RoundTripper, req *types.UpdateVsan_Task) (*types.UpdateVsan_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpdateVsan_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpgradeIoFilter_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpgradeIoFilter_Task         `xml:"urn:vim25 UpgradeIoFilter_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpgradeIoFilter_TaskResponse `xml:"urn:vim25 UpgradeIoFilter_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpgradeIoFilter_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpgradeIoFilter_Task(ctx context.Context, r soap.RoundTripper, req *types.UpgradeIoFilter_Task) (*types.UpgradeIoFilter_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpgradeIoFilter_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpgradeTools_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpgradeTools_Task         `xml:"urn:vim25 UpgradeTools_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpgradeTools_TaskResponse `xml:"urn:vim25 UpgradeTools_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpgradeTools_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpgradeTools_Task(ctx context.Context, r soap.RoundTripper, req *types.UpgradeTools_Task) (*types.UpgradeTools_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpgradeTools_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpgradeVM_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpgradeVM_Task         `xml:"urn:vim25 UpgradeVM_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpgradeVM_TaskResponse `xml:"urn:vim25 UpgradeVM_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpgradeVM_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpgradeVM_Task(ctx context.Context, r soap.RoundTripper, req *types.UpgradeVM_Task) (*types.UpgradeVM_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpgradeVM_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpgradeVmLayoutBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpgradeVmLayout         `xml:"urn:vim25 UpgradeVmLayout,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpgradeVmLayoutResponse `xml:"urn:vim25 UpgradeVmLayoutResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                    `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpgradeVmLayoutBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpgradeVmLayout(ctx context.Context, r soap.RoundTripper, req *types.UpgradeVmLayout) (*types.UpgradeVmLayoutResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpgradeVmLayoutBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpgradeVmfsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpgradeVmfs         `xml:"urn:vim25 UpgradeVmfs,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpgradeVmfsResponse `xml:"urn:vim25 UpgradeVmfsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpgradeVmfsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpgradeVmfs(ctx context.Context, r soap.RoundTripper, req *types.UpgradeVmfs) (*types.UpgradeVmfsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpgradeVmfsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UpgradeVsanObjectsBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UpgradeVsanObjects         `xml:"urn:vim25 UpgradeVsanObjects,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UpgradeVsanObjectsResponse `xml:"urn:vim25 UpgradeVsanObjectsResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                       `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UpgradeVsanObjectsBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UpgradeVsanObjects(ctx context.Context, r soap.RoundTripper, req *types.UpgradeVsanObjects) (*types.UpgradeVsanObjectsResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UpgradeVsanObjectsBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UploadClientCertBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UploadClientCert         `xml:"urn:vim25 UploadClientCert,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UploadClientCertResponse `xml:"urn:vim25 UploadClientCertResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UploadClientCertBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UploadClientCert(ctx context.Context, r soap.RoundTripper, req *types.UploadClientCert) (*types.UploadClientCertResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UploadClientCertBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type UploadKmipServerCertBody struct {
0000000000000000000000000000000000000000;;		Req    *types.UploadKmipServerCert         `xml:"urn:vim25 UploadKmipServerCert,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.UploadKmipServerCertResponse `xml:"urn:vim25 UploadKmipServerCertResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                         `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *UploadKmipServerCertBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UploadKmipServerCert(ctx context.Context, r soap.RoundTripper, req *types.UploadKmipServerCert) (*types.UploadKmipServerCertResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody UploadKmipServerCertBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ValidateCredentialsInGuestBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ValidateCredentialsInGuest         `xml:"urn:vim25 ValidateCredentialsInGuest,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ValidateCredentialsInGuestResponse `xml:"urn:vim25 ValidateCredentialsInGuestResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ValidateCredentialsInGuestBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ValidateCredentialsInGuest(ctx context.Context, r soap.RoundTripper, req *types.ValidateCredentialsInGuest) (*types.ValidateCredentialsInGuestResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ValidateCredentialsInGuestBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ValidateHostBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ValidateHost         `xml:"urn:vim25 ValidateHost,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ValidateHostResponse `xml:"urn:vim25 ValidateHostResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                 `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ValidateHostBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ValidateHost(ctx context.Context, r soap.RoundTripper, req *types.ValidateHost) (*types.ValidateHostResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ValidateHostBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ValidateMigrationBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ValidateMigration         `xml:"urn:vim25 ValidateMigration,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ValidateMigrationResponse `xml:"urn:vim25 ValidateMigrationResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                      `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ValidateMigrationBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ValidateMigration(ctx context.Context, r soap.RoundTripper, req *types.ValidateMigration) (*types.ValidateMigrationResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ValidateMigrationBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type WaitForUpdatesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.WaitForUpdates         `xml:"urn:vim25 WaitForUpdates,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.WaitForUpdatesResponse `xml:"urn:vim25 WaitForUpdatesResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                   `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *WaitForUpdatesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func WaitForUpdates(ctx context.Context, r soap.RoundTripper, req *types.WaitForUpdates) (*types.WaitForUpdatesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody WaitForUpdatesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type WaitForUpdatesExBody struct {
0000000000000000000000000000000000000000;;		Req    *types.WaitForUpdatesEx         `xml:"urn:vim25 WaitForUpdatesEx,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.WaitForUpdatesExResponse `xml:"urn:vim25 WaitForUpdatesExResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                     `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *WaitForUpdatesExBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func WaitForUpdatesEx(ctx context.Context, r soap.RoundTripper, req *types.WaitForUpdatesEx) (*types.WaitForUpdatesExResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody WaitForUpdatesExBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type XmlToCustomizationSpecItemBody struct {
0000000000000000000000000000000000000000;;		Req    *types.XmlToCustomizationSpecItem         `xml:"urn:vim25 XmlToCustomizationSpecItem,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.XmlToCustomizationSpecItemResponse `xml:"urn:vim25 XmlToCustomizationSpecItemResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                               `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *XmlToCustomizationSpecItemBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func XmlToCustomizationSpecItem(ctx context.Context, r soap.RoundTripper, req *types.XmlToCustomizationSpecItem) (*types.XmlToCustomizationSpecItemResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody XmlToCustomizationSpecItemBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ZeroFillVirtualDisk_TaskBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ZeroFillVirtualDisk_Task         `xml:"urn:vim25 ZeroFillVirtualDisk_Task,omitempty"`
0000000000000000000000000000000000000000;;		Res    *types.ZeroFillVirtualDisk_TaskResponse `xml:"urn:vim25 ZeroFillVirtualDisk_TaskResponse,omitempty"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault                             `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ZeroFillVirtualDisk_TaskBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ZeroFillVirtualDisk_Task(ctx context.Context, r soap.RoundTripper, req *types.ZeroFillVirtualDisk_Task) (*types.ZeroFillVirtualDisk_TaskResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ZeroFillVirtualDisk_TaskBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright (c) 2014-2015 VMware, Inc. All Rights Reserved.
7dd1f486ff5c2ccadc83b845ee9a4cebfa98c85d;Godeps/_workspace/src/github.com/vmware/govmomi/vim25/methods/internal.go[Godeps/_workspace/src/github.com/vmware/govmomi/vim25/methods/internal.go][vendor/github.com/vmware/govmomi/vim25/methods/internal.go];	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package methods
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"context"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/vmware/govmomi/vim25/soap"
0000000000000000000000000000000000000000;;		"github.com/vmware/govmomi/vim25/types"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveDynamicTypeManagerBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveDynamicTypeManager         `xml:"urn:vim25 RetrieveDynamicTypeManager"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveDynamicTypeManagerResponse `xml:"urn:vim25 RetrieveDynamicTypeManagerResponse"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveDynamicTypeManagerBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveDynamicTypeManager(ctx context.Context, r soap.RoundTripper, req *types.RetrieveDynamicTypeManager) (*types.RetrieveDynamicTypeManagerResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveDynamicTypeManagerBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RetrieveManagedMethodExecuterBody struct {
0000000000000000000000000000000000000000;;		Req    *types.RetrieveManagedMethodExecuter         `xml:"urn:vim25 RetrieveManagedMethodExecuter"`
0000000000000000000000000000000000000000;;		Res    *types.RetrieveManagedMethodExecuterResponse `xml:"urn:vim25 RetrieveManagedMethodExecuterResponse"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *RetrieveManagedMethodExecuterBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RetrieveManagedMethodExecuter(ctx context.Context, r soap.RoundTripper, req *types.RetrieveManagedMethodExecuter) (*types.RetrieveManagedMethodExecuterResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody RetrieveManagedMethodExecuterBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrQueryMoInstancesBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DynamicTypeMgrQueryMoInstances         `xml:"urn:vim25 DynamicTypeMgrQueryMoInstances"`
0000000000000000000000000000000000000000;;		Res    *types.DynamicTypeMgrQueryMoInstancesResponse `xml:"urn:vim25 DynamicTypeMgrQueryMoInstancesResponse"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DynamicTypeMgrQueryMoInstancesBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DynamicTypeMgrQueryMoInstances(ctx context.Context, r soap.RoundTripper, req *types.DynamicTypeMgrQueryMoInstances) (*types.DynamicTypeMgrQueryMoInstancesResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DynamicTypeMgrQueryMoInstancesBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type DynamicTypeMgrQueryTypeInfoBody struct {
0000000000000000000000000000000000000000;;		Req    *types.DynamicTypeMgrQueryTypeInfo         `xml:"urn:vim25 DynamicTypeMgrQueryTypeInfo"`
0000000000000000000000000000000000000000;;		Res    *types.DynamicTypeMgrQueryTypeInfoResponse `xml:"urn:vim25 DynamicTypeMgrQueryTypeInfoResponse"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *DynamicTypeMgrQueryTypeInfoBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DynamicTypeMgrQueryTypeInfo(ctx context.Context, r soap.RoundTripper, req *types.DynamicTypeMgrQueryTypeInfo) (*types.DynamicTypeMgrQueryTypeInfoResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody DynamicTypeMgrQueryTypeInfoBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExecuteSoapBody struct {
0000000000000000000000000000000000000000;;		Req    *types.ExecuteSoap         `xml:"urn:vim25 ExecuteSoap"`
0000000000000000000000000000000000000000;;		Res    *types.ExecuteSoapResponse `xml:"urn:vim25 ExecuteSoapResponse"`
0000000000000000000000000000000000000000;;		Fault_ *soap.Fault
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (b *ExecuteSoapBody) Fault() *soap.Fault { return b.Fault_ }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ExecuteSoap(ctx context.Context, r soap.RoundTripper, req *types.ExecuteSoap) (*types.ExecuteSoapResponse, error) {
0000000000000000000000000000000000000000;;		var reqBody, resBody ExecuteSoapBody
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reqBody.Req = req
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err := r.RoundTrip(ctx, &reqBody, &resBody); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return resBody.Res, nil
0000000000000000000000000000000000000000;;	}

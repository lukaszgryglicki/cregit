0000000000000000000000000000000000000000;;	package semver
9a8dd8e8e9c9f7d0ff29d2ab116ffccc9fc03c02;Godeps/_workspace/src/github.com/blang/semver/sql.go[Godeps/_workspace/src/github.com/blang/semver/sql.go][vendor/github.com/blang/semver/sql.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"database/sql/driver"
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Scan implements the database/sql.Scanner interface.
0000000000000000000000000000000000000000;;	func (v *Version) Scan(src interface{}) (err error) {
0000000000000000000000000000000000000000;;		var str string
0000000000000000000000000000000000000000;;		switch src := src.(type) {
0000000000000000000000000000000000000000;;		case string:
0000000000000000000000000000000000000000;;			str = src
0000000000000000000000000000000000000000;;		case []byte:
0000000000000000000000000000000000000000;;			str = string(src)
0000000000000000000000000000000000000000;;		default:
0000000000000000000000000000000000000000;;			return fmt.Errorf("Version.Scan: cannot convert %T to string.", src)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if t, err := Parse(str); err == nil {
0000000000000000000000000000000000000000;;			*v = t
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Value implements the database/sql/driver.Valuer interface.
0000000000000000000000000000000000000000;;	func (v Version) Value() (driver.Value, error) {
0000000000000000000000000000000000000000;;		return v.String(), nil
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package oidc
d9a6899387940336fd1a655128b4b3486f75c7ee;Godeps/_workspace/src/github.com/coreos/go-oidc/oidc/identity.go[Godeps/_workspace/src/github.com/coreos/go-oidc/oidc/identity.go][vendor/github.com/coreos/go-oidc/oidc/identity.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"errors"
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/coreos/go-oidc/jose"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Identity struct {
0000000000000000000000000000000000000000;;		ID        string
0000000000000000000000000000000000000000;;		Name      string
0000000000000000000000000000000000000000;;		Email     string
0000000000000000000000000000000000000000;;		ExpiresAt time.Time
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func IdentityFromClaims(claims jose.Claims) (*Identity, error) {
0000000000000000000000000000000000000000;;		if claims == nil {
0000000000000000000000000000000000000000;;			return nil, errors.New("nil claim set")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		var ident Identity
0000000000000000000000000000000000000000;;		var err error
0000000000000000000000000000000000000000;;		var ok bool
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if ident.ID, ok, err = claims.StringClaim("sub"); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		} else if !ok {
0000000000000000000000000000000000000000;;			return nil, errors.New("missing required claim: sub")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if ident.Email, _, err = claims.StringClaim("email"); err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		exp, ok, err := claims.TimeClaim("exp")
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		} else if ok {
0000000000000000000000000000000000000000;;			ident.ExpiresAt = exp
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return &ident, nil
0000000000000000000000000000000000000000;;	}

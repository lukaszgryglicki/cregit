0000000000000000000000000000000000000000;;	// Copyright 2016 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
5da4772d7eee0df4a5bf872fd32f72643fc2e5c9;Godeps/_workspace/src/github.com/coreos/etcd/pkg/timeutil/timeutil.go[Godeps/_workspace/src/github.com/coreos/etcd/pkg/timeutil/timeutil.go][vendor/github.com/coreos/etcd/client/util.go];	
0000000000000000000000000000000000000000;;	package client
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"regexp"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		roleNotFoundRegExp *regexp.Regexp
0000000000000000000000000000000000000000;;		userNotFoundRegExp *regexp.Regexp
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		roleNotFoundRegExp = regexp.MustCompile("auth: Role .* does not exist.")
0000000000000000000000000000000000000000;;		userNotFoundRegExp = regexp.MustCompile("auth: User .* does not exist.")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsKeyNotFound returns true if the error code is ErrorCodeKeyNotFound.
0000000000000000000000000000000000000000;;	func IsKeyNotFound(err error) bool {
0000000000000000000000000000000000000000;;		if cErr, ok := err.(Error); ok {
0000000000000000000000000000000000000000;;			return cErr.Code == ErrorCodeKeyNotFound
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsRoleNotFound returns true if the error means role not found of v2 API.
0000000000000000000000000000000000000000;;	func IsRoleNotFound(err error) bool {
0000000000000000000000000000000000000000;;		if ae, ok := err.(authError); ok {
0000000000000000000000000000000000000000;;			return roleNotFoundRegExp.MatchString(ae.Message)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsUserNotFound returns true if the error means user not found of v2 API.
0000000000000000000000000000000000000000;;	func IsUserNotFound(err error) bool {
0000000000000000000000000000000000000000;;		if ae, ok := err.(authError); ok {
0000000000000000000000000000000000000000;;			return userNotFoundRegExp.MatchString(ae.Message)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}

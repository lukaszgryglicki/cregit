0000000000000000000000000000000000000000;;	// Copyright 2015 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
5da4772d7eee0df4a5bf872fd32f72643fc2e5c9;Godeps/_workspace/src/github.com/coreos/etcd/snap/metrics.go[Godeps/_workspace/src/github.com/coreos/etcd/snap/metrics.go][vendor/github.com/coreos/etcd/snap/metrics.go];	
0000000000000000000000000000000000000000;;	package snap
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "github.com/prometheus/client_golang/prometheus"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		// TODO: save_fsync latency?
0000000000000000000000000000000000000000;;		saveDurations = prometheus.NewHistogram(prometheus.HistogramOpts{
0000000000000000000000000000000000000000;;			Namespace: "etcd_debugging",
0000000000000000000000000000000000000000;;			Subsystem: "snap",
0000000000000000000000000000000000000000;;			Name:      "save_total_duration_seconds",
0000000000000000000000000000000000000000;;			Help:      "The total latency distributions of save called by snapshot.",
0000000000000000000000000000000000000000;;			Buckets:   prometheus.ExponentialBuckets(0.001, 2, 14),
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		marshallingDurations = prometheus.NewHistogram(prometheus.HistogramOpts{
0000000000000000000000000000000000000000;;			Namespace: "etcd_debugging",
0000000000000000000000000000000000000000;;			Subsystem: "snap",
0000000000000000000000000000000000000000;;			Name:      "save_marshalling_duration_seconds",
0000000000000000000000000000000000000000;;			Help:      "The marshalling cost distributions of save called by snapshot.",
0000000000000000000000000000000000000000;;			Buckets:   prometheus.ExponentialBuckets(0.001, 2, 14),
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		prometheus.MustRegister(saveDurations)
0000000000000000000000000000000000000000;;		prometheus.MustRegister(marshallingDurations)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Copyright 2015 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
5da4772d7eee0df4a5bf872fd32f72643fc2e5c9;Godeps/_workspace/src/github.com/coreos/etcd/pkg/httputil/cancelreq.go[Godeps/_workspace/src/github.com/coreos/etcd/pkg/httputil/cancelreq.go][vendor/github.com/coreos/etcd/pkg/httputil/httputil.go];	
0000000000000000000000000000000000000000;;	// borrowed from golang/net/context/ctxhttp/cancelreq.go
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Package httputil provides HTTP utility functions.
0000000000000000000000000000000000000000;;	package httputil
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"io/ioutil"
0000000000000000000000000000000000000000;;		"net/http"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func RequestCanceler(req *http.Request) func() {
0000000000000000000000000000000000000000;;		ch := make(chan struct{})
0000000000000000000000000000000000000000;;		req.Cancel = ch
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return func() {
0000000000000000000000000000000000000000;;			close(ch)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GracefulClose drains http.Response.Body until it hits EOF
0000000000000000000000000000000000000000;;	// and closes it. This prevents TCP/TLS connections from closing,
0000000000000000000000000000000000000000;;	// therefore available for reuse.
0000000000000000000000000000000000000000;;	func GracefulClose(resp *http.Response) {
0000000000000000000000000000000000000000;;		io.Copy(ioutil.Discard, resp.Body)
0000000000000000000000000000000000000000;;		resp.Body.Close()
0000000000000000000000000000000000000000;;	}

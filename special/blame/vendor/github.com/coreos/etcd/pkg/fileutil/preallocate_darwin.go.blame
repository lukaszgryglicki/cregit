0000000000000000000000000000000000000000;;	// Copyright 2016 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
1861d099d10ddfa47b9f2b8b925fc11bd0827dac;Godeps/_workspace/src/github.com/coreos/etcd/pkg/fileutil/preallocate_darwin.go[Godeps/_workspace/src/github.com/coreos/etcd/pkg/fileutil/preallocate_darwin.go][vendor/github.com/coreos/etcd/pkg/fileutil/preallocate_darwin.go];	
0000000000000000000000000000000000000000;;	// +build darwin
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package fileutil
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func preallocExtend(f *os.File, sizeInBytes int64) error {
0000000000000000000000000000000000000000;;		if err := preallocFixed(f, sizeInBytes); err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return preallocExtendTrunc(f, sizeInBytes)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func preallocFixed(f *os.File, sizeInBytes int64) error {
0000000000000000000000000000000000000000;;		fstore := &syscall.Fstore_t{
0000000000000000000000000000000000000000;;			Flags:   syscall.F_ALLOCATEALL,
0000000000000000000000000000000000000000;;			Posmode: syscall.F_PEOFPOSMODE,
0000000000000000000000000000000000000000;;			Length:  sizeInBytes}
0000000000000000000000000000000000000000;;		p := unsafe.Pointer(fstore)
0000000000000000000000000000000000000000;;		_, _, errno := syscall.Syscall(syscall.SYS_FCNTL, f.Fd(), uintptr(syscall.F_PREALLOCATE), uintptr(p))
0000000000000000000000000000000000000000;;		if errno == 0 || errno == syscall.ENOTSUP {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return errno
0000000000000000000000000000000000000000;;	}

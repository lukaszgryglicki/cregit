0000000000000000000000000000000000000000;;	// Copyright 2016 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
0000000000000000000000000000000000000000;;	// +build darwin
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package fileutil
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Fsync on HFS/OSX flushes the data on to the physical drive but the drive
0000000000000000000000000000000000000000;;	// may not write it to the persistent media for quite sometime and it may be
0000000000000000000000000000000000000000;;	// written in out-of-order sequence. Using F_FULLFSYNC ensures that the
0000000000000000000000000000000000000000;;	// physical drive's buffer will also get flushed to the media.
0000000000000000000000000000000000000000;;	func Fsync(f *os.File) error {
0000000000000000000000000000000000000000;;		_, _, errno := syscall.Syscall(syscall.SYS_FCNTL, f.Fd(), uintptr(syscall.F_FULLFSYNC), uintptr(0))
0000000000000000000000000000000000000000;;		if errno == 0 {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return errno
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Fdatasync on darwin platform invokes fcntl(F_FULLFSYNC) for actual persistence
0000000000000000000000000000000000000000;;	// on physical drive media.
0000000000000000000000000000000000000000;;	func Fdatasync(f *os.File) error {
0000000000000000000000000000000000000000;;		return Fsync(f)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Copyright 2016 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
5da4772d7eee0df4a5bf872fd32f72643fc2e5c9;Godeps/_workspace/src/github.com/coreos/etcd/pkg/timeutil/timeutil.go[Godeps/_workspace/src/github.com/coreos/etcd/pkg/timeutil/timeutil.go][vendor/github.com/coreos/etcd/pkg/fileutil/sync_linux.go];	
0000000000000000000000000000000000000000;;	// +build linux
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package fileutil
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Fsync is a wrapper around file.Sync(). Special handling is needed on darwin platform.
0000000000000000000000000000000000000000;;	func Fsync(f *os.File) error {
0000000000000000000000000000000000000000;;		return f.Sync()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Fdatasync is similar to fsync(), but does not flush modified metadata
0000000000000000000000000000000000000000;;	// unless that metadata is needed in order to allow a subsequent data retrieval
0000000000000000000000000000000000000000;;	// to be correctly handled.
0000000000000000000000000000000000000000;;	func Fdatasync(f *os.File) error {
0000000000000000000000000000000000000000;;		return syscall.Fdatasync(int(f.Fd()))
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Copyright (C) 2016  Arista Networks, Inc.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by the Apache License 2.0
0000000000000000000000000000000000000000;;	// that can be found in the COPYING file.
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
0000000000000000000000000000000000000000;;	// Package monotime provides a fast monotonic clock source.
0000000000000000000000000000000000000000;;	package monotime
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		_ "unsafe" // required to use //go:linkname
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	//go:noescape
0000000000000000000000000000000000000000;;	//go:linkname nanotime runtime.nanotime
0000000000000000000000000000000000000000;;	func nanotime() int64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Now returns the current time in nanoseconds from a monotonic clock.
0000000000000000000000000000000000000000;;	// The time returned is based on some arbitrary platform-specific point in the
0000000000000000000000000000000000000000;;	// past.  The time returned is guaranteed to increase monotonically at a
0000000000000000000000000000000000000000;;	// constant rate, unlike time.Now() from the Go standard library, which may
0000000000000000000000000000000000000000;;	// slow down, speed up, jump forward or backward, due to NTP activity or leap
0000000000000000000000000000000000000000;;	// seconds.
0000000000000000000000000000000000000000;;	func Now() Time {
0000000000000000000000000000000000000000;;		return Time(nanotime())
0000000000000000000000000000000000000000;;	}

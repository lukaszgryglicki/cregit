0000000000000000000000000000000000000000;;	// Copyright 2015 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
5da4772d7eee0df4a5bf872fd32f72643fc2e5c9;Godeps/_workspace/src/github.com/coreos/etcd/pkg/transport/timeout_dialer.go[Godeps/_workspace/src/github.com/coreos/etcd/pkg/transport/timeout_dialer.go][vendor/github.com/coreos/etcd/pkg/transport/timeout_dialer.go];	
0000000000000000000000000000000000000000;;	package transport
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"net"
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type rwTimeoutDialer struct {
0000000000000000000000000000000000000000;;		wtimeoutd  time.Duration
0000000000000000000000000000000000000000;;		rdtimeoutd time.Duration
0000000000000000000000000000000000000000;;		net.Dialer
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (d *rwTimeoutDialer) Dial(network, address string) (net.Conn, error) {
0000000000000000000000000000000000000000;;		conn, err := d.Dialer.Dial(network, address)
0000000000000000000000000000000000000000;;		tconn := &timeoutConn{
0000000000000000000000000000000000000000;;			rdtimeoutd: d.rdtimeoutd,
0000000000000000000000000000000000000000;;			wtimeoutd:  d.wtimeoutd,
0000000000000000000000000000000000000000;;			Conn:       conn,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return tconn, err
0000000000000000000000000000000000000000;;	}

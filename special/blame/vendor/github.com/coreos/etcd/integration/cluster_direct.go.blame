0000000000000000000000000000000000000000;;	// Copyright 2016 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
0000000000000000000000000000000000000000;;	// +build !cluster_proxy
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package integration
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/coreos/etcd/clientv3"
0000000000000000000000000000000000000000;;		pb "github.com/coreos/etcd/etcdserver/etcdserverpb"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func toGRPC(c *clientv3.Client) grpcAPI {
0000000000000000000000000000000000000000;;		return grpcAPI{
0000000000000000000000000000000000000000;;			pb.NewClusterClient(c.ActiveConnection()),
0000000000000000000000000000000000000000;;			pb.NewKVClient(c.ActiveConnection()),
0000000000000000000000000000000000000000;;			pb.NewLeaseClient(c.ActiveConnection()),
0000000000000000000000000000000000000000;;			pb.NewWatchClient(c.ActiveConnection()),
0000000000000000000000000000000000000000;;			pb.NewMaintenanceClient(c.ActiveConnection()),
0000000000000000000000000000000000000000;;			pb.NewAuthClient(c.ActiveConnection()),
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newClientV3(cfg clientv3.Config) (*clientv3.Client, error) {
0000000000000000000000000000000000000000;;		return clientv3.New(cfg)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Copyright 2015 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
5da4772d7eee0df4a5bf872fd32f72643fc2e5c9;Godeps/_workspace/src/github.com/coreos/etcd/store/event_queue.go[Godeps/_workspace/src/github.com/coreos/etcd/store/event_queue.go][vendor/github.com/coreos/etcd/store/event_queue.go];	
0000000000000000000000000000000000000000;;	package store
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type eventQueue struct {
0000000000000000000000000000000000000000;;		Events   []*Event
0000000000000000000000000000000000000000;;		Size     int
0000000000000000000000000000000000000000;;		Front    int
0000000000000000000000000000000000000000;;		Back     int
0000000000000000000000000000000000000000;;		Capacity int
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (eq *eventQueue) insert(e *Event) {
0000000000000000000000000000000000000000;;		eq.Events[eq.Back] = e
0000000000000000000000000000000000000000;;		eq.Back = (eq.Back + 1) % eq.Capacity
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if eq.Size == eq.Capacity { //dequeue
0000000000000000000000000000000000000000;;			eq.Front = (eq.Front + 1) % eq.Capacity
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			eq.Size++
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

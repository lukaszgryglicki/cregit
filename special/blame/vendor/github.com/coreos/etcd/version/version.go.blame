0000000000000000000000000000000000000000;;	// Copyright 2015 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
5da4772d7eee0df4a5bf872fd32f72643fc2e5c9;Godeps/_workspace/src/github.com/coreos/etcd/version/version.go[Godeps/_workspace/src/github.com/coreos/etcd/version/version.go][vendor/github.com/coreos/etcd/version/version.go];	
0000000000000000000000000000000000000000;;	// Package version implements etcd version parsing and contains latest version
0000000000000000000000000000000000000000;;	// information.
0000000000000000000000000000000000000000;;	package version
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/coreos/go-semver/semver"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		// MinClusterVersion is the min cluster version this etcd binary is compatible with.
0000000000000000000000000000000000000000;;		MinClusterVersion = "3.0.0"
0000000000000000000000000000000000000000;;		Version           = "3.1.5"
0000000000000000000000000000000000000000;;		APIVersion        = "unknown"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Git SHA Value will be set during build
0000000000000000000000000000000000000000;;		GitSHA = "Not provided (use ./build instead of go build)"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		ver, err := semver.NewVersion(Version)
0000000000000000000000000000000000000000;;		if err == nil {
0000000000000000000000000000000000000000;;			APIVersion = fmt.Sprintf("%d.%d", ver.Major, ver.Minor)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Versions struct {
0000000000000000000000000000000000000000;;		Server  string `json:"etcdserver"`
0000000000000000000000000000000000000000;;		Cluster string `json:"etcdcluster"`
0000000000000000000000000000000000000000;;		// TODO: raft state machine version
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Cluster only keeps the major.minor.
0000000000000000000000000000000000000000;;	func Cluster(v string) string {
0000000000000000000000000000000000000000;;		vs := strings.Split(v, ".")
0000000000000000000000000000000000000000;;		if len(vs) <= 2 {
0000000000000000000000000000000000000000;;			return v
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return fmt.Sprintf("%s.%s", vs[0], vs[1])
0000000000000000000000000000000000000000;;	}

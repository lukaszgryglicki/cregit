885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// Code generated by protoc-gen-grpc-gateway
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// source: etcdserver/etcdserverpb/rpc.proto
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// DO NOT EDIT!
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	/*
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	Package etcdserverpb is a reverse proxy.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	It translates gRPC into RESTful JSON APIs.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	*/
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	package etcdserverpb
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	import (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		"io"
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		"net/http"
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		"github.com/golang/protobuf/proto"
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		"github.com/grpc-ecosystem/grpc-gateway/runtime"
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		"github.com/grpc-ecosystem/grpc-gateway/utilities"
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		"golang.org/x/net/context"
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		"google.golang.org/grpc"
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		"google.golang.org/grpc/codes"
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		"google.golang.org/grpc/grpclog"
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var _ codes.Code
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var _ io.Reader
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var _ = runtime.String
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var _ = utilities.NewDoubleArray
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_KV_Range_0(ctx context.Context, marshaler runtime.Marshaler, client KVClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq RangeRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.Range(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_KV_Put_0(ctx context.Context, marshaler runtime.Marshaler, client KVClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq PutRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.Put(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_KV_DeleteRange_0(ctx context.Context, marshaler runtime.Marshaler, client KVClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq DeleteRangeRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.DeleteRange(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_KV_Txn_0(ctx context.Context, marshaler runtime.Marshaler, client KVClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq TxnRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.Txn(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_KV_Compact_0(ctx context.Context, marshaler runtime.Marshaler, client KVClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq CompactionRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.Compact(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Watch_Watch_0(ctx context.Context, marshaler runtime.Marshaler, client WatchClient, req *http.Request, pathParams map[string]string) (Watch_WatchClient, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		stream, err := client.Watch(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			grpclog.Printf("Failed to start streaming: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		dec := marshaler.NewDecoder(req.Body)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		handleSend := func() error {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			var protoReq WatchRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			err = dec.Decode(&protoReq)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err == io.EOF {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				grpclog.Printf("Failed to decode request: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err = stream.Send(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				grpclog.Printf("Failed to send request: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := handleSend(); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cerr := stream.CloseSend(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				grpclog.Printf("Failed to terminate client stream: %v", cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err == io.EOF {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return stream, metadata, nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		go func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			for {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if err := handleSend(); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					break
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err := stream.CloseSend(); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				grpclog.Printf("Failed to terminate client stream: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		header, err := stream.Header()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			grpclog.Printf("Failed to get header from client: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		metadata.HeaderMD = header
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return stream, metadata, nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Lease_LeaseGrant_0(ctx context.Context, marshaler runtime.Marshaler, client LeaseClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq LeaseGrantRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.LeaseGrant(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Lease_LeaseRevoke_0(ctx context.Context, marshaler runtime.Marshaler, client LeaseClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq LeaseRevokeRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.LeaseRevoke(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Lease_LeaseKeepAlive_0(ctx context.Context, marshaler runtime.Marshaler, client LeaseClient, req *http.Request, pathParams map[string]string) (Lease_LeaseKeepAliveClient, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		stream, err := client.LeaseKeepAlive(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			grpclog.Printf("Failed to start streaming: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		dec := marshaler.NewDecoder(req.Body)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		handleSend := func() error {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			var protoReq LeaseKeepAliveRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			err = dec.Decode(&protoReq)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err == io.EOF {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				grpclog.Printf("Failed to decode request: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err = stream.Send(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				grpclog.Printf("Failed to send request: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := handleSend(); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cerr := stream.CloseSend(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				grpclog.Printf("Failed to terminate client stream: %v", cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err == io.EOF {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return stream, metadata, nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		go func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			for {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if err := handleSend(); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					break
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err := stream.CloseSend(); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				grpclog.Printf("Failed to terminate client stream: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		header, err := stream.Header()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			grpclog.Printf("Failed to get header from client: %v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		metadata.HeaderMD = header
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return stream, metadata, nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	func request_Lease_LeaseTimeToLive_0(ctx context.Context, marshaler runtime.Marshaler, client LeaseClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		var protoReq LeaseTimeToLiveRequest
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		var metadata runtime.ServerMetadata
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		}
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		msg, err := client.LeaseTimeToLive(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		return msg, metadata, err
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	}
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Cluster_MemberAdd_0(ctx context.Context, marshaler runtime.Marshaler, client ClusterClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq MemberAddRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.MemberAdd(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Cluster_MemberRemove_0(ctx context.Context, marshaler runtime.Marshaler, client ClusterClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq MemberRemoveRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.MemberRemove(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Cluster_MemberUpdate_0(ctx context.Context, marshaler runtime.Marshaler, client ClusterClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq MemberUpdateRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.MemberUpdate(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Cluster_MemberList_0(ctx context.Context, marshaler runtime.Marshaler, client ClusterClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq MemberListRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.MemberList(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Maintenance_Alarm_0(ctx context.Context, marshaler runtime.Marshaler, client MaintenanceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AlarmRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.Alarm(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Maintenance_Status_0(ctx context.Context, marshaler runtime.Marshaler, client MaintenanceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq StatusRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.Status(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Maintenance_Defragment_0(ctx context.Context, marshaler runtime.Marshaler, client MaintenanceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq DefragmentRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.Defragment(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Maintenance_Hash_0(ctx context.Context, marshaler runtime.Marshaler, client MaintenanceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq HashRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.Hash(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Maintenance_Snapshot_0(ctx context.Context, marshaler runtime.Marshaler, client MaintenanceClient, req *http.Request, pathParams map[string]string) (Maintenance_SnapshotClient, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq SnapshotRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		stream, err := client.Snapshot(ctx, &protoReq)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		header, err := stream.Header()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		metadata.HeaderMD = header
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return stream, metadata, nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_AuthEnable_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthEnableRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.AuthEnable(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_AuthDisable_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthDisableRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.AuthDisable(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_Authenticate_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthenticateRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.Authenticate(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_UserAdd_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthUserAddRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.UserAdd(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_UserGet_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthUserGetRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.UserGet(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_UserList_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthUserListRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.UserList(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_UserDelete_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthUserDeleteRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.UserDelete(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_UserChangePassword_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthUserChangePasswordRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.UserChangePassword(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_UserGrantRole_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthUserGrantRoleRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.UserGrantRole(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_UserRevokeRole_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthUserRevokeRoleRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.UserRevokeRole(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_RoleAdd_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthRoleAddRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.RoleAdd(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_RoleGet_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthRoleGetRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.RoleGet(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_RoleList_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthRoleListRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.RoleList(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_RoleDelete_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthRoleDeleteRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.RoleDelete(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_RoleGrantPermission_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthRoleGrantPermissionRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.RoleGrantPermission(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func request_Auth_RoleRevokePermission_0(ctx context.Context, marshaler runtime.Marshaler, client AuthClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var protoReq AuthRoleRevokePermissionRequest
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		var metadata runtime.ServerMetadata
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		msg, err := client.RoleRevokePermission(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return msg, metadata, err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterKVHandlerFromEndpoint is same as RegisterKVHandler but
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// automatically dials to "endpoint" and closes the connection when "ctx" gets done.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterKVHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		conn, err := grpc.Dial(endpoint, opts...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		defer func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			go func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				<-ctx.Done()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return RegisterKVHandler(ctx, mux, conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterKVHandler registers the http handlers for service KV to "mux".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// The handlers forward requests to the grpc endpoint over "conn".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterKVHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		client := NewKVClient(conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_KV_Range_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_KV_Range_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_KV_Range_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_KV_Put_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_KV_Put_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_KV_Put_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_KV_DeleteRange_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_KV_DeleteRange_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_KV_DeleteRange_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_KV_Txn_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_KV_Txn_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_KV_Txn_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_KV_Compact_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_KV_Compact_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_KV_Compact_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_KV_Range_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "kv", "range"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_KV_Put_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "kv", "put"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_KV_DeleteRange_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "kv", "deleterange"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_KV_Txn_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "kv", "txn"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_KV_Compact_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "kv", "compaction"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_KV_Range_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_KV_Put_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_KV_DeleteRange_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_KV_Txn_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_KV_Compact_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterWatchHandlerFromEndpoint is same as RegisterWatchHandler but
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// automatically dials to "endpoint" and closes the connection when "ctx" gets done.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterWatchHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		conn, err := grpc.Dial(endpoint, opts...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		defer func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			go func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				<-ctx.Done()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return RegisterWatchHandler(ctx, mux, conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterWatchHandler registers the http handlers for service Watch to "mux".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// The handlers forward requests to the grpc endpoint over "conn".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterWatchHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		client := NewWatchClient(conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Watch_Watch_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Watch_Watch_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Watch_Watch_0(ctx, outboundMarshaler, w, req, func() (proto.Message, error) { return resp.Recv() }, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Watch_Watch_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1}, []string{"v3alpha", "watch"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Watch_Watch_0 = runtime.ForwardResponseStream
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterLeaseHandlerFromEndpoint is same as RegisterLeaseHandler but
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// automatically dials to "endpoint" and closes the connection when "ctx" gets done.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterLeaseHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		conn, err := grpc.Dial(endpoint, opts...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		defer func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			go func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				<-ctx.Done()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return RegisterLeaseHandler(ctx, mux, conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterLeaseHandler registers the http handlers for service Lease to "mux".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// The handlers forward requests to the grpc endpoint over "conn".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterLeaseHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		client := NewLeaseClient(conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Lease_LeaseGrant_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Lease_LeaseGrant_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Lease_LeaseGrant_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Lease_LeaseRevoke_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Lease_LeaseRevoke_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Lease_LeaseRevoke_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Lease_LeaseKeepAlive_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Lease_LeaseKeepAlive_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Lease_LeaseKeepAlive_0(ctx, outboundMarshaler, w, req, func() (proto.Message, error) { return resp.Recv() }, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		mux.Handle("POST", pattern_Lease_LeaseTimeToLive_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			ctx, cancel := context.WithCancel(ctx)
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			defer cancel()
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			if cn, ok := w.(http.CloseNotifier); ok {
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;				go func(done <-chan struct{}, closed <-chan bool) {
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;					select {
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;					case <-done:
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;					case <-closed:
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;						cancel()
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;					}
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;				}(ctx.Done(), cn.CloseNotify())
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			}
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			rctx, err := runtime.AnnotateContext(ctx, req)
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			if err != nil {
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			}
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			resp, md, err := request_Lease_LeaseTimeToLive_0(rctx, inboundMarshaler, client, req, pathParams)
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			ctx = runtime.NewServerMetadataContext(ctx, md)
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			if err != nil {
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;				return
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			}
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;			forward_Lease_LeaseTimeToLive_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		})
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Lease_LeaseGrant_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "lease", "grant"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Lease_LeaseRevoke_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "kv", "lease", "revoke"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Lease_LeaseKeepAlive_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "lease", "keepalive"}, ""))
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		pattern_Lease_LeaseTimeToLive_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "kv", "lease", "timetolive"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Lease_LeaseGrant_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Lease_LeaseRevoke_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Lease_LeaseKeepAlive_0 = runtime.ForwardResponseStream
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;	
550be6508d59ea184bfb64f8ae23c177b9e6d1c9;;		forward_Lease_LeaseTimeToLive_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterClusterHandlerFromEndpoint is same as RegisterClusterHandler but
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// automatically dials to "endpoint" and closes the connection when "ctx" gets done.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterClusterHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		conn, err := grpc.Dial(endpoint, opts...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		defer func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			go func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				<-ctx.Done()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return RegisterClusterHandler(ctx, mux, conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterClusterHandler registers the http handlers for service Cluster to "mux".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// The handlers forward requests to the grpc endpoint over "conn".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterClusterHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		client := NewClusterClient(conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Cluster_MemberAdd_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Cluster_MemberAdd_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Cluster_MemberAdd_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Cluster_MemberRemove_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Cluster_MemberRemove_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Cluster_MemberRemove_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Cluster_MemberUpdate_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Cluster_MemberUpdate_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Cluster_MemberUpdate_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Cluster_MemberList_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Cluster_MemberList_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Cluster_MemberList_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Cluster_MemberAdd_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "cluster", "member", "add"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Cluster_MemberRemove_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "cluster", "member", "remove"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Cluster_MemberUpdate_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "cluster", "member", "update"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Cluster_MemberList_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "cluster", "member", "list"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Cluster_MemberAdd_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Cluster_MemberRemove_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Cluster_MemberUpdate_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Cluster_MemberList_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterMaintenanceHandlerFromEndpoint is same as RegisterMaintenanceHandler but
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// automatically dials to "endpoint" and closes the connection when "ctx" gets done.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterMaintenanceHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		conn, err := grpc.Dial(endpoint, opts...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		defer func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			go func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				<-ctx.Done()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return RegisterMaintenanceHandler(ctx, mux, conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterMaintenanceHandler registers the http handlers for service Maintenance to "mux".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// The handlers forward requests to the grpc endpoint over "conn".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterMaintenanceHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		client := NewMaintenanceClient(conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Maintenance_Alarm_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Maintenance_Alarm_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Maintenance_Alarm_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Maintenance_Status_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Maintenance_Status_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Maintenance_Status_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Maintenance_Defragment_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Maintenance_Defragment_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Maintenance_Defragment_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Maintenance_Hash_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Maintenance_Hash_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Maintenance_Hash_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Maintenance_Snapshot_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Maintenance_Snapshot_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Maintenance_Snapshot_0(ctx, outboundMarshaler, w, req, func() (proto.Message, error) { return resp.Recv() }, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Maintenance_Alarm_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "maintenance", "alarm"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Maintenance_Status_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "maintenance", "status"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Maintenance_Defragment_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "maintenance", "defragment"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Maintenance_Hash_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "maintenance", "hash"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Maintenance_Snapshot_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "maintenance", "snapshot"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Maintenance_Alarm_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Maintenance_Status_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Maintenance_Defragment_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Maintenance_Hash_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Maintenance_Snapshot_0 = runtime.ForwardResponseStream
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterAuthHandlerFromEndpoint is same as RegisterAuthHandler but
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// automatically dials to "endpoint" and closes the connection when "ctx" gets done.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterAuthHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		conn, err := grpc.Dial(endpoint, opts...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			return err
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		defer func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			go func() {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				<-ctx.Done()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				if cerr := conn.Close(); cerr != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					grpclog.Printf("Failed to close conn to %s: %v", endpoint, cerr)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		}()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return RegisterAuthHandler(ctx, mux, conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// RegisterAuthHandler registers the http handlers for service Auth to "mux".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	// The handlers forward requests to the grpc endpoint over "conn".
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	func RegisterAuthHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		client := NewAuthClient(conn)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_AuthEnable_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_AuthEnable_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_AuthEnable_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_AuthDisable_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_AuthDisable_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_AuthDisable_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_Authenticate_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_Authenticate_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_Authenticate_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_UserAdd_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_UserAdd_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_UserAdd_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_UserGet_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_UserGet_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_UserGet_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_UserList_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_UserList_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_UserList_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_UserDelete_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_UserDelete_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_UserDelete_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_UserChangePassword_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_UserChangePassword_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_UserChangePassword_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_UserGrantRole_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_UserGrantRole_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_UserGrantRole_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_UserRevokeRole_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_UserRevokeRole_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_UserRevokeRole_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_RoleAdd_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_RoleAdd_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_RoleAdd_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_RoleGet_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_RoleGet_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_RoleGet_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_RoleList_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_RoleList_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_RoleList_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_RoleDelete_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_RoleDelete_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_RoleDelete_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_RoleGrantPermission_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_RoleGrantPermission_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_RoleGrantPermission_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		mux.Handle("POST", pattern_Auth_RoleRevokePermission_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx, cancel := context.WithCancel(ctx)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			defer cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if cn, ok := w.(http.CloseNotifier); ok {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				go func(done <-chan struct{}, closed <-chan bool) {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					select {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-done:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					case <-closed:
885071b7d07344044421ffe2fd90c1bcd1ee9812;;						cancel()
885071b7d07344044421ffe2fd90c1bcd1ee9812;;					}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				}(ctx.Done(), cn.CloseNotify())
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			rctx, err := runtime.AnnotateContext(ctx, req)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			resp, md, err := request_Auth_RoleRevokePermission_0(rctx, inboundMarshaler, client, req, pathParams)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			ctx = runtime.NewServerMetadataContext(ctx, md)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			if err != nil {
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;				return
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;			forward_Auth_RoleRevokePermission_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		})
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		return nil
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	}
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_AuthEnable_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "auth", "enable"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_AuthDisable_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "auth", "disable"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_Authenticate_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "auth", "authenticate"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_UserAdd_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "user", "add"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_UserGet_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "user", "get"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_UserList_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "user", "list"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_UserDelete_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "user", "delete"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_UserChangePassword_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "user", "changepw"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_UserGrantRole_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "user", "grant"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_UserRevokeRole_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "user", "revoke"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_RoleAdd_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "role", "add"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_RoleGet_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "role", "get"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_RoleList_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "role", "list"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_RoleDelete_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "role", "delete"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_RoleGrantPermission_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "role", "grant"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		pattern_Auth_RoleRevokePermission_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 2, 3}, []string{"v3alpha", "auth", "role", "revoke"}, ""))
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	var (
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_AuthEnable_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_AuthDisable_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_Authenticate_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_UserAdd_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_UserGet_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_UserList_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_UserDelete_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_UserChangePassword_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_UserGrantRole_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_UserRevokeRole_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_RoleAdd_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_RoleGet_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_RoleList_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_RoleDelete_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_RoleGrantPermission_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
885071b7d07344044421ffe2fd90c1bcd1ee9812;;		forward_Auth_RoleRevokePermission_0 = runtime.ForwardResponseMessage
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	)

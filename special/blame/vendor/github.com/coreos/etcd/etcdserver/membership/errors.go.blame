0000000000000000000000000000000000000000;;	// Copyright 2016 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
1861d099d10ddfa47b9f2b8b925fc11bd0827dac;Godeps/_workspace/src/github.com/coreos/etcd/etcdserver/membership/errors.go[Godeps/_workspace/src/github.com/coreos/etcd/etcdserver/membership/errors.go][vendor/github.com/coreos/etcd/etcdserver/membership/errors.go];	
0000000000000000000000000000000000000000;;	package membership
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"errors"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		etcdErr "github.com/coreos/etcd/error"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		ErrIDRemoved     = errors.New("membership: ID removed")
0000000000000000000000000000000000000000;;		ErrIDExists      = errors.New("membership: ID exists")
0000000000000000000000000000000000000000;;		ErrIDNotFound    = errors.New("membership: ID not found")
0000000000000000000000000000000000000000;;		ErrPeerURLexists = errors.New("membership: peerURL exists")
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func isKeyNotFound(err error) bool {
0000000000000000000000000000000000000000;;		e, ok := err.(*etcdErr.Error)
0000000000000000000000000000000000000000;;		return ok && e.ErrorCode == etcdErr.EcodeKeyNotFound
0000000000000000000000000000000000000000;;	}

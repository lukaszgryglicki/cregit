0000000000000000000000000000000000000000;;	// Copyright 2016 The etcd Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
0000000000000000000000000000000000000000;;	package v3rpc
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "github.com/prometheus/client_golang/prometheus"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		sentBytes = prometheus.NewCounter(prometheus.CounterOpts{
0000000000000000000000000000000000000000;;			Namespace: "etcd",
0000000000000000000000000000000000000000;;			Subsystem: "network",
0000000000000000000000000000000000000000;;			Name:      "client_grpc_sent_bytes_total",
0000000000000000000000000000000000000000;;			Help:      "The total number of bytes sent to grpc clients.",
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		receivedBytes = prometheus.NewCounter(prometheus.CounterOpts{
0000000000000000000000000000000000000000;;			Namespace: "etcd",
0000000000000000000000000000000000000000;;			Subsystem: "network",
0000000000000000000000000000000000000000;;			Name:      "client_grpc_received_bytes_total",
0000000000000000000000000000000000000000;;			Help:      "The total number of bytes received from grpc clients.",
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		prometheus.MustRegister(sentBytes)
0000000000000000000000000000000000000000;;		prometheus.MustRegister(receivedBytes)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package metrics
f1b7b8566d6c114c83a96e2bd7e7b3d31b7aaba4;Godeps/_workspace/src/github.com/hawkular/hawkular-client-go/metrics/helpers.go[Godeps/_workspace/src/github.com/hawkular/hawkular-client-go/metrics/helpers.go][vendor/github.com/hawkular/hawkular-client-go/metrics/helpers.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"math"
0000000000000000000000000000000000000000;;		"strconv"
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ConvertToFloat64(v interface{}) (float64, error) {
0000000000000000000000000000000000000000;;		switch i := v.(type) {
0000000000000000000000000000000000000000;;		case float64:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case float32:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case int64:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case int32:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case int16:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case int8:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case uint64:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case uint32:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case uint16:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case uint8:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case int:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case uint:
0000000000000000000000000000000000000000;;			return float64(i), nil
0000000000000000000000000000000000000000;;		case string:
0000000000000000000000000000000000000000;;			f, err := strconv.ParseFloat(i, 64)
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				return math.NaN(), err
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			return f, err
0000000000000000000000000000000000000000;;		default:
0000000000000000000000000000000000000000;;			return math.NaN(), fmt.Errorf("Cannot convert %s to float64", i)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Returns milliseconds since epoch
0000000000000000000000000000000000000000;;	func UnixMilli(t time.Time) int64 {
0000000000000000000000000000000000000000;;		return t.UnixNano() / 1e6
0000000000000000000000000000000000000000;;	}

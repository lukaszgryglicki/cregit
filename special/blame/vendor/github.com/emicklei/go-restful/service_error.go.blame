0000000000000000000000000000000000000000;;	package restful
faffbe4b32b67a5323e317a6025ba76cb607b435;Godeps/_workspace/src/github.com/emicklei/go-restful/service_error.go[Godeps/_workspace/src/github.com/emicklei/go-restful/service_error.go][vendor/github.com/emicklei/go-restful/service_error.go];	
0000000000000000000000000000000000000000;;	// Copyright 2013 Ernest Micklei. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a license
0000000000000000000000000000000000000000;;	// that can be found in the LICENSE file.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ServiceError is a transport object to pass information about a non-Http error occurred in a WebService while processing a request.
0000000000000000000000000000000000000000;;	type ServiceError struct {
0000000000000000000000000000000000000000;;		Code    int
0000000000000000000000000000000000000000;;		Message string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewError returns a ServiceError using the code and reason
0000000000000000000000000000000000000000;;	func NewError(code int, message string) ServiceError {
0000000000000000000000000000000000000000;;		return ServiceError{Code: code, Message: message}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Error returns a text representation of the service error
0000000000000000000000000000000000000000;;	func (s ServiceError) Error() string {
0000000000000000000000000000000000000000;;		return fmt.Sprintf("[ServiceError:%v] %v", s.Code, s.Message)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Package swagger implements the structures of the Swagger
0000000000000000000000000000000000000000;;	// https://github.com/wordnik/swagger-spec/blob/master/versions/1.2.md
0000000000000000000000000000000000000000;;	package swagger
faffbe4b32b67a5323e317a6025ba76cb607b435;Godeps/_workspace/src/github.com/emicklei/go-restful/swagger/swagger.go[Godeps/_workspace/src/github.com/emicklei/go-restful/swagger/swagger.go][vendor/github.com/emicklei/go-restful-swagger12/swagger.go];	
0000000000000000000000000000000000000000;;	const swaggerVersion = "1.2"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 4.3.3 Data Type Fields
0000000000000000000000000000000000000000;;	type DataTypeFields struct {
0000000000000000000000000000000000000000;;		Type         *string  `json:"type,omitempty"` // if Ref not used
0000000000000000000000000000000000000000;;		Ref          *string  `json:"$ref,omitempty"` // if Type not used
0000000000000000000000000000000000000000;;		Format       string   `json:"format,omitempty"`
0000000000000000000000000000000000000000;;		DefaultValue Special  `json:"defaultValue,omitempty"`
0000000000000000000000000000000000000000;;		Enum         []string `json:"enum,omitempty"`
0000000000000000000000000000000000000000;;		Minimum      string   `json:"minimum,omitempty"`
0000000000000000000000000000000000000000;;		Maximum      string   `json:"maximum,omitempty"`
0000000000000000000000000000000000000000;;		Items        *Item    `json:"items,omitempty"`
0000000000000000000000000000000000000000;;		UniqueItems  *bool    `json:"uniqueItems,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Special string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 4.3.4 Items Object
0000000000000000000000000000000000000000;;	type Item struct {
0000000000000000000000000000000000000000;;		Type   *string `json:"type,omitempty"`
0000000000000000000000000000000000000000;;		Ref    *string `json:"$ref,omitempty"`
0000000000000000000000000000000000000000;;		Format string  `json:"format,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1 Resource Listing
0000000000000000000000000000000000000000;;	type ResourceListing struct {
0000000000000000000000000000000000000000;;		SwaggerVersion string          `json:"swaggerVersion"` // e.g 1.2
0000000000000000000000000000000000000000;;		Apis           []Resource      `json:"apis"`
0000000000000000000000000000000000000000;;		ApiVersion     string          `json:"apiVersion"`
0000000000000000000000000000000000000000;;		Info           Info            `json:"info"`
0000000000000000000000000000000000000000;;		Authorizations []Authorization `json:"authorizations,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.2 Resource Object
0000000000000000000000000000000000000000;;	type Resource struct {
0000000000000000000000000000000000000000;;		Path        string `json:"path"` // relative or absolute, must start with /
0000000000000000000000000000000000000000;;		Description string `json:"description"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.3 Info Object
0000000000000000000000000000000000000000;;	type Info struct {
0000000000000000000000000000000000000000;;		Title             string `json:"title"`
0000000000000000000000000000000000000000;;		Description       string `json:"description"`
0000000000000000000000000000000000000000;;		TermsOfServiceUrl string `json:"termsOfServiceUrl,omitempty"`
0000000000000000000000000000000000000000;;		Contact           string `json:"contact,omitempty"`
0000000000000000000000000000000000000000;;		License           string `json:"license,omitempty"`
0000000000000000000000000000000000000000;;		LicenseUrl        string `json:"licenseUrl,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.5
0000000000000000000000000000000000000000;;	type Authorization struct {
0000000000000000000000000000000000000000;;		Type       string      `json:"type"`
0000000000000000000000000000000000000000;;		PassAs     string      `json:"passAs"`
0000000000000000000000000000000000000000;;		Keyname    string      `json:"keyname"`
0000000000000000000000000000000000000000;;		Scopes     []Scope     `json:"scopes"`
0000000000000000000000000000000000000000;;		GrantTypes []GrantType `json:"grandTypes"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.6, 5.2.11
0000000000000000000000000000000000000000;;	type Scope struct {
0000000000000000000000000000000000000000;;		// Required. The name of the scope.
0000000000000000000000000000000000000000;;		Scope string `json:"scope"`
0000000000000000000000000000000000000000;;		// Recommended. A short description of the scope.
0000000000000000000000000000000000000000;;		Description string `json:"description"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.7
0000000000000000000000000000000000000000;;	type GrantType struct {
0000000000000000000000000000000000000000;;		Implicit          Implicit          `json:"implicit"`
0000000000000000000000000000000000000000;;		AuthorizationCode AuthorizationCode `json:"authorization_code"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.8 Implicit Object
0000000000000000000000000000000000000000;;	type Implicit struct {
0000000000000000000000000000000000000000;;		// Required. The login endpoint definition.
0000000000000000000000000000000000000000;;		loginEndpoint LoginEndpoint `json:"loginEndpoint"`
0000000000000000000000000000000000000000;;		// An optional alternative name to standard "access_token" OAuth2 parameter.
0000000000000000000000000000000000000000;;		TokenName string `json:"tokenName"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.9 Authorization Code Object
0000000000000000000000000000000000000000;;	type AuthorizationCode struct {
0000000000000000000000000000000000000000;;		TokenRequestEndpoint TokenRequestEndpoint `json:"tokenRequestEndpoint"`
0000000000000000000000000000000000000000;;		TokenEndpoint        TokenEndpoint        `json:"tokenEndpoint"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.10 Login Endpoint Object
0000000000000000000000000000000000000000;;	type LoginEndpoint struct {
0000000000000000000000000000000000000000;;		// Required. The URL of the authorization endpoint for the implicit grant flow. The value SHOULD be in a URL format.
0000000000000000000000000000000000000000;;		Url string `json:"url"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.11 Token Request Endpoint Object
0000000000000000000000000000000000000000;;	type TokenRequestEndpoint struct {
0000000000000000000000000000000000000000;;		// Required. The URL of the authorization endpoint for the authentication code grant flow. The value SHOULD be in a URL format.
0000000000000000000000000000000000000000;;		Url string `json:"url"`
0000000000000000000000000000000000000000;;		// An optional alternative name to standard "client_id" OAuth2 parameter.
0000000000000000000000000000000000000000;;		ClientIdName string `json:"clientIdName"`
0000000000000000000000000000000000000000;;		// An optional alternative name to the standard "client_secret" OAuth2 parameter.
0000000000000000000000000000000000000000;;		ClientSecretName string `json:"clientSecretName"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.1.12 Token Endpoint Object
0000000000000000000000000000000000000000;;	type TokenEndpoint struct {
0000000000000000000000000000000000000000;;		// Required. The URL of the token endpoint for the authentication code grant flow. The value SHOULD be in a URL format.
0000000000000000000000000000000000000000;;		Url string `json:"url"`
0000000000000000000000000000000000000000;;		// An optional alternative name to standard "access_token" OAuth2 parameter.
0000000000000000000000000000000000000000;;		TokenName string `json:"tokenName"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.2 API Declaration
0000000000000000000000000000000000000000;;	type ApiDeclaration struct {
0000000000000000000000000000000000000000;;		SwaggerVersion string          `json:"swaggerVersion"`
0000000000000000000000000000000000000000;;		ApiVersion     string          `json:"apiVersion"`
0000000000000000000000000000000000000000;;		BasePath       string          `json:"basePath"`
0000000000000000000000000000000000000000;;		ResourcePath   string          `json:"resourcePath"` // must start with /
0000000000000000000000000000000000000000;;		Info           Info            `json:"info"`
0000000000000000000000000000000000000000;;		Apis           []Api           `json:"apis,omitempty"`
0000000000000000000000000000000000000000;;		Models         ModelList       `json:"models,omitempty"`
0000000000000000000000000000000000000000;;		Produces       []string        `json:"produces,omitempty"`
0000000000000000000000000000000000000000;;		Consumes       []string        `json:"consumes,omitempty"`
0000000000000000000000000000000000000000;;		Authorizations []Authorization `json:"authorizations,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.2.2 API Object
0000000000000000000000000000000000000000;;	type Api struct {
0000000000000000000000000000000000000000;;		Path        string      `json:"path"` // relative or absolute, must start with /
0000000000000000000000000000000000000000;;		Description string      `json:"description"`
0000000000000000000000000000000000000000;;		Operations  []Operation `json:"operations,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.2.3 Operation Object
0000000000000000000000000000000000000000;;	type Operation struct {
0000000000000000000000000000000000000000;;		DataTypeFields
0000000000000000000000000000000000000000;;		Method           string            `json:"method"`
0000000000000000000000000000000000000000;;		Summary          string            `json:"summary,omitempty"`
0000000000000000000000000000000000000000;;		Notes            string            `json:"notes,omitempty"`
0000000000000000000000000000000000000000;;		Nickname         string            `json:"nickname"`
0000000000000000000000000000000000000000;;		Authorizations   []Authorization   `json:"authorizations,omitempty"`
0000000000000000000000000000000000000000;;		Parameters       []Parameter       `json:"parameters"`
0000000000000000000000000000000000000000;;		ResponseMessages []ResponseMessage `json:"responseMessages,omitempty"` // optional
0000000000000000000000000000000000000000;;		Produces         []string          `json:"produces,omitempty"`
0000000000000000000000000000000000000000;;		Consumes         []string          `json:"consumes,omitempty"`
0000000000000000000000000000000000000000;;		Deprecated       string            `json:"deprecated,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.2.4 Parameter Object
0000000000000000000000000000000000000000;;	type Parameter struct {
0000000000000000000000000000000000000000;;		DataTypeFields
0000000000000000000000000000000000000000;;		ParamType     string `json:"paramType"` // path,query,body,header,form
0000000000000000000000000000000000000000;;		Name          string `json:"name"`
0000000000000000000000000000000000000000;;		Description   string `json:"description"`
0000000000000000000000000000000000000000;;		Required      bool   `json:"required"`
0000000000000000000000000000000000000000;;		AllowMultiple bool   `json:"allowMultiple"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.2.5 Response Message Object
0000000000000000000000000000000000000000;;	type ResponseMessage struct {
0000000000000000000000000000000000000000;;		Code          int    `json:"code"`
0000000000000000000000000000000000000000;;		Message       string `json:"message"`
0000000000000000000000000000000000000000;;		ResponseModel string `json:"responseModel,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.2.6, 5.2.7 Models Object
0000000000000000000000000000000000000000;;	type Model struct {
0000000000000000000000000000000000000000;;		Id            string            `json:"id"`
0000000000000000000000000000000000000000;;		Description   string            `json:"description,omitempty"`
0000000000000000000000000000000000000000;;		Required      []string          `json:"required,omitempty"`
0000000000000000000000000000000000000000;;		Properties    ModelPropertyList `json:"properties"`
0000000000000000000000000000000000000000;;		SubTypes      []string          `json:"subTypes,omitempty"`
0000000000000000000000000000000000000000;;		Discriminator string            `json:"discriminator,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.2.8 Properties Object
0000000000000000000000000000000000000000;;	type ModelProperty struct {
0000000000000000000000000000000000000000;;		DataTypeFields
0000000000000000000000000000000000000000;;		Description string `json:"description,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// 5.2.10
0000000000000000000000000000000000000000;;	type Authorizations map[string]Authorization

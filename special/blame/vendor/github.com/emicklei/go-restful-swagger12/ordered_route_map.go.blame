0000000000000000000000000000000000000000;;	package swagger
523963af00add3f38dd9dc56d7a9537b3dbb299f;Godeps/_workspace/src/github.com/emicklei/go-restful/swagger/ordered_route_map.go[Godeps/_workspace/src/github.com/emicklei/go-restful/swagger/ordered_route_map.go][vendor/github.com/emicklei/go-restful-swagger12/ordered_route_map.go];	
0000000000000000000000000000000000000000;;	// Copyright 2015 Ernest Micklei. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a license
0000000000000000000000000000000000000000;;	// that can be found in the LICENSE file.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "github.com/emicklei/go-restful"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type orderedRouteMap struct {
0000000000000000000000000000000000000000;;		elements map[string][]restful.Route
0000000000000000000000000000000000000000;;		keys     []string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newOrderedRouteMap() *orderedRouteMap {
0000000000000000000000000000000000000000;;		return &orderedRouteMap{
0000000000000000000000000000000000000000;;			elements: map[string][]restful.Route{},
0000000000000000000000000000000000000000;;			keys:     []string{},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (o *orderedRouteMap) Add(key string, route restful.Route) {
0000000000000000000000000000000000000000;;		routes, ok := o.elements[key]
0000000000000000000000000000000000000000;;		if ok {
0000000000000000000000000000000000000000;;			routes = append(routes, route)
0000000000000000000000000000000000000000;;			o.elements[key] = routes
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		o.elements[key] = []restful.Route{route}
0000000000000000000000000000000000000000;;		o.keys = append(o.keys, key)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (o *orderedRouteMap) Do(block func(key string, routes []restful.Route)) {
0000000000000000000000000000000000000000;;		for _, k := range o.keys {
0000000000000000000000000000000000000000;;			block(k, o.elements[k])
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

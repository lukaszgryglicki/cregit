0000000000000000000000000000000000000000;;	package swagger
faffbe4b32b67a5323e317a6025ba76cb607b435;Godeps/_workspace/src/github.com/emicklei/go-restful/swagger/config.go[Godeps/_workspace/src/github.com/emicklei/go-restful/swagger/config.go][vendor/github.com/emicklei/go-restful-swagger12/config.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"net/http"
0000000000000000000000000000000000000000;;		"reflect"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/emicklei/go-restful"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PostBuildDeclarationMapFunc can be used to modify the api declaration map.
0000000000000000000000000000000000000000;;	type PostBuildDeclarationMapFunc func(apiDeclarationMap *ApiDeclarationList)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// MapSchemaFormatFunc can be used to modify typeName at definition time.
0000000000000000000000000000000000000000;;	type MapSchemaFormatFunc func(typeName string) string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// MapModelTypeNameFunc can be used to return the desired typeName for a given
0000000000000000000000000000000000000000;;	// type. It will return false if the default name should be used.
0000000000000000000000000000000000000000;;	type MapModelTypeNameFunc func(t reflect.Type) (string, bool)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Config struct {
0000000000000000000000000000000000000000;;		// url where the services are available, e.g. http://localhost:8080
0000000000000000000000000000000000000000;;		// if left empty then the basePath of Swagger is taken from the actual request
0000000000000000000000000000000000000000;;		WebServicesUrl string
0000000000000000000000000000000000000000;;		// path where the JSON api is avaiable , e.g. /apidocs
0000000000000000000000000000000000000000;;		ApiPath string
0000000000000000000000000000000000000000;;		// [optional] path where the swagger UI will be served, e.g. /swagger
0000000000000000000000000000000000000000;;		SwaggerPath string
0000000000000000000000000000000000000000;;		// [optional] location of folder containing Swagger HTML5 application index.html
0000000000000000000000000000000000000000;;		SwaggerFilePath string
0000000000000000000000000000000000000000;;		// api listing is constructed from this list of restful WebServices.
0000000000000000000000000000000000000000;;		WebServices []*restful.WebService
0000000000000000000000000000000000000000;;		// will serve all static content (scripts,pages,images)
0000000000000000000000000000000000000000;;		StaticHandler http.Handler
0000000000000000000000000000000000000000;;		// [optional] on default CORS (Cross-Origin-Resource-Sharing) is enabled.
0000000000000000000000000000000000000000;;		DisableCORS bool
0000000000000000000000000000000000000000;;		// Top-level API version. Is reflected in the resource listing.
0000000000000000000000000000000000000000;;		ApiVersion string
0000000000000000000000000000000000000000;;		// If set then call this handler after building the complete ApiDeclaration Map
0000000000000000000000000000000000000000;;		PostBuildHandler PostBuildDeclarationMapFunc
0000000000000000000000000000000000000000;;		// Swagger global info struct
0000000000000000000000000000000000000000;;		Info Info
0000000000000000000000000000000000000000;;		// [optional] If set, model builder should call this handler to get addition typename-to-swagger-format-field conversion.
0000000000000000000000000000000000000000;;		SchemaFormatHandler MapSchemaFormatFunc
0000000000000000000000000000000000000000;;		// [optional] If set, model builder should call this handler to retrieve the name for a given type.
0000000000000000000000000000000000000000;;		ModelTypeNameHandler MapModelTypeNameFunc
0000000000000000000000000000000000000000;;	}

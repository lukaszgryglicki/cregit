0000000000000000000000000000000000000000;;	// Copyright 2014 Google Inc.  All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
3a8ebd5ade2039140587a7289d1ca1670f5aa00c;Godeps/_workspace/src/github.com/pborman/uuid/json.go[Godeps/_workspace/src/github.com/pborman/uuid/json.go][vendor/github.com/pborman/uuid/json.go];	
0000000000000000000000000000000000000000;;	package uuid
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "errors"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (u UUID) MarshalJSON() ([]byte, error) {
0000000000000000000000000000000000000000;;		if len(u) == 0 {
0000000000000000000000000000000000000000;;			return []byte(`""`), nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return []byte(`"` + u.String() + `"`), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (u *UUID) UnmarshalJSON(data []byte) error {
0000000000000000000000000000000000000000;;		if len(data) == 0 || string(data) == `""` {
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if len(data) < 2 || data[0] != '"' || data[len(data)-1] != '"' {
0000000000000000000000000000000000000000;;			return errors.New("invalid UUID format")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		data = data[1 : len(data)-1]
0000000000000000000000000000000000000000;;		uu := Parse(string(data))
0000000000000000000000000000000000000000;;		if uu == nil {
0000000000000000000000000000000000000000;;			return errors.New("invalid UUID format")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		*u = uu
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

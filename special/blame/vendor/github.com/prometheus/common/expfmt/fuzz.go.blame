0000000000000000000000000000000000000000;;	// Copyright 2014 The Prometheus Authors
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
f7e1dc03448db9e2d7d0160d5b6aa202c60d79bc;Godeps/_workspace/src/github.com/prometheus/common/expfmt/fuzz.go[Godeps/_workspace/src/github.com/prometheus/common/expfmt/fuzz.go][vendor/github.com/prometheus/common/expfmt/fuzz.go];	
0000000000000000000000000000000000000000;;	// Build only when actually fuzzing
0000000000000000000000000000000000000000;;	// +build gofuzz
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package expfmt
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "bytes"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Fuzz text metric parser with with github.com/dvyukov/go-fuzz:
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     go-fuzz-build github.com/prometheus/common/expfmt
0000000000000000000000000000000000000000;;	//     go-fuzz -bin expfmt-fuzz.zip -workdir fuzz
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Further input samples should go in the folder fuzz/corpus.
0000000000000000000000000000000000000000;;	func Fuzz(in []byte) int {
0000000000000000000000000000000000000000;;		parser := TextParser{}
0000000000000000000000000000000000000000;;		_, err := parser.TextToMetricFamilies(bytes.NewReader(in))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return 0
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return 1
0000000000000000000000000000000000000000;;	}

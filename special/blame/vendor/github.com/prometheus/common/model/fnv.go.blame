0000000000000000000000000000000000000000;;	// Copyright 2015 The Prometheus Authors
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
13e1e7cd1550dcd956d3e82fe798021f5812b15e;;	
0000000000000000000000000000000000000000;;	package model
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Inline and byte-free variant of hash/fnv's fnv64a.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		offset64 = 14695981039346656037
0000000000000000000000000000000000000000;;		prime64  = 1099511628211
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// hashNew initializies a new fnv64a hash value.
0000000000000000000000000000000000000000;;	func hashNew() uint64 {
0000000000000000000000000000000000000000;;		return offset64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// hashAdd adds a string to a fnv64a hash value, returning the updated hash.
0000000000000000000000000000000000000000;;	func hashAdd(h uint64, s string) uint64 {
0000000000000000000000000000000000000000;;		for i := 0; i < len(s); i++ {
0000000000000000000000000000000000000000;;			h ^= uint64(s[i])
0000000000000000000000000000000000000000;;			h *= prime64
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return h
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// hashAddByte adds a byte to a fnv64a hash value, returning the updated hash.
0000000000000000000000000000000000000000;;	func hashAddByte(h uint64, b byte) uint64 {
0000000000000000000000000000000000000000;;		h ^= uint64(b)
0000000000000000000000000000000000000000;;		h *= prime64
0000000000000000000000000000000000000000;;		return h
0000000000000000000000000000000000000000;;	}

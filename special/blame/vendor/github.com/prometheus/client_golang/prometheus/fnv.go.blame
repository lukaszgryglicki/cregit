0000000000000000000000000000000000000000;;	package prometheus
13e1e7cd1550dcd956d3e82fe798021f5812b15e;;	
0000000000000000000000000000000000000000;;	// Inline and byte-free variant of hash/fnv's fnv64a.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		offset64 = 14695981039346656037
0000000000000000000000000000000000000000;;		prime64  = 1099511628211
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// hashNew initializies a new fnv64a hash value.
0000000000000000000000000000000000000000;;	func hashNew() uint64 {
0000000000000000000000000000000000000000;;		return offset64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// hashAdd adds a string to a fnv64a hash value, returning the updated hash.
0000000000000000000000000000000000000000;;	func hashAdd(h uint64, s string) uint64 {
0000000000000000000000000000000000000000;;		for i := 0; i < len(s); i++ {
0000000000000000000000000000000000000000;;			h ^= uint64(s[i])
0000000000000000000000000000000000000000;;			h *= prime64
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return h
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// hashAddByte adds a byte to a fnv64a hash value, returning the updated hash.
0000000000000000000000000000000000000000;;	func hashAddByte(h uint64, b byte) uint64 {
0000000000000000000000000000000000000000;;		h ^= uint64(b)
0000000000000000000000000000000000000000;;		h *= prime64
0000000000000000000000000000000000000000;;		return h
0000000000000000000000000000000000000000;;	}

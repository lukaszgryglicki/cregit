0000000000000000000000000000000000000000;;	// Copyright 2017 The Prometheus Authors
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
13e1e7cd1550dcd956d3e82fe798021f5812b15e;;	
0000000000000000000000000000000000000000;;	// +build !go1.8
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package promhttp
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"net/http"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newDelegator(w http.ResponseWriter, observeWriteHeaderFunc func(int)) delegator {
0000000000000000000000000000000000000000;;		d := &responseWriterDelegator{
0000000000000000000000000000000000000000;;			ResponseWriter:     w,
0000000000000000000000000000000000000000;;			observeWriteHeader: observeWriteHeaderFunc,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		_, cn := w.(http.CloseNotifier)
0000000000000000000000000000000000000000;;		_, fl := w.(http.Flusher)
0000000000000000000000000000000000000000;;		_, hj := w.(http.Hijacker)
0000000000000000000000000000000000000000;;		_, rf := w.(io.ReaderFrom)
0000000000000000000000000000000000000000;;		if cn && fl && hj && rf {
0000000000000000000000000000000000000000;;			return &fancyDelegator{d}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return d
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Copyright 2017 The Prometheus Authors
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
13e1e7cd1550dcd956d3e82fe798021f5812b15e;;	
0000000000000000000000000000000000000000;;	// Package xfs provides access to statistics exposed by the XFS filesystem.
0000000000000000000000000000000000000000;;	package xfs
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Stats contains XFS filesystem runtime statistics, parsed from
0000000000000000000000000000000000000000;;	// /proc/fs/xfs/stat.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// The names and meanings of each statistic were taken from
0000000000000000000000000000000000000000;;	// http://xfs.org/index.php/Runtime_Stats and xfs_stats.h in the Linux
0000000000000000000000000000000000000000;;	// kernel source. Most counters are uint32s (same data types used in
0000000000000000000000000000000000000000;;	// xfs_stats.h), but some of the "extended precision stats" are uint64s.
0000000000000000000000000000000000000000;;	type Stats struct {
0000000000000000000000000000000000000000;;		// The name of the filesystem used to source these statistics.
0000000000000000000000000000000000000000;;		// If empty, this indicates aggregated statistics for all XFS
0000000000000000000000000000000000000000;;		// filesystems on the host.
0000000000000000000000000000000000000000;;		Name string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ExtentAllocation   ExtentAllocationStats
0000000000000000000000000000000000000000;;		AllocationBTree    BTreeStats
0000000000000000000000000000000000000000;;		BlockMapping       BlockMappingStats
0000000000000000000000000000000000000000;;		BlockMapBTree      BTreeStats
0000000000000000000000000000000000000000;;		DirectoryOperation DirectoryOperationStats
0000000000000000000000000000000000000000;;		Transaction        TransactionStats
0000000000000000000000000000000000000000;;		InodeOperation     InodeOperationStats
0000000000000000000000000000000000000000;;		LogOperation       LogOperationStats
0000000000000000000000000000000000000000;;		ReadWrite          ReadWriteStats
0000000000000000000000000000000000000000;;		AttributeOperation AttributeOperationStats
0000000000000000000000000000000000000000;;		InodeClustering    InodeClusteringStats
0000000000000000000000000000000000000000;;		Vnode              VnodeStats
0000000000000000000000000000000000000000;;		Buffer             BufferStats
0000000000000000000000000000000000000000;;		ExtendedPrecision  ExtendedPrecisionStats
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ExtentAllocationStats contains statistics regarding XFS extent allocations.
0000000000000000000000000000000000000000;;	type ExtentAllocationStats struct {
0000000000000000000000000000000000000000;;		ExtentsAllocated uint32
0000000000000000000000000000000000000000;;		BlocksAllocated  uint32
0000000000000000000000000000000000000000;;		ExtentsFreed     uint32
0000000000000000000000000000000000000000;;		BlocksFreed      uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// BTreeStats contains statistics regarding an XFS internal B-tree.
0000000000000000000000000000000000000000;;	type BTreeStats struct {
0000000000000000000000000000000000000000;;		Lookups         uint32
0000000000000000000000000000000000000000;;		Compares        uint32
0000000000000000000000000000000000000000;;		RecordsInserted uint32
0000000000000000000000000000000000000000;;		RecordsDeleted  uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// BlockMappingStats contains statistics regarding XFS block maps.
0000000000000000000000000000000000000000;;	type BlockMappingStats struct {
0000000000000000000000000000000000000000;;		Reads                uint32
0000000000000000000000000000000000000000;;		Writes               uint32
0000000000000000000000000000000000000000;;		Unmaps               uint32
0000000000000000000000000000000000000000;;		ExtentListInsertions uint32
0000000000000000000000000000000000000000;;		ExtentListDeletions  uint32
0000000000000000000000000000000000000000;;		ExtentListLookups    uint32
0000000000000000000000000000000000000000;;		ExtentListCompares   uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DirectoryOperationStats contains statistics regarding XFS directory entries.
0000000000000000000000000000000000000000;;	type DirectoryOperationStats struct {
0000000000000000000000000000000000000000;;		Lookups  uint32
0000000000000000000000000000000000000000;;		Creates  uint32
0000000000000000000000000000000000000000;;		Removes  uint32
0000000000000000000000000000000000000000;;		Getdents uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// TransactionStats contains statistics regarding XFS metadata transactions.
0000000000000000000000000000000000000000;;	type TransactionStats struct {
0000000000000000000000000000000000000000;;		Sync  uint32
0000000000000000000000000000000000000000;;		Async uint32
0000000000000000000000000000000000000000;;		Empty uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// InodeOperationStats contains statistics regarding XFS inode operations.
0000000000000000000000000000000000000000;;	type InodeOperationStats struct {
0000000000000000000000000000000000000000;;		Attempts        uint32
0000000000000000000000000000000000000000;;		Found           uint32
0000000000000000000000000000000000000000;;		Recycle         uint32
0000000000000000000000000000000000000000;;		Missed          uint32
0000000000000000000000000000000000000000;;		Duplicate       uint32
0000000000000000000000000000000000000000;;		Reclaims        uint32
0000000000000000000000000000000000000000;;		AttributeChange uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// LogOperationStats contains statistics regarding the XFS log buffer.
0000000000000000000000000000000000000000;;	type LogOperationStats struct {
0000000000000000000000000000000000000000;;		Writes            uint32
0000000000000000000000000000000000000000;;		Blocks            uint32
0000000000000000000000000000000000000000;;		NoInternalBuffers uint32
0000000000000000000000000000000000000000;;		Force             uint32
0000000000000000000000000000000000000000;;		ForceSleep        uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ReadWriteStats contains statistics regarding the number of read and write
0000000000000000000000000000000000000000;;	// system calls for XFS filesystems.
0000000000000000000000000000000000000000;;	type ReadWriteStats struct {
0000000000000000000000000000000000000000;;		Read  uint32
0000000000000000000000000000000000000000;;		Write uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AttributeOperationStats contains statistics regarding manipulation of
0000000000000000000000000000000000000000;;	// XFS extended file attributes.
0000000000000000000000000000000000000000;;	type AttributeOperationStats struct {
0000000000000000000000000000000000000000;;		Get    uint32
0000000000000000000000000000000000000000;;		Set    uint32
0000000000000000000000000000000000000000;;		Remove uint32
0000000000000000000000000000000000000000;;		List   uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// InodeClusteringStats contains statistics regarding XFS inode clustering
0000000000000000000000000000000000000000;;	// operations.
0000000000000000000000000000000000000000;;	type InodeClusteringStats struct {
0000000000000000000000000000000000000000;;		Iflush     uint32
0000000000000000000000000000000000000000;;		Flush      uint32
0000000000000000000000000000000000000000;;		FlushInode uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// VnodeStats contains statistics regarding XFS vnode operations.
0000000000000000000000000000000000000000;;	type VnodeStats struct {
0000000000000000000000000000000000000000;;		Active   uint32
0000000000000000000000000000000000000000;;		Allocate uint32
0000000000000000000000000000000000000000;;		Get      uint32
0000000000000000000000000000000000000000;;		Hold     uint32
0000000000000000000000000000000000000000;;		Release  uint32
0000000000000000000000000000000000000000;;		Reclaim  uint32
0000000000000000000000000000000000000000;;		Remove   uint32
0000000000000000000000000000000000000000;;		Free     uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// BufferStats contains statistics regarding XFS read/write I/O buffers.
0000000000000000000000000000000000000000;;	type BufferStats struct {
0000000000000000000000000000000000000000;;		Get             uint32
0000000000000000000000000000000000000000;;		Create          uint32
0000000000000000000000000000000000000000;;		GetLocked       uint32
0000000000000000000000000000000000000000;;		GetLockedWaited uint32
0000000000000000000000000000000000000000;;		BusyLocked      uint32
0000000000000000000000000000000000000000;;		MissLocked      uint32
0000000000000000000000000000000000000000;;		PageRetries     uint32
0000000000000000000000000000000000000000;;		PageFound       uint32
0000000000000000000000000000000000000000;;		GetRead         uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ExtendedPrecisionStats contains high precision counters used to track the
0000000000000000000000000000000000000000;;	// total number of bytes read, written, or flushed, during XFS operations.
0000000000000000000000000000000000000000;;	type ExtendedPrecisionStats struct {
0000000000000000000000000000000000000000;;		FlushBytes uint64
0000000000000000000000000000000000000000;;		WriteBytes uint64
0000000000000000000000000000000000000000;;		ReadBytes  uint64
0000000000000000000000000000000000000000;;	}

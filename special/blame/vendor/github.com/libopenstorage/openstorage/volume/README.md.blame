0000000000000000000000000000000000000000;;	## Volume Drivers
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Volume drivers implement the [Volume Plugin Interface](https://docs.docker.com/engine/extend/plugins_volume/).
0000000000000000000000000000000000000000;;	This provides an interface to register a volume driver and advertise the driver to Docker.  Registering a driver with this volume interface will cause Docker to be able to communicate with the driver to create and assign volumes to a container.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	A volume spec is needed to create a volume.  A volume spec looks like:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	// VolumeSpec has the properties needed to create a volume.
0000000000000000000000000000000000000000;;	type VolumeSpec struct {
0000000000000000000000000000000000000000;;		// Ephemeral storage
0000000000000000000000000000000000000000;;		Ephemeral bool
0000000000000000000000000000000000000000;;		// Thin provisioned volume size in bytes
0000000000000000000000000000000000000000;;		Size uint64
0000000000000000000000000000000000000000;;		// Format disk with this FileSystem
0000000000000000000000000000000000000000;;		Format Filesystem
0000000000000000000000000000000000000000;;		// BlockSize for file system
0000000000000000000000000000000000000000;;		BlockSize int
0000000000000000000000000000000000000000;;		// HA Level specifies the number of nodes that are
0000000000000000000000000000000000000000;;		// allowed to fail, and yet data is availabel.
0000000000000000000000000000000000000000;;		// A value of 0 implies that data is not erasure coded,
0000000000000000000000000000000000000000;;		// a failure of a node will lead to data loss.
0000000000000000000000000000000000000000;;		HALevel int
0000000000000000000000000000000000000000;;		// This disk's CoS
0000000000000000000000000000000000000000;;		Cos VolumeCos
0000000000000000000000000000000000000000;;		// Perform dedupe on this disk
0000000000000000000000000000000000000000;;		Dedupe bool
0000000000000000000000000000000000000000;;		// SnapshotInterval in minutes, set to 0 to disable Snapshots
0000000000000000000000000000000000000000;;		SnapshotInterval int
0000000000000000000000000000000000000000;;		// Volume configuration labels
0000000000000000000000000000000000000000;;		ConfigLabels Labels
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Various volume driver implementations can be found in the `drivers` directory.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Block Drivers
0000000000000000000000000000000000000000;;	Block drivers operate at the block layer.  They provide raw volumes formatted with a user specified filesystem.  This volume is then mounted into the container at a path specified using the `docker run -v` option.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### File Drivers
0000000000000000000000000000000000000000;;	File drivers operate at the filesystem layer.

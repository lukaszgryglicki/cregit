53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Code generated by protoc-gen-go.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// source: api/api.proto
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// DO NOT EDIT!
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	package api
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import proto "github.com/golang/protobuf/proto"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import fmt "fmt"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import math "math"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	import google_protobuf "go.pedge.io/pb/go/google/protobuf"
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Reference imports to suppress errors if they are not otherwise used.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var _ = proto.Marshal
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var _ = fmt.Errorf
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var _ = math.Inf
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// This is a compile-time assertion to ensure that this generated file
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// is compatible with the proto package it is being compiled against.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// A compilation error at this line likely means your copy of the
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// proto package needs to be updated.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Status int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_NONE                  Status = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_INIT                  Status = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_OK                    Status = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_OFFLINE               Status = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_ERROR                 Status = 4
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_NOT_IN_QUORUM         Status = 5
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_DECOMMISSION          Status = 6
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_MAINTENANCE           Status = 7
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_STORAGE_DOWN          Status = 8
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_STORAGE_DEGRADED      Status = 9
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_NEEDS_REBOOT          Status = 10
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_STORAGE_REBALANCE     Status = 11
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_STORAGE_DRIVE_REPLACE Status = 12
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Add statuses before MAX and update the number for MAX
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status_STATUS_MAX Status = 13
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var Status_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0:  "STATUS_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1:  "STATUS_INIT",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2:  "STATUS_OK",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3:  "STATUS_OFFLINE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		4:  "STATUS_ERROR",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		5:  "STATUS_NOT_IN_QUORUM",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		6:  "STATUS_DECOMMISSION",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		7:  "STATUS_MAINTENANCE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		8:  "STATUS_STORAGE_DOWN",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		9:  "STATUS_STORAGE_DEGRADED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		10: "STATUS_NEEDS_REBOOT",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		11: "STATUS_STORAGE_REBALANCE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		12: "STATUS_STORAGE_DRIVE_REPLACE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		13: "STATUS_MAX",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var Status_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_NONE":                  0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_INIT":                  1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_OK":                    2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_OFFLINE":               3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_ERROR":                 4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_NOT_IN_QUORUM":         5,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_DECOMMISSION":          6,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_MAINTENANCE":           7,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_STORAGE_DOWN":          8,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_STORAGE_DEGRADED":      9,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_NEEDS_REBOOT":          10,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_STORAGE_REBALANCE":     11,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_STORAGE_DRIVE_REPLACE": 12,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STATUS_MAX":                   13,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x Status) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(Status_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type DriverType int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		DriverType_DRIVER_TYPE_NONE      DriverType = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		DriverType_DRIVER_TYPE_FILE      DriverType = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		DriverType_DRIVER_TYPE_BLOCK     DriverType = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		DriverType_DRIVER_TYPE_OBJECT    DriverType = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		DriverType_DRIVER_TYPE_CLUSTERED DriverType = 4
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		DriverType_DRIVER_TYPE_GRAPH     DriverType = 5
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var DriverType_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "DRIVER_TYPE_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "DRIVER_TYPE_FILE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "DRIVER_TYPE_BLOCK",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "DRIVER_TYPE_OBJECT",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		4: "DRIVER_TYPE_CLUSTERED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		5: "DRIVER_TYPE_GRAPH",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var DriverType_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"DRIVER_TYPE_NONE":      0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"DRIVER_TYPE_FILE":      1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"DRIVER_TYPE_BLOCK":     2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"DRIVER_TYPE_OBJECT":    3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"DRIVER_TYPE_CLUSTERED": 4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"DRIVER_TYPE_GRAPH":     5,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x DriverType) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(DriverType_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (DriverType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type FSType int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		FSType_FS_TYPE_NONE  FSType = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		FSType_FS_TYPE_BTRFS FSType = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		FSType_FS_TYPE_EXT4  FSType = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		FSType_FS_TYPE_FUSE  FSType = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		FSType_FS_TYPE_NFS   FSType = 4
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		FSType_FS_TYPE_VFS   FSType = 5
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		FSType_FS_TYPE_XFS   FSType = 6
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		FSType_FS_TYPE_ZFS   FSType = 7
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var FSType_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "FS_TYPE_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "FS_TYPE_BTRFS",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "FS_TYPE_EXT4",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "FS_TYPE_FUSE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		4: "FS_TYPE_NFS",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		5: "FS_TYPE_VFS",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		6: "FS_TYPE_XFS",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		7: "FS_TYPE_ZFS",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var FSType_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"FS_TYPE_NONE":  0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"FS_TYPE_BTRFS": 1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"FS_TYPE_EXT4":  2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"FS_TYPE_FUSE":  3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"FS_TYPE_NFS":   4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"FS_TYPE_VFS":   5,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"FS_TYPE_XFS":   6,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"FS_TYPE_ZFS":   7,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x FSType) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(FSType_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (FSType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type GraphDriverChangeType int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE     GraphDriverChangeType = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_MODIFIED GraphDriverChangeType = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_ADDED    GraphDriverChangeType = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_DELETED  GraphDriverChangeType = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var GraphDriverChangeType_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "GRAPH_DRIVER_CHANGE_TYPE_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "GRAPH_DRIVER_CHANGE_TYPE_MODIFIED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "GRAPH_DRIVER_CHANGE_TYPE_ADDED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "GRAPH_DRIVER_CHANGE_TYPE_DELETED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var GraphDriverChangeType_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"GRAPH_DRIVER_CHANGE_TYPE_NONE":     0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"GRAPH_DRIVER_CHANGE_TYPE_MODIFIED": 1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"GRAPH_DRIVER_CHANGE_TYPE_ADDED":    2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"GRAPH_DRIVER_CHANGE_TYPE_DELETED":  3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x GraphDriverChangeType) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(GraphDriverChangeType_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (GraphDriverChangeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type SeverityType int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SeverityType_SEVERITY_TYPE_NONE    SeverityType = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SeverityType_SEVERITY_TYPE_ALARM   SeverityType = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SeverityType_SEVERITY_TYPE_WARNING SeverityType = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SeverityType_SEVERITY_TYPE_NOTIFY  SeverityType = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var SeverityType_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "SEVERITY_TYPE_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "SEVERITY_TYPE_ALARM",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "SEVERITY_TYPE_WARNING",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "SEVERITY_TYPE_NOTIFY",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var SeverityType_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"SEVERITY_TYPE_NONE":    0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"SEVERITY_TYPE_ALARM":   1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"SEVERITY_TYPE_WARNING": 2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"SEVERITY_TYPE_NOTIFY":  3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x SeverityType) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(SeverityType_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (SeverityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type ResourceType int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ResourceType_RESOURCE_TYPE_NONE    ResourceType = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ResourceType_RESOURCE_TYPE_VOLUME  ResourceType = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ResourceType_RESOURCE_TYPE_NODE    ResourceType = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ResourceType_RESOURCE_TYPE_CLUSTER ResourceType = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ResourceType_RESOURCE_TYPE_DRIVE   ResourceType = 4
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var ResourceType_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "RESOURCE_TYPE_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "RESOURCE_TYPE_VOLUME",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "RESOURCE_TYPE_NODE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "RESOURCE_TYPE_CLUSTER",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		4: "RESOURCE_TYPE_DRIVE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var ResourceType_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"RESOURCE_TYPE_NONE":    0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"RESOURCE_TYPE_VOLUME":  1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"RESOURCE_TYPE_NODE":    2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"RESOURCE_TYPE_CLUSTER": 3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"RESOURCE_TYPE_DRIVE":   4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x ResourceType) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(ResourceType_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (ResourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type AlertActionType int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		AlertActionType_ALERT_ACTION_TYPE_NONE   AlertActionType = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		AlertActionType_ALERT_ACTION_TYPE_DELETE AlertActionType = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		AlertActionType_ALERT_ACTION_TYPE_CREATE AlertActionType = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		AlertActionType_ALERT_ACTION_TYPE_UPDATE AlertActionType = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var AlertActionType_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "ALERT_ACTION_TYPE_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "ALERT_ACTION_TYPE_DELETE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "ALERT_ACTION_TYPE_CREATE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "ALERT_ACTION_TYPE_UPDATE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var AlertActionType_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"ALERT_ACTION_TYPE_NONE":   0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"ALERT_ACTION_TYPE_DELETE": 1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"ALERT_ACTION_TYPE_CREATE": 2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"ALERT_ACTION_TYPE_UPDATE": 3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x AlertActionType) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(AlertActionType_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (AlertActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeActionParam int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeActionParam_VOLUME_ACTION_PARAM_NONE VolumeActionParam = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Maps to the boolean value false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeActionParam_VOLUME_ACTION_PARAM_OFF VolumeActionParam = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Maps to the boolean value true.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeActionParam_VOLUME_ACTION_PARAM_ON VolumeActionParam = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var VolumeActionParam_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "VOLUME_ACTION_PARAM_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "VOLUME_ACTION_PARAM_OFF",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "VOLUME_ACTION_PARAM_ON",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var VolumeActionParam_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_ACTION_PARAM_NONE": 0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_ACTION_PARAM_OFF":  1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_ACTION_PARAM_ON":   2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x VolumeActionParam) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(VolumeActionParam_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (VolumeActionParam) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type CosType int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		CosType_NONE   CosType = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		CosType_LOW    CosType = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		CosType_MEDIUM CosType = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		CosType_HIGH   CosType = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var CosType_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "LOW",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "MEDIUM",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "HIGH",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var CosType_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"NONE":   0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"LOW":    1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"MEDIUM": 2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"HIGH":   3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x CosType) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(CosType_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (CosType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// VolumeState represents the state of a volume.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeState int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeState_VOLUME_STATE_NONE VolumeState = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is transitioning to new state
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeState_VOLUME_STATE_PENDING VolumeState = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is ready to be assigned to a container
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeState_VOLUME_STATE_AVAILABLE VolumeState = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is attached to container
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeState_VOLUME_STATE_ATTACHED VolumeState = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is detached but associated with a container
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeState_VOLUME_STATE_DETACHED VolumeState = 4
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume detach is in progress
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeState_VOLUME_STATE_DETATCHING VolumeState = 5
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is in error state
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeState_VOLUME_STATE_ERROR VolumeState = 6
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is deleted, it will remain in this state
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// while resources are asynchronously reclaimed
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeState_VOLUME_STATE_DELETED VolumeState = 7
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var VolumeState_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "VOLUME_STATE_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "VOLUME_STATE_PENDING",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "VOLUME_STATE_AVAILABLE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "VOLUME_STATE_ATTACHED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		4: "VOLUME_STATE_DETACHED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		5: "VOLUME_STATE_DETATCHING",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		6: "VOLUME_STATE_ERROR",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		7: "VOLUME_STATE_DELETED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var VolumeState_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATE_NONE":       0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATE_PENDING":    1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATE_AVAILABLE":  2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATE_ATTACHED":   3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATE_DETACHED":   4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATE_DETATCHING": 5,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATE_ERROR":      6,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATE_DELETED":    7,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x VolumeState) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(VolumeState_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (VolumeState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// VolumeStatus represents a health status for a volume.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeStatus int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeStatus_VOLUME_STATUS_NONE VolumeStatus = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is not present
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeStatus_VOLUME_STATUS_NOT_PRESENT VolumeStatus = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is healthy
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeStatus_VOLUME_STATUS_UP VolumeStatus = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is in fail mode
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeStatus_VOLUME_STATUS_DOWN VolumeStatus = 3
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume is up but with degraded performance
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// In a RAID group, this may indicate a problem with one or more drives
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeStatus_VOLUME_STATUS_DEGRADED VolumeStatus = 4
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var VolumeStatus_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "VOLUME_STATUS_NONE",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "VOLUME_STATUS_NOT_PRESENT",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "VOLUME_STATUS_UP",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		3: "VOLUME_STATUS_DOWN",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		4: "VOLUME_STATUS_DEGRADED",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var VolumeStatus_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATUS_NONE":        0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATUS_NOT_PRESENT": 1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATUS_UP":          2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATUS_DOWN":        3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"VOLUME_STATUS_DEGRADED":    4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x VolumeStatus) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(VolumeStatus_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (VolumeStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type StorageMedium int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Magnetic spinning disk.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		StorageMedium_STORAGE_MEDIUM_MAGNETIC StorageMedium = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// SSD disk
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		StorageMedium_STORAGE_MEDIUM_SSD StorageMedium = 1
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// NVME disk
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		StorageMedium_STORAGE_MEDIUM_NVME StorageMedium = 2
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var StorageMedium_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "STORAGE_MEDIUM_MAGNETIC",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		1: "STORAGE_MEDIUM_SSD",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		2: "STORAGE_MEDIUM_NVME",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var StorageMedium_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STORAGE_MEDIUM_MAGNETIC": 0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STORAGE_MEDIUM_SSD":      1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"STORAGE_MEDIUM_NVME":     2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x StorageMedium) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(StorageMedium_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (StorageMedium) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type ClusterNotify int32
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	const (
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Node is down
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ClusterNotify_CLUSTER_NOTIFY_DOWN ClusterNotify = 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var ClusterNotify_name = map[int32]string{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0: "CLUSTER_NOTIFY_DOWN",
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var ClusterNotify_value = map[string]int32{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		"CLUSTER_NOTIFY_DOWN": 0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (x ClusterNotify) String() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return proto.EnumName(ClusterNotify_name, int32(x))
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (ClusterNotify) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// StorageResource groups properties of a storage device.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type StorageResource struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Id is the LUN identifier.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Path device path for this storage resource.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Storage medium.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Medium StorageMedium `protobuf:"varint,3,opt,name=medium,enum=openstorage.api.StorageMedium" json:"medium,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// True if this device is online.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Online bool `protobuf:"varint,4,opt,name=online" json:"online,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// IOPS
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Iops uint64 `protobuf:"varint,5,opt,name=iops" json:"iops,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// SeqWrite
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SeqWrite float64 `protobuf:"fixed64,6,opt,name=seq_write,json=seqWrite" json:"seq_write,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// SeqRead
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SeqRead float64 `protobuf:"fixed64,7,opt,name=seq_read,json=seqRead" json:"seq_read,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// RandRW
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		RandRW float64 `protobuf:"fixed64,8,opt,name=randRW" json:"randRW,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Total size in bytes.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Size uint64 `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Physical Bytes used.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Used uint64 `protobuf:"varint,10,opt,name=used" json:"used,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// True if this device is rotational.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		RotationSpeed string `protobuf:"bytes,11,opt,name=rotation_speed,json=rotationSpeed" json:"rotation_speed,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Timestamp of last time this device was scanned.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		LastScan *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) Reset()                    { *m = StorageResource{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*StorageResource) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*StorageResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetId() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Id
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetPath() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Path
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetMedium() StorageMedium {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Medium
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return StorageMedium_STORAGE_MEDIUM_MAGNETIC
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetOnline() bool {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Online
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetIops() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Iops
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetSeqWrite() float64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.SeqWrite
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetSeqRead() float64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.SeqRead
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetRandRW() float64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.RandRW
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetSize() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Size
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetUsed() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Used
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetRotationSpeed() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.RotationSpeed
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *StorageResource) GetLastScan() *google_protobuf.Timestamp {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.LastScan
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// VolumeLocator is a structure that is attached to a volume
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// and is used to carry opaque metadata.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeLocator struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// User friendly identifier
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// A set of name-value pairs that acts as search filters
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeLabels map[string]string `protobuf:"bytes,2,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeLocator) Reset()                    { *m = VolumeLocator{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeLocator) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeLocator) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeLocator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeLocator) GetName() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Name
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeLocator) GetVolumeLabels() map[string]string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.VolumeLabels
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Source struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// A volume id, if specified will create a clone of the parent.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Seed will seed the volume from the specified URI
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Any additional config for the source comes from the labels in the spec
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Seed string `protobuf:"bytes,2,opt,name=seed" json:"seed,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Source) Reset()                    { *m = Source{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Source) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Source) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Source) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Source) GetParent() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Parent
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Source) GetSeed() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Seed
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// VolumeSpec has the properties needed to create a volume.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeSpec struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Ephemeral storage
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Ephemeral bool `protobuf:"varint,1,opt,name=ephemeral" json:"ephemeral,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Thin provisioned volume size in bytes
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Size uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Format disk with this FSType
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Format FSType `protobuf:"varint,3,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Block size for filesystem
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		BlockSize int64 `protobuf:"varint,4,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Specifies the number of nodes that are
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// allowed to fail, and yet data is available
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// A value of 0 implies that data is not erasure coded,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// a failure of a node will lead to data loss
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		HaLevel int64 `protobuf:"varint,5,opt,name=ha_level,json=haLevel" json:"ha_level,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The COS, 1 to 9
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Cos CosType `protobuf:"varint,6,opt,name=cos,enum=openstorage.api.CosType" json:"cos,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Perform dedupe on this disk
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Dedupe bool `protobuf:"varint,7,opt,name=dedupe" json:"dedupe,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// SnapshotInterval in minutes, set to 0 to disable snapshots
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SnapshotInterval uint32 `protobuf:"varint,8,opt,name=snapshot_interval,json=snapshotInterval" json:"snapshot_interval,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume configuration labels
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeLabels map[string]string `protobuf:"bytes,9,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Shared is true if this volume can be remotely accessed.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Shared bool `protobuf:"varint,10,opt,name=shared" json:"shared,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// ReplicaSet is the desired replicaSet the volume want to be placed.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ReplicaSet *ReplicaSet `protobuf:"bytes,11,opt,name=replica_set,json=replicaSet" json:"replica_set,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Specifies the number of parts the volume can be aggregated from.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		AggregationLevel uint32 `protobuf:"varint,12,opt,name=aggregation_level,json=aggregationLevel" json:"aggregation_level,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Encrypted is true if this volume will be cryptographically secured.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Encrypted bool `protobuf:"varint,13,opt,name=encrypted" json:"encrypted,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// User passphrase if this is an encrypted volume
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Passphrase string `protobuf:"bytes,14,opt,name=passphrase" json:"passphrase,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// SnapshotSchedule
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SnapshotSchedule string `protobuf:"bytes,15,opt,name=snapshot_schedule,json=snapshotSchedule" json:"snapshot_schedule,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Scale allows autocreation of volumes.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Scale uint32 `protobuf:"varint,16,opt,name=scale" json:"scale,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) Reset()                    { *m = VolumeSpec{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeSpec) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetEphemeral() bool {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Ephemeral
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetSize() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Size
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetFormat() FSType {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Format
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return FSType_FS_TYPE_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetBlockSize() int64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.BlockSize
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetHaLevel() int64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.HaLevel
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetCos() CosType {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Cos
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return CosType_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetDedupe() bool {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Dedupe
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetSnapshotInterval() uint32 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.SnapshotInterval
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetVolumeLabels() map[string]string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.VolumeLabels
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetShared() bool {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Shared
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetReplicaSet() *ReplicaSet {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.ReplicaSet
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetAggregationLevel() uint32 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.AggregationLevel
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetEncrypted() bool {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Encrypted
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetPassphrase() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Passphrase
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetSnapshotSchedule() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.SnapshotSchedule
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSpec) GetScale() uint32 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Scale
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Set of machine IDs (nodes) to which part of this volume is erasure coded - for clustered storage arrays
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type ReplicaSet struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Nodes []string `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ReplicaSet) Reset()                    { *m = ReplicaSet{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ReplicaSet) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*ReplicaSet) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*ReplicaSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ReplicaSet) GetNodes() []string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Nodes
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// List of name value mapping of driver specific runtime information.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type RuntimeStateMap struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		RuntimeState map[string]string `protobuf:"bytes,1,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *RuntimeStateMap) Reset()                    { *m = RuntimeStateMap{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *RuntimeStateMap) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*RuntimeStateMap) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*RuntimeStateMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *RuntimeStateMap) GetRuntimeState() map[string]string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.RuntimeState
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Volume represents a live, created volume.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Volume struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Self referential volume ID
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Id       string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Source   *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Readonly bool    `protobuf:"varint,3,opt,name=readonly" json:"readonly,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// User specified locator
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Locator *VolumeLocator `protobuf:"bytes,4,opt,name=locator" json:"locator,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume creation time
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Ctime *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=ctime" json:"ctime,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// User specified VolumeSpec
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Spec *VolumeSpec `protobuf:"bytes,6,opt,name=spec" json:"spec,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Volume usage
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Usage uint64 `protobuf:"varint,7,opt,name=usage" json:"usage,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Time when an integrity check for run
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		LastScan *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Format FSType type if any
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Format FSType       `protobuf:"varint,9,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Status VolumeStatus `protobuf:"varint,10,opt,name=status,enum=openstorage.api.VolumeStatus" json:"status,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		State  VolumeState  `protobuf:"varint,11,opt,name=state,enum=openstorage.api.VolumeState" json:"state,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Machine ID (node) on which this volume is attached
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Machine ID is a node instance identifier for clustered systems.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		AttachedOn string   `protobuf:"bytes,12,opt,name=attached_on,json=attachedOn" json:"attached_on,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		DevicePath string   `protobuf:"bytes,14,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		AttachPath []string `protobuf:"bytes,15,rep,name=attach_path,json=attachPath" json:"attach_path,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// List of ReplicaSets which provide storage for this volume, for clustered storage arrays
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ReplicaSets []*ReplicaSet `protobuf:"bytes,16,rep,name=replica_sets,json=replicaSets" json:"replica_sets,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Last recorded error
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Error string `protobuf:"bytes,17,opt,name=error" json:"error,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// List of name value mapping of driver specific runtime information.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		RuntimeState     []*RuntimeStateMap `protobuf:"bytes,18,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		SecureDevicePath string             `protobuf:"bytes,19,opt,name=secure_device_path,json=secureDevicePath" json:"secure_device_path,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// BackgroundProcessing is true if volume is attached but not by the user
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		BackgroundProcessing bool `protobuf:"varint,20,opt,name=background_processing,json=backgroundProcessing" json:"background_processing,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) Reset()                    { *m = Volume{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Volume) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Volume) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetId() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Id
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetSource() *Source {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Source
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetReadonly() bool {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Readonly
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetLocator() *VolumeLocator {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Locator
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetCtime() *google_protobuf.Timestamp {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Ctime
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetSpec() *VolumeSpec {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Spec
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetUsage() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Usage
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetLastScan() *google_protobuf.Timestamp {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.LastScan
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetFormat() FSType {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Format
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return FSType_FS_TYPE_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetStatus() VolumeStatus {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Status
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return VolumeStatus_VOLUME_STATUS_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetState() VolumeState {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.State
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return VolumeState_VOLUME_STATE_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetAttachedOn() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.AttachedOn
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetDevicePath() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.DevicePath
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetAttachPath() []string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.AttachPath
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetReplicaSets() []*ReplicaSet {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.ReplicaSets
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetError() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Error
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetRuntimeState() []*RuntimeStateMap {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.RuntimeState
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetSecureDevicePath() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.SecureDevicePath
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Volume) GetBackgroundProcessing() bool {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.BackgroundProcessing
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Stats struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Reads completed successfully
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Reads uint64 `protobuf:"varint,1,opt,name=reads" json:"reads,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Time spent in reads in ms
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ReadMs    uint64 `protobuf:"varint,2,opt,name=read_ms,json=readMs" json:"read_ms,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ReadBytes uint64 `protobuf:"varint,3,opt,name=read_bytes,json=readBytes" json:"read_bytes,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Writes completed successfully
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Writes uint64 `protobuf:"varint,4,opt,name=writes" json:"writes,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Time spent in writes in ms
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		WriteMs    uint64 `protobuf:"varint,5,opt,name=write_ms,json=writeMs" json:"write_ms,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		WriteBytes uint64 `protobuf:"varint,6,opt,name=write_bytes,json=writeBytes" json:"write_bytes,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// IOs curently in progress
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		IoProgress uint64 `protobuf:"varint,7,opt,name=io_progress,json=ioProgress" json:"io_progress,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Time spent doing IOs ms
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		IoMs uint64 `protobuf:"varint,8,opt,name=io_ms,json=ioMs" json:"io_ms,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// BytesUsed
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		BytesUsed uint64 `protobuf:"varint,9,opt,name=bytes_used,json=bytesUsed" json:"bytes_used,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Interval in ms during which stats were collected
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		IntervalMs uint64 `protobuf:"varint,10,opt,name=interval_ms,json=intervalMs" json:"interval_ms,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) Reset()                    { *m = Stats{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Stats) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Stats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetReads() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Reads
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetReadMs() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.ReadMs
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetReadBytes() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.ReadBytes
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetWrites() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Writes
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetWriteMs() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.WriteMs
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetWriteBytes() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.WriteBytes
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetIoProgress() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.IoProgress
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetIoMs() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.IoMs
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetBytesUsed() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.BytesUsed
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Stats) GetIntervalMs() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.IntervalMs
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Alert struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Id for Alert
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Severity of the Alert
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Severity SeverityType `protobuf:"varint,2,opt,name=severity,enum=openstorage.api.SeverityType" json:"severity,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// AlertType user defined alert type
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		AlertType int64 `protobuf:"varint,3,opt,name=alert_type,json=alertType" json:"alert_type,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Message describing the Alert
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Timestamp when Alert occured
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Timestamp *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// ResourceId where Alert occured
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ResourceId string `protobuf:"bytes,6,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Resource where Alert occured
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Resource ResourceType `protobuf:"varint,7,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Cleared Flag
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Cleared bool `protobuf:"varint,8,opt,name=cleared" json:"cleared,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// TTL in seconds for this Alert
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Ttl uint64 `protobuf:"varint,9,opt,name=ttl" json:"ttl,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) Reset()                    { *m = Alert{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Alert) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Alert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) GetId() int64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Id
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) GetSeverity() SeverityType {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Severity
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return SeverityType_SEVERITY_TYPE_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) GetAlertType() int64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.AlertType
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) GetMessage() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Message
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) GetTimestamp() *google_protobuf.Timestamp {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Timestamp
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) GetResourceId() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.ResourceId
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) GetResource() ResourceType {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Resource
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ResourceType_RESOURCE_TYPE_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) GetCleared() bool {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Cleared
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alert) GetTtl() uint64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Ttl
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type Alerts struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Alert []*Alert `protobuf:"bytes,1,rep,name=alert" json:"alert,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alerts) Reset()                    { *m = Alerts{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alerts) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Alerts) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*Alerts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *Alerts) GetAlert() []*Alert {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Alert
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeCreateRequest struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// User specified volume name and labels
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Source to create volume
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Source *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The storage spec for the volume
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Spec *VolumeSpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeCreateRequest) Reset()                    { *m = VolumeCreateRequest{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeCreateRequest) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeCreateRequest) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeCreateRequest) GetLocator() *VolumeLocator {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Locator
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeCreateRequest) GetSource() *Source {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Source
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeCreateRequest) GetSpec() *VolumeSpec {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Spec
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeResponse struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeResponse) Reset()                    { *m = VolumeResponse{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeResponse) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeResponse) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeResponse) GetError() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Error
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeCreateResponse struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// ID of the newly created volume
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Id             string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeResponse *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeCreateResponse) Reset()                    { *m = VolumeCreateResponse{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeCreateResponse) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeCreateResponse) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeCreateResponse) GetId() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Id
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeCreateResponse) GetVolumeResponse() *VolumeResponse {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.VolumeResponse
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// VolumeStateAction specifies desired actions.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeStateAction struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Attach or Detach volume
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Attach VolumeActionParam `protobuf:"varint,1,opt,name=attach,enum=openstorage.api.VolumeActionParam" json:"attach,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Mount or unmount volume
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Mount     VolumeActionParam `protobuf:"varint,2,opt,name=mount,enum=openstorage.api.VolumeActionParam" json:"mount,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		MountPath string            `protobuf:"bytes,3,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// Device path returned in attach
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		DevicePath string `protobuf:"bytes,4,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeStateAction) Reset()                    { *m = VolumeStateAction{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeStateAction) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeStateAction) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeStateAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeStateAction) GetAttach() VolumeActionParam {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Attach
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeStateAction) GetMount() VolumeActionParam {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Mount
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeStateAction) GetMountPath() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.MountPath
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeStateAction) GetDevicePath() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.DevicePath
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeSetRequest struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// User specified volume name and labels
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// The storage spec for the volume
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Spec *VolumeSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// State modification on this volume.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Action *VolumeStateAction `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSetRequest) Reset()                    { *m = VolumeSetRequest{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSetRequest) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeSetRequest) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeSetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSetRequest) GetLocator() *VolumeLocator {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Locator
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSetRequest) GetSpec() *VolumeSpec {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Spec
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSetRequest) GetAction() *VolumeStateAction {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Action
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeSetResponse struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Volume         *Volume         `protobuf:"bytes,1,opt,name=volume" json:"volume,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeResponse *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSetResponse) Reset()                    { *m = VolumeSetResponse{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSetResponse) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeSetResponse) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeSetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSetResponse) GetVolume() *Volume {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Volume
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeSetResponse) GetVolumeResponse() *VolumeResponse {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.VolumeResponse
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type SnapCreateRequest struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// volume id
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Id       string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Locator  *VolumeLocator `protobuf:"bytes,2,opt,name=locator" json:"locator,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Readonly bool           `protobuf:"varint,3,opt,name=readonly" json:"readonly,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *SnapCreateRequest) Reset()                    { *m = SnapCreateRequest{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *SnapCreateRequest) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*SnapCreateRequest) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*SnapCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *SnapCreateRequest) GetId() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Id
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *SnapCreateRequest) GetLocator() *VolumeLocator {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Locator
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *SnapCreateRequest) GetReadonly() bool {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Readonly
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return false
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type SnapCreateResponse struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeCreateResponse *VolumeCreateResponse `protobuf:"bytes,1,opt,name=volume_create_response,json=volumeCreateResponse" json:"volume_create_response,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *SnapCreateResponse) Reset()                    { *m = SnapCreateResponse{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *SnapCreateResponse) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*SnapCreateResponse) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*SnapCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *SnapCreateResponse) GetVolumeCreateResponse() *VolumeCreateResponse {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.VolumeCreateResponse
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type VolumeInfo struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		VolumeId string      `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Path     string      `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Storage  *VolumeSpec `protobuf:"bytes,3,opt,name=storage" json:"storage,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeInfo) Reset()                    { *m = VolumeInfo{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeInfo) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeInfo) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*VolumeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeInfo) GetVolumeId() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.VolumeId
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeInfo) GetPath() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Path
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *VolumeInfo) GetStorage() *VolumeSpec {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Storage
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// GraphDriverChanges represent a list of changes between the filesystem layers
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// specified by the ID and Parent.  // Parent may be an empty string, in which
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// case there is no parent.
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	// Where the Path is the filesystem path within the layered filesystem
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type GraphDriverChanges struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Path string                `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Kind GraphDriverChangeType `protobuf:"varint,2,opt,name=kind,enum=openstorage.api.GraphDriverChangeType" json:"kind,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *GraphDriverChanges) Reset()                    { *m = GraphDriverChanges{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *GraphDriverChanges) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*GraphDriverChanges) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*GraphDriverChanges) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *GraphDriverChanges) GetPath() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Path
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *GraphDriverChanges) GetKind() GraphDriverChangeType {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Kind
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type ClusterResponse struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ClusterResponse) Reset()                    { *m = ClusterResponse{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ClusterResponse) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*ClusterResponse) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*ClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ClusterResponse) GetError() string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.Error
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return ""
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type ActiveRequest struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ReqestKV map[int64]string `protobuf:"bytes,1,rep,name=ReqestKV,json=reqestKV" json:"ReqestKV,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ActiveRequest) Reset()                    { *m = ActiveRequest{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ActiveRequest) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*ActiveRequest) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*ActiveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ActiveRequest) GetReqestKV() map[int64]string {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.ReqestKV
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	type ActiveRequests struct {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		RequestCount  int64            `protobuf:"varint,1,opt,name=RequestCount,json=requestCount" json:"RequestCount,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		ActiveRequest []*ActiveRequest `protobuf:"bytes,2,rep,name=ActiveRequest,json=activeRequest" json:"ActiveRequest,omitempty"`
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ActiveRequests) Reset()                    { *m = ActiveRequests{} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ActiveRequests) String() string            { return proto.CompactTextString(m) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*ActiveRequests) ProtoMessage()               {}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (*ActiveRequests) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ActiveRequests) GetRequestCount() int64 {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.RequestCount
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return 0
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func (m *ActiveRequests) GetActiveRequest() []*ActiveRequest {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		if m != nil {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;			return m.ActiveRequest
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		return nil
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func init() {
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*StorageResource)(nil), "openstorage.api.StorageResource")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*VolumeLocator)(nil), "openstorage.api.VolumeLocator")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Source)(nil), "openstorage.api.Source")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*VolumeSpec)(nil), "openstorage.api.VolumeSpec")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*ReplicaSet)(nil), "openstorage.api.ReplicaSet")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*RuntimeStateMap)(nil), "openstorage.api.RuntimeStateMap")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Volume)(nil), "openstorage.api.Volume")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Stats)(nil), "openstorage.api.Stats")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Alert)(nil), "openstorage.api.Alert")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*Alerts)(nil), "openstorage.api.Alerts")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*VolumeCreateRequest)(nil), "openstorage.api.VolumeCreateRequest")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*VolumeResponse)(nil), "openstorage.api.VolumeResponse")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*VolumeCreateResponse)(nil), "openstorage.api.VolumeCreateResponse")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*VolumeStateAction)(nil), "openstorage.api.VolumeStateAction")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*VolumeSetRequest)(nil), "openstorage.api.VolumeSetRequest")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*VolumeSetResponse)(nil), "openstorage.api.VolumeSetResponse")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*SnapCreateRequest)(nil), "openstorage.api.SnapCreateRequest")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*SnapCreateResponse)(nil), "openstorage.api.SnapCreateResponse")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*VolumeInfo)(nil), "openstorage.api.VolumeInfo")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*GraphDriverChanges)(nil), "openstorage.api.GraphDriverChanges")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*ClusterResponse)(nil), "openstorage.api.ClusterResponse")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*ActiveRequest)(nil), "openstorage.api.ActiveRequest")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterType((*ActiveRequests)(nil), "openstorage.api.ActiveRequests")
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.Status", Status_name, Status_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.DriverType", DriverType_name, DriverType_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.FSType", FSType_name, FSType_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.GraphDriverChangeType", GraphDriverChangeType_name, GraphDriverChangeType_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.SeverityType", SeverityType_name, SeverityType_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.ResourceType", ResourceType_name, ResourceType_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.AlertActionType", AlertActionType_name, AlertActionType_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.VolumeActionParam", VolumeActionParam_name, VolumeActionParam_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.CosType", CosType_name, CosType_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.VolumeState", VolumeState_name, VolumeState_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.VolumeStatus", VolumeStatus_name, VolumeStatus_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.StorageMedium", StorageMedium_name, StorageMedium_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		proto.RegisterEnum("openstorage.api.ClusterNotify", ClusterNotify_name, ClusterNotify_value)
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	func init() { proto.RegisterFile("api/api.proto", fileDescriptor0) }
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	var fileDescriptor0 = []byte{
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		// 2538 bytes of a gzipped FileDescriptorProto
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x59, 0xdd, 0x72, 0xe3, 0x48,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x15, 0x5e, 0xf9, 0xdf, 0xc7, 0xb1, 0xa3, 0xe9, 0xc9, 0x64, 0x34, 0xff, 0x59, 0x17, 0xbb, 0xa4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xcc, 0x92, 0x6c, 0x65, 0x7f, 0x18, 0x16, 0x0a, 0x4a, 0xb1, 0xe5, 0xc4, 0xac, 0xff, 0x68, 0xc9,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x99, 0xdd, 0xa5, 0x28, 0x95, 0xc6, 0xee, 0x49, 0xc4, 0xd8, 0x92, 0x46, 0x2d, 0x87, 0xca, 0xbe,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x00, 0x37, 0x14, 0x5c, 0x41, 0x15, 0x57, 0x3c, 0xc0, 0x5e, 0x51, 0x5c, 0x51, 0x3c, 0xc1, 0x5e,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x50, 0xc5, 0x1b, 0xf0, 0x0c, 0xbc, 0x01, 0xd5, 0x3f, 0xb2, 0x25, 0xdb, 0x99, 0xc9, 0x14, 0x7b,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa7, 0xf3, 0x9d, 0xd3, 0xa7, 0xfb, 0xfc, 0x9f, 0x38, 0x50, 0x75, 0x02, 0xf7, 0xd0, 0x09, 0xdc,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x83, 0x20, 0xf4, 0x23, 0x1f, 0x6d, 0xfb, 0x01, 0xf1, 0x68, 0xe4, 0x87, 0xce, 0x39, 0x39, 0x70,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x02, 0xf7, 0xfe, 0x93, 0x73, 0xdf, 0x3f, 0x9f, 0x92, 0x43, 0xce, 0x7e, 0x3e, 0x7f, 0x71, 0x18,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xb9, 0x33, 0x42, 0x23, 0x67, 0x16, 0x88, 0x13, 0xf5, 0xff, 0x66, 0x60, 0xdb, 0x14, 0x07, 0x30,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa1, 0xfe, 0x3c, 0x1c, 0x13, 0x54, 0x83, 0x8c, 0x3b, 0xd1, 0x94, 0x3d, 0x65, 0xbf, 0x8c, 0x33,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xee, 0x04, 0x21, 0xc8, 0x05, 0x4e, 0x74, 0xa1, 0x65, 0x38, 0xc2, 0xbf, 0xd1, 0xa7, 0x50, 0x98,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x91, 0x89, 0x3b, 0x9f, 0x69, 0xd9, 0x3d, 0x65, 0xbf, 0x76, 0xf4, 0xf8, 0x60, 0xe5, 0xea, 0x03,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa9, 0xb5, 0xc7, 0xa5, 0xb0, 0x94, 0x46, 0xbb, 0x50, 0xf0, 0xbd, 0xa9, 0xeb, 0x11, 0x2d, 0xb7,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa7, 0xec, 0x97, 0xb0, 0xa4, 0xd8, 0x1d, 0xae, 0x1f, 0x50, 0x2d, 0xbf, 0xa7, 0xec, 0xe7, 0x30,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xff, 0x46, 0x0f, 0xa0, 0x4c, 0xc9, 0x2b, 0xfb, 0xb7, 0xa1, 0x1b, 0x11, 0xad, 0xb0, 0xa7, 0xec,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x2b, 0xb8, 0x44, 0xc9, 0xab, 0x67, 0x8c, 0x46, 0xf7, 0x80, 0x7d, 0xdb, 0x21, 0x71, 0x26, 0x5a,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x91, 0xf3, 0x8a, 0x94, 0xbc, 0xc2, 0xc4, 0x99, 0xb0, 0x3b, 0x42, 0xc7, 0x9b, 0xe0, 0x67, 0x5a,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x89, 0x33, 0x24, 0xc5, 0xee, 0xa0, 0xee, 0xd7, 0x44, 0x2b, 0x8b, 0x3b, 0xd8, 0x37, 0xc3, 0xe6,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x94, 0x4c, 0x34, 0x10, 0x18, 0xfb, 0x46, 0xef, 0x41, 0x2d, 0xf4, 0x23, 0x27, 0x72, 0x7d, 0xcf,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa6, 0x01, 0x21, 0x13, 0xad, 0xc2, 0x2d, 0xaf, 0xc6, 0xa8, 0xc9, 0x40, 0xf4, 0x23, 0x28, 0x4f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x1d, 0x1a, 0xd9, 0x74, 0xec, 0x78, 0xda, 0xd6, 0x9e, 0xb2, 0x5f, 0x39, 0xba, 0x7f, 0x20, 0xfc,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x7d, 0x10, 0xfb, 0xfb, 0xc0, 0x8a, 0xfd, 0x8d, 0x4b, 0x4c, 0xd8, 0x1c, 0x3b, 0x5e, 0xfd, 0x9f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x0a, 0x54, 0xcf, 0xfc, 0xe9, 0x7c, 0x46, 0xba, 0xfe, 0xd8, 0x89, 0xfc, 0x90, 0xbd, 0xc2, 0x73,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x66, 0x44, 0xfa, 0x9c, 0x7f, 0xa3, 0x11, 0x54, 0x2f, 0xb9, 0x90, 0x3d, 0x75, 0x9e, 0x93, 0x29,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd5, 0x32, 0x7b, 0xd9, 0xfd, 0xca, 0xd1, 0x87, 0x6b, 0x8e, 0x4e, 0xa9, 0x8a, 0x29, 0x7e, 0xc4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xf0, 0xa2, 0xf0, 0x0a, 0x6f, 0x5d, 0x26, 0xa0, 0xfb, 0x3f, 0x87, 0x5b, 0x6b, 0x22, 0x48, 0x85,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xec, 0x4b, 0x72, 0x25, 0xaf, 0x67, 0x9f, 0x68, 0x07, 0xf2, 0x97, 0xce, 0x74, 0x4e, 0x64, 0xd0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x05, 0xf1, 0x59, 0xe6, 0xa9, 0x52, 0xff, 0x18, 0x0a, 0xa6, 0xc8, 0x93, 0x5d, 0x28, 0x04, 0x4e,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x48, 0xbc, 0x48, 0x1e, 0x94, 0x14, 0xf7, 0x33, 0xf3, 0x9a, 0xcc, 0x17, 0xf6, 0x5d, 0xff, 0x7b,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x1e, 0x40, 0xdc, 0x6b, 0x06, 0x64, 0x8c, 0x1e, 0x42, 0x99, 0x04, 0x17, 0x64, 0x46, 0x42, 0x67,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xca, 0x4f, 0x97, 0xf0, 0x12, 0x58, 0x04, 0x2a, 0x93, 0x08, 0xd4, 0x21, 0x14, 0x5e, 0xf8, 0xe1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xcc, 0x89, 0x64, 0xc2, 0xdd, 0x5d, 0xf3, 0x43, 0xdb, 0xb4, 0xae, 0x02, 0x82, 0xa5, 0x18, 0x7a,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x04, 0xf0, 0x7c, 0xea, 0x8f, 0x5f, 0xda, 0x5c, 0x15, 0xcb, 0xb6, 0x2c, 0x2e, 0x73, 0xc4, 0x64,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xfa, 0xee, 0x41, 0xe9, 0xc2, 0xb1, 0xa7, 0xe4, 0x92, 0x4c, 0x79, 0xd2, 0x65, 0x71, 0xf1, 0xc2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xe9, 0x32, 0x12, 0x35, 0x20, 0x3b, 0xf6, 0x29, 0xcf, 0xb8, 0xda, 0x91, 0xb6, 0x76, 0x4f, 0xd3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa7, 0xfc, 0x22, 0x26, 0xc4, 0x7c, 0x30, 0x21, 0x93, 0x79, 0x40, 0x78, 0x12, 0x96, 0xb0, 0xa4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd0, 0x0f, 0xe0, 0x16, 0xf5, 0x9c, 0x80, 0x5e, 0xf8, 0x91, 0xed, 0x7a, 0x11, 0x09, 0x2f, 0x9d,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x29, 0x4f, 0xc7, 0x2a, 0x56, 0x63, 0x46, 0x47, 0xe2, 0x08, 0xaf, 0x86, 0xba, 0xcc, 0x43, 0xfd,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc3, 0x6b, 0x42, 0xcd, 0x3c, 0xf8, 0xa6, 0x38, 0xb3, 0x87, 0xd1, 0x0b, 0x27, 0x94, 0xa9, 0x5d,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc2, 0x92, 0x42, 0x3f, 0x85, 0x4a, 0x48, 0x82, 0xa9, 0x3b, 0x76, 0x6c, 0x4a, 0x22, 0x9e, 0xd9,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x95, 0xa3, 0x07, 0x6b, 0x37, 0x61, 0x21, 0x63, 0x92, 0x08, 0x43, 0xb8, 0xf8, 0x66, 0x66, 0x39,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xe7, 0xe7, 0x21, 0x39, 0x17, 0xd5, 0x21, 0xdc, 0xb7, 0x25, 0xcc, 0x4a, 0x30, 0x84, 0x1f, 0x59,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x90, 0xbd, 0x71, 0x78, 0x15, 0x44, 0x64, 0xa2, 0x55, 0x65, 0x90, 0x63, 0x00, 0x3d, 0x06, 0x08,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x1c, 0x4a, 0x83, 0x8b, 0xd0, 0xa1, 0x44, 0xab, 0xf1, 0x5c, 0x49, 0x20, 0x29, 0x0f, 0xd2, 0xf1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x05, 0x99, 0xcc, 0xa7, 0x44, 0xdb, 0xe6, 0x62, 0x0b, 0x0f, 0x9a, 0x12, 0x67, 0xe9, 0x4a, 0xc7,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xce, 0x94, 0x68, 0x2a, 0x7f, 0x8b, 0x20, 0xfe, 0xff, 0x5c, 0xaf, 0x03, 0x2c, 0x1d, 0xc1, 0xe4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x3c, 0x7f, 0x42, 0xa8, 0xa6, 0xec, 0x65, 0x99, 0x1c, 0x27, 0xea, 0xdf, 0x28, 0xb0, 0x8d, 0xe7,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x1e, 0x6b, 0xac, 0x66, 0xe4, 0x44, 0xa4, 0xe7, 0x04, 0xe8, 0x19, 0x54, 0x43, 0x01, 0xd9, 0x94,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x61, 0xfc, 0x44, 0xe5, 0xe8, 0x68, 0xdd, 0xcd, 0xe9, 0x83, 0x29, 0x5a, 0x46, 0x35, 0x4c, 0x40,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xcc, 0xa2, 0x35, 0x91, 0xb7, 0xb2, 0xe8, 0xdf, 0x05, 0x28, 0x08, 0x9f, 0xac, 0xb5, 0xf9, 0x43,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x28, 0x88, 0x01, 0xc0, 0x4f, 0x55, 0x36, 0x54, 0x98, 0xa8, 0x7b, 0x2c, 0xc5, 0xd0, 0x7d, 0x28,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xb1, 0xf6, 0xeb, 0x7b, 0xd3, 0x2b, 0x5e, 0x94, 0x25, 0xbc, 0xa0, 0xd1, 0x53, 0x28, 0x4e, 0x45,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x47, 0xe2, 0xa5, 0x57, 0xd9, 0x30, 0x20, 0x52, 0x7d, 0x0b, 0xc7, 0xe2, 0xe8, 0x43, 0xc8, 0x8f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x99, 0x81, 0xbc, 0x2a, 0x5f, 0xdf, 0x52, 0x85, 0x20, 0x3a, 0x84, 0x1c, 0x0d, 0xc8, 0x98, 0x17,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xec, 0xa6, 0x5c, 0x5e, 0x56, 0x0d, 0xe6, 0x82, 0xcc, 0x3d, 0x73, 0xea, 0x9c, 0x8b, 0x9a, 0xcd,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x61, 0x41, 0xa4, 0xfb, 0x79, 0xe9, 0xe6, 0xfd, 0x3c, 0xd1, 0x9a, 0xca, 0x37, 0x6b, 0x4d, 0x9f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x40, 0x81, 0xa5, 0xc5, 0x9c, 0xf2, 0xda, 0xac, 0x1d, 0x3d, 0xba, 0xee, 0xc9, 0x5c, 0x08, 0x4b,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x61, 0x74, 0x04, 0x79, 0x91, 0x4d, 0x15, 0x7e, 0xea, 0xe1, 0x6b, 0x4e, 0x11, 0x2c, 0x44, 0xd1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x13, 0xa8, 0x38, 0x51, 0xe4, 0xb0, 0x3a, 0xb1, 0x7d, 0x31, 0xa6, 0xca, 0x18, 0x62, 0x68, 0xe0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x31, 0x81, 0x09, 0xb9, 0x74, 0xc7, 0xc4, 0xe6, 0x33, 0x5e, 0xd6, 0xa1, 0x80, 0x86, 0x6c, 0xd2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x2f, 0x34, 0x08, 0x81, 0x6d, 0x9e, 0xfb, 0x52, 0x03, 0x17, 0xf8, 0x19, 0x6c, 0x25, 0x3a, 0x0a,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd5, 0x54, 0x9e, 0xeb, 0xaf, 0x6d, 0x29, 0x95, 0x65, 0x4b, 0xa1, 0x2c, 0x1a, 0x24, 0x0c, 0xfd,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x50, 0xbb, 0x25, 0x92, 0x95, 0x13, 0xc8, 0x58, 0x2d, 0x21, 0xc4, 0xd5, 0xee, 0xbd, 0xa9, 0x84,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd2, 0x05, 0x83, 0x3e, 0x00, 0x44, 0xc9, 0x78, 0x1e, 0x12, 0x3b, 0x69, 0xe5, 0x6d, 0xd9, 0x46,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x38, 0xa7, 0xb5, 0xb4, 0xf5, 0x23, 0xb8, 0xf3, 0xdc, 0x19, 0xbf, 0x3c, 0x0f, 0xfd, 0xb9, 0x37,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xb1, 0x83, 0xd0, 0x1f, 0x13, 0x4a, 0x5d, 0xef, 0x5c, 0xdb, 0xe1, 0xe9, 0xbd, 0xb3, 0x64, 0x0e,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x17, 0xbc, 0xfa, 0x5f, 0x33, 0x90, 0x67, 0x97, 0x71, 0x4b, 0x58, 0x01, 0x50, 0x5e, 0x54, 0x39,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x2c, 0x08, 0x74, 0x17, 0x8a, 0xec, 0xc3, 0x9e, 0x51, 0x39, 0xd0, 0x0a, 0x8c, 0xec, 0x51, 0x36,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa1, 0x38, 0xe3, 0xf9, 0x55, 0x44, 0x28, 0xaf, 0xa0, 0x1c, 0x2e, 0x33, 0xe4, 0x98, 0x01, 0xac,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x83, 0xf3, 0xd5, 0x87, 0xf2, 0x0a, 0xca, 0x61, 0x49, 0xb1, 0xc9, 0xc5, 0xbf, 0x98, 0x42, 0xb1,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x2e, 0x15, 0x39, 0xdd, 0xa3, 0x2c, 0x56, 0x82, 0x25, 0x54, 0x16, 0x38, 0x17, 0x38, 0x24, 0x74,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x3e, 0x81, 0x8a, 0xeb, 0x33, 0xc3, 0xce, 0x43, 0x42, 0xa9, 0xcc, 0x7f, 0x70, 0xfd, 0xa1, 0x44,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd0, 0x6d, 0xc8, 0xbb, 0x3e, 0xd3, 0x5c, 0x8a, 0x17, 0x31, 0xf1, 0x50, 0xae, 0xd0, 0xe6, 0xab,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x92, 0x58, 0x9f, 0xca, 0x1c, 0x19, 0xb1, 0x7d, 0x89, 0x29, 0x95, 0xa3, 0x8c, 0x9d, 0x04, 0xa9,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x54, 0x42, 0x3d, 0x5a, 0xff, 0x57, 0x06, 0xf2, 0xfa, 0x94, 0x84, 0x51, 0xa2, 0xe7, 0x64, 0x79,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xcf, 0xf9, 0x31, 0xdb, 0xe2, 0x2e, 0x49, 0xe8, 0x46, 0x57, 0xdc, 0x39, 0x9b, 0x6a, 0xc1, 0x94,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x02, 0xbc, 0x84, 0x16, 0xe2, 0xec, 0x51, 0x0e, 0xd3, 0x69, 0x47, 0x57, 0x01, 0xe1, 0xde, 0xcb,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xe2, 0x32, 0x47, 0x98, 0x20, 0xd2, 0xa0, 0x38, 0x23, 0x94, 0x57, 0x79, 0x8e, 0x47, 0x3b, 0x26,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd1, 0x53, 0x28, 0x2f, 0xb6, 0xe0, 0x1b, 0x34, 0x99, 0xa5, 0x30, 0x33, 0x34, 0x94, 0x4b, 0xb2,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xed, 0x4e, 0xb8, 0x7b, 0xcb, 0x6c, 0x3c, 0x0a, 0xa8, 0xc3, 0xcd, 0x89, 0x29, 0xee, 0xdb, 0x4d,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xe6, 0xc4, 0x6b, 0xb6, 0x30, 0x27, 0x16, 0x67, 0xef, 0x1d, 0x4f, 0x09, 0x1f, 0xd8, 0x25, 0x9e,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x6c, 0x31, 0xc9, 0xda, 0x7b, 0x14, 0x4d, 0xa5, 0xdb, 0xd9, 0x67, 0xfd, 0x53, 0x28, 0x70, 0x77,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x52, 0xf4, 0x01, 0xe4, 0xb9, 0xc9, 0x72, 0xc0, 0xec, 0xae, 0xdd, 0xc6, 0xe5, 0xb0, 0x10, 0xaa,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xff, 0x4d, 0x81, 0xdb, 0xa2, 0x47, 0x34, 0x43, 0xc2, 0x9a, 0x04, 0x79, 0x35, 0x27, 0x34, 0x4a,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x36, 0x6b, 0xe5, 0xed, 0x9a, 0xf5, 0x5b, 0xcf, 0x8c, 0xb8, 0x57, 0x67, 0x6f, 0xd8, 0xab, 0xeb,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xef, 0x43, 0x4d, 0x60, 0x98, 0xd0, 0xc0, 0xf7, 0x28, 0x59, 0xf6, 0x0b, 0x25, 0xd1, 0x2f, 0xea,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x01, 0xec, 0xa4, 0x4d, 0x93, 0xd2, 0xab, 0x53, 0xee, 0x14, 0xb6, 0xe5, 0xae, 0x15, 0x4a, 0x11,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xf9, 0xf4, 0x27, 0xd7, 0xbc, 0x25, 0xd6, 0x84, 0x6b, 0x97, 0x29, 0xba, 0xfe, 0xad, 0x12, 0xaf,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x17, 0xbc, 0xd5, 0xe8, 0x63, 0xb6, 0xf9, 0xa0, 0xcf, 0xa0, 0x20, 0x7a, 0x23, 0xbf, 0xb3, 0x76,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x54, 0xbf, 0x46, 0xad, 0x10, 0x1f, 0x3a, 0xa1, 0x33, 0xc3, 0xf2, 0x04, 0x7a, 0x0a, 0xf9, 0x99,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x3f, 0xf7, 0x22, 0x59, 0x0a, 0x37, 0x39, 0x2a, 0x0e, 0xb0, 0x62, 0xe0, 0x1f, 0xa2, 0xbd, 0x65,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xb9, 0xb5, 0x65, 0x8e, 0xc4, 0x3d, 0x3c, 0xd9, 0xfe, 0x72, 0xab, 0x4d, 0xbe, 0xfe, 0x0f, 0x05,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x54, 0x69, 0x0b, 0x89, 0xbe, 0x8b, 0xb4, 0x10, 0x51, 0xce, 0xdc, 0x74, 0x22, 0x33, 0xaf, 0x71,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xab, 0x64, 0x62, 0xd4, 0x5f, 0x37, 0xdb, 0x84, 0xfd, 0x58, 0x9e, 0xa8, 0xff, 0x61, 0x19, 0x07,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xf6, 0x76, 0x19, 0xf7, 0x43, 0x28, 0x88, 0x78, 0xc9, 0xb7, 0xdf, 0xbd, 0x2e, 0xbc, 0x52, 0xec,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x3b, 0x4c, 0x8c, 0x2b, 0xb8, 0x65, 0x7a, 0x4e, 0x90, 0xae, 0xb1, 0xd5, 0x3c, 0x4c, 0x38, 0x37,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xf3, 0x76, 0xce, 0x7d, 0xcd, 0xda, 0x55, 0x7f, 0x05, 0x28, 0x79, 0xb5, 0xf4, 0xc5, 0xaf, 0x60,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x57, 0x9a, 0x36, 0xe6, 0x8c, 0xa5, 0x85, 0xc2, 0x37, 0xef, 0x5d, 0x73, 0x75, 0x5a, 0x0d, 0xde,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xb9, 0xdc, 0x80, 0xd6, 0xa3, 0xf8, 0x0f, 0xbb, 0x8e, 0xf7, 0xc2, 0x67, 0x7f, 0xb3, 0xcb, 0xab,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x16, 0xd6, 0x96, 0x04, 0xd0, 0xd9, 0xfc, 0x43, 0xc2, 0x27, 0x50, 0x94, 0x17, 0xdf, 0xa4, 0x27,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc4, 0xb2, 0xf5, 0x09, 0xa0, 0x93, 0xd0, 0x09, 0x2e, 0x5a, 0xa1, 0x7b, 0x49, 0xc2, 0xe6, 0x85,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xe3, 0x9d, 0x13, 0xba, 0xb8, 0x40, 0x49, 0x5c, 0xf0, 0x19, 0xe4, 0x5e, 0xba, 0xde, 0x44, 0xd6,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd4, 0xfb, 0x6b, 0xda, 0xd7, 0xd4, 0xf0, 0xc6, 0xcc, 0xcf, 0xd4, 0xbf, 0x0f, 0xdb, 0xcd, 0xe9,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x9c, 0x46, 0x24, 0x7c, 0x43, 0xf7, 0xf9, 0xb3, 0x02, 0x55, 0x96, 0x96, 0x97, 0x8b, 0x78, 0x9f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x42, 0x09, 0x93, 0x57, 0x84, 0x46, 0x9f, 0x9f, 0xc9, 0xe6, 0xfc, 0xc1, 0x7a, 0x73, 0x4e, 0x9e,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x38, 0x88, 0xc5, 0xc5, 0xde, 0x5f, 0x0a, 0x25, 0x79, 0xff, 0x27, 0x50, 0x4d, 0xb1, 0x92, 0xfb,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x7e, 0xf6, 0x4d, 0xfb, 0xfe, 0xd7, 0x50, 0x4b, 0xdd, 0x42, 0x51, 0x1d, 0xb6, 0xe4, 0x77, 0x93,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xf7, 0x1a, 0xa1, 0x66, 0x2b, 0x4c, 0x60, 0xa8, 0xb5, 0x62, 0x8d, 0xfc, 0xed, 0xe1, 0xf1, 0xeb,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x2d, 0xc0, 0x55, 0x27, 0x49, 0x36, 0xbe, 0xcd, 0x40, 0x41, 0xac, 0xb0, 0x68, 0x1b, 0x2a, 0xa6,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa5, 0x5b, 0x23, 0xd3, 0xee, 0x0f, 0xfa, 0x86, 0xfa, 0x4e, 0x02, 0xe8, 0xf4, 0x3b, 0x96, 0xaa,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa0, 0x2a, 0x94, 0x25, 0x30, 0xf8, 0x5c, 0xcd, 0x20, 0x04, 0xb5, 0x98, 0x6c, 0xb7, 0xbb, 0x9d,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xbe, 0xa1, 0x66, 0x91, 0x0a, 0x5b, 0x12, 0x33, 0x30, 0x1e, 0x60, 0x35, 0x87, 0x34, 0xd8, 0x59,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa8, 0xb5, 0xec, 0x4e, 0xdf, 0xfe, 0xe5, 0x68, 0x80, 0x47, 0x3d, 0x35, 0x8f, 0xee, 0xc2, 0x6d,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc9, 0x69, 0x19, 0xcd, 0x41, 0xaf, 0xd7, 0x31, 0xcd, 0xce, 0xa0, 0xaf, 0x16, 0xd0, 0x2e, 0x20,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc9, 0xe8, 0xe9, 0x9d, 0xbe, 0x65, 0xf4, 0xf5, 0x7e, 0xd3, 0x50, 0x8b, 0x89, 0x03, 0xa6, 0x35,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc0, 0xfa, 0x89, 0x61, 0xb7, 0x06, 0xcf, 0xfa, 0x6a, 0x09, 0x3d, 0x80, 0xbb, 0xab, 0x0c, 0xe3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x04, 0xeb, 0x2d, 0xa3, 0xa5, 0x96, 0x13, 0xa7, 0xfa, 0x86, 0xd1, 0x32, 0x6d, 0x6c, 0x1c, 0x0f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x06, 0x96, 0x0a, 0xe8, 0x21, 0x68, 0x2b, 0xa7, 0xb0, 0x71, 0xac, 0x77, 0xf9, 0x65, 0x15, 0xb4,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x07, 0x0f, 0x57, 0x75, 0xe2, 0xce, 0x19, 0x93, 0x19, 0x76, 0xf5, 0xa6, 0xa1, 0x6e, 0xa1, 0x1a,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc0, 0xe2, 0x99, 0x5f, 0xa8, 0xd5, 0xc6, 0x5f, 0x14, 0x00, 0x91, 0xa4, 0x7c, 0xbb, 0xd9, 0x01,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x95, 0x9f, 0xc0, 0xb6, 0xf5, 0xe5, 0xd0, 0x88, 0x9d, 0xba, 0x82, 0xb6, 0x3b, 0x5d, 0x43, 0x55,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd0, 0x1d, 0xb8, 0x95, 0x44, 0x8f, 0xbb, 0x83, 0x26, 0xf3, 0xf0, 0x2e, 0xa0, 0x24, 0x3c, 0x38,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xfe, 0x85, 0xd1, 0xb4, 0xd4, 0x2c, 0xba, 0x07, 0x77, 0x92, 0x78, 0xb3, 0x3b, 0x32, 0x2d, 0x03,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x1b, 0x2d, 0x35, 0xb7, 0xaa, 0xe9, 0x04, 0xeb, 0xc3, 0x53, 0x35, 0xdf, 0xf8, 0x93, 0x02, 0x05,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xf1, 0x17, 0x0e, 0x0b, 0x51, 0xdb, 0x4c, 0xbd, 0xe9, 0x16, 0x54, 0x63, 0xe4, 0xd8, 0xc2, 0x6d,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x53, 0x55, 0x92, 0x42, 0xc6, 0x17, 0xd6, 0xc7, 0x6a, 0x26, 0x89, 0xb4, 0x47, 0x26, 0x8b, 0xf5,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x36, 0x54, 0x16, 0x8a, 0xda, 0xa6, 0x9a, 0x4b, 0x02, 0x67, 0x6d, 0x53, 0xcd, 0x27, 0x81, 0x2f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xda, 0xa6, 0x5a, 0x48, 0x02, 0x5f, 0xb5, 0x4d, 0xb5, 0xd8, 0xf8, 0x46, 0x81, 0x3b, 0x1b, 0xab,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x1b, 0xbd, 0x0b, 0x8f, 0xf8, 0xe3, 0x6d, 0x69, 0x4e, 0xf3, 0x54, 0xef, 0x9f, 0x18, 0xa9, 0x77,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xbf, 0x07, 0xef, 0x5e, 0x2b, 0xd2, 0x1b, 0xb4, 0x3a, 0xed, 0x8e, 0xd1, 0x52, 0x15, 0x54, 0x87,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xc7, 0xd7, 0x8a, 0xe9, 0x2d, 0x96, 0x24, 0x19, 0xf4, 0x3d, 0xd8, 0xbb, 0x56, 0xa6, 0x65, 0x74,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x0d, 0xcb, 0x68, 0xa9, 0xd9, 0x46, 0x04, 0x5b, 0xc9, 0x4d, 0x97, 0x27, 0xaa, 0x71, 0x66, 0xe0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x8e, 0xf5, 0x65, 0xea, 0x61, 0x2c, 0xe5, 0x52, 0xb8, 0xde, 0xd5, 0x71, 0x4f, 0x55, 0x58, 0xe0,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xd2, 0x8c, 0x67, 0x3a, 0xee, 0x77, 0xfa, 0x27, 0x6a, 0x86, 0xd7, 0xc9, 0x8a, 0x2e, 0xab, 0xd3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xfe, 0x52, 0xcd, 0x36, 0x7e, 0xaf, 0xb0, 0x76, 0xb0, 0xdc, 0x48, 0xd9, 0xb5, 0xd8, 0x30, 0x07,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x23, 0xdc, 0x4c, 0xfb, 0x43, 0x83, 0x9d, 0x34, 0x7e, 0x36, 0xe8, 0x8e, 0x7a, 0x2c, 0xbf, 0x36,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x9c, 0x68, 0x19, 0x6a, 0x86, 0xbd, 0x27, 0x8d, 0xcb, 0x54, 0x52, 0xb3, 0xcc, 0x86, 0x34, 0x8b,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x7b, 0x46, 0xcd, 0x35, 0x7e, 0xa7, 0xc0, 0x36, 0x5f, 0x59, 0xc5, 0x8c, 0xe7, 0x2f, 0xba, 0x0f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xbb, 0x7a, 0xd7, 0xc0, 0x96, 0xad, 0x37, 0xad, 0xce, 0xa0, 0x9f, 0x7a, 0xd5, 0x43, 0xd0, 0xd6,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x79, 0xc2, 0xa7, 0xaa, 0xb2, 0x99, 0xdb, 0xc4, 0x86, 0x6e, 0xb1, 0xf7, 0x6d, 0xe4, 0x8e, 0x86,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x2d, 0xc6, 0xcd, 0x36, 0x7e, 0x13, 0x2f, 0x15, 0x89, 0x6d, 0x8b, 0x1d, 0x11, 0x66, 0xc7, 0x67,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x86, 0x3a, 0xd6, 0x7b, 0xf1, 0x63, 0x1e, 0xc0, 0xdd, 0x4d, 0xdc, 0x41, 0xbb, 0xad, 0x2a, 0xcc,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x8a, 0x8d, 0xcc, 0xbe, 0x9a, 0x69, 0x1c, 0x41, 0x51, 0xfe, 0xa8, 0x88, 0x4a, 0x90, 0x93, 0xda,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x8a, 0x90, 0xed, 0x0e, 0x9e, 0xa9, 0x0a, 0x02, 0x28, 0xf4, 0x8c, 0x56, 0x67, 0xd4, 0x53, 0x33,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x8c, 0x7d, 0xda, 0x39, 0x39, 0x55, 0xb3, 0x8d, 0xff, 0x28, 0x50, 0x49, 0xec, 0x44, 0xac, 0x36,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa5, 0x7e, 0xd6, 0x37, 0x92, 0x61, 0x4b, 0xc1, 0x43, 0xa3, 0xdf, 0x62, 0x39, 0x91, 0x7c, 0x90,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xe0, 0xe8, 0x67, 0x7a, 0xa7, 0xab, 0x1f, 0x77, 0x65, 0xe8, 0xd2, 0x3c, 0xcb, 0xd2, 0x9b, 0xa7,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x2c, 0x4d, 0xd7, 0x58, 0x2d, 0x43, 0xb2, 0x72, 0x09, 0xfb, 0x97, 0x2c, 0xab, 0x79, 0xca, 0xae,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xcb, 0xb3, 0x2c, 0x49, 0x31, 0x45, 0x0b, 0x2f, 0xac, 0x3d, 0x30, 0x2e, 0x88, 0x62, 0xe3, 0x8f,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x0a, 0x6c, 0x25, 0x7f, 0x07, 0x59, 0x51, 0xb1, 0x9c, 0x25, 0x8f, 0xe0, 0xde, 0x2a, 0x6e, 0xd9,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x43, 0x6c, 0x98, 0x46, 0x9f, 0x4d, 0x96, 0x1d, 0x50, 0xd3, 0xec, 0xd1, 0x50, 0xb4, 0xbf, 0x34,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xca, 0xdb, 0x7d, 0x76, 0xc5, 0x2d, 0x7c, 0x7e, 0xc8, 0x6e, 0x9f, 0x6b, 0xfc, 0x1a, 0xaa, 0xa9,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xff, 0x6a, 0x88, 0xd9, 0x20, 0x1a, 0xb8, 0x08, 0x91, 0xdd, 0xd3, 0x4f, 0xfa, 0x86, 0xd5, 0x69,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xaa, 0xef, 0x88, 0x49, 0x93, 0x62, 0x9a, 0x26, 0x6b, 0x19, 0x7c, 0x66, 0xa4, 0xf0, 0xfe, 0x59,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xcf, 0x50, 0x33, 0x8d, 0x7d, 0xa8, 0xca, 0x6d, 0xa3, 0xef, 0x47, 0xee, 0x8b, 0x2b, 0x26, 0x29,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0x6b, 0x46, 0x16, 0xac, 0x78, 0xe4, 0x3b, 0xc7, 0x0f, 0xe1, 0xf6, 0xd8, 0x9f, 0xad, 0x4e, 0xe3,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xa1, 0xf2, 0x55, 0xd6, 0x09, 0xdc, 0xe7, 0x05, 0xfe, 0x57, 0xec, 0x47, 0xff, 0x0b, 0x00, 0x00,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;		0xff, 0xff, 0x90, 0x7c, 0x3c, 0xe7, 0x1d, 0x1a, 0x00, 0x00,
53795d8dd25f2c7edfe0581e1b07058df18938f5;;	}

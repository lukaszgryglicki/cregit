0000000000000000000000000000000000000000;;	circbuf
0000000000000000000000000000000000000000;;	=======
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This repository provides the `circbuf` package. This provides a `Buffer` object
0000000000000000000000000000000000000000;;	which is a circular (or ring) buffer. It has a fixed size, but can be written
0000000000000000000000000000000000000000;;	to infinitely. Only the last `size` bytes are ever retained. The buffer implements
0000000000000000000000000000000000000000;;	the `io.Writer` interface.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Documentation
0000000000000000000000000000000000000000;;	=============
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Full documentation can be found on [Godoc](http://godoc.org/github.com/armon/circbuf)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Usage
0000000000000000000000000000000000000000;;	=====
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The `circbuf` package is very easy to use:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	buf, _ := NewBuffer(6)
0000000000000000000000000000000000000000;;	buf.Write([]byte("hello world"))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if string(buf.Bytes()) != " world" {
0000000000000000000000000000000000000000;;	    panic("should only have last 6 bytes!")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	

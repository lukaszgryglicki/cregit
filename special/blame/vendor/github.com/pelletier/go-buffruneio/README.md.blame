0000000000000000000000000000000000000000;;	# buffruneio
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[![Tests Status](https://travis-ci.org/pelletier/go-buffruneio.svg?branch=master)](https://travis-ci.org/pelletier/go-buffruneio)
0000000000000000000000000000000000000000;;	[![GoDoc](https://godoc.org/github.com/pelletier/go-buffruneio?status.svg)](https://godoc.org/github.com/pelletier/go-buffruneio)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Buffruneio is a wrapper around bufio to provide buffered runes access with
0000000000000000000000000000000000000000;;	unlimited unreads.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	import "github.com/pelletier/go-buffruneio"
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Examples
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;	    "fmt"
0000000000000000000000000000000000000000;;	    "github.com/pelletier/go-buffruneio"
0000000000000000000000000000000000000000;;	    "strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	reader := buffruneio.NewReader(strings.NewReader("abcd"))
0000000000000000000000000000000000000000;;	fmt.Println(reader.ReadRune()) // 'a'
0000000000000000000000000000000000000000;;	fmt.Println(reader.ReadRune()) // 'b'
0000000000000000000000000000000000000000;;	fmt.Println(reader.ReadRune()) // 'c'
0000000000000000000000000000000000000000;;	reader.UnreadRune()
0000000000000000000000000000000000000000;;	reader.UnreadRune()
0000000000000000000000000000000000000000;;	fmt.Println(reader.ReadRune()) // 'b'
0000000000000000000000000000000000000000;;	fmt.Println(reader.ReadRune()) // 'c'
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Documentation
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The documentation and additional examples are available at
0000000000000000000000000000000000000000;;	[godoc.org](http://godoc.org/github.com/pelletier/go-buffruneio).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Contribute
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Feel free to report bugs and patches using GitHub's pull requests system on
0000000000000000000000000000000000000000;;	[pelletier/go-toml](https://github.com/pelletier/go-buffruneio). Any feedback is
0000000000000000000000000000000000000000;;	much appreciated!
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## LICENSE
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Copyright (c) 2016 Thomas Pelletier
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Permission is hereby granted, free of charge, to any person obtaining a copy of
0000000000000000000000000000000000000000;;	this software and associated documentation files (the "Software"), to deal in
0000000000000000000000000000000000000000;;	the Software without restriction, including without limitation the rights to
0000000000000000000000000000000000000000;;	use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
0000000000000000000000000000000000000000;;	the Software, and to permit persons to whom the Software is furnished to do so,
0000000000000000000000000000000000000000;;	subject to the following conditions:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The above copyright notice and this permission notice shall be included in all
0000000000000000000000000000000000000000;;	copies or substantial portions of the Software.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
0000000000000000000000000000000000000000;;	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
0000000000000000000000000000000000000000;;	FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
0000000000000000000000000000000000000000;;	COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
0000000000000000000000000000000000000000;;	IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
0000000000000000000000000000000000000000;;	CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

0000000000000000000000000000000000000000;;	// +build darwin dragonfly freebsd !android,linux netbsd openbsd solaris
0000000000000000000000000000000000000000;;	// +build cgo
1ff933fb12f53e8c83a97bf4a48f852f030855aa;;	
0000000000000000000000000000000000000000;;	package sftp
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"path"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func runLsTypeWord(dirent os.FileInfo) string {
0000000000000000000000000000000000000000;;		// find first character, the type char
0000000000000000000000000000000000000000;;		// b     Block special file.
0000000000000000000000000000000000000000;;		// c     Character special file.
0000000000000000000000000000000000000000;;		// d     Directory.
0000000000000000000000000000000000000000;;		// l     Symbolic link.
0000000000000000000000000000000000000000;;		// s     Socket link.
0000000000000000000000000000000000000000;;		// p     FIFO.
0000000000000000000000000000000000000000;;		// -     Regular file.
0000000000000000000000000000000000000000;;		tc := '-'
0000000000000000000000000000000000000000;;		mode := dirent.Mode()
0000000000000000000000000000000000000000;;		if (mode & os.ModeDir) != 0 {
0000000000000000000000000000000000000000;;			tc = 'd'
0000000000000000000000000000000000000000;;		} else if (mode & os.ModeDevice) != 0 {
0000000000000000000000000000000000000000;;			tc = 'b'
0000000000000000000000000000000000000000;;			if (mode & os.ModeCharDevice) != 0 {
0000000000000000000000000000000000000000;;				tc = 'c'
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		} else if (mode & os.ModeSymlink) != 0 {
0000000000000000000000000000000000000000;;			tc = 'l'
0000000000000000000000000000000000000000;;		} else if (mode & os.ModeSocket) != 0 {
0000000000000000000000000000000000000000;;			tc = 's'
0000000000000000000000000000000000000000;;		} else if (mode & os.ModeNamedPipe) != 0 {
0000000000000000000000000000000000000000;;			tc = 'p'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// owner
0000000000000000000000000000000000000000;;		orc := '-'
0000000000000000000000000000000000000000;;		if (mode & 0400) != 0 {
0000000000000000000000000000000000000000;;			orc = 'r'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		owc := '-'
0000000000000000000000000000000000000000;;		if (mode & 0200) != 0 {
0000000000000000000000000000000000000000;;			owc = 'w'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		oxc := '-'
0000000000000000000000000000000000000000;;		ox := (mode & 0100) != 0
0000000000000000000000000000000000000000;;		setuid := (mode & os.ModeSetuid) != 0
0000000000000000000000000000000000000000;;		if ox && setuid {
0000000000000000000000000000000000000000;;			oxc = 's'
0000000000000000000000000000000000000000;;		} else if setuid {
0000000000000000000000000000000000000000;;			oxc = 'S'
0000000000000000000000000000000000000000;;		} else if ox {
0000000000000000000000000000000000000000;;			oxc = 'x'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// group
0000000000000000000000000000000000000000;;		grc := '-'
0000000000000000000000000000000000000000;;		if (mode & 040) != 0 {
0000000000000000000000000000000000000000;;			grc = 'r'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		gwc := '-'
0000000000000000000000000000000000000000;;		if (mode & 020) != 0 {
0000000000000000000000000000000000000000;;			gwc = 'w'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		gxc := '-'
0000000000000000000000000000000000000000;;		gx := (mode & 010) != 0
0000000000000000000000000000000000000000;;		setgid := (mode & os.ModeSetgid) != 0
0000000000000000000000000000000000000000;;		if gx && setgid {
0000000000000000000000000000000000000000;;			gxc = 's'
0000000000000000000000000000000000000000;;		} else if setgid {
0000000000000000000000000000000000000000;;			gxc = 'S'
0000000000000000000000000000000000000000;;		} else if gx {
0000000000000000000000000000000000000000;;			gxc = 'x'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// all / others
0000000000000000000000000000000000000000;;		arc := '-'
0000000000000000000000000000000000000000;;		if (mode & 04) != 0 {
0000000000000000000000000000000000000000;;			arc = 'r'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		awc := '-'
0000000000000000000000000000000000000000;;		if (mode & 02) != 0 {
0000000000000000000000000000000000000000;;			awc = 'w'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		axc := '-'
0000000000000000000000000000000000000000;;		ax := (mode & 01) != 0
0000000000000000000000000000000000000000;;		sticky := (mode & os.ModeSticky) != 0
0000000000000000000000000000000000000000;;		if ax && sticky {
0000000000000000000000000000000000000000;;			axc = 't'
0000000000000000000000000000000000000000;;		} else if sticky {
0000000000000000000000000000000000000000;;			axc = 'T'
0000000000000000000000000000000000000000;;		} else if ax {
0000000000000000000000000000000000000000;;			axc = 'x'
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return fmt.Sprintf("%c%c%c%c%c%c%c%c%c%c", tc, orc, owc, oxc, grc, gwc, gxc, arc, awc, axc)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func runLsStatt(dirname string, dirent os.FileInfo, statt *syscall.Stat_t) string {
0000000000000000000000000000000000000000;;		// example from openssh sftp server:
0000000000000000000000000000000000000000;;		// crw-rw-rw-    1 root     wheel           0 Jul 31 20:52 ttyvd
0000000000000000000000000000000000000000;;		// format:
0000000000000000000000000000000000000000;;		// {directory / char device / etc}{rwxrwxrwx}  {number of links} owner group size month day [time (this year) | year (otherwise)] name
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		typeword := runLsTypeWord(dirent)
0000000000000000000000000000000000000000;;		numLinks := statt.Nlink
0000000000000000000000000000000000000000;;		uid := statt.Uid
0000000000000000000000000000000000000000;;		gid := statt.Gid
0000000000000000000000000000000000000000;;		username := fmt.Sprintf("%d", uid)
0000000000000000000000000000000000000000;;		groupname := fmt.Sprintf("%d", gid)
0000000000000000000000000000000000000000;;		// TODO FIXME: uid -> username, gid -> groupname lookup for ls -l format output
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		mtime := dirent.ModTime()
0000000000000000000000000000000000000000;;		monthStr := mtime.Month().String()[0:3]
0000000000000000000000000000000000000000;;		day := mtime.Day()
0000000000000000000000000000000000000000;;		year := mtime.Year()
0000000000000000000000000000000000000000;;		now := time.Now()
0000000000000000000000000000000000000000;;		isOld := mtime.Before(now.Add(-time.Hour * 24 * 365 / 2))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		yearOrTime := fmt.Sprintf("%02d:%02d", mtime.Hour(), mtime.Minute())
0000000000000000000000000000000000000000;;		if isOld {
0000000000000000000000000000000000000000;;			yearOrTime = fmt.Sprintf("%d", year)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return fmt.Sprintf("%s %4d %-8s %-8s %8d %s %2d %5s %s", typeword, numLinks, username, groupname, dirent.Size(), monthStr, day, yearOrTime, dirent.Name())
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ls -l style output for a file, which is in the 'long output' section of a readdir response packet
0000000000000000000000000000000000000000;;	// this is a very simple (lazy) implementation, just enough to look almost like openssh in a few basic cases
0000000000000000000000000000000000000000;;	func runLs(dirname string, dirent os.FileInfo) string {
0000000000000000000000000000000000000000;;		dsys := dirent.Sys()
0000000000000000000000000000000000000000;;		if dsys == nil {
0000000000000000000000000000000000000000;;		} else if statt, ok := dsys.(*syscall.Stat_t); !ok {
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			return runLsStatt(dirname, dirent, statt)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return path.Join(dirname, dirent.Name())
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// +build linux
387c5391f1ede5bc68630622494ee305c01f96bb;Godeps/_workspace/src/github.com/opencontainers/runc/libcontainer/message_linux.go[Godeps/_workspace/src/github.com/opencontainers/runc/libcontainer/message_linux.go][vendor/github.com/opencontainers/runc/libcontainer/message_linux.go];	
0000000000000000000000000000000000000000;;	package libcontainer
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/vishvananda/netlink/nl"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// list of known message types we want to send to bootstrap program
0000000000000000000000000000000000000000;;	// The number is randomly chosen to not conflict with known netlink types
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		InitMsg         uint16 = 62000
0000000000000000000000000000000000000000;;		CloneFlagsAttr  uint16 = 27281
0000000000000000000000000000000000000000;;		ConsolePathAttr uint16 = 27282
0000000000000000000000000000000000000000;;		NsPathsAttr     uint16 = 27283
0000000000000000000000000000000000000000;;		UidmapAttr      uint16 = 27284
0000000000000000000000000000000000000000;;		GidmapAttr      uint16 = 27285
0000000000000000000000000000000000000000;;		SetgroupAttr    uint16 = 27286
0000000000000000000000000000000000000000;;		// When syscall.NLA_HDRLEN is in gccgo, take this out.
0000000000000000000000000000000000000000;;		syscall_NLA_HDRLEN = (syscall.SizeofNlAttr + syscall.NLA_ALIGNTO - 1) & ^(syscall.NLA_ALIGNTO - 1)
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Int32msg struct {
0000000000000000000000000000000000000000;;		Type  uint16
0000000000000000000000000000000000000000;;		Value uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Serialize serializes the message.
0000000000000000000000000000000000000000;;	// Int32msg has the following representation
0000000000000000000000000000000000000000;;	// | nlattr len | nlattr type |
0000000000000000000000000000000000000000;;	// | uint32 value             |
0000000000000000000000000000000000000000;;	func (msg *Int32msg) Serialize() []byte {
0000000000000000000000000000000000000000;;		buf := make([]byte, msg.Len())
0000000000000000000000000000000000000000;;		native := nl.NativeEndian()
0000000000000000000000000000000000000000;;		native.PutUint16(buf[0:2], uint16(msg.Len()))
0000000000000000000000000000000000000000;;		native.PutUint16(buf[2:4], msg.Type)
0000000000000000000000000000000000000000;;		native.PutUint32(buf[4:8], msg.Value)
0000000000000000000000000000000000000000;;		return buf
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *Int32msg) Len() int {
0000000000000000000000000000000000000000;;		return syscall_NLA_HDRLEN + 4
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Bytemsg has the following representation
0000000000000000000000000000000000000000;;	// | nlattr len | nlattr type |
0000000000000000000000000000000000000000;;	// | value              | pad |
0000000000000000000000000000000000000000;;	type Bytemsg struct {
0000000000000000000000000000000000000000;;		Type  uint16
0000000000000000000000000000000000000000;;		Value []byte
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *Bytemsg) Serialize() []byte {
0000000000000000000000000000000000000000;;		l := msg.Len()
0000000000000000000000000000000000000000;;		buf := make([]byte, (l+syscall.NLA_ALIGNTO-1) & ^(syscall.NLA_ALIGNTO-1))
0000000000000000000000000000000000000000;;		native := nl.NativeEndian()
0000000000000000000000000000000000000000;;		native.PutUint16(buf[0:2], uint16(l))
0000000000000000000000000000000000000000;;		native.PutUint16(buf[2:4], msg.Type)
0000000000000000000000000000000000000000;;		copy(buf[4:], msg.Value)
0000000000000000000000000000000000000000;;		return buf
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *Bytemsg) Len() int {
0000000000000000000000000000000000000000;;		return syscall_NLA_HDRLEN + len(msg.Value) + 1 // null-terminated
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Boolmsg struct {
0000000000000000000000000000000000000000;;		Type  uint16
0000000000000000000000000000000000000000;;		Value bool
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *Boolmsg) Serialize() []byte {
0000000000000000000000000000000000000000;;		buf := make([]byte, msg.Len())
0000000000000000000000000000000000000000;;		native := nl.NativeEndian()
0000000000000000000000000000000000000000;;		native.PutUint16(buf[0:2], uint16(msg.Len()))
0000000000000000000000000000000000000000;;		native.PutUint16(buf[2:4], msg.Type)
0000000000000000000000000000000000000000;;		if msg.Value {
0000000000000000000000000000000000000000;;			buf[4] = 1
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			buf[4] = 0
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return buf
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *Boolmsg) Len() int {
0000000000000000000000000000000000000000;;		return syscall_NLA_HDRLEN + 1
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// +build darwin dragonfly freebsd linux netbsd openbsd solaris
3cd2b760f8f9db0b07f58b8e6b98471e2fc3d640;Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/github.com/opencontainers/runc/libcontainer/user/lookup_unix.go[Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/github.com/opencontainers/runc/libcontainer/user/lookup_unix.go][vendor/github.com/opencontainers/runc/libcontainer/user/lookup_unix.go];	
0000000000000000000000000000000000000000;;	package user
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Unix-specific path to the passwd and group formatted files.
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		unixPasswdPath = "/etc/passwd"
0000000000000000000000000000000000000000;;		unixGroupPath  = "/etc/group"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetPasswdPath() (string, error) {
0000000000000000000000000000000000000000;;		return unixPasswdPath, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetPasswd() (io.ReadCloser, error) {
0000000000000000000000000000000000000000;;		return os.Open(unixPasswdPath)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetGroupPath() (string, error) {
0000000000000000000000000000000000000000;;		return unixGroupPath, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func GetGroup() (io.ReadCloser, error) {
0000000000000000000000000000000000000000;;		return os.Open(unixGroupPath)
0000000000000000000000000000000000000000;;	}

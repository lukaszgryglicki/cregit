0000000000000000000000000000000000000000;;	package system
d1c42c1e3fb3b408449f892c0d575bb4d9d885bd;Godeps/_workspace/src/github.com/docker/libcontainer/system/xattrs_linux.go[Godeps/_workspace/src/github.com/docker/libcontainer/system/xattrs_linux.go][vendor/github.com/opencontainers/runc/libcontainer/system/xattrs_linux.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var _zero uintptr
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Returns the size of xattrs and nil error
0000000000000000000000000000000000000000;;	// Requires path, takes allocated []byte or nil as last argument
0000000000000000000000000000000000000000;;	func Llistxattr(path string, dest []byte) (size int, err error) {
0000000000000000000000000000000000000000;;		pathBytes, err := syscall.BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return -1, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var newpathBytes unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(dest) > 0 {
0000000000000000000000000000000000000000;;			newpathBytes = unsafe.Pointer(&dest[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			newpathBytes = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		_size, _, errno := syscall.Syscall6(syscall.SYS_LLISTXATTR, uintptr(unsafe.Pointer(pathBytes)), uintptr(newpathBytes), uintptr(len(dest)), 0, 0, 0)
0000000000000000000000000000000000000000;;		size = int(_size)
0000000000000000000000000000000000000000;;		if errno != 0 {
0000000000000000000000000000000000000000;;			return -1, errno
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return size, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Returns a []byte slice if the xattr is set and nil otherwise
0000000000000000000000000000000000000000;;	// Requires path and its attribute as arguments
0000000000000000000000000000000000000000;;	func Lgetxattr(path string, attr string) ([]byte, error) {
0000000000000000000000000000000000000000;;		var sz int
0000000000000000000000000000000000000000;;		pathBytes, err := syscall.BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		attrBytes, err := syscall.BytePtrFromString(attr)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Start with a 128 length byte array
0000000000000000000000000000000000000000;;		sz = 128
0000000000000000000000000000000000000000;;		dest := make([]byte, sz)
0000000000000000000000000000000000000000;;		destBytes := unsafe.Pointer(&dest[0])
0000000000000000000000000000000000000000;;		_sz, _, errno := syscall.Syscall6(syscall.SYS_LGETXATTR, uintptr(unsafe.Pointer(pathBytes)), uintptr(unsafe.Pointer(attrBytes)), uintptr(destBytes), uintptr(len(dest)), 0, 0)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		switch {
0000000000000000000000000000000000000000;;		case errno == syscall.ENODATA:
0000000000000000000000000000000000000000;;			return nil, errno
0000000000000000000000000000000000000000;;		case errno == syscall.ENOTSUP:
0000000000000000000000000000000000000000;;			return nil, errno
0000000000000000000000000000000000000000;;		case errno == syscall.ERANGE:
0000000000000000000000000000000000000000;;			// 128 byte array might just not be good enough,
0000000000000000000000000000000000000000;;			// A dummy buffer is used ``uintptr(0)`` to get real size
0000000000000000000000000000000000000000;;			// of the xattrs on disk
0000000000000000000000000000000000000000;;			_sz, _, errno = syscall.Syscall6(syscall.SYS_LGETXATTR, uintptr(unsafe.Pointer(pathBytes)), uintptr(unsafe.Pointer(attrBytes)), uintptr(unsafe.Pointer(nil)), uintptr(0), 0, 0)
0000000000000000000000000000000000000000;;			sz = int(_sz)
0000000000000000000000000000000000000000;;			if sz < 0 {
0000000000000000000000000000000000000000;;				return nil, errno
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			dest = make([]byte, sz)
0000000000000000000000000000000000000000;;			destBytes := unsafe.Pointer(&dest[0])
0000000000000000000000000000000000000000;;			_sz, _, errno = syscall.Syscall6(syscall.SYS_LGETXATTR, uintptr(unsafe.Pointer(pathBytes)), uintptr(unsafe.Pointer(attrBytes)), uintptr(destBytes), uintptr(len(dest)), 0, 0)
0000000000000000000000000000000000000000;;			if errno != 0 {
0000000000000000000000000000000000000000;;				return nil, errno
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		case errno != 0:
0000000000000000000000000000000000000000;;			return nil, errno
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		sz = int(_sz)
0000000000000000000000000000000000000000;;		return dest[:sz], nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Lsetxattr(path string, attr string, data []byte, flags int) error {
0000000000000000000000000000000000000000;;		pathBytes, err := syscall.BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		attrBytes, err := syscall.BytePtrFromString(attr)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var dataBytes unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(data) > 0 {
0000000000000000000000000000000000000000;;			dataBytes = unsafe.Pointer(&data[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			dataBytes = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, errno := syscall.Syscall6(syscall.SYS_LSETXATTR, uintptr(unsafe.Pointer(pathBytes)), uintptr(unsafe.Pointer(attrBytes)), uintptr(dataBytes), uintptr(len(data)), uintptr(flags), 0)
0000000000000000000000000000000000000000;;		if errno != 0 {
0000000000000000000000000000000000000000;;			return errno
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

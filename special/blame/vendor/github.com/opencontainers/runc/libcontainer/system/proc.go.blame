0000000000000000000000000000000000000000;;	package system
d1c42c1e3fb3b408449f892c0d575bb4d9d885bd;Godeps/_workspace/src/github.com/docker/libcontainer/system/proc.go[Godeps/_workspace/src/github.com/docker/libcontainer/system/proc.go][vendor/github.com/opencontainers/runc/libcontainer/system/proc.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io/ioutil"
0000000000000000000000000000000000000000;;		"path/filepath"
0000000000000000000000000000000000000000;;		"strconv"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// look in /proc to find the process start time so that we can verify
0000000000000000000000000000000000000000;;	// that this pid has started after ourself
0000000000000000000000000000000000000000;;	func GetProcessStartTime(pid int) (string, error) {
0000000000000000000000000000000000000000;;		data, err := ioutil.ReadFile(filepath.Join("/proc", strconv.Itoa(pid), "stat"))
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return "", err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		parts := strings.Split(string(data), " ")
0000000000000000000000000000000000000000;;		// the starttime is located at pos 22
0000000000000000000000000000000000000000;;		// from the man page
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// starttime %llu (was %lu before Linux 2.6)
0000000000000000000000000000000000000000;;		// (22)  The  time the process started after system boot.  In kernels before Linux 2.6, this
0000000000000000000000000000000000000000;;		// value was expressed in jiffies.  Since Linux 2.6, the value is expressed in  clock  ticks
0000000000000000000000000000000000000000;;		// (divide by sysconf(_SC_CLK_TCK)).
0000000000000000000000000000000000000000;;		return parts[22-1], nil // starts at 1
0000000000000000000000000000000000000000;;	}

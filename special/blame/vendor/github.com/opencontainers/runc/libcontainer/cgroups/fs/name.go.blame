0000000000000000000000000000000000000000;;	// +build linux
d1c42c1e3fb3b408449f892c0d575bb4d9d885bd;Godeps/_workspace/src/github.com/docker/libcontainer/cgroups/fs/perf_event.go[Godeps/_workspace/src/github.com/docker/libcontainer/cgroups/fs/perf_event.go][vendor/github.com/opencontainers/runc/libcontainer/cgroups/fs/name.go];	
0000000000000000000000000000000000000000;;	package fs
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/opencontainers/runc/libcontainer/cgroups"
0000000000000000000000000000000000000000;;		"github.com/opencontainers/runc/libcontainer/configs"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type NameGroup struct {
0000000000000000000000000000000000000000;;		GroupName string
0000000000000000000000000000000000000000;;		Join      bool
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *NameGroup) Name() string {
0000000000000000000000000000000000000000;;		return s.GroupName
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *NameGroup) Apply(d *cgroupData) error {
0000000000000000000000000000000000000000;;		if s.Join {
0000000000000000000000000000000000000000;;			// ignore errors if the named cgroup does not exist
0000000000000000000000000000000000000000;;			d.join(s.GroupName)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *NameGroup) Set(path string, cgroup *configs.Cgroup) error {
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *NameGroup) Remove(d *cgroupData) error {
0000000000000000000000000000000000000000;;		if s.Join {
0000000000000000000000000000000000000000;;			removePath(d.path(s.GroupName))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *NameGroup) GetStats(path string, stats *cgroups.Stats) error {
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	golang-lru
0000000000000000000000000000000000000000;;	==========
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This provides the `lru` package which implements a fixed-size
0000000000000000000000000000000000000000;;	thread safe LRU cache. It is based on the cache in Groupcache.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Documentation
0000000000000000000000000000000000000000;;	=============
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Full docs are available on [Godoc](http://godoc.org/github.com/hashicorp/golang-lru)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Example
0000000000000000000000000000000000000000;;	=======
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Using the LRU is very simple:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	l, _ := New(128)
0000000000000000000000000000000000000000;;	for i := 0; i < 256; i++ {
0000000000000000000000000000000000000000;;	    l.Add(i, nil)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	if l.Len() != 128 {
0000000000000000000000000000000000000000;;	    panic(fmt.Sprintf("bad len: %v", l.Len()))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	```

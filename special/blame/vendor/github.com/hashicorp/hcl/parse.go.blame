0000000000000000000000000000000000000000;;	package hcl
1ff933fb12f53e8c83a97bf4a48f852f030855aa;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/hashicorp/hcl/hcl/ast"
0000000000000000000000000000000000000000;;		hclParser "github.com/hashicorp/hcl/hcl/parser"
0000000000000000000000000000000000000000;;		jsonParser "github.com/hashicorp/hcl/json/parser"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ParseBytes accepts as input byte slice and returns ast tree.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Input can be either JSON or HCL
0000000000000000000000000000000000000000;;	func ParseBytes(in []byte) (*ast.File, error) {
0000000000000000000000000000000000000000;;		return parse(in)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ParseString accepts input as a string and returns ast tree.
0000000000000000000000000000000000000000;;	func ParseString(input string) (*ast.File, error) {
0000000000000000000000000000000000000000;;		return parse([]byte(input))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func parse(in []byte) (*ast.File, error) {
0000000000000000000000000000000000000000;;		switch lexMode(in) {
0000000000000000000000000000000000000000;;		case lexModeHcl:
0000000000000000000000000000000000000000;;			return hclParser.Parse(in)
0000000000000000000000000000000000000000;;		case lexModeJson:
0000000000000000000000000000000000000000;;			return jsonParser.Parse(in)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return nil, fmt.Errorf("unknown config format")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Parse parses the given input and returns the root object.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// The input format can be either HCL or JSON.
0000000000000000000000000000000000000000;;	func Parse(input string) (*ast.File, error) {
0000000000000000000000000000000000000000;;		return parse([]byte(input))
0000000000000000000000000000000000000000;;	}

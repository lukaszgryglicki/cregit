0000000000000000000000000000000000000000;;	package netlink
a15085f256eebbe1e0d714ff4882a7611c12d312;Godeps/_workspace/src/github.com/vishvananda/netlink/filter.go[Godeps/_workspace/src/github.com/vishvananda/netlink/filter.go][vendor/github.com/vishvananda/netlink/filter.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Filter interface {
0000000000000000000000000000000000000000;;		Attrs() *FilterAttrs
0000000000000000000000000000000000000000;;		Type() string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Filter represents a netlink filter. A filter is associated with a link,
0000000000000000000000000000000000000000;;	// has a handle and a parent. The root filter of a device should have a
0000000000000000000000000000000000000000;;	// parent == HANDLE_ROOT.
0000000000000000000000000000000000000000;;	type FilterAttrs struct {
0000000000000000000000000000000000000000;;		LinkIndex int
0000000000000000000000000000000000000000;;		Handle    uint32
0000000000000000000000000000000000000000;;		Parent    uint32
0000000000000000000000000000000000000000;;		Priority  uint16 // lower is higher priority
0000000000000000000000000000000000000000;;		Protocol  uint16 // syscall.ETH_P_*
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (q FilterAttrs) String() string {
0000000000000000000000000000000000000000;;		return fmt.Sprintf("{LinkIndex: %d, Handle: %s, Parent: %s, Priority: %d, Protocol: %d}", q.LinkIndex, HandleStr(q.Handle), HandleStr(q.Parent), q.Priority, q.Protocol)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// U32 filters on many packet related properties
0000000000000000000000000000000000000000;;	type U32 struct {
0000000000000000000000000000000000000000;;		FilterAttrs
0000000000000000000000000000000000000000;;		// Currently only supports redirecting to another interface
0000000000000000000000000000000000000000;;		RedirIndex int
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (filter *U32) Attrs() *FilterAttrs {
0000000000000000000000000000000000000000;;		return &filter.FilterAttrs
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (filter *U32) Type() string {
0000000000000000000000000000000000000000;;		return "u32"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GenericFilter filters represent types that are not currently understood
0000000000000000000000000000000000000000;;	// by this netlink library.
0000000000000000000000000000000000000000;;	type GenericFilter struct {
0000000000000000000000000000000000000000;;		FilterAttrs
0000000000000000000000000000000000000000;;		FilterType string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (filter *GenericFilter) Attrs() *FilterAttrs {
0000000000000000000000000000000000000000;;		return &filter.FilterAttrs
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (filter *GenericFilter) Type() string {
0000000000000000000000000000000000000000;;		return filter.FilterType
0000000000000000000000000000000000000000;;	}

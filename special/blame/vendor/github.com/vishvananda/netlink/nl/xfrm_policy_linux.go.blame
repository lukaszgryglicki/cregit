0000000000000000000000000000000000000000;;	package nl
a15085f256eebbe1e0d714ff4882a7611c12d312;Godeps/_workspace/src/github.com/vishvananda/netlink/nl/xfrm_policy_linux.go[Godeps/_workspace/src/github.com/vishvananda/netlink/nl/xfrm_policy_linux.go][vendor/github.com/vishvananda/netlink/nl/xfrm_policy_linux.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		SizeofXfrmUserpolicyId   = 0x40
0000000000000000000000000000000000000000;;		SizeofXfrmUserpolicyInfo = 0xa8
0000000000000000000000000000000000000000;;		SizeofXfrmUserTmpl       = 0x40
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// struct xfrm_userpolicy_id {
0000000000000000000000000000000000000000;;	//   struct xfrm_selector    sel;
0000000000000000000000000000000000000000;;	//   __u32       index;
0000000000000000000000000000000000000000;;	//   __u8        dir;
0000000000000000000000000000000000000000;;	// };
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type XfrmUserpolicyId struct {
0000000000000000000000000000000000000000;;		Sel   XfrmSelector
0000000000000000000000000000000000000000;;		Index uint32
0000000000000000000000000000000000000000;;		Dir   uint8
0000000000000000000000000000000000000000;;		Pad   [3]byte
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *XfrmUserpolicyId) Len() int {
0000000000000000000000000000000000000000;;		return SizeofXfrmUserpolicyId
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeserializeXfrmUserpolicyId(b []byte) *XfrmUserpolicyId {
0000000000000000000000000000000000000000;;		return (*XfrmUserpolicyId)(unsafe.Pointer(&b[0:SizeofXfrmUserpolicyId][0]))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *XfrmUserpolicyId) Serialize() []byte {
0000000000000000000000000000000000000000;;		return (*(*[SizeofXfrmUserpolicyId]byte)(unsafe.Pointer(msg)))[:]
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// struct xfrm_userpolicy_info {
0000000000000000000000000000000000000000;;	//   struct xfrm_selector    sel;
0000000000000000000000000000000000000000;;	//   struct xfrm_lifetime_cfg  lft;
0000000000000000000000000000000000000000;;	//   struct xfrm_lifetime_cur  curlft;
0000000000000000000000000000000000000000;;	//   __u32       priority;
0000000000000000000000000000000000000000;;	//   __u32       index;
0000000000000000000000000000000000000000;;	//   __u8        dir;
0000000000000000000000000000000000000000;;	//   __u8        action;
0000000000000000000000000000000000000000;;	// #define XFRM_POLICY_ALLOW 0
0000000000000000000000000000000000000000;;	// #define XFRM_POLICY_BLOCK 1
0000000000000000000000000000000000000000;;	//   __u8        flags;
0000000000000000000000000000000000000000;;	// #define XFRM_POLICY_LOCALOK 1 /* Allow user to override global policy */
0000000000000000000000000000000000000000;;	//   /* Automatically expand selector to include matching ICMP payloads. */
0000000000000000000000000000000000000000;;	// #define XFRM_POLICY_ICMP  2
0000000000000000000000000000000000000000;;	//   __u8        share;
0000000000000000000000000000000000000000;;	// };
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type XfrmUserpolicyInfo struct {
0000000000000000000000000000000000000000;;		Sel      XfrmSelector
0000000000000000000000000000000000000000;;		Lft      XfrmLifetimeCfg
0000000000000000000000000000000000000000;;		Curlft   XfrmLifetimeCur
0000000000000000000000000000000000000000;;		Priority uint32
0000000000000000000000000000000000000000;;		Index    uint32
0000000000000000000000000000000000000000;;		Dir      uint8
0000000000000000000000000000000000000000;;		Action   uint8
0000000000000000000000000000000000000000;;		Flags    uint8
0000000000000000000000000000000000000000;;		Share    uint8
0000000000000000000000000000000000000000;;		Pad      [4]byte
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *XfrmUserpolicyInfo) Len() int {
0000000000000000000000000000000000000000;;		return SizeofXfrmUserpolicyInfo
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeserializeXfrmUserpolicyInfo(b []byte) *XfrmUserpolicyInfo {
0000000000000000000000000000000000000000;;		return (*XfrmUserpolicyInfo)(unsafe.Pointer(&b[0:SizeofXfrmUserpolicyInfo][0]))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *XfrmUserpolicyInfo) Serialize() []byte {
0000000000000000000000000000000000000000;;		return (*(*[SizeofXfrmUserpolicyInfo]byte)(unsafe.Pointer(msg)))[:]
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// struct xfrm_user_tmpl {
0000000000000000000000000000000000000000;;	//   struct xfrm_id    id;
0000000000000000000000000000000000000000;;	//   __u16     family;
0000000000000000000000000000000000000000;;	//   xfrm_address_t    saddr;
0000000000000000000000000000000000000000;;	//   __u32     reqid;
0000000000000000000000000000000000000000;;	//   __u8      mode;
0000000000000000000000000000000000000000;;	//   __u8      share;
0000000000000000000000000000000000000000;;	//   __u8      optional;
0000000000000000000000000000000000000000;;	//   __u32     aalgos;
0000000000000000000000000000000000000000;;	//   __u32     ealgos;
0000000000000000000000000000000000000000;;	//   __u32     calgos;
0000000000000000000000000000000000000000;;	// }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type XfrmUserTmpl struct {
0000000000000000000000000000000000000000;;		XfrmId   XfrmId
0000000000000000000000000000000000000000;;		Family   uint16
0000000000000000000000000000000000000000;;		Pad1     [2]byte
0000000000000000000000000000000000000000;;		Saddr    XfrmAddress
0000000000000000000000000000000000000000;;		Reqid    uint32
0000000000000000000000000000000000000000;;		Mode     uint8
0000000000000000000000000000000000000000;;		Share    uint8
0000000000000000000000000000000000000000;;		Optional uint8
0000000000000000000000000000000000000000;;		Pad2     byte
0000000000000000000000000000000000000000;;		Aalgos   uint32
0000000000000000000000000000000000000000;;		Ealgos   uint32
0000000000000000000000000000000000000000;;		Calgos   uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *XfrmUserTmpl) Len() int {
0000000000000000000000000000000000000000;;		return SizeofXfrmUserTmpl
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func DeserializeXfrmUserTmpl(b []byte) *XfrmUserTmpl {
0000000000000000000000000000000000000000;;		return (*XfrmUserTmpl)(unsafe.Pointer(&b[0:SizeofXfrmUserTmpl][0]))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (msg *XfrmUserTmpl) Serialize() []byte {
0000000000000000000000000000000000000000;;		return (*(*[SizeofXfrmUserTmpl]byte)(unsafe.Pointer(msg)))[:]
0000000000000000000000000000000000000000;;	}

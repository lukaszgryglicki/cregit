0000000000000000000000000000000000000000;;	package matchers
b73404a9ae80480b33bb3fbee1057ced8f9e176a;Godeps/_workspace/src/github.com/onsi/gomega/matchers/panic_matcher.go[Godeps/_workspace/src/github.com/onsi/gomega/matchers/panic_matcher.go][vendor/github.com/onsi/gomega/matchers/panic_matcher.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"github.com/onsi/gomega/format"
0000000000000000000000000000000000000000;;		"reflect"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type PanicMatcher struct{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *PanicMatcher) Match(actual interface{}) (success bool, err error) {
0000000000000000000000000000000000000000;;		if actual == nil {
0000000000000000000000000000000000000000;;			return false, fmt.Errorf("PanicMatcher expects a non-nil actual.")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		actualType := reflect.TypeOf(actual)
0000000000000000000000000000000000000000;;		if actualType.Kind() != reflect.Func {
0000000000000000000000000000000000000000;;			return false, fmt.Errorf("PanicMatcher expects a function.  Got:\n%s", format.Object(actual, 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if !(actualType.NumIn() == 0 && actualType.NumOut() == 0) {
0000000000000000000000000000000000000000;;			return false, fmt.Errorf("PanicMatcher expects a function with no arguments and no return value.  Got:\n%s", format.Object(actual, 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		success = false
0000000000000000000000000000000000000000;;		defer func() {
0000000000000000000000000000000000000000;;			if e := recover(); e != nil {
0000000000000000000000000000000000000000;;				success = true
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		reflect.ValueOf(actual).Call([]reflect.Value{})
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *PanicMatcher) FailureMessage(actual interface{}) (message string) {
0000000000000000000000000000000000000000;;		return format.Message(actual, "to panic")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *PanicMatcher) NegatedFailureMessage(actual interface{}) (message string) {
0000000000000000000000000000000000000000;;		return format.Message(actual, "not to panic")
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package matchers
b73404a9ae80480b33bb3fbee1057ced8f9e176a;Godeps/_workspace/src/github.com/onsi/gomega/matchers/have_occurred_matcher.go[Godeps/_workspace/src/github.com/onsi/gomega/matchers/have_occurred_matcher.go][vendor/github.com/onsi/gomega/matchers/have_occurred_matcher.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/onsi/gomega/format"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HaveOccurredMatcher struct {
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HaveOccurredMatcher) Match(actual interface{}) (success bool, err error) {
0000000000000000000000000000000000000000;;		// is purely nil?
0000000000000000000000000000000000000000;;		if actual == nil {
0000000000000000000000000000000000000000;;			return false, nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// must be an 'error' type
0000000000000000000000000000000000000000;;		if !isError(actual) {
0000000000000000000000000000000000000000;;			return false, fmt.Errorf("Expected an error-type.  Got:\n%s", format.Object(actual, 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// must be non-nil (or a pointer to a non-nil)
0000000000000000000000000000000000000000;;		return !isNil(actual), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HaveOccurredMatcher) FailureMessage(actual interface{}) (message string) {
0000000000000000000000000000000000000000;;		return fmt.Sprintf("Expected an error to have occurred.  Got:\n%s", format.Object(actual, 1))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HaveOccurredMatcher) NegatedFailureMessage(actual interface{}) (message string) {
0000000000000000000000000000000000000000;;		return fmt.Sprintf("Expected error:\n%s\n%s\n%s", format.Object(actual, 1), format.IndentString(actual.(error).Error(), 1), "not to have occurred")
0000000000000000000000000000000000000000;;	}

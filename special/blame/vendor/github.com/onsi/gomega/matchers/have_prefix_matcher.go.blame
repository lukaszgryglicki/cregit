0000000000000000000000000000000000000000;;	package matchers
b73404a9ae80480b33bb3fbee1057ced8f9e176a;Godeps/_workspace/src/github.com/onsi/gomega/matchers/have_prefix_matcher.go[Godeps/_workspace/src/github.com/onsi/gomega/matchers/have_prefix_matcher.go][vendor/github.com/onsi/gomega/matchers/have_prefix_matcher.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"github.com/onsi/gomega/format"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HavePrefixMatcher struct {
0000000000000000000000000000000000000000;;		Prefix string
0000000000000000000000000000000000000000;;		Args   []interface{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HavePrefixMatcher) Match(actual interface{}) (success bool, err error) {
0000000000000000000000000000000000000000;;		actualString, ok := toString(actual)
0000000000000000000000000000000000000000;;		if !ok {
0000000000000000000000000000000000000000;;			return false, fmt.Errorf("HavePrefix matcher requires a string or stringer.  Got:\n%s", format.Object(actual, 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		prefix := matcher.prefix()
0000000000000000000000000000000000000000;;		return len(actualString) >= len(prefix) && actualString[0:len(prefix)] == prefix, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HavePrefixMatcher) prefix() string {
0000000000000000000000000000000000000000;;		if len(matcher.Args) > 0 {
0000000000000000000000000000000000000000;;			return fmt.Sprintf(matcher.Prefix, matcher.Args...)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return matcher.Prefix
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HavePrefixMatcher) FailureMessage(actual interface{}) (message string) {
0000000000000000000000000000000000000000;;		return format.Message(actual, "to have prefix", matcher.prefix())
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HavePrefixMatcher) NegatedFailureMessage(actual interface{}) (message string) {
0000000000000000000000000000000000000000;;		return format.Message(actual, "not to have prefix", matcher.prefix())
0000000000000000000000000000000000000000;;	}

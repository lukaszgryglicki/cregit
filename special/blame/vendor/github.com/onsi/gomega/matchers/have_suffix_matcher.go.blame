0000000000000000000000000000000000000000;;	package matchers
b73404a9ae80480b33bb3fbee1057ced8f9e176a;Godeps/_workspace/src/github.com/onsi/gomega/matchers/have_suffix_matcher.go[Godeps/_workspace/src/github.com/onsi/gomega/matchers/have_suffix_matcher.go][vendor/github.com/onsi/gomega/matchers/have_suffix_matcher.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"github.com/onsi/gomega/format"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type HaveSuffixMatcher struct {
0000000000000000000000000000000000000000;;		Suffix string
0000000000000000000000000000000000000000;;		Args   []interface{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HaveSuffixMatcher) Match(actual interface{}) (success bool, err error) {
0000000000000000000000000000000000000000;;		actualString, ok := toString(actual)
0000000000000000000000000000000000000000;;		if !ok {
0000000000000000000000000000000000000000;;			return false, fmt.Errorf("HaveSuffix matcher requires a string or stringer.  Got:\n%s", format.Object(actual, 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		suffix := matcher.suffix()
0000000000000000000000000000000000000000;;		return len(actualString) >= len(suffix) && actualString[len(actualString)-len(suffix):] == suffix, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HaveSuffixMatcher) suffix() string {
0000000000000000000000000000000000000000;;		if len(matcher.Args) > 0 {
0000000000000000000000000000000000000000;;			return fmt.Sprintf(matcher.Suffix, matcher.Args...)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return matcher.Suffix
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HaveSuffixMatcher) FailureMessage(actual interface{}) (message string) {
0000000000000000000000000000000000000000;;		return format.Message(actual, "to have suffix", matcher.suffix())
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *HaveSuffixMatcher) NegatedFailureMessage(actual interface{}) (message string) {
0000000000000000000000000000000000000000;;		return format.Message(actual, "not to have suffix", matcher.suffix())
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package matchers
bd1ba01e8c3d94f344e03c9790e8df7c23a617c8;Godeps/_workspace/src/github.com/onsi/gomega/matchers/be_identical_to.go[Godeps/_workspace/src/github.com/onsi/gomega/matchers/be_identical_to.go][vendor/github.com/onsi/gomega/matchers/be_identical_to.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"runtime"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/onsi/gomega/format"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BeIdenticalToMatcher struct {
0000000000000000000000000000000000000000;;		Expected interface{}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *BeIdenticalToMatcher) Match(actual interface{}) (success bool, matchErr error) {
0000000000000000000000000000000000000000;;		if actual == nil && matcher.Expected == nil {
0000000000000000000000000000000000000000;;			return false, fmt.Errorf("Refusing to compare <nil> to <nil>.\nBe explicit and use BeNil() instead.  This is to avoid mistakes where both sides of an assertion are erroneously uninitialized.")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		defer func() {
0000000000000000000000000000000000000000;;			if r := recover(); r != nil {
0000000000000000000000000000000000000000;;				if _, ok := r.(runtime.Error); ok {
0000000000000000000000000000000000000000;;					success = false
0000000000000000000000000000000000000000;;					matchErr = nil
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return actual == matcher.Expected, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *BeIdenticalToMatcher) FailureMessage(actual interface{}) string {
0000000000000000000000000000000000000000;;		return format.Message(actual, "to be identical to", matcher.Expected)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (matcher *BeIdenticalToMatcher) NegatedFailureMessage(actual interface{}) string {
0000000000000000000000000000000000000000;;		return format.Message(actual, "not to be identical to", matcher.Expected)
0000000000000000000000000000000000000000;;	}

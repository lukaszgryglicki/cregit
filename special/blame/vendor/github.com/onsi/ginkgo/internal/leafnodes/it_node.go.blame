0000000000000000000000000000000000000000;;	package leafnodes
b73404a9ae80480b33bb3fbee1057ced8f9e176a;Godeps/_workspace/src/github.com/onsi/ginkgo/internal/leafnodes/it_node.go[Godeps/_workspace/src/github.com/onsi/ginkgo/internal/leafnodes/it_node.go][vendor/github.com/onsi/ginkgo/internal/leafnodes/it_node.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/onsi/ginkgo/internal/failer"
0000000000000000000000000000000000000000;;		"github.com/onsi/ginkgo/types"
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ItNode struct {
0000000000000000000000000000000000000000;;		runner *runner
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		flag types.FlagType
0000000000000000000000000000000000000000;;		text string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewItNode(text string, body interface{}, flag types.FlagType, codeLocation types.CodeLocation, timeout time.Duration, failer *failer.Failer, componentIndex int) *ItNode {
0000000000000000000000000000000000000000;;		return &ItNode{
0000000000000000000000000000000000000000;;			runner: newRunner(body, codeLocation, timeout, failer, types.SpecComponentTypeIt, componentIndex),
0000000000000000000000000000000000000000;;			flag:   flag,
0000000000000000000000000000000000000000;;			text:   text,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (node *ItNode) Run() (outcome types.SpecState, failure types.SpecFailure) {
0000000000000000000000000000000000000000;;		return node.runner.run()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (node *ItNode) Type() types.SpecComponentType {
0000000000000000000000000000000000000000;;		return types.SpecComponentTypeIt
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (node *ItNode) Text() string {
0000000000000000000000000000000000000000;;		return node.text
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (node *ItNode) Flag() types.FlagType {
0000000000000000000000000000000000000000;;		return node.flag
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (node *ItNode) CodeLocation() types.CodeLocation {
0000000000000000000000000000000000000000;;		return node.runner.codeLocation
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (node *ItNode) Samples() int {
0000000000000000000000000000000000000000;;		return 1
0000000000000000000000000000000000000000;;	}

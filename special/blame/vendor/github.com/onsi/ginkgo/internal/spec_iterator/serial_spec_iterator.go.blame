0000000000000000000000000000000000000000;;	package spec_iterator
cd0e559c9b88b264cf05e191e83a6e1007e0a01d;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/onsi/ginkgo/internal/spec"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SerialIterator struct {
0000000000000000000000000000000000000000;;		specs []*spec.Spec
0000000000000000000000000000000000000000;;		index int
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewSerialIterator(specs []*spec.Spec) *SerialIterator {
0000000000000000000000000000000000000000;;		return &SerialIterator{
0000000000000000000000000000000000000000;;			specs: specs,
0000000000000000000000000000000000000000;;			index: 0,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *SerialIterator) Next() (*spec.Spec, error) {
0000000000000000000000000000000000000000;;		if s.index >= len(s.specs) {
0000000000000000000000000000000000000000;;			return nil, ErrClosed
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		spec := s.specs[s.index]
0000000000000000000000000000000000000000;;		s.index += 1
0000000000000000000000000000000000000000;;		return spec, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *SerialIterator) NumberOfSpecsPriorToIteration() int {
0000000000000000000000000000000000000000;;		return len(s.specs)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *SerialIterator) NumberOfSpecsToProcessIfKnown() (int, bool) {
0000000000000000000000000000000000000000;;		return len(s.specs), true
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *SerialIterator) NumberOfSpecsThatWillBeRunIfKnown() (int, bool) {
0000000000000000000000000000000000000000;;		count := 0
0000000000000000000000000000000000000000;;		for _, s := range s.specs {
0000000000000000000000000000000000000000;;			if !s.Skipped() && !s.Pending() {
0000000000000000000000000000000000000000;;				count += 1
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return count, true
0000000000000000000000000000000000000000;;	}

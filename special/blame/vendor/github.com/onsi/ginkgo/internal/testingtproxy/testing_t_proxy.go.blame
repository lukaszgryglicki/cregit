0000000000000000000000000000000000000000;;	package testingtproxy
b73404a9ae80480b33bb3fbee1057ced8f9e176a;Godeps/_workspace/src/github.com/onsi/ginkgo/internal/testingtproxy/testing_t_proxy.go[Godeps/_workspace/src/github.com/onsi/ginkgo/internal/testingtproxy/testing_t_proxy.go][vendor/github.com/onsi/ginkgo/internal/testingtproxy/testing_t_proxy.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type failFunc func(message string, callerSkip ...int)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func New(writer io.Writer, fail failFunc, offset int) *ginkgoTestingTProxy {
0000000000000000000000000000000000000000;;		return &ginkgoTestingTProxy{
0000000000000000000000000000000000000000;;			fail:   fail,
0000000000000000000000000000000000000000;;			offset: offset,
0000000000000000000000000000000000000000;;			writer: writer,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ginkgoTestingTProxy struct {
0000000000000000000000000000000000000000;;		fail   failFunc
0000000000000000000000000000000000000000;;		offset int
0000000000000000000000000000000000000000;;		writer io.Writer
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Error(args ...interface{}) {
0000000000000000000000000000000000000000;;		t.fail(fmt.Sprintln(args...), t.offset)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Errorf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		t.fail(fmt.Sprintf(format, args...), t.offset)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Fail() {
0000000000000000000000000000000000000000;;		t.fail("failed", t.offset)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) FailNow() {
0000000000000000000000000000000000000000;;		t.fail("failed", t.offset)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Fatal(args ...interface{}) {
0000000000000000000000000000000000000000;;		t.fail(fmt.Sprintln(args...), t.offset)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Fatalf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		t.fail(fmt.Sprintf(format, args...), t.offset)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Log(args ...interface{}) {
0000000000000000000000000000000000000000;;		fmt.Fprintln(t.writer, args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Logf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		t.Log(fmt.Sprintf(format, args...))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Failed() bool {
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Parallel() {
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Skip(args ...interface{}) {
0000000000000000000000000000000000000000;;		fmt.Println(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Skipf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		t.Skip(fmt.Sprintf(format, args...))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) SkipNow() {
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (t *ginkgoTestingTProxy) Skipped() bool {
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package types
b73404a9ae80480b33bb3fbee1057ced8f9e176a;Godeps/_workspace/src/github.com/onsi/ginkgo/types/synchronization.go[Godeps/_workspace/src/github.com/onsi/ginkgo/types/synchronization.go][vendor/github.com/onsi/ginkgo/types/synchronization.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"encoding/json"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoteBeforeSuiteState int
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		RemoteBeforeSuiteStateInvalid RemoteBeforeSuiteState = iota
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		RemoteBeforeSuiteStatePending
0000000000000000000000000000000000000000;;		RemoteBeforeSuiteStatePassed
0000000000000000000000000000000000000000;;		RemoteBeforeSuiteStateFailed
0000000000000000000000000000000000000000;;		RemoteBeforeSuiteStateDisappeared
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoteBeforeSuiteData struct {
0000000000000000000000000000000000000000;;		Data  []byte
0000000000000000000000000000000000000000;;		State RemoteBeforeSuiteState
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (r RemoteBeforeSuiteData) ToJSON() []byte {
0000000000000000000000000000000000000000;;		data, _ := json.Marshal(r)
0000000000000000000000000000000000000000;;		return data
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RemoteAfterSuiteData struct {
0000000000000000000000000000000000000000;;		CanRun bool
0000000000000000000000000000000000000000;;	}

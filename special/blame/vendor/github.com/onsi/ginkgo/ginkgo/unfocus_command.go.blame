0000000000000000000000000000000000000000;;	package main
b73404a9ae80480b33bb3fbee1057ced8f9e176a;Godeps/_workspace/src/github.com/onsi/ginkgo/ginkgo/unfocus_command.go[Godeps/_workspace/src/github.com/onsi/ginkgo/ginkgo/unfocus_command.go][vendor/github.com/onsi/ginkgo/ginkgo/unfocus_command.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"flag"
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"os/exec"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func BuildUnfocusCommand() *Command {
0000000000000000000000000000000000000000;;		return &Command{
0000000000000000000000000000000000000000;;			Name:         "unfocus",
0000000000000000000000000000000000000000;;			AltName:      "blur",
0000000000000000000000000000000000000000;;			FlagSet:      flag.NewFlagSet("unfocus", flag.ExitOnError),
0000000000000000000000000000000000000000;;			UsageCommand: "ginkgo unfocus (or ginkgo blur)",
0000000000000000000000000000000000000000;;			Usage: []string{
0000000000000000000000000000000000000000;;				"Recursively unfocuses any focused tests under the current directory",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			Command: unfocusSpecs,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func unfocusSpecs([]string, []string) {
0000000000000000000000000000000000000000;;		unfocus("Describe")
0000000000000000000000000000000000000000;;		unfocus("Context")
0000000000000000000000000000000000000000;;		unfocus("It")
0000000000000000000000000000000000000000;;		unfocus("Measure")
0000000000000000000000000000000000000000;;		unfocus("DescribeTable")
0000000000000000000000000000000000000000;;		unfocus("Entry")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func unfocus(component string) {
0000000000000000000000000000000000000000;;		fmt.Printf("Removing F%s...\n", component)
0000000000000000000000000000000000000000;;		cmd := exec.Command("gofmt", fmt.Sprintf("-r=F%s -> %s", component, component), "-w", ".")
0000000000000000000000000000000000000000;;		out, _ := cmd.CombinedOutput()
0000000000000000000000000000000000000000;;		if string(out) != "" {
0000000000000000000000000000000000000000;;			println(string(out))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// +build freebsd openbsd netbsd dragonfly darwin linux solaris
b73404a9ae80480b33bb3fbee1057ced8f9e176a;Godeps/_workspace/src/github.com/onsi/ginkgo/ginkgo/interrupthandler/sigquit_swallower_unix.go[Godeps/_workspace/src/github.com/onsi/ginkgo/ginkgo/interrupthandler/sigquit_swallower_unix.go][vendor/github.com/onsi/ginkgo/ginkgo/interrupthandler/sigquit_swallower_unix.go];	
0000000000000000000000000000000000000000;;	package interrupthandler
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"os/signal"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SwallowSigQuit() {
0000000000000000000000000000000000000000;;		c := make(chan os.Signal, 1024)
0000000000000000000000000000000000000000;;		signal.Notify(c, syscall.SIGQUIT)
0000000000000000000000000000000000000000;;	}

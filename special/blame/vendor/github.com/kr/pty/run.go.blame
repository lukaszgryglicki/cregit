0000000000000000000000000000000000000000;;	package pty
ab71d75cf683c780361e644c5f2ee500a1c1e0f8;Godeps/_workspace/src/github.com/kr/pty/run.go[Godeps/_workspace/src/github.com/kr/pty/run.go][vendor/github.com/kr/pty/run.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"os/exec"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Start assigns a pseudo-terminal tty os.File to c.Stdin, c.Stdout,
0000000000000000000000000000000000000000;;	// and c.Stderr, calls c.Start, and returns the File of the tty's
0000000000000000000000000000000000000000;;	// corresponding pty.
0000000000000000000000000000000000000000;;	func Start(c *exec.Cmd) (pty *os.File, err error) {
0000000000000000000000000000000000000000;;		pty, tty, err := Open()
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		defer tty.Close()
0000000000000000000000000000000000000000;;		c.Stdout = tty
0000000000000000000000000000000000000000;;		c.Stdin = tty
0000000000000000000000000000000000000000;;		c.Stderr = tty
0000000000000000000000000000000000000000;;		if c.SysProcAttr == nil {
0000000000000000000000000000000000000000;;			c.SysProcAttr = &syscall.SysProcAttr{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		c.SysProcAttr.Setctty = true
0000000000000000000000000000000000000000;;		c.SysProcAttr.Setsid = true
0000000000000000000000000000000000000000;;		err = c.Start()
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			pty.Close()
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return pty, err
0000000000000000000000000000000000000000;;	}

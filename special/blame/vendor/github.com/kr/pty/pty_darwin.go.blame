0000000000000000000000000000000000000000;;	package pty
ab71d75cf683c780361e644c5f2ee500a1c1e0f8;Godeps/_workspace/src/github.com/kr/pty/pty_darwin.go[Godeps/_workspace/src/github.com/kr/pty/pty_darwin.go][vendor/github.com/kr/pty/pty_darwin.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"errors"
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func open() (pty, tty *os.File, err error) {
0000000000000000000000000000000000000000;;		p, err := os.OpenFile("/dev/ptmx", os.O_RDWR, 0)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sname, err := ptsname(p)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		err = grantpt(p)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		err = unlockpt(p)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		t, err := os.OpenFile(sname, os.O_RDWR, 0)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return p, t, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ptsname(f *os.File) (string, error) {
0000000000000000000000000000000000000000;;		n := make([]byte, _IOC_PARM_LEN(syscall.TIOCPTYGNAME))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		err := ioctl(f.Fd(), syscall.TIOCPTYGNAME, uintptr(unsafe.Pointer(&n[0])))
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return "", err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		for i, c := range n {
0000000000000000000000000000000000000000;;			if c == 0 {
0000000000000000000000000000000000000000;;				return string(n[:i]), nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return "", errors.New("TIOCPTYGNAME string not NUL-terminated")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func grantpt(f *os.File) error {
0000000000000000000000000000000000000000;;		return ioctl(f.Fd(), syscall.TIOCPTYGRANT, 0)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func unlockpt(f *os.File) error {
0000000000000000000000000000000000000000;;		return ioctl(f.Fd(), syscall.TIOCPTYUNLK, 0)
0000000000000000000000000000000000000000;;	}

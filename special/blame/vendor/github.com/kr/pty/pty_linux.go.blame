0000000000000000000000000000000000000000;;	package pty
ab71d75cf683c780361e644c5f2ee500a1c1e0f8;Godeps/_workspace/src/github.com/kr/pty/pty_linux.go[Godeps/_workspace/src/github.com/kr/pty/pty_linux.go][vendor/github.com/kr/pty/pty_linux.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"strconv"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func open() (pty, tty *os.File, err error) {
0000000000000000000000000000000000000000;;		p, err := os.OpenFile("/dev/ptmx", os.O_RDWR, 0)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sname, err := ptsname(p)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		err = unlockpt(p)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		t, err := os.OpenFile(sname, os.O_RDWR|syscall.O_NOCTTY, 0)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return p, t, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ptsname(f *os.File) (string, error) {
0000000000000000000000000000000000000000;;		var n _C_uint
0000000000000000000000000000000000000000;;		err := ioctl(f.Fd(), syscall.TIOCGPTN, uintptr(unsafe.Pointer(&n)))
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return "", err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return "/dev/pts/" + strconv.Itoa(int(n)), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func unlockpt(f *os.File) error {
0000000000000000000000000000000000000000;;		var u _C_int
0000000000000000000000000000000000000000;;		// use TIOCSPTLCK with a zero valued arg to clear the slave pty lock
0000000000000000000000000000000000000000;;		return ioctl(f.Fd(), syscall.TIOCSPTLCK, uintptr(unsafe.Pointer(&u)))
0000000000000000000000000000000000000000;;	}

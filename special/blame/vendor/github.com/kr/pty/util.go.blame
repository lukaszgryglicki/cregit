0000000000000000000000000000000000000000;;	package pty
ab71d75cf683c780361e644c5f2ee500a1c1e0f8;Godeps/_workspace/src/github.com/kr/pty/util.go[Godeps/_workspace/src/github.com/kr/pty/util.go][vendor/github.com/kr/pty/util.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Getsize returns the number of rows (lines) and cols (positions
0000000000000000000000000000000000000000;;	// in each line) in terminal t.
0000000000000000000000000000000000000000;;	func Getsize(t *os.File) (rows, cols int, err error) {
0000000000000000000000000000000000000000;;		var ws winsize
0000000000000000000000000000000000000000;;		err = windowrect(&ws, t.Fd())
0000000000000000000000000000000000000000;;		return int(ws.ws_row), int(ws.ws_col), err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type winsize struct {
0000000000000000000000000000000000000000;;		ws_row    uint16
0000000000000000000000000000000000000000;;		ws_col    uint16
0000000000000000000000000000000000000000;;		ws_xpixel uint16
0000000000000000000000000000000000000000;;		ws_ypixel uint16
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func windowrect(ws *winsize, fd uintptr) error {
0000000000000000000000000000000000000000;;		_, _, errno := syscall.Syscall(
0000000000000000000000000000000000000000;;			syscall.SYS_IOCTL,
0000000000000000000000000000000000000000;;			fd,
0000000000000000000000000000000000000000;;			syscall.TIOCGWINSZ,
0000000000000000000000000000000000000000;;			uintptr(unsafe.Pointer(ws)),
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;		if errno != 0 {
0000000000000000000000000000000000000000;;			return syscall.Errno(errno)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

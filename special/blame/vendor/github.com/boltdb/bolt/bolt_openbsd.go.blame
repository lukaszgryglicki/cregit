0000000000000000000000000000000000000000;;	package bolt
5da4772d7eee0df4a5bf872fd32f72643fc2e5c9;Godeps/_workspace/src/github.com/boltdb/bolt/bolt_openbsd.go[Godeps/_workspace/src/github.com/boltdb/bolt/bolt_openbsd.go][vendor/github.com/boltdb/bolt/bolt_openbsd.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		msAsync      = 1 << iota // perform asynchronous writes
0000000000000000000000000000000000000000;;		msSync                   // perform synchronous writes
0000000000000000000000000000000000000000;;		msInvalidate             // invalidate cached data
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func msync(db *DB) error {
0000000000000000000000000000000000000000;;		_, _, errno := syscall.Syscall(syscall.SYS_MSYNC, uintptr(unsafe.Pointer(db.data)), uintptr(db.datasz), msInvalidate)
0000000000000000000000000000000000000000;;		if errno != 0 {
0000000000000000000000000000000000000000;;			return errno
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func fdatasync(db *DB) error {
0000000000000000000000000000000000000000;;		if db.data != nil {
0000000000000000000000000000000000000000;;			return msync(db)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return db.file.Sync()
0000000000000000000000000000000000000000;;	}

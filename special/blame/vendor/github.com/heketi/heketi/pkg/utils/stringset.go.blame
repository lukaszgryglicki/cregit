0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Copyright (c) 2015 The heketi Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// This file is licensed to you under your choice of the GNU Lesser
0000000000000000000000000000000000000000;;	// General Public License, version 3 or any later version (LGPLv3 or
0000000000000000000000000000000000000000;;	// later), or the GNU General Public License, version 2 (GPLv2), in all
0000000000000000000000000000000000000000;;	// cases as published by the Free Software Foundation.
0000000000000000000000000000000000000000;;	//
4f4f87343f0629f7e0147e976fa9be85e68cda09;;	
0000000000000000000000000000000000000000;;	package utils
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"sort"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StringSet struct {
0000000000000000000000000000000000000000;;		Set sort.StringSlice
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Create a string set.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// A string set is a list where each element appears only once
0000000000000000000000000000000000000000;;	func NewStringSet() *StringSet {
0000000000000000000000000000000000000000;;		return &StringSet{
0000000000000000000000000000000000000000;;			Set: make(sort.StringSlice, 0),
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Add a string to the string set
0000000000000000000000000000000000000000;;	func (s *StringSet) Add(v string) {
0000000000000000000000000000000000000000;;		if !SortedStringHas(s.Set, v) {
0000000000000000000000000000000000000000;;			s.Set = append(s.Set, v)
0000000000000000000000000000000000000000;;			s.Set.Sort()
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Return string list
0000000000000000000000000000000000000000;;	func (s *StringSet) Strings() []string {
0000000000000000000000000000000000000000;;		return s.Set
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *StringSet) Len() int {
0000000000000000000000000000000000000000;;		return len(s.Set)
0000000000000000000000000000000000000000;;	}

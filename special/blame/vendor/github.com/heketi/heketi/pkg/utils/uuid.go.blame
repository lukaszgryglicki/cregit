0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Copyright (c) 2015 The heketi Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// This file is licensed to you under your choice of the GNU Lesser
0000000000000000000000000000000000000000;;	// General Public License, version 3 or any later version (LGPLv3 or
0000000000000000000000000000000000000000;;	// later), or the GNU General Public License, version 2 (GPLv2), in all
0000000000000000000000000000000000000000;;	// cases as published by the Free Software Foundation.
4f4f87343f0629f7e0147e976fa9be85e68cda09;;	
0000000000000000000000000000000000000000;;	package utils
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// From http://www.ashishbanerjee.com/home/go/go-generate-uuid
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"crypto/rand"
0000000000000000000000000000000000000000;;		"encoding/hex"
0000000000000000000000000000000000000000;;		"github.com/lpabon/godbc"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Return a 16-byte uuid
0000000000000000000000000000000000000000;;	func GenUUID() string {
0000000000000000000000000000000000000000;;		uuid := make([]byte, 16)
0000000000000000000000000000000000000000;;		n, err := rand.Read(uuid)
0000000000000000000000000000000000000000;;		godbc.Check(n == len(uuid), n, len(uuid))
0000000000000000000000000000000000000000;;		godbc.Check(err == nil, err)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return hex.EncodeToString(uuid)
0000000000000000000000000000000000000000;;	}

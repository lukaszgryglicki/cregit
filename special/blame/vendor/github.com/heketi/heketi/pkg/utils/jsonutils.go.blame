0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Copyright (c) 2015 The heketi Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// This file is licensed to you under your choice of the GNU Lesser
0000000000000000000000000000000000000000;;	// General Public License, version 3 or any later version (LGPLv3 or
0000000000000000000000000000000000000000;;	// later), or the GNU General Public License, version 2 (GPLv2), in all
0000000000000000000000000000000000000000;;	// cases as published by the Free Software Foundation.
0000000000000000000000000000000000000000;;	//
4f4f87343f0629f7e0147e976fa9be85e68cda09;;	
0000000000000000000000000000000000000000;;	package utils
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"encoding/json"
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"io/ioutil"
0000000000000000000000000000000000000000;;		"net/http"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func jsonFromBody(r io.Reader, v interface{}) error {
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Check body
0000000000000000000000000000000000000000;;		body, err := ioutil.ReadAll(r)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if err := json.Unmarshal(body, v); err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Unmarshal JSON from request
0000000000000000000000000000000000000000;;	func GetJsonFromRequest(r *http.Request, v interface{}) error {
0000000000000000000000000000000000000000;;		defer r.Body.Close()
0000000000000000000000000000000000000000;;		return jsonFromBody(r.Body, v)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Unmarshal JSON from response
0000000000000000000000000000000000000000;;	func GetJsonFromResponse(r *http.Response, v interface{}) error {
0000000000000000000000000000000000000000;;		defer r.Body.Close()
0000000000000000000000000000000000000000;;		return jsonFromBody(r.Body, v)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Package assert provides a set of comprehensive testing tools for use with the normal Go testing system.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Example Usage
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// The following is a complete example using assert in a standard test function:
0000000000000000000000000000000000000000;;	//    import (
0000000000000000000000000000000000000000;;	//      "testing"
0000000000000000000000000000000000000000;;	//      "github.com/stretchr/testify/assert"
0000000000000000000000000000000000000000;;	//    )
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    func TestSomething(t *testing.T) {
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//      var a string = "Hello"
0000000000000000000000000000000000000000;;	//      var b string = "Hello"
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//      assert.Equal(t, a, b, "The two words should be the same.")
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// if you assert many times, use the format below:
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    import (
0000000000000000000000000000000000000000;;	//      "testing"
0000000000000000000000000000000000000000;;	//      "github.com/stretchr/testify/assert"
0000000000000000000000000000000000000000;;	//    )
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    func TestSomething(t *testing.T) {
0000000000000000000000000000000000000000;;	//      assert := assert.New(t)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//      var a string = "Hello"
0000000000000000000000000000000000000000;;	//      var b string = "Hello"
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//      assert.Equal(a, b, "The two words should be the same.")
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Assertions
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Assertions allow you to easily write test code, and are global funcs in the `assert` package.
0000000000000000000000000000000000000000;;	// All assertion functions take, as the first argument, the `*testing.T` object provided by the
0000000000000000000000000000000000000000;;	// testing framework. This allows the assertion funcs to write the failings and other details to
0000000000000000000000000000000000000000;;	// the correct place.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Every assertion function also takes an optional string message as the final argument,
0000000000000000000000000000000000000000;;	// allowing custom error messages to be appended to the message the assertion method outputs.
0000000000000000000000000000000000000000;;	package assert

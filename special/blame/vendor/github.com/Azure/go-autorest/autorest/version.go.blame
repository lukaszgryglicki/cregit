0000000000000000000000000000000000000000;;	package autorest
6d6afa491b422a1e9d1fe39b10df70e4bf5254bf;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"bytes"
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;		"sync"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		major = 8
0000000000000000000000000000000000000000;;		minor = 0
0000000000000000000000000000000000000000;;		patch = 0
0000000000000000000000000000000000000000;;		tag   = ""
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var once sync.Once
0000000000000000000000000000000000000000;;	var version string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Version returns the semantic version (see http://semver.org).
0000000000000000000000000000000000000000;;	func Version() string {
0000000000000000000000000000000000000000;;		once.Do(func() {
0000000000000000000000000000000000000000;;			semver := fmt.Sprintf("%d.%d.%d", major, minor, patch)
0000000000000000000000000000000000000000;;			verBuilder := bytes.NewBufferString(semver)
0000000000000000000000000000000000000000;;			if tag != "" && tag != "-" {
0000000000000000000000000000000000000000;;				updated := strings.TrimPrefix(tag, "-")
0000000000000000000000000000000000000000;;				_, err := verBuilder.WriteString("-" + updated)
0000000000000000000000000000000000000000;;				if err == nil {
0000000000000000000000000000000000000000;;					verBuilder = bytes.NewBufferString(semver)
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			version = verBuilder.String()
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;		return version
0000000000000000000000000000000000000000;;	}

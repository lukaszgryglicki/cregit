0000000000000000000000000000000000000000;;	// +build windows
b515bda5eede841df021a5bfcc6c5c7c7a1e907e;;	
0000000000000000000000000000000000000000;;	package winterm
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		horizontal = iota
0000000000000000000000000000000000000000;;		vertical
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (h *windowsAnsiEventHandler) getCursorWindow(info *CONSOLE_SCREEN_BUFFER_INFO) SMALL_RECT {
0000000000000000000000000000000000000000;;		if h.originMode {
0000000000000000000000000000000000000000;;			sr := h.effectiveSr(info.Window)
0000000000000000000000000000000000000000;;			return SMALL_RECT{
0000000000000000000000000000000000000000;;				Top:    sr.top,
0000000000000000000000000000000000000000;;				Bottom: sr.bottom,
0000000000000000000000000000000000000000;;				Left:   0,
0000000000000000000000000000000000000000;;				Right:  info.Size.X - 1,
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			return SMALL_RECT{
0000000000000000000000000000000000000000;;				Top:    info.Window.Top,
0000000000000000000000000000000000000000;;				Bottom: info.Window.Bottom,
0000000000000000000000000000000000000000;;				Left:   0,
0000000000000000000000000000000000000000;;				Right:  info.Size.X - 1,
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// setCursorPosition sets the cursor to the specified position, bounded to the screen size
0000000000000000000000000000000000000000;;	func (h *windowsAnsiEventHandler) setCursorPosition(position COORD, window SMALL_RECT) error {
0000000000000000000000000000000000000000;;		position.X = ensureInRange(position.X, window.Left, window.Right)
0000000000000000000000000000000000000000;;		position.Y = ensureInRange(position.Y, window.Top, window.Bottom)
0000000000000000000000000000000000000000;;		err := SetConsoleCursorPosition(h.fd, position)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		logger.Infof("Cursor position set: (%d, %d)", position.X, position.Y)
0000000000000000000000000000000000000000;;		return err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (h *windowsAnsiEventHandler) moveCursorVertical(param int) error {
0000000000000000000000000000000000000000;;		return h.moveCursor(vertical, param)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (h *windowsAnsiEventHandler) moveCursorHorizontal(param int) error {
0000000000000000000000000000000000000000;;		return h.moveCursor(horizontal, param)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (h *windowsAnsiEventHandler) moveCursor(moveMode int, param int) error {
0000000000000000000000000000000000000000;;		info, err := GetConsoleScreenBufferInfo(h.fd)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		position := info.CursorPosition
0000000000000000000000000000000000000000;;		switch moveMode {
0000000000000000000000000000000000000000;;		case horizontal:
0000000000000000000000000000000000000000;;			position.X += int16(param)
0000000000000000000000000000000000000000;;		case vertical:
0000000000000000000000000000000000000000;;			position.Y += int16(param)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err = h.setCursorPosition(position, h.getCursorWindow(info)); err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (h *windowsAnsiEventHandler) moveCursorLine(param int) error {
0000000000000000000000000000000000000000;;		info, err := GetConsoleScreenBufferInfo(h.fd)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		position := info.CursorPosition
0000000000000000000000000000000000000000;;		position.X = 0
0000000000000000000000000000000000000000;;		position.Y += int16(param)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err = h.setCursorPosition(position, h.getCursorWindow(info)); err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (h *windowsAnsiEventHandler) moveCursorColumn(param int) error {
0000000000000000000000000000000000000000;;		info, err := GetConsoleScreenBufferInfo(h.fd)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		position := info.CursorPosition
0000000000000000000000000000000000000000;;		position.X = int16(param) - 1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err = h.setCursorPosition(position, h.getCursorWindow(info)); err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}

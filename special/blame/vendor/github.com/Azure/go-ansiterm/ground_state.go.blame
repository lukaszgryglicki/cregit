0000000000000000000000000000000000000000;;	package ansiterm
b515bda5eede841df021a5bfcc6c5c7c7a1e907e;;	
0000000000000000000000000000000000000000;;	type groundState struct {
0000000000000000000000000000000000000000;;		baseState
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (gs groundState) Handle(b byte) (s state, e error) {
0000000000000000000000000000000000000000;;		gs.parser.context.currentChar = b
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		nextState, err := gs.baseState.Handle(b)
0000000000000000000000000000000000000000;;		if nextState != nil || err != nil {
0000000000000000000000000000000000000000;;			return nextState, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		switch {
0000000000000000000000000000000000000000;;		case sliceContains(printables, b):
0000000000000000000000000000000000000000;;			return gs, gs.parser.print()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		case sliceContains(executors, b):
0000000000000000000000000000000000000000;;			return gs, gs.parser.execute()
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return gs, nil
0000000000000000000000000000000000000000;;	}

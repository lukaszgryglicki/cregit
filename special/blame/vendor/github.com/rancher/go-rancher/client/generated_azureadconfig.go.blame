0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		AZUREADCONFIG_TYPE = "azureadconfig"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Azureadconfig struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		AccessMode string `json:"accessMode,omitempty" yaml:"access_mode,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		AdminAccountPassword string `json:"adminAccountPassword,omitempty" yaml:"admin_account_password,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		AdminAccountUsername string `json:"adminAccountUsername,omitempty" yaml:"admin_account_username,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ClientId string `json:"clientId,omitempty" yaml:"client_id,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Domain string `json:"domain,omitempty" yaml:"domain,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Enabled bool `json:"enabled,omitempty" yaml:"enabled,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name string `json:"name,omitempty" yaml:"name,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		TenantId string `json:"tenantId,omitempty" yaml:"tenant_id,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AzureadconfigCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []Azureadconfig `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AzureadconfigClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AzureadconfigOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*AzureadconfigCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *Azureadconfig) (*Azureadconfig, error)
0000000000000000000000000000000000000000;;		Update(existing *Azureadconfig, updates interface{}) (*Azureadconfig, error)
0000000000000000000000000000000000000000;;		ById(id string) (*Azureadconfig, error)
0000000000000000000000000000000000000000;;		Delete(container *Azureadconfig) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newAzureadconfigClient(rancherClient *RancherClient) *AzureadconfigClient {
0000000000000000000000000000000000000000;;		return &AzureadconfigClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AzureadconfigClient) Create(container *Azureadconfig) (*Azureadconfig, error) {
0000000000000000000000000000000000000000;;		resp := &Azureadconfig{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(AZUREADCONFIG_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AzureadconfigClient) Update(existing *Azureadconfig, updates interface{}) (*Azureadconfig, error) {
0000000000000000000000000000000000000000;;		resp := &Azureadconfig{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(AZUREADCONFIG_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AzureadconfigClient) List(opts *ListOpts) (*AzureadconfigCollection, error) {
0000000000000000000000000000000000000000;;		resp := &AzureadconfigCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(AZUREADCONFIG_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AzureadconfigClient) ById(id string) (*Azureadconfig, error) {
0000000000000000000000000000000000000000;;		resp := &Azureadconfig{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(AZUREADCONFIG_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AzureadconfigClient) Delete(container *Azureadconfig) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(AZUREADCONFIG_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

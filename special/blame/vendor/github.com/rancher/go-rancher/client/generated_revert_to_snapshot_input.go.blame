0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		REVERT_TO_SNAPSHOT_INPUT_TYPE = "revertToSnapshotInput"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RevertToSnapshotInput struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		SnapshotId string `json:"snapshotId,omitempty" yaml:"snapshot_id,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RevertToSnapshotInputCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []RevertToSnapshotInput `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RevertToSnapshotInputClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RevertToSnapshotInputOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*RevertToSnapshotInputCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *RevertToSnapshotInput) (*RevertToSnapshotInput, error)
0000000000000000000000000000000000000000;;		Update(existing *RevertToSnapshotInput, updates interface{}) (*RevertToSnapshotInput, error)
0000000000000000000000000000000000000000;;		ById(id string) (*RevertToSnapshotInput, error)
0000000000000000000000000000000000000000;;		Delete(container *RevertToSnapshotInput) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newRevertToSnapshotInputClient(rancherClient *RancherClient) *RevertToSnapshotInputClient {
0000000000000000000000000000000000000000;;		return &RevertToSnapshotInputClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *RevertToSnapshotInputClient) Create(container *RevertToSnapshotInput) (*RevertToSnapshotInput, error) {
0000000000000000000000000000000000000000;;		resp := &RevertToSnapshotInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(REVERT_TO_SNAPSHOT_INPUT_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *RevertToSnapshotInputClient) Update(existing *RevertToSnapshotInput, updates interface{}) (*RevertToSnapshotInput, error) {
0000000000000000000000000000000000000000;;		resp := &RevertToSnapshotInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(REVERT_TO_SNAPSHOT_INPUT_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *RevertToSnapshotInputClient) List(opts *ListOpts) (*RevertToSnapshotInputCollection, error) {
0000000000000000000000000000000000000000;;		resp := &RevertToSnapshotInputCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(REVERT_TO_SNAPSHOT_INPUT_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *RevertToSnapshotInputClient) ById(id string) (*RevertToSnapshotInput, error) {
0000000000000000000000000000000000000000;;		resp := &RevertToSnapshotInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(REVERT_TO_SNAPSHOT_INPUT_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *RevertToSnapshotInputClient) Delete(container *RevertToSnapshotInput) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(REVERT_TO_SNAPSHOT_INPUT_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

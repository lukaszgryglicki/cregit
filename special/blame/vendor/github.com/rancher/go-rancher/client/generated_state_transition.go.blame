0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		STATE_TRANSITION_TYPE = "stateTransition"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StateTransition struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StateTransitionCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []StateTransition `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StateTransitionClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StateTransitionOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*StateTransitionCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *StateTransition) (*StateTransition, error)
0000000000000000000000000000000000000000;;		Update(existing *StateTransition, updates interface{}) (*StateTransition, error)
0000000000000000000000000000000000000000;;		ById(id string) (*StateTransition, error)
0000000000000000000000000000000000000000;;		Delete(container *StateTransition) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newStateTransitionClient(rancherClient *RancherClient) *StateTransitionClient {
0000000000000000000000000000000000000000;;		return &StateTransitionClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *StateTransitionClient) Create(container *StateTransition) (*StateTransition, error) {
0000000000000000000000000000000000000000;;		resp := &StateTransition{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(STATE_TRANSITION_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *StateTransitionClient) Update(existing *StateTransition, updates interface{}) (*StateTransition, error) {
0000000000000000000000000000000000000000;;		resp := &StateTransition{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(STATE_TRANSITION_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *StateTransitionClient) List(opts *ListOpts) (*StateTransitionCollection, error) {
0000000000000000000000000000000000000000;;		resp := &StateTransitionCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(STATE_TRANSITION_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *StateTransitionClient) ById(id string) (*StateTransition, error) {
0000000000000000000000000000000000000000;;		resp := &StateTransition{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(STATE_TRANSITION_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *StateTransitionClient) Delete(container *StateTransition) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(STATE_TRANSITION_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

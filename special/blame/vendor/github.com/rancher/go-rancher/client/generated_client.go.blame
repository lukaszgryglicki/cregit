0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	type RancherClient struct {
0000000000000000000000000000000000000000;;		RancherBaseClient
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Account                                  AccountOperations
0000000000000000000000000000000000000000;;		ActiveSetting                            ActiveSettingOperations
0000000000000000000000000000000000000000;;		AddOutputsInput                          AddOutputsInputOperations
0000000000000000000000000000000000000000;;		AddRemoveLoadBalancerServiceLinkInput    AddRemoveLoadBalancerServiceLinkInputOperations
0000000000000000000000000000000000000000;;		AddRemoveServiceLinkInput                AddRemoveServiceLinkInputOperations
0000000000000000000000000000000000000000;;		Agent                                    AgentOperations
0000000000000000000000000000000000000000;;		Amazonec2Config                          Amazonec2ConfigOperations
0000000000000000000000000000000000000000;;		ApiKey                                   ApiKeyOperations
0000000000000000000000000000000000000000;;		AuditLog                                 AuditLogOperations
0000000000000000000000000000000000000000;;		AzureConfig                              AzureConfigOperations
0000000000000000000000000000000000000000;;		Azureadconfig                            AzureadconfigOperations
0000000000000000000000000000000000000000;;		Backup                                   BackupOperations
0000000000000000000000000000000000000000;;		BackupTarget                             BackupTargetOperations
0000000000000000000000000000000000000000;;		BaseMachineConfig                        BaseMachineConfigOperations
0000000000000000000000000000000000000000;;		BlkioDeviceOption                        BlkioDeviceOptionOperations
0000000000000000000000000000000000000000;;		Certificate                              CertificateOperations
0000000000000000000000000000000000000000;;		ChangeSecretInput                        ChangeSecretInputOperations
0000000000000000000000000000000000000000;;		ComposeConfig                            ComposeConfigOperations
0000000000000000000000000000000000000000;;		ComposeConfigInput                       ComposeConfigInputOperations
0000000000000000000000000000000000000000;;		ComposeProject                           ComposeProjectOperations
0000000000000000000000000000000000000000;;		ComposeService                           ComposeServiceOperations
0000000000000000000000000000000000000000;;		ConfigItem                               ConfigItemOperations
0000000000000000000000000000000000000000;;		ConfigItemStatus                         ConfigItemStatusOperations
0000000000000000000000000000000000000000;;		Container                                ContainerOperations
0000000000000000000000000000000000000000;;		ContainerEvent                           ContainerEventOperations
0000000000000000000000000000000000000000;;		ContainerExec                            ContainerExecOperations
0000000000000000000000000000000000000000;;		ContainerLogs                            ContainerLogsOperations
0000000000000000000000000000000000000000;;		ContainerProxy                           ContainerProxyOperations
0000000000000000000000000000000000000000;;		Credential                               CredentialOperations
0000000000000000000000000000000000000000;;		Databasechangelog                        DatabasechangelogOperations
0000000000000000000000000000000000000000;;		Databasechangeloglock                    DatabasechangeloglockOperations
0000000000000000000000000000000000000000;;		DigitaloceanConfig                       DigitaloceanConfigOperations
0000000000000000000000000000000000000000;;		DnsService                               DnsServiceOperations
0000000000000000000000000000000000000000;;		DockerBuild                              DockerBuildOperations
0000000000000000000000000000000000000000;;		DynamicSchema                            DynamicSchemaOperations
0000000000000000000000000000000000000000;;		Environment                              EnvironmentOperations
0000000000000000000000000000000000000000;;		EnvironmentUpgrade                       EnvironmentUpgradeOperations
0000000000000000000000000000000000000000;;		ExtensionImplementation                  ExtensionImplementationOperations
0000000000000000000000000000000000000000;;		ExtensionPoint                           ExtensionPointOperations
0000000000000000000000000000000000000000;;		ExternalDnsEvent                         ExternalDnsEventOperations
0000000000000000000000000000000000000000;;		ExternalEvent                            ExternalEventOperations
0000000000000000000000000000000000000000;;		ExternalHandler                          ExternalHandlerOperations
0000000000000000000000000000000000000000;;		ExternalHandlerExternalHandlerProcessMap ExternalHandlerExternalHandlerProcessMapOperations
0000000000000000000000000000000000000000;;		ExternalHandlerProcess                   ExternalHandlerProcessOperations
0000000000000000000000000000000000000000;;		ExternalHandlerProcessConfig             ExternalHandlerProcessConfigOperations
0000000000000000000000000000000000000000;;		ExternalHostEvent                        ExternalHostEventOperations
0000000000000000000000000000000000000000;;		ExternalService                          ExternalServiceOperations
0000000000000000000000000000000000000000;;		ExternalServiceEvent                     ExternalServiceEventOperations
0000000000000000000000000000000000000000;;		ExternalStoragePoolEvent                 ExternalStoragePoolEventOperations
0000000000000000000000000000000000000000;;		ExternalVolumeEvent                      ExternalVolumeEventOperations
0000000000000000000000000000000000000000;;		FieldDocumentation                       FieldDocumentationOperations
0000000000000000000000000000000000000000;;		Githubconfig                             GithubconfigOperations
0000000000000000000000000000000000000000;;		HaConfig                                 HaConfigOperations
0000000000000000000000000000000000000000;;		HaConfigInput                            HaConfigInputOperations
0000000000000000000000000000000000000000;;		HaproxyConfig                            HaproxyConfigOperations
0000000000000000000000000000000000000000;;		HealthcheckInstanceHostMap               HealthcheckInstanceHostMapOperations
0000000000000000000000000000000000000000;;		Host                                     HostOperations
0000000000000000000000000000000000000000;;		HostAccess                               HostAccessOperations
0000000000000000000000000000000000000000;;		HostApiProxyToken                        HostApiProxyTokenOperations
0000000000000000000000000000000000000000;;		Identity                                 IdentityOperations
0000000000000000000000000000000000000000;;		Image                                    ImageOperations
0000000000000000000000000000000000000000;;		InServiceUpgradeStrategy                 InServiceUpgradeStrategyOperations
0000000000000000000000000000000000000000;;		Instance                                 InstanceOperations
0000000000000000000000000000000000000000;;		InstanceConsole                          InstanceConsoleOperations
0000000000000000000000000000000000000000;;		InstanceConsoleInput                     InstanceConsoleInputOperations
0000000000000000000000000000000000000000;;		InstanceHealthCheck                      InstanceHealthCheckOperations
0000000000000000000000000000000000000000;;		InstanceLink                             InstanceLinkOperations
0000000000000000000000000000000000000000;;		InstanceStop                             InstanceStopOperations
0000000000000000000000000000000000000000;;		IpAddress                                IpAddressOperations
0000000000000000000000000000000000000000;;		IpAddressAssociateInput                  IpAddressAssociateInputOperations
0000000000000000000000000000000000000000;;		KubernetesService                        KubernetesServiceOperations
0000000000000000000000000000000000000000;;		KubernetesStack                          KubernetesStackOperations
0000000000000000000000000000000000000000;;		KubernetesStackUpgrade                   KubernetesStackUpgradeOperations
0000000000000000000000000000000000000000;;		Label                                    LabelOperations
0000000000000000000000000000000000000000;;		LaunchConfig                             LaunchConfigOperations
0000000000000000000000000000000000000000;;		Ldapconfig                               LdapconfigOperations
0000000000000000000000000000000000000000;;		LoadBalancerAppCookieStickinessPolicy    LoadBalancerAppCookieStickinessPolicyOperations
0000000000000000000000000000000000000000;;		LoadBalancerConfig                       LoadBalancerConfigOperations
0000000000000000000000000000000000000000;;		LoadBalancerCookieStickinessPolicy       LoadBalancerCookieStickinessPolicyOperations
0000000000000000000000000000000000000000;;		LoadBalancerService                      LoadBalancerServiceOperations
0000000000000000000000000000000000000000;;		LoadBalancerServiceLink                  LoadBalancerServiceLinkOperations
0000000000000000000000000000000000000000;;		LocalAuthConfig                          LocalAuthConfigOperations
0000000000000000000000000000000000000000;;		LogConfig                                LogConfigOperations
0000000000000000000000000000000000000000;;		Machine                                  MachineOperations
0000000000000000000000000000000000000000;;		MachineDriver                            MachineDriverOperations
0000000000000000000000000000000000000000;;		Mount                                    MountOperations
0000000000000000000000000000000000000000;;		Network                                  NetworkOperations
0000000000000000000000000000000000000000;;		NfsConfig                                NfsConfigOperations
0000000000000000000000000000000000000000;;		Openldapconfig                           OpenldapconfigOperations
0000000000000000000000000000000000000000;;		PacketConfig                             PacketConfigOperations
0000000000000000000000000000000000000000;;		Password                                 PasswordOperations
0000000000000000000000000000000000000000;;		PhysicalHost                             PhysicalHostOperations
0000000000000000000000000000000000000000;;		Port                                     PortOperations
0000000000000000000000000000000000000000;;		ProcessDefinition                        ProcessDefinitionOperations
0000000000000000000000000000000000000000;;		ProcessExecution                         ProcessExecutionOperations
0000000000000000000000000000000000000000;;		ProcessInstance                          ProcessInstanceOperations
0000000000000000000000000000000000000000;;		Project                                  ProjectOperations
0000000000000000000000000000000000000000;;		ProjectMember                            ProjectMemberOperations
0000000000000000000000000000000000000000;;		PublicEndpoint                           PublicEndpointOperations
0000000000000000000000000000000000000000;;		Publish                                  PublishOperations
0000000000000000000000000000000000000000;;		PullTask                                 PullTaskOperations
0000000000000000000000000000000000000000;;		RecreateOnQuorumStrategyConfig           RecreateOnQuorumStrategyConfigOperations
0000000000000000000000000000000000000000;;		Register                                 RegisterOperations
0000000000000000000000000000000000000000;;		RegistrationToken                        RegistrationTokenOperations
0000000000000000000000000000000000000000;;		Registry                                 RegistryOperations
0000000000000000000000000000000000000000;;		RegistryCredential                       RegistryCredentialOperations
0000000000000000000000000000000000000000;;		ResourceDefinition                       ResourceDefinitionOperations
0000000000000000000000000000000000000000;;		RestartPolicy                            RestartPolicyOperations
0000000000000000000000000000000000000000;;		RestoreFromBackupInput                   RestoreFromBackupInputOperations
0000000000000000000000000000000000000000;;		RevertToSnapshotInput                    RevertToSnapshotInputOperations
0000000000000000000000000000000000000000;;		RollingRestartStrategy                   RollingRestartStrategyOperations
0000000000000000000000000000000000000000;;		ScalePolicy                              ScalePolicyOperations
0000000000000000000000000000000000000000;;		SecondaryLaunchConfig                    SecondaryLaunchConfigOperations
0000000000000000000000000000000000000000;;		Service                                  ServiceOperations
0000000000000000000000000000000000000000;;		ServiceConsumeMap                        ServiceConsumeMapOperations
0000000000000000000000000000000000000000;;		ServiceEvent                             ServiceEventOperations
0000000000000000000000000000000000000000;;		ServiceExposeMap                         ServiceExposeMapOperations
0000000000000000000000000000000000000000;;		ServiceLink                              ServiceLinkOperations
0000000000000000000000000000000000000000;;		ServiceProxy                             ServiceProxyOperations
0000000000000000000000000000000000000000;;		ServiceRestart                           ServiceRestartOperations
0000000000000000000000000000000000000000;;		ServiceUpgrade                           ServiceUpgradeOperations
0000000000000000000000000000000000000000;;		ServiceUpgradeStrategy                   ServiceUpgradeStrategyOperations
0000000000000000000000000000000000000000;;		ServicesPortRange                        ServicesPortRangeOperations
0000000000000000000000000000000000000000;;		SetLabelsInput                           SetLabelsInputOperations
0000000000000000000000000000000000000000;;		SetLoadBalancerServiceLinksInput         SetLoadBalancerServiceLinksInputOperations
0000000000000000000000000000000000000000;;		SetProjectMembersInput                   SetProjectMembersInputOperations
0000000000000000000000000000000000000000;;		SetServiceLinksInput                     SetServiceLinksInputOperations
0000000000000000000000000000000000000000;;		Setting                                  SettingOperations
0000000000000000000000000000000000000000;;		Snapshot                                 SnapshotOperations
0000000000000000000000000000000000000000;;		SnapshotBackupInput                      SnapshotBackupInputOperations
0000000000000000000000000000000000000000;;		StateTransition                          StateTransitionOperations
0000000000000000000000000000000000000000;;		StatsAccess                              StatsAccessOperations
0000000000000000000000000000000000000000;;		StoragePool                              StoragePoolOperations
0000000000000000000000000000000000000000;;		Subscribe                                SubscribeOperations
0000000000000000000000000000000000000000;;		Task                                     TaskOperations
0000000000000000000000000000000000000000;;		TaskInstance                             TaskInstanceOperations
0000000000000000000000000000000000000000;;		ToServiceUpgradeStrategy                 ToServiceUpgradeStrategyOperations
0000000000000000000000000000000000000000;;		TypeDocumentation                        TypeDocumentationOperations
0000000000000000000000000000000000000000;;		VirtualMachine                           VirtualMachineOperations
0000000000000000000000000000000000000000;;		VirtualMachineDisk                       VirtualMachineDiskOperations
0000000000000000000000000000000000000000;;		Volume                                   VolumeOperations
0000000000000000000000000000000000000000;;		VolumeSnapshotInput                      VolumeSnapshotInputOperations
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func constructClient(rancherBaseClient *RancherBaseClientImpl) *RancherClient {
0000000000000000000000000000000000000000;;		client := &RancherClient{
0000000000000000000000000000000000000000;;			RancherBaseClient: rancherBaseClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		client.Account = newAccountClient(client)
0000000000000000000000000000000000000000;;		client.ActiveSetting = newActiveSettingClient(client)
0000000000000000000000000000000000000000;;		client.AddOutputsInput = newAddOutputsInputClient(client)
0000000000000000000000000000000000000000;;		client.AddRemoveLoadBalancerServiceLinkInput = newAddRemoveLoadBalancerServiceLinkInputClient(client)
0000000000000000000000000000000000000000;;		client.AddRemoveServiceLinkInput = newAddRemoveServiceLinkInputClient(client)
0000000000000000000000000000000000000000;;		client.Agent = newAgentClient(client)
0000000000000000000000000000000000000000;;		client.Amazonec2Config = newAmazonec2ConfigClient(client)
0000000000000000000000000000000000000000;;		client.ApiKey = newApiKeyClient(client)
0000000000000000000000000000000000000000;;		client.AuditLog = newAuditLogClient(client)
0000000000000000000000000000000000000000;;		client.AzureConfig = newAzureConfigClient(client)
0000000000000000000000000000000000000000;;		client.Azureadconfig = newAzureadconfigClient(client)
0000000000000000000000000000000000000000;;		client.Backup = newBackupClient(client)
0000000000000000000000000000000000000000;;		client.BackupTarget = newBackupTargetClient(client)
0000000000000000000000000000000000000000;;		client.BaseMachineConfig = newBaseMachineConfigClient(client)
0000000000000000000000000000000000000000;;		client.BlkioDeviceOption = newBlkioDeviceOptionClient(client)
0000000000000000000000000000000000000000;;		client.Certificate = newCertificateClient(client)
0000000000000000000000000000000000000000;;		client.ChangeSecretInput = newChangeSecretInputClient(client)
0000000000000000000000000000000000000000;;		client.ComposeConfig = newComposeConfigClient(client)
0000000000000000000000000000000000000000;;		client.ComposeConfigInput = newComposeConfigInputClient(client)
0000000000000000000000000000000000000000;;		client.ComposeProject = newComposeProjectClient(client)
0000000000000000000000000000000000000000;;		client.ComposeService = newComposeServiceClient(client)
0000000000000000000000000000000000000000;;		client.ConfigItem = newConfigItemClient(client)
0000000000000000000000000000000000000000;;		client.ConfigItemStatus = newConfigItemStatusClient(client)
0000000000000000000000000000000000000000;;		client.Container = newContainerClient(client)
0000000000000000000000000000000000000000;;		client.ContainerEvent = newContainerEventClient(client)
0000000000000000000000000000000000000000;;		client.ContainerExec = newContainerExecClient(client)
0000000000000000000000000000000000000000;;		client.ContainerLogs = newContainerLogsClient(client)
0000000000000000000000000000000000000000;;		client.ContainerProxy = newContainerProxyClient(client)
0000000000000000000000000000000000000000;;		client.Credential = newCredentialClient(client)
0000000000000000000000000000000000000000;;		client.Databasechangelog = newDatabasechangelogClient(client)
0000000000000000000000000000000000000000;;		client.Databasechangeloglock = newDatabasechangeloglockClient(client)
0000000000000000000000000000000000000000;;		client.DigitaloceanConfig = newDigitaloceanConfigClient(client)
0000000000000000000000000000000000000000;;		client.DnsService = newDnsServiceClient(client)
0000000000000000000000000000000000000000;;		client.DockerBuild = newDockerBuildClient(client)
0000000000000000000000000000000000000000;;		client.DynamicSchema = newDynamicSchemaClient(client)
0000000000000000000000000000000000000000;;		client.Environment = newEnvironmentClient(client)
0000000000000000000000000000000000000000;;		client.EnvironmentUpgrade = newEnvironmentUpgradeClient(client)
0000000000000000000000000000000000000000;;		client.ExtensionImplementation = newExtensionImplementationClient(client)
0000000000000000000000000000000000000000;;		client.ExtensionPoint = newExtensionPointClient(client)
0000000000000000000000000000000000000000;;		client.ExternalDnsEvent = newExternalDnsEventClient(client)
0000000000000000000000000000000000000000;;		client.ExternalEvent = newExternalEventClient(client)
0000000000000000000000000000000000000000;;		client.ExternalHandler = newExternalHandlerClient(client)
0000000000000000000000000000000000000000;;		client.ExternalHandlerExternalHandlerProcessMap = newExternalHandlerExternalHandlerProcessMapClient(client)
0000000000000000000000000000000000000000;;		client.ExternalHandlerProcess = newExternalHandlerProcessClient(client)
0000000000000000000000000000000000000000;;		client.ExternalHandlerProcessConfig = newExternalHandlerProcessConfigClient(client)
0000000000000000000000000000000000000000;;		client.ExternalHostEvent = newExternalHostEventClient(client)
0000000000000000000000000000000000000000;;		client.ExternalService = newExternalServiceClient(client)
0000000000000000000000000000000000000000;;		client.ExternalServiceEvent = newExternalServiceEventClient(client)
0000000000000000000000000000000000000000;;		client.ExternalStoragePoolEvent = newExternalStoragePoolEventClient(client)
0000000000000000000000000000000000000000;;		client.ExternalVolumeEvent = newExternalVolumeEventClient(client)
0000000000000000000000000000000000000000;;		client.FieldDocumentation = newFieldDocumentationClient(client)
0000000000000000000000000000000000000000;;		client.Githubconfig = newGithubconfigClient(client)
0000000000000000000000000000000000000000;;		client.HaConfig = newHaConfigClient(client)
0000000000000000000000000000000000000000;;		client.HaConfigInput = newHaConfigInputClient(client)
0000000000000000000000000000000000000000;;		client.HaproxyConfig = newHaproxyConfigClient(client)
0000000000000000000000000000000000000000;;		client.HealthcheckInstanceHostMap = newHealthcheckInstanceHostMapClient(client)
0000000000000000000000000000000000000000;;		client.Host = newHostClient(client)
0000000000000000000000000000000000000000;;		client.HostAccess = newHostAccessClient(client)
0000000000000000000000000000000000000000;;		client.HostApiProxyToken = newHostApiProxyTokenClient(client)
0000000000000000000000000000000000000000;;		client.Identity = newIdentityClient(client)
0000000000000000000000000000000000000000;;		client.Image = newImageClient(client)
0000000000000000000000000000000000000000;;		client.InServiceUpgradeStrategy = newInServiceUpgradeStrategyClient(client)
0000000000000000000000000000000000000000;;		client.Instance = newInstanceClient(client)
0000000000000000000000000000000000000000;;		client.InstanceConsole = newInstanceConsoleClient(client)
0000000000000000000000000000000000000000;;		client.InstanceConsoleInput = newInstanceConsoleInputClient(client)
0000000000000000000000000000000000000000;;		client.InstanceHealthCheck = newInstanceHealthCheckClient(client)
0000000000000000000000000000000000000000;;		client.InstanceLink = newInstanceLinkClient(client)
0000000000000000000000000000000000000000;;		client.InstanceStop = newInstanceStopClient(client)
0000000000000000000000000000000000000000;;		client.IpAddress = newIpAddressClient(client)
0000000000000000000000000000000000000000;;		client.IpAddressAssociateInput = newIpAddressAssociateInputClient(client)
0000000000000000000000000000000000000000;;		client.KubernetesService = newKubernetesServiceClient(client)
0000000000000000000000000000000000000000;;		client.KubernetesStack = newKubernetesStackClient(client)
0000000000000000000000000000000000000000;;		client.KubernetesStackUpgrade = newKubernetesStackUpgradeClient(client)
0000000000000000000000000000000000000000;;		client.Label = newLabelClient(client)
0000000000000000000000000000000000000000;;		client.LaunchConfig = newLaunchConfigClient(client)
0000000000000000000000000000000000000000;;		client.Ldapconfig = newLdapconfigClient(client)
0000000000000000000000000000000000000000;;		client.LoadBalancerAppCookieStickinessPolicy = newLoadBalancerAppCookieStickinessPolicyClient(client)
0000000000000000000000000000000000000000;;		client.LoadBalancerConfig = newLoadBalancerConfigClient(client)
0000000000000000000000000000000000000000;;		client.LoadBalancerCookieStickinessPolicy = newLoadBalancerCookieStickinessPolicyClient(client)
0000000000000000000000000000000000000000;;		client.LoadBalancerService = newLoadBalancerServiceClient(client)
0000000000000000000000000000000000000000;;		client.LoadBalancerServiceLink = newLoadBalancerServiceLinkClient(client)
0000000000000000000000000000000000000000;;		client.LocalAuthConfig = newLocalAuthConfigClient(client)
0000000000000000000000000000000000000000;;		client.LogConfig = newLogConfigClient(client)
0000000000000000000000000000000000000000;;		client.Machine = newMachineClient(client)
0000000000000000000000000000000000000000;;		client.MachineDriver = newMachineDriverClient(client)
0000000000000000000000000000000000000000;;		client.Mount = newMountClient(client)
0000000000000000000000000000000000000000;;		client.Network = newNetworkClient(client)
0000000000000000000000000000000000000000;;		client.NfsConfig = newNfsConfigClient(client)
0000000000000000000000000000000000000000;;		client.Openldapconfig = newOpenldapconfigClient(client)
0000000000000000000000000000000000000000;;		client.PacketConfig = newPacketConfigClient(client)
0000000000000000000000000000000000000000;;		client.Password = newPasswordClient(client)
0000000000000000000000000000000000000000;;		client.PhysicalHost = newPhysicalHostClient(client)
0000000000000000000000000000000000000000;;		client.Port = newPortClient(client)
0000000000000000000000000000000000000000;;		client.ProcessDefinition = newProcessDefinitionClient(client)
0000000000000000000000000000000000000000;;		client.ProcessExecution = newProcessExecutionClient(client)
0000000000000000000000000000000000000000;;		client.ProcessInstance = newProcessInstanceClient(client)
0000000000000000000000000000000000000000;;		client.Project = newProjectClient(client)
0000000000000000000000000000000000000000;;		client.ProjectMember = newProjectMemberClient(client)
0000000000000000000000000000000000000000;;		client.PublicEndpoint = newPublicEndpointClient(client)
0000000000000000000000000000000000000000;;		client.Publish = newPublishClient(client)
0000000000000000000000000000000000000000;;		client.PullTask = newPullTaskClient(client)
0000000000000000000000000000000000000000;;		client.RecreateOnQuorumStrategyConfig = newRecreateOnQuorumStrategyConfigClient(client)
0000000000000000000000000000000000000000;;		client.Register = newRegisterClient(client)
0000000000000000000000000000000000000000;;		client.RegistrationToken = newRegistrationTokenClient(client)
0000000000000000000000000000000000000000;;		client.Registry = newRegistryClient(client)
0000000000000000000000000000000000000000;;		client.RegistryCredential = newRegistryCredentialClient(client)
0000000000000000000000000000000000000000;;		client.ResourceDefinition = newResourceDefinitionClient(client)
0000000000000000000000000000000000000000;;		client.RestartPolicy = newRestartPolicyClient(client)
0000000000000000000000000000000000000000;;		client.RestoreFromBackupInput = newRestoreFromBackupInputClient(client)
0000000000000000000000000000000000000000;;		client.RevertToSnapshotInput = newRevertToSnapshotInputClient(client)
0000000000000000000000000000000000000000;;		client.RollingRestartStrategy = newRollingRestartStrategyClient(client)
0000000000000000000000000000000000000000;;		client.ScalePolicy = newScalePolicyClient(client)
0000000000000000000000000000000000000000;;		client.SecondaryLaunchConfig = newSecondaryLaunchConfigClient(client)
0000000000000000000000000000000000000000;;		client.Service = newServiceClient(client)
0000000000000000000000000000000000000000;;		client.ServiceConsumeMap = newServiceConsumeMapClient(client)
0000000000000000000000000000000000000000;;		client.ServiceEvent = newServiceEventClient(client)
0000000000000000000000000000000000000000;;		client.ServiceExposeMap = newServiceExposeMapClient(client)
0000000000000000000000000000000000000000;;		client.ServiceLink = newServiceLinkClient(client)
0000000000000000000000000000000000000000;;		client.ServiceProxy = newServiceProxyClient(client)
0000000000000000000000000000000000000000;;		client.ServiceRestart = newServiceRestartClient(client)
0000000000000000000000000000000000000000;;		client.ServiceUpgrade = newServiceUpgradeClient(client)
0000000000000000000000000000000000000000;;		client.ServiceUpgradeStrategy = newServiceUpgradeStrategyClient(client)
0000000000000000000000000000000000000000;;		client.ServicesPortRange = newServicesPortRangeClient(client)
0000000000000000000000000000000000000000;;		client.SetLabelsInput = newSetLabelsInputClient(client)
0000000000000000000000000000000000000000;;		client.SetLoadBalancerServiceLinksInput = newSetLoadBalancerServiceLinksInputClient(client)
0000000000000000000000000000000000000000;;		client.SetProjectMembersInput = newSetProjectMembersInputClient(client)
0000000000000000000000000000000000000000;;		client.SetServiceLinksInput = newSetServiceLinksInputClient(client)
0000000000000000000000000000000000000000;;		client.Setting = newSettingClient(client)
0000000000000000000000000000000000000000;;		client.Snapshot = newSnapshotClient(client)
0000000000000000000000000000000000000000;;		client.SnapshotBackupInput = newSnapshotBackupInputClient(client)
0000000000000000000000000000000000000000;;		client.StateTransition = newStateTransitionClient(client)
0000000000000000000000000000000000000000;;		client.StatsAccess = newStatsAccessClient(client)
0000000000000000000000000000000000000000;;		client.StoragePool = newStoragePoolClient(client)
0000000000000000000000000000000000000000;;		client.Subscribe = newSubscribeClient(client)
0000000000000000000000000000000000000000;;		client.Task = newTaskClient(client)
0000000000000000000000000000000000000000;;		client.TaskInstance = newTaskInstanceClient(client)
0000000000000000000000000000000000000000;;		client.ToServiceUpgradeStrategy = newToServiceUpgradeStrategyClient(client)
0000000000000000000000000000000000000000;;		client.TypeDocumentation = newTypeDocumentationClient(client)
0000000000000000000000000000000000000000;;		client.VirtualMachine = newVirtualMachineClient(client)
0000000000000000000000000000000000000000;;		client.VirtualMachineDisk = newVirtualMachineDiskClient(client)
0000000000000000000000000000000000000000;;		client.Volume = newVolumeClient(client)
0000000000000000000000000000000000000000;;		client.VolumeSnapshotInput = newVolumeSnapshotInputClient(client)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return client
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewRancherClient(opts *ClientOpts) (*RancherClient, error) {
0000000000000000000000000000000000000000;;		rancherBaseClient := &RancherBaseClientImpl{
0000000000000000000000000000000000000000;;			Types: map[string]Schema{},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		client := constructClient(rancherBaseClient)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		err := setupRancherBaseClient(rancherBaseClient, opts)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return client, nil
0000000000000000000000000000000000000000;;	}

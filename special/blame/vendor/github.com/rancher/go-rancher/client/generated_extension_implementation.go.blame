0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		EXTENSION_IMPLEMENTATION_TYPE = "extensionImplementation"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExtensionImplementation struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ClassName string `json:"className,omitempty" yaml:"class_name,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Name string `json:"name,omitempty" yaml:"name,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Properties map[string]interface{} `json:"properties,omitempty" yaml:"properties,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExtensionImplementationCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []ExtensionImplementation `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExtensionImplementationClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ExtensionImplementationOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*ExtensionImplementationCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *ExtensionImplementation) (*ExtensionImplementation, error)
0000000000000000000000000000000000000000;;		Update(existing *ExtensionImplementation, updates interface{}) (*ExtensionImplementation, error)
0000000000000000000000000000000000000000;;		ById(id string) (*ExtensionImplementation, error)
0000000000000000000000000000000000000000;;		Delete(container *ExtensionImplementation) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newExtensionImplementationClient(rancherClient *RancherClient) *ExtensionImplementationClient {
0000000000000000000000000000000000000000;;		return &ExtensionImplementationClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ExtensionImplementationClient) Create(container *ExtensionImplementation) (*ExtensionImplementation, error) {
0000000000000000000000000000000000000000;;		resp := &ExtensionImplementation{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(EXTENSION_IMPLEMENTATION_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ExtensionImplementationClient) Update(existing *ExtensionImplementation, updates interface{}) (*ExtensionImplementation, error) {
0000000000000000000000000000000000000000;;		resp := &ExtensionImplementation{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(EXTENSION_IMPLEMENTATION_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ExtensionImplementationClient) List(opts *ListOpts) (*ExtensionImplementationCollection, error) {
0000000000000000000000000000000000000000;;		resp := &ExtensionImplementationCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(EXTENSION_IMPLEMENTATION_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ExtensionImplementationClient) ById(id string) (*ExtensionImplementation, error) {
0000000000000000000000000000000000000000;;		resp := &ExtensionImplementation{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(EXTENSION_IMPLEMENTATION_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ExtensionImplementationClient) Delete(container *ExtensionImplementation) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(EXTENSION_IMPLEMENTATION_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

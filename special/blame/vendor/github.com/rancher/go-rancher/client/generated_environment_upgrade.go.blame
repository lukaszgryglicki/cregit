0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		ENVIRONMENT_UPGRADE_TYPE = "environmentUpgrade"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnvironmentUpgrade struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		DockerCompose string `json:"dockerCompose,omitempty" yaml:"docker_compose,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Environment map[string]interface{} `json:"environment,omitempty" yaml:"environment,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ExternalId string `json:"externalId,omitempty" yaml:"external_id,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		RancherCompose string `json:"rancherCompose,omitempty" yaml:"rancher_compose,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnvironmentUpgradeCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []EnvironmentUpgrade `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnvironmentUpgradeClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type EnvironmentUpgradeOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*EnvironmentUpgradeCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *EnvironmentUpgrade) (*EnvironmentUpgrade, error)
0000000000000000000000000000000000000000;;		Update(existing *EnvironmentUpgrade, updates interface{}) (*EnvironmentUpgrade, error)
0000000000000000000000000000000000000000;;		ById(id string) (*EnvironmentUpgrade, error)
0000000000000000000000000000000000000000;;		Delete(container *EnvironmentUpgrade) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newEnvironmentUpgradeClient(rancherClient *RancherClient) *EnvironmentUpgradeClient {
0000000000000000000000000000000000000000;;		return &EnvironmentUpgradeClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *EnvironmentUpgradeClient) Create(container *EnvironmentUpgrade) (*EnvironmentUpgrade, error) {
0000000000000000000000000000000000000000;;		resp := &EnvironmentUpgrade{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(ENVIRONMENT_UPGRADE_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *EnvironmentUpgradeClient) Update(existing *EnvironmentUpgrade, updates interface{}) (*EnvironmentUpgrade, error) {
0000000000000000000000000000000000000000;;		resp := &EnvironmentUpgrade{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(ENVIRONMENT_UPGRADE_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *EnvironmentUpgradeClient) List(opts *ListOpts) (*EnvironmentUpgradeCollection, error) {
0000000000000000000000000000000000000000;;		resp := &EnvironmentUpgradeCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(ENVIRONMENT_UPGRADE_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *EnvironmentUpgradeClient) ById(id string) (*EnvironmentUpgrade, error) {
0000000000000000000000000000000000000000;;		resp := &EnvironmentUpgrade{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(ENVIRONMENT_UPGRADE_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *EnvironmentUpgradeClient) Delete(container *EnvironmentUpgrade) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(ENVIRONMENT_UPGRADE_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		ADD_REMOVE_LOAD_BALANCER_SERVICE_LINK_INPUT_TYPE = "addRemoveLoadBalancerServiceLinkInput"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddRemoveLoadBalancerServiceLinkInput struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ServiceLink LoadBalancerServiceLink `json:"serviceLink,omitempty" yaml:"service_link,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddRemoveLoadBalancerServiceLinkInputCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []AddRemoveLoadBalancerServiceLinkInput `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddRemoveLoadBalancerServiceLinkInputClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type AddRemoveLoadBalancerServiceLinkInputOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*AddRemoveLoadBalancerServiceLinkInputCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *AddRemoveLoadBalancerServiceLinkInput) (*AddRemoveLoadBalancerServiceLinkInput, error)
0000000000000000000000000000000000000000;;		Update(existing *AddRemoveLoadBalancerServiceLinkInput, updates interface{}) (*AddRemoveLoadBalancerServiceLinkInput, error)
0000000000000000000000000000000000000000;;		ById(id string) (*AddRemoveLoadBalancerServiceLinkInput, error)
0000000000000000000000000000000000000000;;		Delete(container *AddRemoveLoadBalancerServiceLinkInput) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newAddRemoveLoadBalancerServiceLinkInputClient(rancherClient *RancherClient) *AddRemoveLoadBalancerServiceLinkInputClient {
0000000000000000000000000000000000000000;;		return &AddRemoveLoadBalancerServiceLinkInputClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AddRemoveLoadBalancerServiceLinkInputClient) Create(container *AddRemoveLoadBalancerServiceLinkInput) (*AddRemoveLoadBalancerServiceLinkInput, error) {
0000000000000000000000000000000000000000;;		resp := &AddRemoveLoadBalancerServiceLinkInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(ADD_REMOVE_LOAD_BALANCER_SERVICE_LINK_INPUT_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AddRemoveLoadBalancerServiceLinkInputClient) Update(existing *AddRemoveLoadBalancerServiceLinkInput, updates interface{}) (*AddRemoveLoadBalancerServiceLinkInput, error) {
0000000000000000000000000000000000000000;;		resp := &AddRemoveLoadBalancerServiceLinkInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(ADD_REMOVE_LOAD_BALANCER_SERVICE_LINK_INPUT_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AddRemoveLoadBalancerServiceLinkInputClient) List(opts *ListOpts) (*AddRemoveLoadBalancerServiceLinkInputCollection, error) {
0000000000000000000000000000000000000000;;		resp := &AddRemoveLoadBalancerServiceLinkInputCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(ADD_REMOVE_LOAD_BALANCER_SERVICE_LINK_INPUT_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AddRemoveLoadBalancerServiceLinkInputClient) ById(id string) (*AddRemoveLoadBalancerServiceLinkInput, error) {
0000000000000000000000000000000000000000;;		resp := &AddRemoveLoadBalancerServiceLinkInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(ADD_REMOVE_LOAD_BALANCER_SERVICE_LINK_INPUT_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *AddRemoveLoadBalancerServiceLinkInputClient) Delete(container *AddRemoveLoadBalancerServiceLinkInput) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(ADD_REMOVE_LOAD_BALANCER_SERVICE_LINK_INPUT_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

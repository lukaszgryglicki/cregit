0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		FIELD_DOCUMENTATION_TYPE = "fieldDocumentation"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FieldDocumentation struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Description string `json:"description,omitempty" yaml:"description,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FieldDocumentationCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []FieldDocumentation `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FieldDocumentationClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FieldDocumentationOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*FieldDocumentationCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *FieldDocumentation) (*FieldDocumentation, error)
0000000000000000000000000000000000000000;;		Update(existing *FieldDocumentation, updates interface{}) (*FieldDocumentation, error)
0000000000000000000000000000000000000000;;		ById(id string) (*FieldDocumentation, error)
0000000000000000000000000000000000000000;;		Delete(container *FieldDocumentation) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newFieldDocumentationClient(rancherClient *RancherClient) *FieldDocumentationClient {
0000000000000000000000000000000000000000;;		return &FieldDocumentationClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FieldDocumentationClient) Create(container *FieldDocumentation) (*FieldDocumentation, error) {
0000000000000000000000000000000000000000;;		resp := &FieldDocumentation{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(FIELD_DOCUMENTATION_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FieldDocumentationClient) Update(existing *FieldDocumentation, updates interface{}) (*FieldDocumentation, error) {
0000000000000000000000000000000000000000;;		resp := &FieldDocumentation{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(FIELD_DOCUMENTATION_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FieldDocumentationClient) List(opts *ListOpts) (*FieldDocumentationCollection, error) {
0000000000000000000000000000000000000000;;		resp := &FieldDocumentationCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(FIELD_DOCUMENTATION_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FieldDocumentationClient) ById(id string) (*FieldDocumentation, error) {
0000000000000000000000000000000000000000;;		resp := &FieldDocumentation{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(FIELD_DOCUMENTATION_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *FieldDocumentationClient) Delete(container *FieldDocumentation) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(FIELD_DOCUMENTATION_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		SET_SERVICE_LINKS_INPUT_TYPE = "setServiceLinksInput"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetServiceLinksInput struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ServiceLinks []interface{} `json:"serviceLinks,omitempty" yaml:"service_links,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetServiceLinksInputCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []SetServiceLinksInput `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetServiceLinksInputClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type SetServiceLinksInputOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*SetServiceLinksInputCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *SetServiceLinksInput) (*SetServiceLinksInput, error)
0000000000000000000000000000000000000000;;		Update(existing *SetServiceLinksInput, updates interface{}) (*SetServiceLinksInput, error)
0000000000000000000000000000000000000000;;		ById(id string) (*SetServiceLinksInput, error)
0000000000000000000000000000000000000000;;		Delete(container *SetServiceLinksInput) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newSetServiceLinksInputClient(rancherClient *RancherClient) *SetServiceLinksInputClient {
0000000000000000000000000000000000000000;;		return &SetServiceLinksInputClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *SetServiceLinksInputClient) Create(container *SetServiceLinksInput) (*SetServiceLinksInput, error) {
0000000000000000000000000000000000000000;;		resp := &SetServiceLinksInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(SET_SERVICE_LINKS_INPUT_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *SetServiceLinksInputClient) Update(existing *SetServiceLinksInput, updates interface{}) (*SetServiceLinksInput, error) {
0000000000000000000000000000000000000000;;		resp := &SetServiceLinksInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(SET_SERVICE_LINKS_INPUT_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *SetServiceLinksInputClient) List(opts *ListOpts) (*SetServiceLinksInputCollection, error) {
0000000000000000000000000000000000000000;;		resp := &SetServiceLinksInputCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(SET_SERVICE_LINKS_INPUT_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *SetServiceLinksInputClient) ById(id string) (*SetServiceLinksInput, error) {
0000000000000000000000000000000000000000;;		resp := &SetServiceLinksInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(SET_SERVICE_LINKS_INPUT_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *SetServiceLinksInputClient) Delete(container *SetServiceLinksInput) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(SET_SERVICE_LINKS_INPUT_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

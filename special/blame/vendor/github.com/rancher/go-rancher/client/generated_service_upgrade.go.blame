0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		SERVICE_UPGRADE_TYPE = "serviceUpgrade"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ServiceUpgrade struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		InServiceStrategy *InServiceUpgradeStrategy `json:"inServiceStrategy,omitempty" yaml:"in_service_strategy,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		ToServiceStrategy *ToServiceUpgradeStrategy `json:"toServiceStrategy,omitempty" yaml:"to_service_strategy,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ServiceUpgradeCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []ServiceUpgrade `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ServiceUpgradeClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ServiceUpgradeOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*ServiceUpgradeCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *ServiceUpgrade) (*ServiceUpgrade, error)
0000000000000000000000000000000000000000;;		Update(existing *ServiceUpgrade, updates interface{}) (*ServiceUpgrade, error)
0000000000000000000000000000000000000000;;		ById(id string) (*ServiceUpgrade, error)
0000000000000000000000000000000000000000;;		Delete(container *ServiceUpgrade) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newServiceUpgradeClient(rancherClient *RancherClient) *ServiceUpgradeClient {
0000000000000000000000000000000000000000;;		return &ServiceUpgradeClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceUpgradeClient) Create(container *ServiceUpgrade) (*ServiceUpgrade, error) {
0000000000000000000000000000000000000000;;		resp := &ServiceUpgrade{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(SERVICE_UPGRADE_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceUpgradeClient) Update(existing *ServiceUpgrade, updates interface{}) (*ServiceUpgrade, error) {
0000000000000000000000000000000000000000;;		resp := &ServiceUpgrade{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(SERVICE_UPGRADE_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceUpgradeClient) List(opts *ListOpts) (*ServiceUpgradeCollection, error) {
0000000000000000000000000000000000000000;;		resp := &ServiceUpgradeCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(SERVICE_UPGRADE_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceUpgradeClient) ById(id string) (*ServiceUpgrade, error) {
0000000000000000000000000000000000000000;;		resp := &ServiceUpgrade{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(SERVICE_UPGRADE_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceUpgradeClient) Delete(container *ServiceUpgrade) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(SERVICE_UPGRADE_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

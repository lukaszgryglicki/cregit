0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		SERVICE_PROXY_TYPE = "serviceProxy"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ServiceProxy struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Port int64 `json:"port,omitempty" yaml:"port,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Scheme string `json:"scheme,omitempty" yaml:"scheme,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Service string `json:"service,omitempty" yaml:"service,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Token string `json:"token,omitempty" yaml:"token,omitempty"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		Url string `json:"url,omitempty" yaml:"url,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ServiceProxyCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []ServiceProxy `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ServiceProxyClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ServiceProxyOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*ServiceProxyCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *ServiceProxy) (*ServiceProxy, error)
0000000000000000000000000000000000000000;;		Update(existing *ServiceProxy, updates interface{}) (*ServiceProxy, error)
0000000000000000000000000000000000000000;;		ById(id string) (*ServiceProxy, error)
0000000000000000000000000000000000000000;;		Delete(container *ServiceProxy) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newServiceProxyClient(rancherClient *RancherClient) *ServiceProxyClient {
0000000000000000000000000000000000000000;;		return &ServiceProxyClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceProxyClient) Create(container *ServiceProxy) (*ServiceProxy, error) {
0000000000000000000000000000000000000000;;		resp := &ServiceProxy{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(SERVICE_PROXY_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceProxyClient) Update(existing *ServiceProxy, updates interface{}) (*ServiceProxy, error) {
0000000000000000000000000000000000000000;;		resp := &ServiceProxy{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(SERVICE_PROXY_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceProxyClient) List(opts *ListOpts) (*ServiceProxyCollection, error) {
0000000000000000000000000000000000000000;;		resp := &ServiceProxyCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(SERVICE_PROXY_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceProxyClient) ById(id string) (*ServiceProxy, error) {
0000000000000000000000000000000000000000;;		resp := &ServiceProxy{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(SERVICE_PROXY_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *ServiceProxyClient) Delete(container *ServiceProxy) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(SERVICE_PROXY_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

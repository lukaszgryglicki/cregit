0000000000000000000000000000000000000000;;	package client
a70eec3531b96f9fd5397f7cec9cd89ffcaafa47;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		INSTANCE_CONSOLE_INPUT_TYPE = "instanceConsoleInput"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InstanceConsoleInput struct {
0000000000000000000000000000000000000000;;		Resource
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InstanceConsoleInputCollection struct {
0000000000000000000000000000000000000000;;		Collection
0000000000000000000000000000000000000000;;		Data []InstanceConsoleInput `json:"data,omitempty"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InstanceConsoleInputClient struct {
0000000000000000000000000000000000000000;;		rancherClient *RancherClient
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type InstanceConsoleInputOperations interface {
0000000000000000000000000000000000000000;;		List(opts *ListOpts) (*InstanceConsoleInputCollection, error)
0000000000000000000000000000000000000000;;		Create(opts *InstanceConsoleInput) (*InstanceConsoleInput, error)
0000000000000000000000000000000000000000;;		Update(existing *InstanceConsoleInput, updates interface{}) (*InstanceConsoleInput, error)
0000000000000000000000000000000000000000;;		ById(id string) (*InstanceConsoleInput, error)
0000000000000000000000000000000000000000;;		Delete(container *InstanceConsoleInput) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func newInstanceConsoleInputClient(rancherClient *RancherClient) *InstanceConsoleInputClient {
0000000000000000000000000000000000000000;;		return &InstanceConsoleInputClient{
0000000000000000000000000000000000000000;;			rancherClient: rancherClient,
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *InstanceConsoleInputClient) Create(container *InstanceConsoleInput) (*InstanceConsoleInput, error) {
0000000000000000000000000000000000000000;;		resp := &InstanceConsoleInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doCreate(INSTANCE_CONSOLE_INPUT_TYPE, container, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *InstanceConsoleInputClient) Update(existing *InstanceConsoleInput, updates interface{}) (*InstanceConsoleInput, error) {
0000000000000000000000000000000000000000;;		resp := &InstanceConsoleInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doUpdate(INSTANCE_CONSOLE_INPUT_TYPE, &existing.Resource, updates, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *InstanceConsoleInputClient) List(opts *ListOpts) (*InstanceConsoleInputCollection, error) {
0000000000000000000000000000000000000000;;		resp := &InstanceConsoleInputCollection{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doList(INSTANCE_CONSOLE_INPUT_TYPE, opts, resp)
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *InstanceConsoleInputClient) ById(id string) (*InstanceConsoleInput, error) {
0000000000000000000000000000000000000000;;		resp := &InstanceConsoleInput{}
0000000000000000000000000000000000000000;;		err := c.rancherClient.doById(INSTANCE_CONSOLE_INPUT_TYPE, id, resp)
0000000000000000000000000000000000000000;;		if apiError, ok := err.(*ApiError); ok {
0000000000000000000000000000000000000000;;			if apiError.StatusCode == 404 {
0000000000000000000000000000000000000000;;				return nil, nil
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return resp, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *InstanceConsoleInputClient) Delete(container *InstanceConsoleInput) error {
0000000000000000000000000000000000000000;;		return c.rancherClient.doResourceDelete(INSTANCE_CONSOLE_INPUT_TYPE, &container.Resource)
0000000000000000000000000000000000000000;;	}

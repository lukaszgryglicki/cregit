0000000000000000000000000000000000000000;;	// Copyright 2015 Google Inc. All Rights Reserved.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
c6e6627d899268b6de284380e381bf3fd736ca38;Godeps/_workspace/src/github.com/google/cadvisor/utils/cloudinfo/azure.go[Godeps/_workspace/src/github.com/google/cadvisor/utils/cloudinfo/azure.go][vendor/github.com/google/cadvisor/utils/cloudinfo/azure.go];	
0000000000000000000000000000000000000000;;	package cloudinfo
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		info "github.com/google/cadvisor/info/v1"
0000000000000000000000000000000000000000;;		"io/ioutil"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		SysVendorFileName    = "/sys/class/dmi/id/sys_vendor"
0000000000000000000000000000000000000000;;		BiosUUIDFileName     = "/sys/class/dmi/id/product_uuid"
0000000000000000000000000000000000000000;;		MicrosoftCorporation = "Microsoft Corporation"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func onAzure() bool {
0000000000000000000000000000000000000000;;		data, err := ioutil.ReadFile(SysVendorFileName)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return false
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return strings.Contains(string(data), MicrosoftCorporation)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// TODO: Implement method.
0000000000000000000000000000000000000000;;	func getAzureInstanceType() info.InstanceType {
0000000000000000000000000000000000000000;;		return info.UnknownInstance
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func getAzureInstanceID() info.InstanceID {
0000000000000000000000000000000000000000;;		data, err := ioutil.ReadFile(BiosUUIDFileName)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return info.UnNamedInstance
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return info.InstanceID(strings.TrimSuffix(string(data), "\n"))
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	# Example REST API Client
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This is an implementation of a cAdvisor REST API in Go.  You can use it like this:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	client, err := client.NewClient("http://192.168.59.103:8080/")
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Obviously, replace the URL with the path to your actual cAdvisor REST endpoint.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### MachineInfo
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	client.MachineInfo()
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	There is no v2 MachineInfo API, so the v2 client exposes the [v1 MachineInfo](../../info/v1/machine.go#L131)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	(*v1.MachineInfo)(0xc208022b10)({
0000000000000000000000000000000000000000;;	 NumCores: (int) 4,
0000000000000000000000000000000000000000;;	 MemoryCapacity: (int64) 2106028032,
0000000000000000000000000000000000000000;;	 Filesystems: ([]v1.FsInfo) (len=1 cap=4) {
0000000000000000000000000000000000000000;;	  (v1.FsInfo) {
0000000000000000000000000000000000000000;;	   Device: (string) (len=9) "/dev/sda1",
0000000000000000000000000000000000000000;;	   Capacity: (uint64) 19507089408
0000000000000000000000000000000000000000;;	  }
0000000000000000000000000000000000000000;;	 }
0000000000000000000000000000000000000000;;	})
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	You can see the full specification of the [MachineInfo struct in the source](../../info/v1/machine.go#L131)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### VersionInfo
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	client.VersionInfo()
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This method returns the cAdvisor version.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Attributes
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	client.Attributes()
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This method returns a [cadvisor/info/v2/Attributes](../../info/v2/machine.go#L24) struct with all the fields filled in. Attributes includes hardware attributes (as returned by MachineInfo) as well as software attributes (eg. software versions). Here is an example return value:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	(*v2.Attributes)({
0000000000000000000000000000000000000000;;	 KernelVersion: (string) (len=17) "3.13.0-44-generic"
0000000000000000000000000000000000000000;;	 ContainerOsVersion: (string) (len=18) "Ubuntu 14.04.1 LTS"
0000000000000000000000000000000000000000;;	 DockerVersion: (string) (len=9) "1.5.0-rc4"
0000000000000000000000000000000000000000;;	 CadvisorVersion: (string) (len=6) "0.10.1"
0000000000000000000000000000000000000000;;	 NumCores: (int) 4,
0000000000000000000000000000000000000000;;	 MemoryCapacity: (int64) 2106028032,
0000000000000000000000000000000000000000;;	 Filesystems: ([]v2.FsInfo) (len=1 cap=4) {
0000000000000000000000000000000000000000;;	  (v2.FsInfo) {
0000000000000000000000000000000000000000;;	   Device: (string) (len=9) "/dev/sda1",
0000000000000000000000000000000000000000;;	   Capacity: (uint64) 19507089408
0000000000000000000000000000000000000000;;	  }
0000000000000000000000000000000000000000;;	 }
0000000000000000000000000000000000000000;;	})
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	You can see the full specification of the [Attributes struct in the source](../../info/v2/machine.go#L24)
0000000000000000000000000000000000000000;;	

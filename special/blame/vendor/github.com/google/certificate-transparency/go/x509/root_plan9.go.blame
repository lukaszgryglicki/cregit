0000000000000000000000000000000000000000;;	// Copyright 2012 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
4719f97477417ada91b80cafeecea0dd05c6fdd6;;	
0000000000000000000000000000000000000000;;	// +build plan9
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package x509
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "io/ioutil"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Possible certificate files; stop after finding one.
0000000000000000000000000000000000000000;;	var certFiles = []string{
0000000000000000000000000000000000000000;;		"/sys/lib/tls/ca.pem",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (c *Certificate) systemVerify(opts *VerifyOptions) (chains [][]*Certificate, err error) {
0000000000000000000000000000000000000000;;		return nil, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func initSystemRoots() {
0000000000000000000000000000000000000000;;		roots := NewCertPool()
0000000000000000000000000000000000000000;;		for _, file := range certFiles {
0000000000000000000000000000000000000000;;			data, err := ioutil.ReadFile(file)
0000000000000000000000000000000000000000;;			if err == nil {
0000000000000000000000000000000000000000;;				roots.AppendCertsFromPEM(data)
0000000000000000000000000000000000000000;;				systemRoots = roots
0000000000000000000000000000000000000000;;				return
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// All of the files failed to load. systemRoots will be nil which will
0000000000000000000000000000000000000000;;		// trigger a specific error at verification time.
0000000000000000000000000000000000000000;;	}

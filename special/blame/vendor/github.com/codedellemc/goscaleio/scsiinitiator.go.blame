0000000000000000000000000000000000000000;;	package goscaleio
035d8c1abe71a2fddb25ce05367578ce9dfeca59;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		types "github.com/codedellemc/goscaleio/types/v1"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (system *System) GetScsiInitiator() (scsiInitiators []types.ScsiInitiator, err error) {
0000000000000000000000000000000000000000;;		endpoint := system.client.SIOEndpoint
0000000000000000000000000000000000000000;;		endpoint.Path = fmt.Sprintf("/api/instances/System::%v/relationships/ScsiInitiator", system.System.ID)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		req := system.client.NewRequest(map[string]string{}, "GET", endpoint, nil)
0000000000000000000000000000000000000000;;		req.SetBasicAuth("", system.client.Token)
0000000000000000000000000000000000000000;;		req.Header.Add("Accept", "application/json;version="+system.client.configConnect.Version)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		resp, err := system.client.retryCheckResp(&system.client.Http, req)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return []types.ScsiInitiator{}, fmt.Errorf("problem getting response: %v", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		defer resp.Body.Close()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err = system.client.decodeBody(resp, &scsiInitiators); err != nil {
0000000000000000000000000000000000000000;;			return []types.ScsiInitiator{}, fmt.Errorf("error decoding instances response: %s", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// bs, err := ioutil.ReadAll(resp.Body)
0000000000000000000000000000000000000000;;		// if err != nil {
0000000000000000000000000000000000000000;;		// 	return types.ScsiInitiator{}, errors.New("error reading body")
0000000000000000000000000000000000000000;;		// }
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// log.Fatalf("here")
0000000000000000000000000000000000000000;;		// return types.ScsiInitiator{}, nil
0000000000000000000000000000000000000000;;		return scsiInitiators, nil
0000000000000000000000000000000000000000;;	}

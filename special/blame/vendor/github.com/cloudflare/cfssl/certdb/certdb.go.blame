0000000000000000000000000000000000000000;;	package certdb
4719f97477417ada91b80cafeecea0dd05c6fdd6;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CertificateRecord encodes a certificate and its metadata
0000000000000000000000000000000000000000;;	// that will be recorded in a database.
0000000000000000000000000000000000000000;;	type CertificateRecord struct {
0000000000000000000000000000000000000000;;		Serial    string    `db:"serial_number"`
0000000000000000000000000000000000000000;;		AKI       string    `db:"authority_key_identifier"`
0000000000000000000000000000000000000000;;		CALabel   string    `db:"ca_label"`
0000000000000000000000000000000000000000;;		Status    string    `db:"status"`
0000000000000000000000000000000000000000;;		Reason    int       `db:"reason"`
0000000000000000000000000000000000000000;;		Expiry    time.Time `db:"expiry"`
0000000000000000000000000000000000000000;;		RevokedAt time.Time `db:"revoked_at"`
0000000000000000000000000000000000000000;;		PEM       string    `db:"pem"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// OCSPRecord encodes a OCSP response body and its metadata
0000000000000000000000000000000000000000;;	// that will be recorded in a database.
0000000000000000000000000000000000000000;;	type OCSPRecord struct {
0000000000000000000000000000000000000000;;		Serial string    `db:"serial_number"`
0000000000000000000000000000000000000000;;		AKI    string    `db:"authority_key_identifier"`
0000000000000000000000000000000000000000;;		Body   string    `db:"body"`
0000000000000000000000000000000000000000;;		Expiry time.Time `db:"expiry"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Accessor abstracts the CRUD of certdb objects from a DB.
0000000000000000000000000000000000000000;;	type Accessor interface {
0000000000000000000000000000000000000000;;		InsertCertificate(cr CertificateRecord) error
0000000000000000000000000000000000000000;;		GetCertificate(serial, aki string) ([]CertificateRecord, error)
0000000000000000000000000000000000000000;;		GetUnexpiredCertificates() ([]CertificateRecord, error)
0000000000000000000000000000000000000000;;		RevokeCertificate(serial, aki string, reasonCode int) error
0000000000000000000000000000000000000000;;		InsertOCSP(rr OCSPRecord) error
0000000000000000000000000000000000000000;;		GetOCSP(serial, aki string) ([]OCSPRecord, error)
0000000000000000000000000000000000000000;;		GetUnexpiredOCSPs() ([]OCSPRecord, error)
0000000000000000000000000000000000000000;;		UpdateOCSP(serial, aki, body string, expiry time.Time) error
0000000000000000000000000000000000000000;;		UpsertOCSP(serial, aki, body string, expiry time.Time) error
0000000000000000000000000000000000000000;;	}

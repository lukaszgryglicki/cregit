0000000000000000000000000000000000000000;;	// Copyright 2015 The appc Authors
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
8d973c48ce204bda083f5a578278a9cd3743f879;Godeps/_workspace/src/github.com/appc/spec/schema/types/errors.go[Godeps/_workspace/src/github.com/appc/spec/schema/types/errors.go][vendor/github.com/appc/spec/schema/types/errors.go];	
0000000000000000000000000000000000000000;;	package types
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// An ACKindError is returned when the wrong ACKind is set in a manifest
0000000000000000000000000000000000000000;;	type ACKindError string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (e ACKindError) Error() string {
0000000000000000000000000000000000000000;;		return string(e)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func InvalidACKindError(kind ACKind) ACKindError {
0000000000000000000000000000000000000000;;		return ACKindError(fmt.Sprintf("missing or bad ACKind (must be %#v)", kind))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// An ACVersionError is returned when a bad ACVersion is set in a manifest
0000000000000000000000000000000000000000;;	type ACVersionError string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (e ACVersionError) Error() string {
0000000000000000000000000000000000000000;;		return string(e)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// An ACIdentifierError is returned when a bad value is used for an ACIdentifier
0000000000000000000000000000000000000000;;	type ACIdentifierError string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (e ACIdentifierError) Error() string {
0000000000000000000000000000000000000000;;		return string(e)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// An ACNameError is returned when a bad value is used for an ACName
0000000000000000000000000000000000000000;;	type ACNameError string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (e ACNameError) Error() string {
0000000000000000000000000000000000000000;;		return string(e)
0000000000000000000000000000000000000000;;	}

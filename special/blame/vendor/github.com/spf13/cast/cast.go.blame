0000000000000000000000000000000000000000;;	// Copyright Â© 2014 Steve Francia <spf@spf13.com>.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Use of this source code is governed by an MIT-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
1ff933fb12f53e8c83a97bf4a48f852f030855aa;;	
0000000000000000000000000000000000000000;;	package cast
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "time"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToBool(i interface{}) bool {
0000000000000000000000000000000000000000;;		v, _ := ToBoolE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToTime(i interface{}) time.Time {
0000000000000000000000000000000000000000;;		v, _ := ToTimeE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToDuration(i interface{}) time.Duration {
0000000000000000000000000000000000000000;;		v, _ := ToDurationE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToFloat64(i interface{}) float64 {
0000000000000000000000000000000000000000;;		v, _ := ToFloat64E(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToInt64(i interface{}) int64 {
0000000000000000000000000000000000000000;;		v, _ := ToInt64E(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToInt(i interface{}) int {
0000000000000000000000000000000000000000;;		v, _ := ToIntE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToString(i interface{}) string {
0000000000000000000000000000000000000000;;		v, _ := ToStringE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToStringMapString(i interface{}) map[string]string {
0000000000000000000000000000000000000000;;		v, _ := ToStringMapStringE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToStringMapStringSlice(i interface{}) map[string][]string {
0000000000000000000000000000000000000000;;		v, _ := ToStringMapStringSliceE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToStringMapBool(i interface{}) map[string]bool {
0000000000000000000000000000000000000000;;		v, _ := ToStringMapBoolE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToStringMap(i interface{}) map[string]interface{} {
0000000000000000000000000000000000000000;;		v, _ := ToStringMapE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToSlice(i interface{}) []interface{} {
0000000000000000000000000000000000000000;;		v, _ := ToSliceE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToStringSlice(i interface{}) []string {
0000000000000000000000000000000000000000;;		v, _ := ToStringSliceE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func ToIntSlice(i interface{}) []int {
0000000000000000000000000000000000000000;;		v, _ := ToIntSliceE(i)
0000000000000000000000000000000000000000;;		return v
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package viper
1ff933fb12f53e8c83a97bf4a48f852f030855aa;;	
0000000000000000000000000000000000000000;;	import "github.com/spf13/pflag"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// FlagValueSet is an interface that users can implement
0000000000000000000000000000000000000000;;	// to bind a set of flags to viper.
0000000000000000000000000000000000000000;;	type FlagValueSet interface {
0000000000000000000000000000000000000000;;		VisitAll(fn func(FlagValue))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// FlagValue is an interface that users can implement
0000000000000000000000000000000000000000;;	// to bind different flags to viper.
0000000000000000000000000000000000000000;;	type FlagValue interface {
0000000000000000000000000000000000000000;;		HasChanged() bool
0000000000000000000000000000000000000000;;		Name() string
0000000000000000000000000000000000000000;;		ValueString() string
0000000000000000000000000000000000000000;;		ValueType() string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// pflagValueSet is a wrapper around *pflag.ValueSet
0000000000000000000000000000000000000000;;	// that implements FlagValueSet.
0000000000000000000000000000000000000000;;	type pflagValueSet struct {
0000000000000000000000000000000000000000;;		flags *pflag.FlagSet
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// VisitAll iterates over all *pflag.Flag inside the *pflag.FlagSet.
0000000000000000000000000000000000000000;;	func (p pflagValueSet) VisitAll(fn func(flag FlagValue)) {
0000000000000000000000000000000000000000;;		p.flags.VisitAll(func(flag *pflag.Flag) {
0000000000000000000000000000000000000000;;			fn(pflagValue{flag})
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// pflagValue is a wrapper aroung *pflag.flag
0000000000000000000000000000000000000000;;	// that implements FlagValue
0000000000000000000000000000000000000000;;	type pflagValue struct {
0000000000000000000000000000000000000000;;		flag *pflag.Flag
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// HasChanges returns whether the flag has changes or not.
0000000000000000000000000000000000000000;;	func (p pflagValue) HasChanged() bool {
0000000000000000000000000000000000000000;;		return p.flag.Changed
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Name returns the name of the flag.
0000000000000000000000000000000000000000;;	func (p pflagValue) Name() string {
0000000000000000000000000000000000000000;;		return p.flag.Name
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ValueString returns the value of the flag as a string.
0000000000000000000000000000000000000000;;	func (p pflagValue) ValueString() string {
0000000000000000000000000000000000000000;;		return p.flag.Value.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ValueType returns the type of the flag as a string.
0000000000000000000000000000000000000000;;	func (p pflagValue) ValueType() string {
0000000000000000000000000000000000000000;;		return p.flag.Value.Type()
0000000000000000000000000000000000000000;;	}

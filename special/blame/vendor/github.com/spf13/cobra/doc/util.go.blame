0000000000000000000000000000000000000000;;	// Copyright 2015 Red Hat Inc. All rights reserved.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	// http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
92b31656445fa19f3dada8d222903a554478c1d6;Godeps/_workspace/src/github.com/spf13/cobra/doc_util.go[Godeps/_workspace/src/github.com/spf13/cobra/doc_util.go][vendor/github.com/spf13/cobra/doc/util.go];	
0000000000000000000000000000000000000000;;	package doc
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "github.com/spf13/cobra"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Test to see if we have a reason to print See Also information in docs
0000000000000000000000000000000000000000;;	// Basically this is a test for a parent commend or a subcommand which is
0000000000000000000000000000000000000000;;	// both not deprecated and not the autogenerated help command.
0000000000000000000000000000000000000000;;	func hasSeeAlso(cmd *cobra.Command) bool {
0000000000000000000000000000000000000000;;		if cmd.HasParent() {
0000000000000000000000000000000000000000;;			return true
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		for _, c := range cmd.Commands() {
0000000000000000000000000000000000000000;;			if !c.IsAvailableCommand() || c.IsHelpCommand() {
0000000000000000000000000000000000000000;;				continue
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			return true
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type byName []*cobra.Command
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s byName) Len() int           { return len(s) }
0000000000000000000000000000000000000000;;	func (s byName) Swap(i, j int)      { s[i], s[j] = s[j], s[i] }
0000000000000000000000000000000000000000;;	func (s byName) Less(i, j int) bool { return s[i].Name() < s[j].Name() }

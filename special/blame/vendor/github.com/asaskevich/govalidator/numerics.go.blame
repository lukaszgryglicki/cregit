0000000000000000000000000000000000000000;;	package govalidator
20a23b516161fc6e4e2d00ed067520ad63629162;;	
0000000000000000000000000000000000000000;;	import "math"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Abs returns absolute value of number
0000000000000000000000000000000000000000;;	func Abs(value float64) float64 {
0000000000000000000000000000000000000000;;		return value * Sign(value)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Sign returns signum of number: 1 in case of value > 0, -1 in case of value < 0, 0 otherwise
0000000000000000000000000000000000000000;;	func Sign(value float64) float64 {
0000000000000000000000000000000000000000;;		if value > 0 {
0000000000000000000000000000000000000000;;			return 1
0000000000000000000000000000000000000000;;		} else if value < 0 {
0000000000000000000000000000000000000000;;			return -1
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			return 0
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsNegative returns true if value < 0
0000000000000000000000000000000000000000;;	func IsNegative(value float64) bool {
0000000000000000000000000000000000000000;;		return value < 0
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsPositive returns true if value > 0
0000000000000000000000000000000000000000;;	func IsPositive(value float64) bool {
0000000000000000000000000000000000000000;;		return value > 0
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsNonNegative returns true if value >= 0
0000000000000000000000000000000000000000;;	func IsNonNegative(value float64) bool {
0000000000000000000000000000000000000000;;		return value >= 0
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsNonPositive returns true if value <= 0
0000000000000000000000000000000000000000;;	func IsNonPositive(value float64) bool {
0000000000000000000000000000000000000000;;		return value <= 0
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// InRange returns true if value lies between left and right border
0000000000000000000000000000000000000000;;	func InRange(value, left, right float64) bool {
0000000000000000000000000000000000000000;;		if left > right {
0000000000000000000000000000000000000000;;			left, right = right, left
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return value >= left && value <= right
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsWhole returns true if value is whole number
0000000000000000000000000000000000000000;;	func IsWhole(value float64) bool {
0000000000000000000000000000000000000000;;		return Abs(math.Remainder(value, 1)) == 0
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsNatural returns true if value is natural number (positive and whole)
0000000000000000000000000000000000000000;;	func IsNatural(value float64) bool {
0000000000000000000000000000000000000000;;		return IsWhole(value) && IsPositive(value)
0000000000000000000000000000000000000000;;	}

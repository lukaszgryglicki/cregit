0000000000000000000000000000000000000000;;	package govalidator
20a23b516161fc6e4e2d00ed067520ad63629162;;	
0000000000000000000000000000000000000000;;	import "regexp"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Basic regular expressions for validating strings
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		Email          string = "^(((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])|(\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])|(([a-zA-Z]|\\d|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])([a-zA-Z]|\\d|-|\\.|_|~|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])*([a-zA-Z]|\\d|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])))\\.)+(([a-zA-Z]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])|(([a-zA-Z]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])([a-zA-Z]|\\d|-|\\.|_|~|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])*([a-zA-Z]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])))\\.?$"
0000000000000000000000000000000000000000;;		CreditCard     string = "^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$"
0000000000000000000000000000000000000000;;		ISBN10         string = "^(?:[0-9]{9}X|[0-9]{10})$"
0000000000000000000000000000000000000000;;		ISBN13         string = "^(?:[0-9]{13})$"
0000000000000000000000000000000000000000;;		UUID3          string = "^[0-9a-f]{8}-[0-9a-f]{4}-3[0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$"
0000000000000000000000000000000000000000;;		UUID4          string = "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
0000000000000000000000000000000000000000;;		UUID5          string = "^[0-9a-f]{8}-[0-9a-f]{4}-5[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
0000000000000000000000000000000000000000;;		UUID           string = "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
0000000000000000000000000000000000000000;;		Alpha          string = "^[a-zA-Z]+$"
0000000000000000000000000000000000000000;;		Alphanumeric   string = "^[a-zA-Z0-9]+$"
0000000000000000000000000000000000000000;;		Numeric        string = "^[-+]?[0-9]+$"
0000000000000000000000000000000000000000;;		Int            string = "^(?:[-+]?(?:0|[1-9][0-9]*))$"
0000000000000000000000000000000000000000;;		Float          string = "^(?:[-+]?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$"
0000000000000000000000000000000000000000;;		Hexadecimal    string = "^[0-9a-fA-F]+$"
0000000000000000000000000000000000000000;;		Hexcolor       string = "^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$"
0000000000000000000000000000000000000000;;		RGBcolor       string = "^rgb\\(\\s*(0|[1-9]\\d?|1\\d\\d?|2[0-4]\\d|25[0-5])\\s*,\\s*(0|[1-9]\\d?|1\\d\\d?|2[0-4]\\d|25[0-5])\\s*,\\s*(0|[1-9]\\d?|1\\d\\d?|2[0-4]\\d|25[0-5])\\s*\\)$"
0000000000000000000000000000000000000000;;		ASCII          string = "^[\x00-\x7F]+$"
0000000000000000000000000000000000000000;;		Multibyte      string = "[^\x00-\x7F]"
0000000000000000000000000000000000000000;;		FullWidth      string = "[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]"
0000000000000000000000000000000000000000;;		HalfWidth      string = "[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]"
0000000000000000000000000000000000000000;;		Base64         string = "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=|[A-Za-z0-9+\\/]{4})$"
0000000000000000000000000000000000000000;;		PrintableASCII string = "^[\x20-\x7E]+$"
0000000000000000000000000000000000000000;;		DataURI        string = "^data:.+\\/(.+);base64$"
0000000000000000000000000000000000000000;;		Latitude       string = "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$"
0000000000000000000000000000000000000000;;		Longitude      string = "^[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$"
0000000000000000000000000000000000000000;;		DNSName        string = `^([a-zA-Z0-9]{1}[a-zA-Z0-9_-]{1,62}){1}(\.[a-zA-Z0-9]{1}[a-zA-Z0-9_-]{1,62})*$`
0000000000000000000000000000000000000000;;		URL            string = `^((ftp|https?):\/\/)?(\S+(:\S*)?@)?((([1-9]\d?|1\d\d|2[01]\d|22[0-3])(\.(1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.([0-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(([a-zA-Z0-9]([a-zA-Z0-9-]+)?[a-zA-Z0-9]([-\.][a-zA-Z0-9]+)*)|((www\.)?))?(([a-zA-Z\x{00a1}-\x{ffff}0-9]+-?-?)*[a-zA-Z\x{00a1}-\x{ffff}0-9]+)(?:\.([a-zA-Z\x{00a1}-\x{ffff}]{1,}))?))(:(\d{1,5}))?((\/|\?|#)[^\s]*)?$`
0000000000000000000000000000000000000000;;		SSN            string = `^\d{3}[- ]?\d{2}[- ]?\d{4}$`
0000000000000000000000000000000000000000;;		WinPath        string = `^[a-zA-Z]:\\(?:[^\\/:*?"<>|\r\n]+\\)*[^\\/:*?"<>|\r\n]*$`
0000000000000000000000000000000000000000;;		UnixPath       string = `^((?:\/[a-zA-Z0-9\.\:]+(?:_[a-zA-Z0-9\:\.]+)*(?:\-[\:a-zA-Z0-9\.]+)*)+\/?)$`
0000000000000000000000000000000000000000;;		Semver         string = "^v?(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(-(0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\+[0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+)*)?$"
0000000000000000000000000000000000000000;;		tagName        string = "valid"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Used by IsFilePath func
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		// Unknown is unresolved OS type
0000000000000000000000000000000000000000;;		Unknown = iota
0000000000000000000000000000000000000000;;		// Win is Windows type
0000000000000000000000000000000000000000;;		Win
0000000000000000000000000000000000000000;;		// Unix is *nix OS types
0000000000000000000000000000000000000000;;		Unix
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		rxEmail          = regexp.MustCompile(Email)
0000000000000000000000000000000000000000;;		rxCreditCard     = regexp.MustCompile(CreditCard)
0000000000000000000000000000000000000000;;		rxISBN10         = regexp.MustCompile(ISBN10)
0000000000000000000000000000000000000000;;		rxISBN13         = regexp.MustCompile(ISBN13)
0000000000000000000000000000000000000000;;		rxUUID3          = regexp.MustCompile(UUID3)
0000000000000000000000000000000000000000;;		rxUUID4          = regexp.MustCompile(UUID4)
0000000000000000000000000000000000000000;;		rxUUID5          = regexp.MustCompile(UUID5)
0000000000000000000000000000000000000000;;		rxUUID           = regexp.MustCompile(UUID)
0000000000000000000000000000000000000000;;		rxAlpha          = regexp.MustCompile(Alpha)
0000000000000000000000000000000000000000;;		rxAlphanumeric   = regexp.MustCompile(Alphanumeric)
0000000000000000000000000000000000000000;;		rxNumeric        = regexp.MustCompile(Numeric)
0000000000000000000000000000000000000000;;		rxInt            = regexp.MustCompile(Int)
0000000000000000000000000000000000000000;;		rxFloat          = regexp.MustCompile(Float)
0000000000000000000000000000000000000000;;		rxHexadecimal    = regexp.MustCompile(Hexadecimal)
0000000000000000000000000000000000000000;;		rxHexcolor       = regexp.MustCompile(Hexcolor)
0000000000000000000000000000000000000000;;		rxRGBcolor       = regexp.MustCompile(RGBcolor)
0000000000000000000000000000000000000000;;		rxASCII          = regexp.MustCompile(ASCII)
0000000000000000000000000000000000000000;;		rxPrintableASCII = regexp.MustCompile(PrintableASCII)
0000000000000000000000000000000000000000;;		rxMultibyte      = regexp.MustCompile(Multibyte)
0000000000000000000000000000000000000000;;		rxFullWidth      = regexp.MustCompile(FullWidth)
0000000000000000000000000000000000000000;;		rxHalfWidth      = regexp.MustCompile(HalfWidth)
0000000000000000000000000000000000000000;;		rxBase64         = regexp.MustCompile(Base64)
0000000000000000000000000000000000000000;;		rxDataURI        = regexp.MustCompile(DataURI)
0000000000000000000000000000000000000000;;		rxLatitude       = regexp.MustCompile(Latitude)
0000000000000000000000000000000000000000;;		rxLongitude      = regexp.MustCompile(Longitude)
0000000000000000000000000000000000000000;;		rxDNSName        = regexp.MustCompile(DNSName)
0000000000000000000000000000000000000000;;		rxURL            = regexp.MustCompile(URL)
0000000000000000000000000000000000000000;;		rxSSN            = regexp.MustCompile(SSN)
0000000000000000000000000000000000000000;;		rxWinPath        = regexp.MustCompile(WinPath)
0000000000000000000000000000000000000000;;		rxUnixPath       = regexp.MustCompile(UnixPath)
0000000000000000000000000000000000000000;;		rxSemver         = regexp.MustCompile(Semver)
0000000000000000000000000000000000000000;;	)

0000000000000000000000000000000000000000;;	package auth
ddb91896b60df07452d87846c6343678b1c48dde;Godeps/_workspace/src/github.com/abbot/go-http-auth/misc.go[Godeps/_workspace/src/github.com/abbot/go-http-auth/misc.go][vendor/github.com/abbot/go-http-auth/misc.go];	
0000000000000000000000000000000000000000;;	import "encoding/base64"
0000000000000000000000000000000000000000;;	import "crypto/md5"
0000000000000000000000000000000000000000;;	import "crypto/rand"
0000000000000000000000000000000000000000;;	import "fmt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	 Return a random 16-byte base64 alphabet string
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	func RandomKey() string {
0000000000000000000000000000000000000000;;		k := make([]byte, 12)
0000000000000000000000000000000000000000;;		for bytes := 0; bytes < len(k); {
0000000000000000000000000000000000000000;;			n, err := rand.Read(k[bytes:])
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				panic("rand.Read() failed")
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			bytes += n
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return base64.StdEncoding.EncodeToString(k)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	 H function for MD5 algorithm (returns a lower-case hex MD5 digest)
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	func H(data string) string {
0000000000000000000000000000000000000000;;		digest := md5.New()
0000000000000000000000000000000000000000;;		digest.Write([]byte(data))
0000000000000000000000000000000000000000;;		return fmt.Sprintf("%x", digest.Sum(nil))
0000000000000000000000000000000000000000;;	}

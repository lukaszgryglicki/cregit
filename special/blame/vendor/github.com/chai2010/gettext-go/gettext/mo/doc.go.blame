0000000000000000000000000000000000000000;;	// Copyright 2013 ChaiShushan <chaishushan{AT}gmail.com>. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
64247eb69ec8b8707eb5c766a35ff8a3cd455896;;	
0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Package mo provides support for reading and writing GNU MO file.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Examples:
0000000000000000000000000000000000000000;;		import (
0000000000000000000000000000000000000000;;			"github.com/chai2010/gettext-go/gettext/mo"
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		func main() {
0000000000000000000000000000000000000000;;			moFile, err := mo.Load("test.mo")
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				log.Fatal(err)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			fmt.Printf("%v", moFile)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	GNU MO file struct:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		        byte
0000000000000000000000000000000000000000;;		             +------------------------------------------+
0000000000000000000000000000000000000000;;		          0  | magic number = 0x950412de                |
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		          4  | file format revision = 0                 |
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		          8  | number of strings                        |  == N
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		         12  | offset of table with original strings    |  == O
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		         16  | offset of table with translation strings |  == T
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		         20  | size of hashing table                    |  == S
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		         24  | offset of hashing table                  |  == H
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		             .                                          .
0000000000000000000000000000000000000000;;		             .    (possibly more entries later)         .
0000000000000000000000000000000000000000;;		             .                                          .
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		          O  | length & offset 0th string  ----------------.
0000000000000000000000000000000000000000;;		      O + 8  | length & offset 1st string  ------------------.
0000000000000000000000000000000000000000;;		              ...                                    ...   | |
0000000000000000000000000000000000000000;;		O + ((N-1)*8)| length & offset (N-1)th string           |  | |
0000000000000000000000000000000000000000;;		             |                                          |  | |
0000000000000000000000000000000000000000;;		          T  | length & offset 0th translation  ---------------.
0000000000000000000000000000000000000000;;		      T + 8  | length & offset 1st translation  -----------------.
0000000000000000000000000000000000000000;;		              ...                                    ...   | | | |
0000000000000000000000000000000000000000;;		T + ((N-1)*8)| length & offset (N-1)th translation      |  | | | |
0000000000000000000000000000000000000000;;		             |                                          |  | | | |
0000000000000000000000000000000000000000;;		          H  | start hash table                         |  | | | |
0000000000000000000000000000000000000000;;		              ...                                    ...   | | | |
0000000000000000000000000000000000000000;;		  H + S * 4  | end hash table                           |  | | | |
0000000000000000000000000000000000000000;;		             |                                          |  | | | |
0000000000000000000000000000000000000000;;		             | NUL terminated 0th string  <----------------' | | |
0000000000000000000000000000000000000000;;		             |                                          |    | | |
0000000000000000000000000000000000000000;;		             | NUL terminated 1st string  <------------------' | |
0000000000000000000000000000000000000000;;		             |                                          |      | |
0000000000000000000000000000000000000000;;		              ...                                    ...       | |
0000000000000000000000000000000000000000;;		             |                                          |      | |
0000000000000000000000000000000000000000;;		             | NUL terminated 0th translation  <---------------' |
0000000000000000000000000000000000000000;;		             |                                          |        |
0000000000000000000000000000000000000000;;		             | NUL terminated 1st translation  <-----------------'
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		              ...                                    ...
0000000000000000000000000000000000000000;;		             |                                          |
0000000000000000000000000000000000000000;;		             +------------------------------------------+
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The GNU MO file specification is at
0000000000000000000000000000000000000000;;	http://www.gnu.org/software/gettext/manual/html_node/MO-Files.html.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	package mo

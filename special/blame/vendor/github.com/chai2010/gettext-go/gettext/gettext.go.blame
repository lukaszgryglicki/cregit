0000000000000000000000000000000000000000;;	// Copyright 2013 ChaiShushan <chaishushan{AT}gmail.com>. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
64247eb69ec8b8707eb5c766a35ff8a3cd455896;;	
0000000000000000000000000000000000000000;;	package gettext
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		defaultManager = newDomainManager()
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		DefaultLocale = getDefaultLocale() // use $(LC_MESSAGES) or $(LANG) or "default"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLocale sets and queries the program's current locale.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If the locale is not empty string, set the new local.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If the locale is empty string, don't change anything.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns is the current locale.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	SetLocale("")      // get locale: return DefaultLocale
0000000000000000000000000000000000000000;;	//	SetLocale("zh_CN") // set locale: return zh_CN
0000000000000000000000000000000000000000;;	//	SetLocale("")      // get locale: return zh_CN
0000000000000000000000000000000000000000;;	func SetLocale(locale string) string {
0000000000000000000000000000000000000000;;		return defaultManager.SetLocale(locale)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// BindTextdomain sets and queries program's domains.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If the domain and path are all not empty string, bind the new domain.
0000000000000000000000000000000000000000;;	// If the domain already exists, return error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If the domain is not empty string, but the path is the empty string,
0000000000000000000000000000000000000000;;	// delete the domain.
0000000000000000000000000000000000000000;;	// If the domain don't exists, return error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If the domain and the path are all empty string, don't change anything.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns is the all bind domains.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	BindTextdomain("poedit", "local", nil) // bind "poedit" domain
0000000000000000000000000000000000000000;;	//	BindTextdomain("", "", nil)            // return all domains
0000000000000000000000000000000000000000;;	//	BindTextdomain("poedit", "", nil)      // delete "poedit" domain
0000000000000000000000000000000000000000;;	//	BindTextdomain("", "", nil)            // return all domains
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Use zip file:
0000000000000000000000000000000000000000;;	//	BindTextdomain("poedit", "local.zip", nil)     // bind "poedit" domain
0000000000000000000000000000000000000000;;	//	BindTextdomain("poedit", "local.zip", zipData) // bind "poedit" domain
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	func BindTextdomain(domain, path string, zipData []byte) (domains, paths []string) {
0000000000000000000000000000000000000000;;		return defaultManager.Bind(domain, path, zipData)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Textdomain sets and retrieves the current message domain.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If the domain is not empty string, set the new domains.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If the domain is empty string, don't change anything.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns is the all used domains.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	Textdomain("poedit") // set domain: poedit
0000000000000000000000000000000000000000;;	//	Textdomain("")       // get domain: return poedit
0000000000000000000000000000000000000000;;	func Textdomain(domain string) string {
0000000000000000000000000000000000000000;;		return defaultManager.SetDomain(domain)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Gettext attempt to translate a text string into the user's native language,
0000000000000000000000000000000000000000;;	// by looking up the translation in a message catalog.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// It use the caller's function name as the msgctxt.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		msg := gettext.Gettext("Hello") // msgctxt is "some/package/name.Foo"
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func Gettext(msgid string) string {
0000000000000000000000000000000000000000;;		return PGettext(callerName(2), msgid)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Getdata attempt to translate a resource file into the user's native language,
0000000000000000000000000000000000000000;;	// by looking up the translation in a message catalog.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		Textdomain("hello")
0000000000000000000000000000000000000000;;	//		BindTextdomain("hello", "local.zip", nilOrZipData)
0000000000000000000000000000000000000000;;	//		poems := gettext.Getdata("poems.txt")
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func Getdata(name string) []byte {
0000000000000000000000000000000000000000;;		return defaultManager.Getdata(name)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NGettext attempt to translate a text string into the user's native language,
0000000000000000000000000000000000000000;;	// by looking up the appropriate plural form of the translation in a message
0000000000000000000000000000000000000000;;	// catalog.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// It use the caller's function name as the msgctxt.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		msg := gettext.NGettext("%d people", "%d peoples", 2)
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func NGettext(msgid, msgidPlural string, n int) string {
0000000000000000000000000000000000000000;;		return PNGettext(callerName(2), msgid, msgidPlural, n)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PGettext attempt to translate a text string into the user's native language,
0000000000000000000000000000000000000000;;	// by looking up the translation in a message catalog.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		msg := gettext.PGettext("gettext-go.example", "Hello") // msgctxt is "gettext-go.example"
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func PGettext(msgctxt, msgid string) string {
0000000000000000000000000000000000000000;;		return PNGettext(msgctxt, msgid, "", 0)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// PNGettext attempt to translate a text string into the user's native language,
0000000000000000000000000000000000000000;;	// by looking up the appropriate plural form of the translation in a message
0000000000000000000000000000000000000000;;	// catalog.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		msg := gettext.PNGettext("gettext-go.example", "%d people", "%d peoples", 2)
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func PNGettext(msgctxt, msgid, msgidPlural string, n int) string {
0000000000000000000000000000000000000000;;		return defaultManager.PNGettext(msgctxt, msgid, msgidPlural, n)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DGettext like Gettext(), but looking up the message in the specified domain.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		msg := gettext.DGettext("poedit", "Hello")
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func DGettext(domain, msgid string) string {
0000000000000000000000000000000000000000;;		return DPGettext(domain, callerName(2), msgid)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DNGettext like NGettext(), but looking up the message in the specified domain.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		msg := gettext.PNGettext("poedit", "gettext-go.example", "%d people", "%d peoples", 2)
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func DNGettext(domain, msgid, msgidPlural string, n int) string {
0000000000000000000000000000000000000000;;		return DPNGettext(domain, callerName(2), msgid, msgidPlural, n)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DPGettext like PGettext(), but looking up the message in the specified domain.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		msg := gettext.DPGettext("poedit", "gettext-go.example", "Hello")
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func DPGettext(domain, msgctxt, msgid string) string {
0000000000000000000000000000000000000000;;		return DPNGettext(domain, msgctxt, msgid, "", 0)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DPNGettext like PNGettext(), but looking up the message in the specified domain.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		msg := gettext.DPNGettext("poedit", "gettext-go.example", "%d people", "%d peoples", 2)
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func DPNGettext(domain, msgctxt, msgid, msgidPlural string, n int) string {
0000000000000000000000000000000000000000;;		return defaultManager.DPNGettext(domain, msgctxt, msgid, msgidPlural, n)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DGetdata like Getdata(), but looking up the resource in the specified domain.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Examples:
0000000000000000000000000000000000000000;;	//	func Foo() {
0000000000000000000000000000000000000000;;	//		msg := gettext.DGetdata("hello", "poems.txt")
0000000000000000000000000000000000000000;;	//	}
0000000000000000000000000000000000000000;;	func DGetdata(domain, name string) []byte {
0000000000000000000000000000000000000000;;		return defaultManager.DGetdata(domain, name)
0000000000000000000000000000000000000000;;	}

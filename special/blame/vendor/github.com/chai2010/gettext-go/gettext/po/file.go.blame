0000000000000000000000000000000000000000;;	// Copyright 2013 ChaiShushan <chaishushan{AT}gmail.com>. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
64247eb69ec8b8707eb5c766a35ff8a3cd455896;;	
0000000000000000000000000000000000000000;;	package po
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"bytes"
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"io/ioutil"
0000000000000000000000000000000000000000;;		"sort"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// File represents an PO File.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See http://www.gnu.org/software/gettext/manual/html_node/PO-Files.html
0000000000000000000000000000000000000000;;	type File struct {
0000000000000000000000000000000000000000;;		MimeHeader Header
0000000000000000000000000000000000000000;;		Messages   []Message
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Load loads a named po file.
0000000000000000000000000000000000000000;;	func Load(name string) (*File, error) {
0000000000000000000000000000000000000000;;		data, err := ioutil.ReadFile(name)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return LoadData(data)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// LoadData loads po file format data.
0000000000000000000000000000000000000000;;	func LoadData(data []byte) (*File, error) {
0000000000000000000000000000000000000000;;		r := newLineReader(string(data))
0000000000000000000000000000000000000000;;		var file File
0000000000000000000000000000000000000000;;		for {
0000000000000000000000000000000000000000;;			var msg Message
0000000000000000000000000000000000000000;;			if err := msg.readPoEntry(r); err != nil {
0000000000000000000000000000000000000000;;				if err == io.EOF {
0000000000000000000000000000000000000000;;					return &file, nil
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;				return nil, err
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			if msg.MsgId == "" {
0000000000000000000000000000000000000000;;				file.MimeHeader.parseHeader(&msg)
0000000000000000000000000000000000000000;;				continue
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			file.Messages = append(file.Messages, msg)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Save saves a po file.
0000000000000000000000000000000000000000;;	func (f *File) Save(name string) error {
0000000000000000000000000000000000000000;;		return ioutil.WriteFile(name, []byte(f.String()), 0666)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Save returns a po file format data.
0000000000000000000000000000000000000000;;	func (f *File) Data() []byte {
0000000000000000000000000000000000000000;;		// sort the massge as ReferenceFile/ReferenceLine field
0000000000000000000000000000000000000000;;		var messages []Message
0000000000000000000000000000000000000000;;		messages = append(messages, f.Messages...)
0000000000000000000000000000000000000000;;		sort.Sort(byMessages(messages))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		var buf bytes.Buffer
0000000000000000000000000000000000000000;;		fmt.Fprintf(&buf, "%s\n", f.MimeHeader.String())
0000000000000000000000000000000000000000;;		for i := 0; i < len(messages); i++ {
0000000000000000000000000000000000000000;;			fmt.Fprintf(&buf, "%s\n", messages[i].String())
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return buf.Bytes()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the po format file string.
0000000000000000000000000000000000000000;;	func (f *File) String() string {
0000000000000000000000000000000000000000;;		return string(f.Data())
0000000000000000000000000000000000000000;;	}

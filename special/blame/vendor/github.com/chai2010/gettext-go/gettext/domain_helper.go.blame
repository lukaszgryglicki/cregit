0000000000000000000000000000000000000000;;	// Copyright 2013 ChaiShushan <chaishushan{AT}gmail.com>. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
64247eb69ec8b8707eb5c766a35ff8a3cd455896;;	
0000000000000000000000000000000000000000;;	package gettext
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (p *domainManager) bindDomainTranslators(domain, path string, data []byte) {
0000000000000000000000000000000000000000;;		if _, ok := p.domainMap[domain]; ok {
0000000000000000000000000000000000000000;;			p.deleteDomain(domain) // delete old domain
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		fs := newFileSystem(path, data)
0000000000000000000000000000000000000000;;		for locale, _ := range fs.LocaleMap {
0000000000000000000000000000000000000000;;			trMapKey := p.makeTrMapKey(domain, locale)
0000000000000000000000000000000000000000;;			if data, err := fs.LoadMessagesFile(domain, locale, ".mo"); err == nil {
0000000000000000000000000000000000000000;;				p.trTextMap[trMapKey], _ = newMoTranslator(
0000000000000000000000000000000000000000;;					fmt.Sprintf("%s_%s.mo", domain, locale),
0000000000000000000000000000000000000000;;					data,
0000000000000000000000000000000000000000;;				)
0000000000000000000000000000000000000000;;				continue
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			if data, err := fs.LoadMessagesFile(domain, locale, ".po"); err == nil {
0000000000000000000000000000000000000000;;				p.trTextMap[trMapKey], _ = newPoTranslator(
0000000000000000000000000000000000000000;;					fmt.Sprintf("%s_%s.po", domain, locale),
0000000000000000000000000000000000000000;;					data,
0000000000000000000000000000000000000000;;				)
0000000000000000000000000000000000000000;;				continue
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			p.trTextMap[p.makeTrMapKey(domain, locale)] = nilTranslator
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		p.domainMap[domain] = fs
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (p *domainManager) deleteDomain(domain string) {
0000000000000000000000000000000000000000;;		if _, ok := p.domainMap[domain]; !ok {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		// delete all mo files
0000000000000000000000000000000000000000;;		trMapKeyPrefix := p.makeTrMapKey(domain, "")
0000000000000000000000000000000000000000;;		for k, _ := range p.trTextMap {
0000000000000000000000000000000000000000;;			if strings.HasPrefix(k, trMapKeyPrefix) {
0000000000000000000000000000000000000000;;				delete(p.trTextMap, k)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		delete(p.domainMap, domain)
0000000000000000000000000000000000000000;;	}

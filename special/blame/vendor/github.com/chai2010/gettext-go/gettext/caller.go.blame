0000000000000000000000000000000000000000;;	// Copyright 2013 ChaiShushan <chaishushan{AT}gmail.com>. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
64247eb69ec8b8707eb5c766a35ff8a3cd455896;;	
0000000000000000000000000000000000000000;;	package gettext
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"regexp"
0000000000000000000000000000000000000000;;		"runtime"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		reInit    = regexp.MustCompile(`init·\d+$`) // main.init·1
0000000000000000000000000000000000000000;;		reClosure = regexp.MustCompile(`func·\d+$`) // main.func·001
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// caller types:
0000000000000000000000000000000000000000;;	// runtime.goexit
0000000000000000000000000000000000000000;;	// runtime.main
0000000000000000000000000000000000000000;;	// main.init
0000000000000000000000000000000000000000;;	// main.main
0000000000000000000000000000000000000000;;	// main.init·1 -> main.init
0000000000000000000000000000000000000000;;	// main.func·001 -> main.func
0000000000000000000000000000000000000000;;	// code.google.com/p/gettext-go/gettext.TestCallerName
0000000000000000000000000000000000000000;;	// ...
0000000000000000000000000000000000000000;;	func callerName(skip int) string {
0000000000000000000000000000000000000000;;		pc, _, _, ok := runtime.Caller(skip)
0000000000000000000000000000000000000000;;		if !ok {
0000000000000000000000000000000000000000;;			return ""
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		name := runtime.FuncForPC(pc).Name()
0000000000000000000000000000000000000000;;		if reInit.MatchString(name) {
0000000000000000000000000000000000000000;;			return reInit.ReplaceAllString(name, "init")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if reClosure.MatchString(name) {
0000000000000000000000000000000000000000;;			return reClosure.ReplaceAllString(name, "func")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return name
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Based on ssh/terminal:
0000000000000000000000000000000000000000;;	// Copyright 2011 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
fb7a692d29014e605484d1379339c3bb1445f46a;Godeps/_workspace/src/github.com/Sirupsen/logrus/terminal_notwindows.go[Godeps/_workspace/src/github.com/Sirupsen/logrus/terminal_notwindows.go][vendor/github.com/Sirupsen/logrus/terminal_notwindows.go];	
0000000000000000000000000000000000000000;;	// +build linux,!appengine darwin freebsd
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package logrus
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsTerminal returns true if the given file descriptor is a terminal.
0000000000000000000000000000000000000000;;	func IsTerminal() bool {
0000000000000000000000000000000000000000;;		fd := syscall.Stdout
0000000000000000000000000000000000000000;;		var termios Termios
0000000000000000000000000000000000000000;;		_, _, err := syscall.Syscall6(syscall.SYS_IOCTL, uintptr(fd), ioctlReadTermios, uintptr(unsafe.Pointer(&termios)), 0, 0, 0)
0000000000000000000000000000000000000000;;		return err == 0
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package logrus
fb7a692d29014e605484d1379339c3bb1445f46a;Godeps/_workspace/src/github.com/Sirupsen/logrus/exported.go[Godeps/_workspace/src/github.com/Sirupsen/logrus/exported.go][vendor/github.com/Sirupsen/logrus/exported.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		// std is the name of the standard logger in stdlib `log`
0000000000000000000000000000000000000000;;		std = New()
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetOutput sets the standard logger output.
0000000000000000000000000000000000000000;;	func SetOutput(out io.Writer) {
0000000000000000000000000000000000000000;;		std.mu.Lock()
0000000000000000000000000000000000000000;;		defer std.mu.Unlock()
0000000000000000000000000000000000000000;;		std.Out = out
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetFormatter sets the standard logger formatter.
0000000000000000000000000000000000000000;;	func SetFormatter(formatter Formatter) {
0000000000000000000000000000000000000000;;		std.mu.Lock()
0000000000000000000000000000000000000000;;		defer std.mu.Unlock()
0000000000000000000000000000000000000000;;		std.Formatter = formatter
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLevel sets the standard logger level.
0000000000000000000000000000000000000000;;	func SetLevel(level Level) {
0000000000000000000000000000000000000000;;		std.mu.Lock()
0000000000000000000000000000000000000000;;		defer std.mu.Unlock()
0000000000000000000000000000000000000000;;		std.Level = level
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GetLevel returns the standard logger level.
0000000000000000000000000000000000000000;;	func GetLevel() Level {
0000000000000000000000000000000000000000;;		return std.Level
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AddHook adds a hook to the standard logger hooks.
0000000000000000000000000000000000000000;;	func AddHook(hook Hook) {
0000000000000000000000000000000000000000;;		std.mu.Lock()
0000000000000000000000000000000000000000;;		defer std.mu.Unlock()
0000000000000000000000000000000000000000;;		std.Hooks.Add(hook)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// WithField creates an entry from the standard logger and adds a field to
0000000000000000000000000000000000000000;;	// it. If you want multiple fields, use `WithFields`.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note that it doesn't log until you call Debug, Print, Info, Warn, Fatal
0000000000000000000000000000000000000000;;	// or Panic on the Entry it returns.
0000000000000000000000000000000000000000;;	func WithField(key string, value interface{}) *Entry {
0000000000000000000000000000000000000000;;		return std.WithField(key, value)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// WithFields creates an entry from the standard logger and adds multiple
0000000000000000000000000000000000000000;;	// fields to it. This is simply a helper for `WithField`, invoking it
0000000000000000000000000000000000000000;;	// once for each field.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note that it doesn't log until you call Debug, Print, Info, Warn, Fatal
0000000000000000000000000000000000000000;;	// or Panic on the Entry it returns.
0000000000000000000000000000000000000000;;	func WithFields(fields Fields) *Entry {
0000000000000000000000000000000000000000;;		return std.WithFields(fields)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Debug logs a message at level Debug on the standard logger.
0000000000000000000000000000000000000000;;	func Debug(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Debug(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Print logs a message at level Info on the standard logger.
0000000000000000000000000000000000000000;;	func Print(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Print(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Info logs a message at level Info on the standard logger.
0000000000000000000000000000000000000000;;	func Info(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Info(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Warn logs a message at level Warn on the standard logger.
0000000000000000000000000000000000000000;;	func Warn(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Warn(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Warning logs a message at level Warn on the standard logger.
0000000000000000000000000000000000000000;;	func Warning(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Warning(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Error logs a message at level Error on the standard logger.
0000000000000000000000000000000000000000;;	func Error(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Error(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Panic logs a message at level Panic on the standard logger.
0000000000000000000000000000000000000000;;	func Panic(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Panic(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Fatal logs a message at level Fatal on the standard logger.
0000000000000000000000000000000000000000;;	func Fatal(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Fatal(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Debugf logs a message at level Debug on the standard logger.
0000000000000000000000000000000000000000;;	func Debugf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Debugf(format, args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Printf logs a message at level Info on the standard logger.
0000000000000000000000000000000000000000;;	func Printf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Printf(format, args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Infof logs a message at level Info on the standard logger.
0000000000000000000000000000000000000000;;	func Infof(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Infof(format, args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Warnf logs a message at level Warn on the standard logger.
0000000000000000000000000000000000000000;;	func Warnf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Warnf(format, args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Warningf logs a message at level Warn on the standard logger.
0000000000000000000000000000000000000000;;	func Warningf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Warningf(format, args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Errorf logs a message at level Error on the standard logger.
0000000000000000000000000000000000000000;;	func Errorf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Errorf(format, args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Panicf logs a message at level Panic on the standard logger.
0000000000000000000000000000000000000000;;	func Panicf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Panicf(format, args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Fatalf logs a message at level Fatal on the standard logger.
0000000000000000000000000000000000000000;;	func Fatalf(format string, args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Fatalf(format, args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Debugln logs a message at level Debug on the standard logger.
0000000000000000000000000000000000000000;;	func Debugln(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Debugln(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Println logs a message at level Info on the standard logger.
0000000000000000000000000000000000000000;;	func Println(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Println(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Infoln logs a message at level Info on the standard logger.
0000000000000000000000000000000000000000;;	func Infoln(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Infoln(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Warnln logs a message at level Warn on the standard logger.
0000000000000000000000000000000000000000;;	func Warnln(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Warnln(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Warningln logs a message at level Warn on the standard logger.
0000000000000000000000000000000000000000;;	func Warningln(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Warningln(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Errorln logs a message at level Error on the standard logger.
0000000000000000000000000000000000000000;;	func Errorln(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Errorln(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Panicln logs a message at level Panic on the standard logger.
0000000000000000000000000000000000000000;;	func Panicln(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Panicln(args...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Fatalln logs a message at level Fatal on the standard logger.
0000000000000000000000000000000000000000;;	func Fatalln(args ...interface{}) {
0000000000000000000000000000000000000000;;		std.Fatalln(args...)
0000000000000000000000000000000000000000;;	}

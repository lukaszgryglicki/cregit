0000000000000000000000000000000000000000;;	Gzip Handler
0000000000000000000000000000000000000000;;	============
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This is a tiny Go package which wraps HTTP handlers to transparently gzip the
0000000000000000000000000000000000000000;;	response body, for clients which support it. Although it's usually simpler to
0000000000000000000000000000000000000000;;	leave that to a reverse proxy (like nginx or Varnish), this package is useful
0000000000000000000000000000000000000000;;	when that's undesirable.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Usage
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Call `GzipHandler` with any handler (an object which implements the
0000000000000000000000000000000000000000;;	`http.Handler` interface), and it'll return a new handler which gzips the
0000000000000000000000000000000000000000;;	response. For example:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	package main
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;		"net/http"
0000000000000000000000000000000000000000;;		"github.com/NYTimes/gziphandler"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func main() {
0000000000000000000000000000000000000000;;		withoutGz := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
0000000000000000000000000000000000000000;;			w.Header().Set("Content-Type", "text/plain")
0000000000000000000000000000000000000000;;			io.WriteString(w, "Hello, World")
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		withGz := gziphandler.GzipHandler(withoutGz)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		http.Handle("/", withGz)
0000000000000000000000000000000000000000;;		http.ListenAndServe("0.0.0.0:8000", nil)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Documentation
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The docs can be found at [godoc.org][docs], as usual.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## License
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[Apache 2.0][license].
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[docs]:     https://godoc.org/github.com/nytimes/gziphandler
0000000000000000000000000000000000000000;;	[license]:  https://github.com/nytimes/gziphandler/blob/master/LICENSE.md

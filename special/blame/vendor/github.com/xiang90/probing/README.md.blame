0000000000000000000000000000000000000000;;	## Getting Started
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Install the handler
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	We first need to serve the probing HTTP handler.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```go
0000000000000000000000000000000000000000;;	    http.HandleFunc("/health", probing.NewHandler())
0000000000000000000000000000000000000000;;	    err := http.ListenAndServe(":12345", nil)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			log.Fatal("ListenAndServe: ", err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Start to probe
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Now we can start to probe the endpoint.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	``` go
0000000000000000000000000000000000000000;;	    id := "example"
0000000000000000000000000000000000000000;;	    probingInterval = 5 * time.Second
0000000000000000000000000000000000000000;;	    url := "http://example.com:12345/health"
0000000000000000000000000000000000000000;;	    p.AddHTTP(id, probingInterval, url)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		time.Sleep(13 * time.Second)
0000000000000000000000000000000000000000;;		status, err := p.Status(id)
0000000000000000000000000000000000000000;;	 	fmt.Printf("Total Probing: %d, Total Loss: %d, Estimated RTT: %v, Estimated Clock Difference: %v\n",
0000000000000000000000000000000000000000;;			status.Total(), status.Loss(), status.SRTT(), status.ClockDiff())
0000000000000000000000000000000000000000;;		// Total Probing: 2, Total Loss: 0, Estimated RTT: 320.771µs, Estimated Clock Difference: -35.869µs
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### TODOs:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	- TCP probing
0000000000000000000000000000000000000000;;	- UDP probing
0000000000000000000000000000000000000000;;	- Gossip based probing
0000000000000000000000000000000000000000;;	- More accurate RTT estimation
0000000000000000000000000000000000000000;;	- More accurate Clock difference estimation
0000000000000000000000000000000000000000;;	- Use a clock interface rather than the real clock

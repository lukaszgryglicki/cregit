0000000000000000000000000000000000000000;;	// This work is subject to the CC0 1.0 Universal (CC0 1.0) Public Domain Dedication
0000000000000000000000000000000000000000;;	// license. Its contents can be found at:
0000000000000000000000000000000000000000;;	// http://creativecommons.org/publicdomain/zero/1.0/
ecec4da416f813f03bad36da050c53fcd4444152;;	
0000000000000000000000000000000000000000;;	package bindata
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const lowerHex = "0123456789abcdef"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type StringWriter struct {
0000000000000000000000000000000000000000;;		io.Writer
0000000000000000000000000000000000000000;;		c int
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (w *StringWriter) Write(p []byte) (n int, err error) {
0000000000000000000000000000000000000000;;		if len(p) == 0 {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		buf := []byte(`\x00`)
0000000000000000000000000000000000000000;;		var b byte
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		for n, b = range p {
0000000000000000000000000000000000000000;;			buf[2] = lowerHex[b/16]
0000000000000000000000000000000000000000;;			buf[3] = lowerHex[b%16]
0000000000000000000000000000000000000000;;			w.Writer.Write(buf)
0000000000000000000000000000000000000000;;			w.c++
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		n++
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}

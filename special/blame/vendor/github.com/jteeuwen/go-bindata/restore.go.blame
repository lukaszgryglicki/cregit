0000000000000000000000000000000000000000;;	// This work is subject to the CC0 1.0 Universal (CC0 1.0) Public Domain Dedication
0000000000000000000000000000000000000000;;	// license. Its contents can be found at:
0000000000000000000000000000000000000000;;	// http://creativecommons.org/publicdomain/zero/1.0/
ecec4da416f813f03bad36da050c53fcd4444152;;	
0000000000000000000000000000000000000000;;	package bindata
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func writeRestore(w io.Writer) error {
0000000000000000000000000000000000000000;;		_, err := fmt.Fprintf(w, `
0000000000000000000000000000000000000000;;	// RestoreAsset restores an asset under the given directory
0000000000000000000000000000000000000000;;	func RestoreAsset(dir, name string) error {
0000000000000000000000000000000000000000;;		data, err := Asset(name)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		info, err := AssetInfo(name)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RestoreAssets restores an asset under the given directory recursively
0000000000000000000000000000000000000000;;	func RestoreAssets(dir, name string) error {
0000000000000000000000000000000000000000;;		children, err := AssetDir(name)
0000000000000000000000000000000000000000;;		// File
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return RestoreAsset(dir, name)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		// Dir
0000000000000000000000000000000000000000;;		for _, child := range children {
0000000000000000000000000000000000000000;;			err = RestoreAssets(dir, filepath.Join(name, child))
0000000000000000000000000000000000000000;;			if err != nil {
0000000000000000000000000000000000000000;;				return err
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func _filePath(dir, name string) string {
0000000000000000000000000000000000000000;;		cannonicalName := strings.Replace(name, "\\", "/", -1)
0000000000000000000000000000000000000000;;		return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	`)
0000000000000000000000000000000000000000;;		return err
0000000000000000000000000000000000000000;;	}

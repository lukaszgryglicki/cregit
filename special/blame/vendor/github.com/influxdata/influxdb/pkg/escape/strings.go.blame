0000000000000000000000000000000000000000;;	package escape
98fa85693d398f10e97b3f66d66f93eefb348cf6;;	
0000000000000000000000000000000000000000;;	import "strings"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		Codes = map[byte][]byte{
0000000000000000000000000000000000000000;;			',': []byte(`\,`),
0000000000000000000000000000000000000000;;			'"': []byte(`\"`),
0000000000000000000000000000000000000000;;			' ': []byte(`\ `),
0000000000000000000000000000000000000000;;			'=': []byte(`\=`),
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		codesStr = map[string]string{}
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func init() {
0000000000000000000000000000000000000000;;		for k, v := range Codes {
0000000000000000000000000000000000000000;;			codesStr[string(k)] = string(v)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func UnescapeString(in string) string {
0000000000000000000000000000000000000000;;		if strings.IndexByte(in, '\\') == -1 {
0000000000000000000000000000000000000000;;			return in
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		for b, esc := range codesStr {
0000000000000000000000000000000000000000;;			in = strings.Replace(in, esc, b, -1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return in
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func String(in string) string {
0000000000000000000000000000000000000000;;		for b, esc := range codesStr {
0000000000000000000000000000000000000000;;			in = strings.Replace(in, b, esc, -1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return in
0000000000000000000000000000000000000000;;	}

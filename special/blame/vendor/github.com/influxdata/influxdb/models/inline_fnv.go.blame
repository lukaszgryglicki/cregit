0000000000000000000000000000000000000000;;	package models
cf78d6f9c105a96842189a7e8b713a3f65a7abac;;	
0000000000000000000000000000000000000000;;	// from stdlib hash/fnv/fnv.go
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		prime64  = 1099511628211
0000000000000000000000000000000000000000;;		offset64 = 14695981039346656037
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// InlineFNV64a is an alloc-free port of the standard library's fnv64a.
0000000000000000000000000000000000000000;;	type InlineFNV64a uint64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewInlineFNV64a() InlineFNV64a {
0000000000000000000000000000000000000000;;		return offset64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (s *InlineFNV64a) Write(data []byte) (int, error) {
0000000000000000000000000000000000000000;;		hash := uint64(*s)
0000000000000000000000000000000000000000;;		for _, c := range data {
0000000000000000000000000000000000000000;;			hash ^= uint64(c)
0000000000000000000000000000000000000000;;			hash *= prime64
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		*s = InlineFNV64a(hash)
0000000000000000000000000000000000000000;;		return len(data), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	func (s *InlineFNV64a) Sum64() uint64 {
0000000000000000000000000000000000000000;;		return uint64(*s)
0000000000000000000000000000000000000000;;	}

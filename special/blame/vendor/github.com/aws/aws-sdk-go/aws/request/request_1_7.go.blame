0000000000000000000000000000000000000000;;	// +build !go1.8
7b662bd39f4f8ebe87658b72a7df9da9c5a74c80;;	
0000000000000000000000000000000000000000;;	package request
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "io"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NoBody is an io.ReadCloser with no bytes. Read always returns EOF
0000000000000000000000000000000000000000;;	// and Close always returns nil. It can be used in an outgoing client
0000000000000000000000000000000000000000;;	// request to explicitly signal that a request has zero bytes.
0000000000000000000000000000000000000000;;	// An alternative, however, is to simply set Request.Body to nil.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Copy of Go 1.8 NoBody type from net/http/http.go
0000000000000000000000000000000000000000;;	type noBody struct{}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (noBody) Read([]byte) (int, error)         { return 0, io.EOF }
0000000000000000000000000000000000000000;;	func (noBody) Close() error                     { return nil }
0000000000000000000000000000000000000000;;	func (noBody) WriteTo(io.Writer) (int64, error) { return 0, nil }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Is an empty reader that will trigger the Go HTTP client to not include
0000000000000000000000000000000000000000;;	// and body in the HTTP request.
0000000000000000000000000000000000000000;;	var noBodyReader = noBody{}

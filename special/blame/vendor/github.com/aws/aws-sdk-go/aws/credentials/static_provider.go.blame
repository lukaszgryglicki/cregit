0000000000000000000000000000000000000000;;	package credentials
b5a369483575c99a3598125e51d2fb065a91c6de;Godeps/_workspace/src/github.com/awslabs/aws-sdk-go/aws/credentials/static_provider.go[Godeps/_workspace/src/github.com/awslabs/aws-sdk-go/aws/credentials/static_provider.go][vendor/github.com/aws/aws-sdk-go/aws/credentials/static_provider.go];	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws/awserr"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StaticProviderName provides a name of Static provider
0000000000000000000000000000000000000000;;	const StaticProviderName = "StaticProvider"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		// ErrStaticCredentialsEmpty is emitted when static credentials are empty.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// @readonly
0000000000000000000000000000000000000000;;		ErrStaticCredentialsEmpty = awserr.New("EmptyStaticCreds", "static credentials are empty", nil)
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// A StaticProvider is a set of credentials which are set programmatically,
0000000000000000000000000000000000000000;;	// and will never expire.
0000000000000000000000000000000000000000;;	type StaticProvider struct {
0000000000000000000000000000000000000000;;		Value
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewStaticCredentials returns a pointer to a new Credentials object
0000000000000000000000000000000000000000;;	// wrapping a static credentials value provider.
0000000000000000000000000000000000000000;;	func NewStaticCredentials(id, secret, token string) *Credentials {
0000000000000000000000000000000000000000;;		return NewCredentials(&StaticProvider{Value: Value{
0000000000000000000000000000000000000000;;			AccessKeyID:     id,
0000000000000000000000000000000000000000;;			SecretAccessKey: secret,
0000000000000000000000000000000000000000;;			SessionToken:    token,
0000000000000000000000000000000000000000;;		}})
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NewStaticCredentialsFromCreds returns a pointer to a new Credentials object
0000000000000000000000000000000000000000;;	// wrapping the static credentials value provide. Same as NewStaticCredentials
0000000000000000000000000000000000000000;;	// but takes the creds Value instead of individual fields
0000000000000000000000000000000000000000;;	func NewStaticCredentialsFromCreds(creds Value) *Credentials {
0000000000000000000000000000000000000000;;		return NewCredentials(&StaticProvider{Value: creds})
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Retrieve returns the credentials or error if the credentials are invalid.
0000000000000000000000000000000000000000;;	func (s *StaticProvider) Retrieve() (Value, error) {
0000000000000000000000000000000000000000;;		if s.AccessKeyID == "" || s.SecretAccessKey == "" {
0000000000000000000000000000000000000000;;			return Value{ProviderName: StaticProviderName}, ErrStaticCredentialsEmpty
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if len(s.Value.ProviderName) == 0 {
0000000000000000000000000000000000000000;;			s.Value.ProviderName = StaticProviderName
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return s.Value, nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// IsExpired returns if the credentials are expired.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For StaticProvider, the credentials never expired.
0000000000000000000000000000000000000000;;	func (s *StaticProvider) IsExpired() bool {
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}

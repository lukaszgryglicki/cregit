0000000000000000000000000000000000000000;;	// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.
15505fe0b7961d9c807ac0af0b1f8961fbc154fb;Godeps/_workspace/src/github.com/awslabs/aws-sdk-go/service/elb/api.go[Godeps/_workspace/src/github.com/awslabs/aws-sdk-go/service/elb/api.go][vendor/github.com/aws/aws-sdk-go/service/elb/api.go];	
0000000000000000000000000000000000000000;;	// Package elb provides a client for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	package elb
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"time"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws/awsutil"
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws/request"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opAddTags = "AddTags"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AddTagsRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the AddTags operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See AddTags for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the AddTags method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the AddTagsRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.AddTagsRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AddTags
0000000000000000000000000000000000000000;;	func (c *ELB) AddTagsRequest(input *AddTagsInput) (req *request.Request, output *AddTagsOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opAddTags,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &AddTagsInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &AddTagsOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AddTags API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Adds the specified tags to the specified load balancer. Each load balancer
0000000000000000000000000000000000000000;;	// can have a maximum of 10 tags.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Each tag consists of a key and an optional value. If a tag with the same
0000000000000000000000000000000000000000;;	// key is already associated with the load balancer, AddTags updates its value.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Tag Your Classic Load Balancer (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation AddTags for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * TooManyTags
0000000000000000000000000000000000000000;;	//   The quota for the number of tags that can be assigned to a load balancer
0000000000000000000000000000000000000000;;	//   has been reached.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * DuplicateTagKeys
0000000000000000000000000000000000000000;;	//   A tag key was specified more than once.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AddTags
0000000000000000000000000000000000000000;;	func (c *ELB) AddTags(input *AddTagsInput) (*AddTagsOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.AddTagsRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opApplySecurityGroupsToLoadBalancer = "ApplySecurityGroupsToLoadBalancer"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ApplySecurityGroupsToLoadBalancerRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the ApplySecurityGroupsToLoadBalancer operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See ApplySecurityGroupsToLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the ApplySecurityGroupsToLoadBalancer method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the ApplySecurityGroupsToLoadBalancerRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.ApplySecurityGroupsToLoadBalancerRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ApplySecurityGroupsToLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) ApplySecurityGroupsToLoadBalancerRequest(input *ApplySecurityGroupsToLoadBalancerInput) (req *request.Request, output *ApplySecurityGroupsToLoadBalancerOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opApplySecurityGroupsToLoadBalancer,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &ApplySecurityGroupsToLoadBalancerInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &ApplySecurityGroupsToLoadBalancerOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ApplySecurityGroupsToLoadBalancer API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Associates one or more security groups with your load balancer in a virtual
0000000000000000000000000000000000000000;;	// private cloud (VPC). The specified security groups override the previously
0000000000000000000000000000000000000000;;	// associated security groups.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Security Groups for Load Balancers in a VPC (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-groups.html#elb-vpc-security-groups)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation ApplySecurityGroupsToLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidSecurityGroup
0000000000000000000000000000000000000000;;	//   One or more of the specified security groups do not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ApplySecurityGroupsToLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) ApplySecurityGroupsToLoadBalancer(input *ApplySecurityGroupsToLoadBalancerInput) (*ApplySecurityGroupsToLoadBalancerOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.ApplySecurityGroupsToLoadBalancerRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opAttachLoadBalancerToSubnets = "AttachLoadBalancerToSubnets"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AttachLoadBalancerToSubnetsRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the AttachLoadBalancerToSubnets operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See AttachLoadBalancerToSubnets for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the AttachLoadBalancerToSubnets method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the AttachLoadBalancerToSubnetsRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.AttachLoadBalancerToSubnetsRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AttachLoadBalancerToSubnets
0000000000000000000000000000000000000000;;	func (c *ELB) AttachLoadBalancerToSubnetsRequest(input *AttachLoadBalancerToSubnetsInput) (req *request.Request, output *AttachLoadBalancerToSubnetsOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opAttachLoadBalancerToSubnets,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &AttachLoadBalancerToSubnetsInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &AttachLoadBalancerToSubnetsOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// AttachLoadBalancerToSubnets API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Adds one or more subnets to the set of configured subnets for the specified
0000000000000000000000000000000000000000;;	// load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// The load balancer evenly distributes requests across all registered subnets.
0000000000000000000000000000000000000000;;	// For more information, see Add or Remove Subnets for Your Load Balancer in
0000000000000000000000000000000000000000;;	// a VPC (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-manage-subnets.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation AttachLoadBalancerToSubnets for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * SubnetNotFound
0000000000000000000000000000000000000000;;	//   One or more of the specified subnets do not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidSubnet
0000000000000000000000000000000000000000;;	//   The specified VPC has no associated Internet gateway.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AttachLoadBalancerToSubnets
0000000000000000000000000000000000000000;;	func (c *ELB) AttachLoadBalancerToSubnets(input *AttachLoadBalancerToSubnetsInput) (*AttachLoadBalancerToSubnetsOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.AttachLoadBalancerToSubnetsRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opConfigureHealthCheck = "ConfigureHealthCheck"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ConfigureHealthCheckRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the ConfigureHealthCheck operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See ConfigureHealthCheck for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the ConfigureHealthCheck method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the ConfigureHealthCheckRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.ConfigureHealthCheckRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ConfigureHealthCheck
0000000000000000000000000000000000000000;;	func (c *ELB) ConfigureHealthCheckRequest(input *ConfigureHealthCheckInput) (req *request.Request, output *ConfigureHealthCheckOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opConfigureHealthCheck,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &ConfigureHealthCheckInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &ConfigureHealthCheckOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ConfigureHealthCheck API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Specifies the health check settings to use when evaluating the health state
0000000000000000000000000000000000000000;;	// of your EC2 instances.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Configure Health Checks for Your Load Balancer
0000000000000000000000000000000000000000;;	// (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-healthchecks.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation ConfigureHealthCheck for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ConfigureHealthCheck
0000000000000000000000000000000000000000;;	func (c *ELB) ConfigureHealthCheck(input *ConfigureHealthCheckInput) (*ConfigureHealthCheckOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.ConfigureHealthCheckRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opCreateAppCookieStickinessPolicy = "CreateAppCookieStickinessPolicy"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateAppCookieStickinessPolicyRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the CreateAppCookieStickinessPolicy operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See CreateAppCookieStickinessPolicy for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the CreateAppCookieStickinessPolicy method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the CreateAppCookieStickinessPolicyRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.CreateAppCookieStickinessPolicyRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateAppCookieStickinessPolicy
0000000000000000000000000000000000000000;;	func (c *ELB) CreateAppCookieStickinessPolicyRequest(input *CreateAppCookieStickinessPolicyInput) (req *request.Request, output *CreateAppCookieStickinessPolicyOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opCreateAppCookieStickinessPolicy,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &CreateAppCookieStickinessPolicyInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &CreateAppCookieStickinessPolicyOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateAppCookieStickinessPolicy API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Generates a stickiness policy with sticky session lifetimes that follow that
0000000000000000000000000000000000000000;;	// of an application-generated cookie. This policy can be associated only with
0000000000000000000000000000000000000000;;	// HTTP/HTTPS listeners.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// This policy is similar to the policy created by CreateLBCookieStickinessPolicy,
0000000000000000000000000000000000000000;;	// except that the lifetime of the special Elastic Load Balancing cookie, AWSELB,
0000000000000000000000000000000000000000;;	// follows the lifetime of the application-generated cookie specified in the
0000000000000000000000000000000000000000;;	// policy configuration. The load balancer only inserts a new stickiness cookie
0000000000000000000000000000000000000000;;	// when the application response includes a new application cookie.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If the application cookie is explicitly removed or expires, the session stops
0000000000000000000000000000000000000000;;	// being sticky until a new application cookie is issued.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Application-Controlled Session Stickiness (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation CreateAppCookieStickinessPolicy for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * DuplicatePolicyName
0000000000000000000000000000000000000000;;	//   A policy with the specified name already exists for this load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * TooManyPolicies
0000000000000000000000000000000000000000;;	//   The quota for the number of policies for this load balancer has been reached.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateAppCookieStickinessPolicy
0000000000000000000000000000000000000000;;	func (c *ELB) CreateAppCookieStickinessPolicy(input *CreateAppCookieStickinessPolicyInput) (*CreateAppCookieStickinessPolicyOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.CreateAppCookieStickinessPolicyRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opCreateLBCookieStickinessPolicy = "CreateLBCookieStickinessPolicy"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateLBCookieStickinessPolicyRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the CreateLBCookieStickinessPolicy operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See CreateLBCookieStickinessPolicy for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the CreateLBCookieStickinessPolicy method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the CreateLBCookieStickinessPolicyRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.CreateLBCookieStickinessPolicyRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLBCookieStickinessPolicy
0000000000000000000000000000000000000000;;	func (c *ELB) CreateLBCookieStickinessPolicyRequest(input *CreateLBCookieStickinessPolicyInput) (req *request.Request, output *CreateLBCookieStickinessPolicyOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opCreateLBCookieStickinessPolicy,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &CreateLBCookieStickinessPolicyInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &CreateLBCookieStickinessPolicyOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateLBCookieStickinessPolicy API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Generates a stickiness policy with sticky session lifetimes controlled by
0000000000000000000000000000000000000000;;	// the lifetime of the browser (user-agent) or a specified expiration period.
0000000000000000000000000000000000000000;;	// This policy can be associated only with HTTP/HTTPS listeners.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// When a load balancer implements this policy, the load balancer uses a special
0000000000000000000000000000000000000000;;	// cookie to track the instance for each request. When the load balancer receives
0000000000000000000000000000000000000000;;	// a request, it first checks to see if this cookie is present in the request.
0000000000000000000000000000000000000000;;	// If so, the load balancer sends the request to the application server specified
0000000000000000000000000000000000000000;;	// in the cookie. If not, the load balancer sends the request to a server that
0000000000000000000000000000000000000000;;	// is chosen based on the existing load-balancing algorithm.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// A cookie is inserted into the response for binding subsequent requests from
0000000000000000000000000000000000000000;;	// the same user to that server. The validity of the cookie is based on the
0000000000000000000000000000000000000000;;	// cookie expiration time, which is specified in the policy configuration.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Duration-Based Session Stickiness (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation CreateLBCookieStickinessPolicy for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * DuplicatePolicyName
0000000000000000000000000000000000000000;;	//   A policy with the specified name already exists for this load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * TooManyPolicies
0000000000000000000000000000000000000000;;	//   The quota for the number of policies for this load balancer has been reached.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLBCookieStickinessPolicy
0000000000000000000000000000000000000000;;	func (c *ELB) CreateLBCookieStickinessPolicy(input *CreateLBCookieStickinessPolicyInput) (*CreateLBCookieStickinessPolicyOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.CreateLBCookieStickinessPolicyRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opCreateLoadBalancer = "CreateLoadBalancer"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateLoadBalancerRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the CreateLoadBalancer operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See CreateLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the CreateLoadBalancer method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the CreateLoadBalancerRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.CreateLoadBalancerRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) CreateLoadBalancerRequest(input *CreateLoadBalancerInput) (req *request.Request, output *CreateLoadBalancerOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opCreateLoadBalancer,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &CreateLoadBalancerInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &CreateLoadBalancerOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateLoadBalancer API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creates a Classic load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// You can add listeners, security groups, subnets, and tags when you create
0000000000000000000000000000000000000000;;	// your load balancer, or you can add them later using CreateLoadBalancerListeners,
0000000000000000000000000000000000000000;;	// ApplySecurityGroupsToLoadBalancer, AttachLoadBalancerToSubnets, and AddTags.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// To describe your current load balancers, see DescribeLoadBalancers. When
0000000000000000000000000000000000000000;;	// you are finished with a load balancer, you can delete it using DeleteLoadBalancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// You can create up to 20 load balancers per region per account. You can request
0000000000000000000000000000000000000000;;	// an increase for the number of load balancers for your account. For more information,
0000000000000000000000000000000000000000;;	// see Limits for Your Classic Load Balancer (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation CreateLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * DuplicateLoadBalancerName
0000000000000000000000000000000000000000;;	//   The specified load balancer name already exists for this account.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * TooManyLoadBalancers
0000000000000000000000000000000000000000;;	//   The quota for the number of load balancers has been reached.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * CertificateNotFound
0000000000000000000000000000000000000000;;	//   The specified ARN does not refer to a valid SSL certificate in AWS Identity
0000000000000000000000000000000000000000;;	//   and Access Management (IAM) or AWS Certificate Manager (ACM). Note that if
0000000000000000000000000000000000000000;;	//   you recently uploaded the certificate to IAM, this error might indicate that
0000000000000000000000000000000000000000;;	//   the certificate is not fully available yet.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * SubnetNotFound
0000000000000000000000000000000000000000;;	//   One or more of the specified subnets do not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidSubnet
0000000000000000000000000000000000000000;;	//   The specified VPC has no associated Internet gateway.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidSecurityGroup
0000000000000000000000000000000000000000;;	//   One or more of the specified security groups do not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidScheme
0000000000000000000000000000000000000000;;	//   The specified value for the schema is not valid. You can only specify a scheme
0000000000000000000000000000000000000000;;	//   for load balancers in a VPC.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * TooManyTags
0000000000000000000000000000000000000000;;	//   The quota for the number of tags that can be assigned to a load balancer
0000000000000000000000000000000000000000;;	//   has been reached.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * DuplicateTagKeys
0000000000000000000000000000000000000000;;	//   A tag key was specified more than once.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * UnsupportedProtocol
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) CreateLoadBalancer(input *CreateLoadBalancerInput) (*CreateLoadBalancerOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.CreateLoadBalancerRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opCreateLoadBalancerListeners = "CreateLoadBalancerListeners"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateLoadBalancerListenersRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the CreateLoadBalancerListeners operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See CreateLoadBalancerListeners for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the CreateLoadBalancerListeners method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the CreateLoadBalancerListenersRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.CreateLoadBalancerListenersRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancerListeners
0000000000000000000000000000000000000000;;	func (c *ELB) CreateLoadBalancerListenersRequest(input *CreateLoadBalancerListenersInput) (req *request.Request, output *CreateLoadBalancerListenersOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opCreateLoadBalancerListeners,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &CreateLoadBalancerListenersInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &CreateLoadBalancerListenersOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateLoadBalancerListeners API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creates one or more listeners for the specified load balancer. If a listener
0000000000000000000000000000000000000000;;	// with the specified port does not already exist, it is created; otherwise,
0000000000000000000000000000000000000000;;	// the properties of the new listener must match the properties of the existing
0000000000000000000000000000000000000000;;	// listener.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Listeners for Your Classic Load Balancer (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation CreateLoadBalancerListeners for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * DuplicateListener
0000000000000000000000000000000000000000;;	//   A listener already exists for the specified load balancer name and port,
0000000000000000000000000000000000000000;;	//   but with a different instance port, protocol, or SSL certificate.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * CertificateNotFound
0000000000000000000000000000000000000000;;	//   The specified ARN does not refer to a valid SSL certificate in AWS Identity
0000000000000000000000000000000000000000;;	//   and Access Management (IAM) or AWS Certificate Manager (ACM). Note that if
0000000000000000000000000000000000000000;;	//   you recently uploaded the certificate to IAM, this error might indicate that
0000000000000000000000000000000000000000;;	//   the certificate is not fully available yet.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * UnsupportedProtocol
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancerListeners
0000000000000000000000000000000000000000;;	func (c *ELB) CreateLoadBalancerListeners(input *CreateLoadBalancerListenersInput) (*CreateLoadBalancerListenersOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.CreateLoadBalancerListenersRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opCreateLoadBalancerPolicy = "CreateLoadBalancerPolicy"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateLoadBalancerPolicyRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the CreateLoadBalancerPolicy operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See CreateLoadBalancerPolicy for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the CreateLoadBalancerPolicy method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the CreateLoadBalancerPolicyRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.CreateLoadBalancerPolicyRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancerPolicy
0000000000000000000000000000000000000000;;	func (c *ELB) CreateLoadBalancerPolicyRequest(input *CreateLoadBalancerPolicyInput) (req *request.Request, output *CreateLoadBalancerPolicyOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opCreateLoadBalancerPolicy,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &CreateLoadBalancerPolicyInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &CreateLoadBalancerPolicyOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// CreateLoadBalancerPolicy API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creates a policy with the specified attributes for the specified load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Policies are settings that are saved for your load balancer and that can
0000000000000000000000000000000000000000;;	// be applied to the listener or the application server, depending on the policy
0000000000000000000000000000000000000000;;	// type.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation CreateLoadBalancerPolicy for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * PolicyTypeNotFound
0000000000000000000000000000000000000000;;	//   One or more of the specified policy types do not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * DuplicatePolicyName
0000000000000000000000000000000000000000;;	//   A policy with the specified name already exists for this load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * TooManyPolicies
0000000000000000000000000000000000000000;;	//   The quota for the number of policies for this load balancer has been reached.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancerPolicy
0000000000000000000000000000000000000000;;	func (c *ELB) CreateLoadBalancerPolicy(input *CreateLoadBalancerPolicyInput) (*CreateLoadBalancerPolicyOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.CreateLoadBalancerPolicyRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDeleteLoadBalancer = "DeleteLoadBalancer"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DeleteLoadBalancerRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DeleteLoadBalancer operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DeleteLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DeleteLoadBalancer method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DeleteLoadBalancerRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DeleteLoadBalancerRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) DeleteLoadBalancerRequest(input *DeleteLoadBalancerInput) (req *request.Request, output *DeleteLoadBalancerOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDeleteLoadBalancer,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DeleteLoadBalancerInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DeleteLoadBalancerOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DeleteLoadBalancer API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Deletes the specified load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If you are attempting to recreate a load balancer, you must reconfigure all
0000000000000000000000000000000000000000;;	// settings. The DNS name associated with a deleted load balancer are no longer
0000000000000000000000000000000000000000;;	// usable. The name and associated DNS record of the deleted load balancer no
0000000000000000000000000000000000000000;;	// longer exist and traffic sent to any of its IP addresses is no longer delivered
0000000000000000000000000000000000000000;;	// to your instances.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If the load balancer does not exist or has already been deleted, the call
0000000000000000000000000000000000000000;;	// to DeleteLoadBalancer still succeeds.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DeleteLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) DeleteLoadBalancer(input *DeleteLoadBalancerInput) (*DeleteLoadBalancerOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DeleteLoadBalancerRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDeleteLoadBalancerListeners = "DeleteLoadBalancerListeners"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DeleteLoadBalancerListenersRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DeleteLoadBalancerListeners operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DeleteLoadBalancerListeners for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DeleteLoadBalancerListeners method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DeleteLoadBalancerListenersRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DeleteLoadBalancerListenersRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancerListeners
0000000000000000000000000000000000000000;;	func (c *ELB) DeleteLoadBalancerListenersRequest(input *DeleteLoadBalancerListenersInput) (req *request.Request, output *DeleteLoadBalancerListenersOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDeleteLoadBalancerListeners,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DeleteLoadBalancerListenersInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DeleteLoadBalancerListenersOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DeleteLoadBalancerListeners API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Deletes the specified listeners from the specified load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DeleteLoadBalancerListeners for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancerListeners
0000000000000000000000000000000000000000;;	func (c *ELB) DeleteLoadBalancerListeners(input *DeleteLoadBalancerListenersInput) (*DeleteLoadBalancerListenersOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DeleteLoadBalancerListenersRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDeleteLoadBalancerPolicy = "DeleteLoadBalancerPolicy"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DeleteLoadBalancerPolicyRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DeleteLoadBalancerPolicy operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DeleteLoadBalancerPolicy for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DeleteLoadBalancerPolicy method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DeleteLoadBalancerPolicyRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DeleteLoadBalancerPolicyRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancerPolicy
0000000000000000000000000000000000000000;;	func (c *ELB) DeleteLoadBalancerPolicyRequest(input *DeleteLoadBalancerPolicyInput) (req *request.Request, output *DeleteLoadBalancerPolicyOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDeleteLoadBalancerPolicy,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DeleteLoadBalancerPolicyInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DeleteLoadBalancerPolicyOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DeleteLoadBalancerPolicy API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Deletes the specified policy from the specified load balancer. This policy
0000000000000000000000000000000000000000;;	// must not be enabled for any listeners.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DeleteLoadBalancerPolicy for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancerPolicy
0000000000000000000000000000000000000000;;	func (c *ELB) DeleteLoadBalancerPolicy(input *DeleteLoadBalancerPolicyInput) (*DeleteLoadBalancerPolicyOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DeleteLoadBalancerPolicyRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDeregisterInstancesFromLoadBalancer = "DeregisterInstancesFromLoadBalancer"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DeregisterInstancesFromLoadBalancerRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DeregisterInstancesFromLoadBalancer operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DeregisterInstancesFromLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DeregisterInstancesFromLoadBalancer method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DeregisterInstancesFromLoadBalancerRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DeregisterInstancesFromLoadBalancerRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeregisterInstancesFromLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) DeregisterInstancesFromLoadBalancerRequest(input *DeregisterInstancesFromLoadBalancerInput) (req *request.Request, output *DeregisterInstancesFromLoadBalancerOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDeregisterInstancesFromLoadBalancer,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DeregisterInstancesFromLoadBalancerInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DeregisterInstancesFromLoadBalancerOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DeregisterInstancesFromLoadBalancer API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Deregisters the specified instances from the specified load balancer. After
0000000000000000000000000000000000000000;;	// the instance is deregistered, it no longer receives traffic from the load
0000000000000000000000000000000000000000;;	// balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// You can use DescribeLoadBalancers to verify that the instance is deregistered
0000000000000000000000000000000000000000;;	// from the load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Register or De-Register EC2 Instances (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DeregisterInstancesFromLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidInstance
0000000000000000000000000000000000000000;;	//   The specified endpoint is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeregisterInstancesFromLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) DeregisterInstancesFromLoadBalancer(input *DeregisterInstancesFromLoadBalancerInput) (*DeregisterInstancesFromLoadBalancerOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DeregisterInstancesFromLoadBalancerRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDescribeInstanceHealth = "DescribeInstanceHealth"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeInstanceHealthRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DescribeInstanceHealth operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DescribeInstanceHealth for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DescribeInstanceHealth method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DescribeInstanceHealthRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DescribeInstanceHealthRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeInstanceHealth
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeInstanceHealthRequest(input *DescribeInstanceHealthInput) (req *request.Request, output *DescribeInstanceHealthOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDescribeInstanceHealth,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DescribeInstanceHealthInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DescribeInstanceHealthOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeInstanceHealth API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Describes the state of the specified instances with respect to the specified
0000000000000000000000000000000000000000;;	// load balancer. If no instances are specified, the call describes the state
0000000000000000000000000000000000000000;;	// of all instances that are currently registered with the load balancer. If
0000000000000000000000000000000000000000;;	// instances are specified, their state is returned even if they are no longer
0000000000000000000000000000000000000000;;	// registered with the load balancer. The state of terminated instances is not
0000000000000000000000000000000000000000;;	// returned.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DescribeInstanceHealth for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidInstance
0000000000000000000000000000000000000000;;	//   The specified endpoint is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeInstanceHealth
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeInstanceHealth(input *DescribeInstanceHealthInput) (*DescribeInstanceHealthOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DescribeInstanceHealthRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDescribeLoadBalancerAttributes = "DescribeLoadBalancerAttributes"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeLoadBalancerAttributesRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DescribeLoadBalancerAttributes operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DescribeLoadBalancerAttributes for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DescribeLoadBalancerAttributes method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DescribeLoadBalancerAttributesRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DescribeLoadBalancerAttributesRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerAttributes
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeLoadBalancerAttributesRequest(input *DescribeLoadBalancerAttributesInput) (req *request.Request, output *DescribeLoadBalancerAttributesOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDescribeLoadBalancerAttributes,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DescribeLoadBalancerAttributesInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DescribeLoadBalancerAttributesOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeLoadBalancerAttributes API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Describes the attributes for the specified load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DescribeLoadBalancerAttributes for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * LoadBalancerAttributeNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer attribute does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerAttributes
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeLoadBalancerAttributes(input *DescribeLoadBalancerAttributesInput) (*DescribeLoadBalancerAttributesOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DescribeLoadBalancerAttributesRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDescribeLoadBalancerPolicies = "DescribeLoadBalancerPolicies"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeLoadBalancerPoliciesRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DescribeLoadBalancerPolicies operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DescribeLoadBalancerPolicies for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DescribeLoadBalancerPolicies method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DescribeLoadBalancerPoliciesRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DescribeLoadBalancerPoliciesRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerPolicies
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeLoadBalancerPoliciesRequest(input *DescribeLoadBalancerPoliciesInput) (req *request.Request, output *DescribeLoadBalancerPoliciesOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDescribeLoadBalancerPolicies,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DescribeLoadBalancerPoliciesInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DescribeLoadBalancerPoliciesOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeLoadBalancerPolicies API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Describes the specified policies.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// If you specify a load balancer name, the action returns the descriptions
0000000000000000000000000000000000000000;;	// of all policies created for the load balancer. If you specify a policy name
0000000000000000000000000000000000000000;;	// associated with your load balancer, the action returns the description of
0000000000000000000000000000000000000000;;	// that policy. If you don't specify a load balancer name, the action returns
0000000000000000000000000000000000000000;;	// descriptions of the specified sample policies, or descriptions of all sample
0000000000000000000000000000000000000000;;	// policies. The names of the sample policies have the ELBSample- prefix.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DescribeLoadBalancerPolicies for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * PolicyNotFound
0000000000000000000000000000000000000000;;	//   One or more of the specified policies do not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerPolicies
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeLoadBalancerPolicies(input *DescribeLoadBalancerPoliciesInput) (*DescribeLoadBalancerPoliciesOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DescribeLoadBalancerPoliciesRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDescribeLoadBalancerPolicyTypes = "DescribeLoadBalancerPolicyTypes"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeLoadBalancerPolicyTypesRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DescribeLoadBalancerPolicyTypes operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DescribeLoadBalancerPolicyTypes for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DescribeLoadBalancerPolicyTypes method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DescribeLoadBalancerPolicyTypesRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DescribeLoadBalancerPolicyTypesRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerPolicyTypes
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeLoadBalancerPolicyTypesRequest(input *DescribeLoadBalancerPolicyTypesInput) (req *request.Request, output *DescribeLoadBalancerPolicyTypesOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDescribeLoadBalancerPolicyTypes,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DescribeLoadBalancerPolicyTypesInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DescribeLoadBalancerPolicyTypesOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeLoadBalancerPolicyTypes API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Describes the specified load balancer policy types or all load balancer policy
0000000000000000000000000000000000000000;;	// types.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// The description of each type indicates how it can be used. For example, some
0000000000000000000000000000000000000000;;	// policies can be used only with layer 7 listeners, some policies can be used
0000000000000000000000000000000000000000;;	// only with layer 4 listeners, and some policies can be used only with your
0000000000000000000000000000000000000000;;	// EC2 instances.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// You can use CreateLoadBalancerPolicy to create a policy configuration for
0000000000000000000000000000000000000000;;	// any of these policy types. Then, depending on the policy type, use either
0000000000000000000000000000000000000000;;	// SetLoadBalancerPoliciesOfListener or SetLoadBalancerPoliciesForBackendServer
0000000000000000000000000000000000000000;;	// to set the policy.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DescribeLoadBalancerPolicyTypes for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * PolicyTypeNotFound
0000000000000000000000000000000000000000;;	//   One or more of the specified policy types do not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerPolicyTypes
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeLoadBalancerPolicyTypes(input *DescribeLoadBalancerPolicyTypesInput) (*DescribeLoadBalancerPolicyTypesOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DescribeLoadBalancerPolicyTypesRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDescribeLoadBalancers = "DescribeLoadBalancers"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeLoadBalancersRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DescribeLoadBalancers operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DescribeLoadBalancers for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DescribeLoadBalancers method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DescribeLoadBalancersRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DescribeLoadBalancersRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancers
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeLoadBalancersRequest(input *DescribeLoadBalancersInput) (req *request.Request, output *DescribeLoadBalancersOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDescribeLoadBalancers,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;			Paginator: &request.Paginator{
0000000000000000000000000000000000000000;;				InputTokens:     []string{"Marker"},
0000000000000000000000000000000000000000;;				OutputTokens:    []string{"NextMarker"},
0000000000000000000000000000000000000000;;				LimitToken:      "",
0000000000000000000000000000000000000000;;				TruncationToken: "",
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DescribeLoadBalancersInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DescribeLoadBalancersOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeLoadBalancers API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Describes the specified the load balancers. If no load balancers are specified,
0000000000000000000000000000000000000000;;	// the call describes all of your load balancers.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DescribeLoadBalancers for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * DependencyThrottle
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancers
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeLoadBalancers(input *DescribeLoadBalancersInput) (*DescribeLoadBalancersOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DescribeLoadBalancersRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeLoadBalancersPages iterates over the pages of a DescribeLoadBalancers operation,
0000000000000000000000000000000000000000;;	// calling the "fn" function with the response data for each page. To stop
0000000000000000000000000000000000000000;;	// iterating, return false from the fn function.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DescribeLoadBalancers method for more information on how to use this operation.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: This operation can generate multiple requests to a service.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example iterating over at most 3 pages of a DescribeLoadBalancers operation.
0000000000000000000000000000000000000000;;	//    pageNum := 0
0000000000000000000000000000000000000000;;	//    err := client.DescribeLoadBalancersPages(params,
0000000000000000000000000000000000000000;;	//        func(page *DescribeLoadBalancersOutput, lastPage bool) bool {
0000000000000000000000000000000000000000;;	//            pageNum++
0000000000000000000000000000000000000000;;	//            fmt.Println(page)
0000000000000000000000000000000000000000;;	//            return pageNum <= 3
0000000000000000000000000000000000000000;;	//        })
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeLoadBalancersPages(input *DescribeLoadBalancersInput, fn func(p *DescribeLoadBalancersOutput, lastPage bool) (shouldContinue bool)) error {
0000000000000000000000000000000000000000;;		page, _ := c.DescribeLoadBalancersRequest(input)
0000000000000000000000000000000000000000;;		page.Handlers.Build.PushBack(request.MakeAddToUserAgentFreeFormHandler("Paginator"))
0000000000000000000000000000000000000000;;		return page.EachPage(func(p interface{}, lastPage bool) bool {
0000000000000000000000000000000000000000;;			return fn(p.(*DescribeLoadBalancersOutput), lastPage)
0000000000000000000000000000000000000000;;		})
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDescribeTags = "DescribeTags"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeTagsRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DescribeTags operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DescribeTags for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DescribeTags method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DescribeTagsRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DescribeTagsRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeTags
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeTagsRequest(input *DescribeTagsInput) (req *request.Request, output *DescribeTagsOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDescribeTags,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DescribeTagsInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DescribeTagsOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DescribeTags API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Describes the tags associated with the specified load balancers.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DescribeTags for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeTags
0000000000000000000000000000000000000000;;	func (c *ELB) DescribeTags(input *DescribeTagsInput) (*DescribeTagsOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DescribeTagsRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDetachLoadBalancerFromSubnets = "DetachLoadBalancerFromSubnets"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DetachLoadBalancerFromSubnetsRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DetachLoadBalancerFromSubnets operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DetachLoadBalancerFromSubnets for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DetachLoadBalancerFromSubnets method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DetachLoadBalancerFromSubnetsRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DetachLoadBalancerFromSubnetsRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DetachLoadBalancerFromSubnets
0000000000000000000000000000000000000000;;	func (c *ELB) DetachLoadBalancerFromSubnetsRequest(input *DetachLoadBalancerFromSubnetsInput) (req *request.Request, output *DetachLoadBalancerFromSubnetsOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDetachLoadBalancerFromSubnets,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DetachLoadBalancerFromSubnetsInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DetachLoadBalancerFromSubnetsOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DetachLoadBalancerFromSubnets API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Removes the specified subnets from the set of configured subnets for the
0000000000000000000000000000000000000000;;	// load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// After a subnet is removed, all EC2 instances registered with the load balancer
0000000000000000000000000000000000000000;;	// in the removed subnet go into the OutOfService state. Then, the load balancer
0000000000000000000000000000000000000000;;	// balances the traffic among the remaining routable subnets.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DetachLoadBalancerFromSubnets for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DetachLoadBalancerFromSubnets
0000000000000000000000000000000000000000;;	func (c *ELB) DetachLoadBalancerFromSubnets(input *DetachLoadBalancerFromSubnetsInput) (*DetachLoadBalancerFromSubnetsOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DetachLoadBalancerFromSubnetsRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opDisableAvailabilityZonesForLoadBalancer = "DisableAvailabilityZonesForLoadBalancer"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DisableAvailabilityZonesForLoadBalancerRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the DisableAvailabilityZonesForLoadBalancer operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See DisableAvailabilityZonesForLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the DisableAvailabilityZonesForLoadBalancer method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the DisableAvailabilityZonesForLoadBalancerRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.DisableAvailabilityZonesForLoadBalancerRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DisableAvailabilityZonesForLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) DisableAvailabilityZonesForLoadBalancerRequest(input *DisableAvailabilityZonesForLoadBalancerInput) (req *request.Request, output *DisableAvailabilityZonesForLoadBalancerOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opDisableAvailabilityZonesForLoadBalancer,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &DisableAvailabilityZonesForLoadBalancerInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &DisableAvailabilityZonesForLoadBalancerOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DisableAvailabilityZonesForLoadBalancer API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Removes the specified Availability Zones from the set of Availability Zones
0000000000000000000000000000000000000000;;	// for the specified load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// There must be at least one Availability Zone registered with a load balancer
0000000000000000000000000000000000000000;;	// at all times. After an Availability Zone is removed, all instances registered
0000000000000000000000000000000000000000;;	// with the load balancer that are in the removed Availability Zone go into
0000000000000000000000000000000000000000;;	// the OutOfService state. Then, the load balancer attempts to equally balance
0000000000000000000000000000000000000000;;	// the traffic among its remaining Availability Zones.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Add or Remove Availability Zones (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation DisableAvailabilityZonesForLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DisableAvailabilityZonesForLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) DisableAvailabilityZonesForLoadBalancer(input *DisableAvailabilityZonesForLoadBalancerInput) (*DisableAvailabilityZonesForLoadBalancerOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.DisableAvailabilityZonesForLoadBalancerRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opEnableAvailabilityZonesForLoadBalancer = "EnableAvailabilityZonesForLoadBalancer"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// EnableAvailabilityZonesForLoadBalancerRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the EnableAvailabilityZonesForLoadBalancer operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See EnableAvailabilityZonesForLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the EnableAvailabilityZonesForLoadBalancer method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the EnableAvailabilityZonesForLoadBalancerRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.EnableAvailabilityZonesForLoadBalancerRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/EnableAvailabilityZonesForLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) EnableAvailabilityZonesForLoadBalancerRequest(input *EnableAvailabilityZonesForLoadBalancerInput) (req *request.Request, output *EnableAvailabilityZonesForLoadBalancerOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opEnableAvailabilityZonesForLoadBalancer,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &EnableAvailabilityZonesForLoadBalancerInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &EnableAvailabilityZonesForLoadBalancerOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// EnableAvailabilityZonesForLoadBalancer API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Adds the specified Availability Zones to the set of Availability Zones for
0000000000000000000000000000000000000000;;	// the specified load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// The load balancer evenly distributes requests across all its registered Availability
0000000000000000000000000000000000000000;;	// Zones that contain instances.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Add or Remove Availability Zones (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation EnableAvailabilityZonesForLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/EnableAvailabilityZonesForLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) EnableAvailabilityZonesForLoadBalancer(input *EnableAvailabilityZonesForLoadBalancerInput) (*EnableAvailabilityZonesForLoadBalancerOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.EnableAvailabilityZonesForLoadBalancerRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opModifyLoadBalancerAttributes = "ModifyLoadBalancerAttributes"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ModifyLoadBalancerAttributesRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the ModifyLoadBalancerAttributes operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See ModifyLoadBalancerAttributes for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the ModifyLoadBalancerAttributes method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the ModifyLoadBalancerAttributesRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.ModifyLoadBalancerAttributesRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ModifyLoadBalancerAttributes
0000000000000000000000000000000000000000;;	func (c *ELB) ModifyLoadBalancerAttributesRequest(input *ModifyLoadBalancerAttributesInput) (req *request.Request, output *ModifyLoadBalancerAttributesOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opModifyLoadBalancerAttributes,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &ModifyLoadBalancerAttributesInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &ModifyLoadBalancerAttributesOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// ModifyLoadBalancerAttributes API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Modifies the attributes of the specified load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// You can modify the load balancer attributes, such as AccessLogs, ConnectionDraining,
0000000000000000000000000000000000000000;;	// and CrossZoneLoadBalancing by either enabling or disabling them. Or, you
0000000000000000000000000000000000000000;;	// can modify the load balancer attribute ConnectionSettings by specifying an
0000000000000000000000000000000000000000;;	// idle connection timeout value for your load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see the following in the Classic Load Balancers Guide:
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    * Cross-Zone Load Balancing (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    * Connection Draining (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    * Access Logs (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/access-log-collection.html)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    * Idle Connection Timeout (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation ModifyLoadBalancerAttributes for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * LoadBalancerAttributeNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer attribute does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ModifyLoadBalancerAttributes
0000000000000000000000000000000000000000;;	func (c *ELB) ModifyLoadBalancerAttributes(input *ModifyLoadBalancerAttributesInput) (*ModifyLoadBalancerAttributesOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.ModifyLoadBalancerAttributesRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opRegisterInstancesWithLoadBalancer = "RegisterInstancesWithLoadBalancer"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RegisterInstancesWithLoadBalancerRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the RegisterInstancesWithLoadBalancer operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See RegisterInstancesWithLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the RegisterInstancesWithLoadBalancer method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the RegisterInstancesWithLoadBalancerRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.RegisterInstancesWithLoadBalancerRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RegisterInstancesWithLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) RegisterInstancesWithLoadBalancerRequest(input *RegisterInstancesWithLoadBalancerInput) (req *request.Request, output *RegisterInstancesWithLoadBalancerOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opRegisterInstancesWithLoadBalancer,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &RegisterInstancesWithLoadBalancerInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &RegisterInstancesWithLoadBalancerOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RegisterInstancesWithLoadBalancer API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Adds the specified instances to the specified load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// The instance must be a running instance in the same network as the load balancer
0000000000000000000000000000000000000000;;	// (EC2-Classic or the same VPC). If you have EC2-Classic instances and a load
0000000000000000000000000000000000000000;;	// balancer in a VPC with ClassicLink enabled, you can link the EC2-Classic
0000000000000000000000000000000000000000;;	// instances to that VPC and then register the linked EC2-Classic instances
0000000000000000000000000000000000000000;;	// with the load balancer in the VPC.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note that RegisterInstanceWithLoadBalancer completes when the request has
0000000000000000000000000000000000000000;;	// been registered. Instance registration takes a little time to complete. To
0000000000000000000000000000000000000000;;	// check the state of the registered instances, use DescribeLoadBalancers or
0000000000000000000000000000000000000000;;	// DescribeInstanceHealth.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// After the instance is registered, it starts receiving traffic and requests
0000000000000000000000000000000000000000;;	// from the load balancer. Any instance that is not in one of the Availability
0000000000000000000000000000000000000000;;	// Zones registered for the load balancer is moved to the OutOfService state.
0000000000000000000000000000000000000000;;	// If an Availability Zone is added to the load balancer later, any instances
0000000000000000000000000000000000000000;;	// registered with the load balancer move to the InService state.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// To deregister instances from a load balancer, use DeregisterInstancesFromLoadBalancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information, see Register or De-Register EC2 Instances (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation RegisterInstancesWithLoadBalancer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidInstance
0000000000000000000000000000000000000000;;	//   The specified endpoint is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RegisterInstancesWithLoadBalancer
0000000000000000000000000000000000000000;;	func (c *ELB) RegisterInstancesWithLoadBalancer(input *RegisterInstancesWithLoadBalancerInput) (*RegisterInstancesWithLoadBalancerOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.RegisterInstancesWithLoadBalancerRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opRemoveTags = "RemoveTags"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RemoveTagsRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the RemoveTags operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See RemoveTags for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the RemoveTags method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the RemoveTagsRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.RemoveTagsRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RemoveTags
0000000000000000000000000000000000000000;;	func (c *ELB) RemoveTagsRequest(input *RemoveTagsInput) (req *request.Request, output *RemoveTagsOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opRemoveTags,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &RemoveTagsInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &RemoveTagsOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// RemoveTags API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Removes one or more tags from the specified load balancer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation RemoveTags for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RemoveTags
0000000000000000000000000000000000000000;;	func (c *ELB) RemoveTags(input *RemoveTagsInput) (*RemoveTagsOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.RemoveTagsRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opSetLoadBalancerListenerSSLCertificate = "SetLoadBalancerListenerSSLCertificate"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerListenerSSLCertificateRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the SetLoadBalancerListenerSSLCertificate operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See SetLoadBalancerListenerSSLCertificate for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the SetLoadBalancerListenerSSLCertificate method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the SetLoadBalancerListenerSSLCertificateRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.SetLoadBalancerListenerSSLCertificateRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerListenerSSLCertificate
0000000000000000000000000000000000000000;;	func (c *ELB) SetLoadBalancerListenerSSLCertificateRequest(input *SetLoadBalancerListenerSSLCertificateInput) (req *request.Request, output *SetLoadBalancerListenerSSLCertificateOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opSetLoadBalancerListenerSSLCertificate,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &SetLoadBalancerListenerSSLCertificateInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &SetLoadBalancerListenerSSLCertificateOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerListenerSSLCertificate API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Sets the certificate that terminates the specified listener's SSL connections.
0000000000000000000000000000000000000000;;	// The specified certificate replaces any prior certificate that was used on
0000000000000000000000000000000000000000;;	// the same load balancer and port.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information about updating your SSL certificate, see Replace the
0000000000000000000000000000000000000000;;	// SSL Certificate for Your Load Balancer (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-update-ssl-cert.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation SetLoadBalancerListenerSSLCertificate for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * CertificateNotFound
0000000000000000000000000000000000000000;;	//   The specified ARN does not refer to a valid SSL certificate in AWS Identity
0000000000000000000000000000000000000000;;	//   and Access Management (IAM) or AWS Certificate Manager (ACM). Note that if
0000000000000000000000000000000000000000;;	//   you recently uploaded the certificate to IAM, this error might indicate that
0000000000000000000000000000000000000000;;	//   the certificate is not fully available yet.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * ListenerNotFound
0000000000000000000000000000000000000000;;	//   The load balancer does not have a listener configured at the specified port.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * UnsupportedProtocol
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerListenerSSLCertificate
0000000000000000000000000000000000000000;;	func (c *ELB) SetLoadBalancerListenerSSLCertificate(input *SetLoadBalancerListenerSSLCertificateInput) (*SetLoadBalancerListenerSSLCertificateOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.SetLoadBalancerListenerSSLCertificateRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opSetLoadBalancerPoliciesForBackendServer = "SetLoadBalancerPoliciesForBackendServer"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerPoliciesForBackendServerRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the SetLoadBalancerPoliciesForBackendServer operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See SetLoadBalancerPoliciesForBackendServer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the SetLoadBalancerPoliciesForBackendServer method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the SetLoadBalancerPoliciesForBackendServerRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.SetLoadBalancerPoliciesForBackendServerRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerPoliciesForBackendServer
0000000000000000000000000000000000000000;;	func (c *ELB) SetLoadBalancerPoliciesForBackendServerRequest(input *SetLoadBalancerPoliciesForBackendServerInput) (req *request.Request, output *SetLoadBalancerPoliciesForBackendServerOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opSetLoadBalancerPoliciesForBackendServer,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &SetLoadBalancerPoliciesForBackendServerInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &SetLoadBalancerPoliciesForBackendServerOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerPoliciesForBackendServer API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Replaces the set of policies associated with the specified port on which
0000000000000000000000000000000000000000;;	// the EC2 instance is listening with a new set of policies. At this time, only
0000000000000000000000000000000000000000;;	// the back-end server authentication policy type can be applied to the instance
0000000000000000000000000000000000000000;;	// ports; this policy type is composed of multiple public key policies.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Each time you use SetLoadBalancerPoliciesForBackendServer to enable the policies,
0000000000000000000000000000000000000000;;	// use the PolicyNames parameter to list the policies that you want to enable.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// You can use DescribeLoadBalancers or DescribeLoadBalancerPolicies to verify
0000000000000000000000000000000000000000;;	// that the policy is associated with the EC2 instance.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information about enabling back-end instance authentication, see
0000000000000000000000000000000000000000;;	// Configure Back-end Instance Authentication (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-create-https-ssl-load-balancer.html#configure_backendauth_clt)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide. For more information about Proxy Protocol,
0000000000000000000000000000000000000000;;	// see Configure Proxy Protocol Support (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-proxy-protocol.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation SetLoadBalancerPoliciesForBackendServer for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * PolicyNotFound
0000000000000000000000000000000000000000;;	//   One or more of the specified policies do not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerPoliciesForBackendServer
0000000000000000000000000000000000000000;;	func (c *ELB) SetLoadBalancerPoliciesForBackendServer(input *SetLoadBalancerPoliciesForBackendServerInput) (*SetLoadBalancerPoliciesForBackendServerOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.SetLoadBalancerPoliciesForBackendServerRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const opSetLoadBalancerPoliciesOfListener = "SetLoadBalancerPoliciesOfListener"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerPoliciesOfListenerRequest generates a "aws/request.Request" representing the
0000000000000000000000000000000000000000;;	// client's request for the SetLoadBalancerPoliciesOfListener operation. The "output" return
0000000000000000000000000000000000000000;;	// value can be used to capture response data after the request's "Send" method
0000000000000000000000000000000000000000;;	// is called.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See SetLoadBalancerPoliciesOfListener for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Creating a request object using this method should be used when you want to inject
0000000000000000000000000000000000000000;;	// custom logic into the request's lifecycle using a custom handler, or if you want to
0000000000000000000000000000000000000000;;	// access properties on the request object before or after sending the request. If
0000000000000000000000000000000000000000;;	// you just want the service response, call the SetLoadBalancerPoliciesOfListener method directly
0000000000000000000000000000000000000000;;	// instead.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Note: You must call the "Send" method on the returned request object in order
0000000000000000000000000000000000000000;;	// to execute the request.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    // Example sending a request using the SetLoadBalancerPoliciesOfListenerRequest method.
0000000000000000000000000000000000000000;;	//    req, resp := client.SetLoadBalancerPoliciesOfListenerRequest(params)
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    err := req.Send()
0000000000000000000000000000000000000000;;	//    if err == nil { // resp is now filled
0000000000000000000000000000000000000000;;	//        fmt.Println(resp)
0000000000000000000000000000000000000000;;	//    }
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerPoliciesOfListener
0000000000000000000000000000000000000000;;	func (c *ELB) SetLoadBalancerPoliciesOfListenerRequest(input *SetLoadBalancerPoliciesOfListenerInput) (req *request.Request, output *SetLoadBalancerPoliciesOfListenerOutput) {
0000000000000000000000000000000000000000;;		op := &request.Operation{
0000000000000000000000000000000000000000;;			Name:       opSetLoadBalancerPoliciesOfListener,
0000000000000000000000000000000000000000;;			HTTPMethod: "POST",
0000000000000000000000000000000000000000;;			HTTPPath:   "/",
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if input == nil {
0000000000000000000000000000000000000000;;			input = &SetLoadBalancerPoliciesOfListenerInput{}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		output = &SetLoadBalancerPoliciesOfListenerOutput{}
0000000000000000000000000000000000000000;;		req = c.newRequest(op, input, output)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerPoliciesOfListener API operation for Elastic Load Balancing.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Replaces the current set of policies for the specified load balancer port
0000000000000000000000000000000000000000;;	// with the specified set of policies.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// To enable back-end server authentication, use SetLoadBalancerPoliciesForBackendServer.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For more information about setting policies, see Update the SSL Negotiation
0000000000000000000000000000000000000000;;	// Configuration (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/ssl-config-update.html),
0000000000000000000000000000000000000000;;	// Duration-Based Session Stickiness (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration),
0000000000000000000000000000000000000000;;	// and Application-Controlled Session Stickiness (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
0000000000000000000000000000000000000000;;	// with awserr.Error's Code and Message methods to get detailed information about
0000000000000000000000000000000000000000;;	// the error.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// See the AWS API reference guide for Elastic Load Balancing's
0000000000000000000000000000000000000000;;	// API operation SetLoadBalancerPoliciesOfListener for usage and error information.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Returned Error Codes:
0000000000000000000000000000000000000000;;	//   * LoadBalancerNotFound
0000000000000000000000000000000000000000;;	//   The specified load balancer does not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * PolicyNotFound
0000000000000000000000000000000000000000;;	//   One or more of the specified policies do not exist.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * ListenerNotFound
0000000000000000000000000000000000000000;;	//   The load balancer does not have a listener configured at the specified port.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//   * InvalidConfigurationRequest
0000000000000000000000000000000000000000;;	//   The requested configuration change is not valid.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerPoliciesOfListener
0000000000000000000000000000000000000000;;	func (c *ELB) SetLoadBalancerPoliciesOfListener(input *SetLoadBalancerPoliciesOfListenerInput) (*SetLoadBalancerPoliciesOfListenerOutput, error) {
0000000000000000000000000000000000000000;;		req, out := c.SetLoadBalancerPoliciesOfListenerRequest(input)
0000000000000000000000000000000000000000;;		err := req.Send()
0000000000000000000000000000000000000000;;		return out, err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about the AccessLog attribute.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AccessLog
0000000000000000000000000000000000000000;;	type AccessLog struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The interval for publishing the access logs. You can specify an interval
0000000000000000000000000000000000000000;;		// of either 5 minutes or 60 minutes.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Default: 60 minutes
0000000000000000000000000000000000000000;;		EmitInterval *int64 `type:"integer"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Specifies whether access logs are enabled for the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Enabled is a required field
0000000000000000000000000000000000000000;;		Enabled *bool `type:"boolean" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the Amazon S3 bucket where the access logs are stored.
0000000000000000000000000000000000000000;;		S3BucketName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The logical hierarchy you created for your Amazon S3 bucket, for example
0000000000000000000000000000000000000000;;		// my-bucket-prefix/prod. If the prefix is not provided, the log is placed at
0000000000000000000000000000000000000000;;		// the root level of the bucket.
0000000000000000000000000000000000000000;;		S3BucketPrefix *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s AccessLog) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s AccessLog) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *AccessLog) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "AccessLog"}
0000000000000000000000000000000000000000;;		if s.Enabled == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Enabled"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetEmitInterval sets the EmitInterval field's value.
0000000000000000000000000000000000000000;;	func (s *AccessLog) SetEmitInterval(v int64) *AccessLog {
0000000000000000000000000000000000000000;;		s.EmitInterval = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetEnabled sets the Enabled field's value.
0000000000000000000000000000000000000000;;	func (s *AccessLog) SetEnabled(v bool) *AccessLog {
0000000000000000000000000000000000000000;;		s.Enabled = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetS3BucketName sets the S3BucketName field's value.
0000000000000000000000000000000000000000;;	func (s *AccessLog) SetS3BucketName(v string) *AccessLog {
0000000000000000000000000000000000000000;;		s.S3BucketName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetS3BucketPrefix sets the S3BucketPrefix field's value.
0000000000000000000000000000000000000000;;	func (s *AccessLog) SetS3BucketPrefix(v string) *AccessLog {
0000000000000000000000000000000000000000;;		s.S3BucketPrefix = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for AddTags.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AddTagsInput
0000000000000000000000000000000000000000;;	type AddTagsInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer. You can specify one load balancer only.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerNames is a required field
0000000000000000000000000000000000000000;;		LoadBalancerNames []*string `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The tags.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Tags is a required field
0000000000000000000000000000000000000000;;		Tags []*Tag `min:"1" type:"list" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s AddTagsInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s AddTagsInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *AddTagsInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "AddTagsInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerNames == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerNames"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Tags == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Tags"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Tags != nil && len(s.Tags) < 1 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinLen("Tags", 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Tags != nil {
0000000000000000000000000000000000000000;;			for i, v := range s.Tags {
0000000000000000000000000000000000000000;;				if v == nil {
0000000000000000000000000000000000000000;;					continue
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;				if err := v.Validate(); err != nil {
0000000000000000000000000000000000000000;;					invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Tags", i), err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerNames sets the LoadBalancerNames field's value.
0000000000000000000000000000000000000000;;	func (s *AddTagsInput) SetLoadBalancerNames(v []*string) *AddTagsInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetTags sets the Tags field's value.
0000000000000000000000000000000000000000;;	func (s *AddTagsInput) SetTags(v []*Tag) *AddTagsInput {
0000000000000000000000000000000000000000;;		s.Tags = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of AddTags.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AddTagsOutput
0000000000000000000000000000000000000000;;	type AddTagsOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s AddTagsOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s AddTagsOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// This data type is reserved.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AdditionalAttribute
0000000000000000000000000000000000000000;;	type AdditionalAttribute struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// This parameter is reserved.
0000000000000000000000000000000000000000;;		Key *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// This parameter is reserved.
0000000000000000000000000000000000000000;;		Value *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s AdditionalAttribute) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s AdditionalAttribute) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetKey sets the Key field's value.
0000000000000000000000000000000000000000;;	func (s *AdditionalAttribute) SetKey(v string) *AdditionalAttribute {
0000000000000000000000000000000000000000;;		s.Key = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetValue sets the Value field's value.
0000000000000000000000000000000000000000;;	func (s *AdditionalAttribute) SetValue(v string) *AdditionalAttribute {
0000000000000000000000000000000000000000;;		s.Value = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a policy for application-controlled session stickiness.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AppCookieStickinessPolicy
0000000000000000000000000000000000000000;;	type AppCookieStickinessPolicy struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the application cookie used for stickiness.
0000000000000000000000000000000000000000;;		CookieName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The mnemonic name for the policy being created. The name must be unique within
0000000000000000000000000000000000000000;;		// a set of policies for this load balancer.
0000000000000000000000000000000000000000;;		PolicyName *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s AppCookieStickinessPolicy) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s AppCookieStickinessPolicy) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetCookieName sets the CookieName field's value.
0000000000000000000000000000000000000000;;	func (s *AppCookieStickinessPolicy) SetCookieName(v string) *AppCookieStickinessPolicy {
0000000000000000000000000000000000000000;;		s.CookieName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyName sets the PolicyName field's value.
0000000000000000000000000000000000000000;;	func (s *AppCookieStickinessPolicy) SetPolicyName(v string) *AppCookieStickinessPolicy {
0000000000000000000000000000000000000000;;		s.PolicyName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for ApplySecurityGroupsToLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ApplySecurityGroupsToLoadBalancerInput
0000000000000000000000000000000000000000;;	type ApplySecurityGroupsToLoadBalancerInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the security groups to associate with the load balancer. Note
0000000000000000000000000000000000000000;;		// that you cannot specify the name of the security group.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// SecurityGroups is a required field
0000000000000000000000000000000000000000;;		SecurityGroups []*string `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s ApplySecurityGroupsToLoadBalancerInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s ApplySecurityGroupsToLoadBalancerInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *ApplySecurityGroupsToLoadBalancerInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "ApplySecurityGroupsToLoadBalancerInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.SecurityGroups == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("SecurityGroups"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *ApplySecurityGroupsToLoadBalancerInput) SetLoadBalancerName(v string) *ApplySecurityGroupsToLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSecurityGroups sets the SecurityGroups field's value.
0000000000000000000000000000000000000000;;	func (s *ApplySecurityGroupsToLoadBalancerInput) SetSecurityGroups(v []*string) *ApplySecurityGroupsToLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.SecurityGroups = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of ApplySecurityGroupsToLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ApplySecurityGroupsToLoadBalancerOutput
0000000000000000000000000000000000000000;;	type ApplySecurityGroupsToLoadBalancerOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the security groups associated with the load balancer.
0000000000000000000000000000000000000000;;		SecurityGroups []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s ApplySecurityGroupsToLoadBalancerOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s ApplySecurityGroupsToLoadBalancerOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSecurityGroups sets the SecurityGroups field's value.
0000000000000000000000000000000000000000;;	func (s *ApplySecurityGroupsToLoadBalancerOutput) SetSecurityGroups(v []*string) *ApplySecurityGroupsToLoadBalancerOutput {
0000000000000000000000000000000000000000;;		s.SecurityGroups = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for AttachLoaBalancerToSubnets.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AttachLoadBalancerToSubnetsInput
0000000000000000000000000000000000000000;;	type AttachLoadBalancerToSubnetsInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the subnets to add. You can add only one subnet per Availability
0000000000000000000000000000000000000000;;		// Zone.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Subnets is a required field
0000000000000000000000000000000000000000;;		Subnets []*string `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s AttachLoadBalancerToSubnetsInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s AttachLoadBalancerToSubnetsInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *AttachLoadBalancerToSubnetsInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "AttachLoadBalancerToSubnetsInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Subnets == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Subnets"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *AttachLoadBalancerToSubnetsInput) SetLoadBalancerName(v string) *AttachLoadBalancerToSubnetsInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSubnets sets the Subnets field's value.
0000000000000000000000000000000000000000;;	func (s *AttachLoadBalancerToSubnetsInput) SetSubnets(v []*string) *AttachLoadBalancerToSubnetsInput {
0000000000000000000000000000000000000000;;		s.Subnets = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of AttachLoadBalancerToSubnets.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AttachLoadBalancerToSubnetsOutput
0000000000000000000000000000000000000000;;	type AttachLoadBalancerToSubnetsOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the subnets attached to the load balancer.
0000000000000000000000000000000000000000;;		Subnets []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s AttachLoadBalancerToSubnetsOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s AttachLoadBalancerToSubnetsOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSubnets sets the Subnets field's value.
0000000000000000000000000000000000000000;;	func (s *AttachLoadBalancerToSubnetsOutput) SetSubnets(v []*string) *AttachLoadBalancerToSubnetsOutput {
0000000000000000000000000000000000000000;;		s.Subnets = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about the configuration of an EC2 instance.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/BackendServerDescription
0000000000000000000000000000000000000000;;	type BackendServerDescription struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The port on which the EC2 instance is listening.
0000000000000000000000000000000000000000;;		InstancePort *int64 `min:"1" type:"integer"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The names of the policies enabled for the EC2 instance.
0000000000000000000000000000000000000000;;		PolicyNames []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s BackendServerDescription) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s BackendServerDescription) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstancePort sets the InstancePort field's value.
0000000000000000000000000000000000000000;;	func (s *BackendServerDescription) SetInstancePort(v int64) *BackendServerDescription {
0000000000000000000000000000000000000000;;		s.InstancePort = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyNames sets the PolicyNames field's value.
0000000000000000000000000000000000000000;;	func (s *BackendServerDescription) SetPolicyNames(v []*string) *BackendServerDescription {
0000000000000000000000000000000000000000;;		s.PolicyNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for ConfigureHealthCheck.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ConfigureHealthCheckInput
0000000000000000000000000000000000000000;;	type ConfigureHealthCheckInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The configuration information.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// HealthCheck is a required field
0000000000000000000000000000000000000000;;		HealthCheck *HealthCheck `type:"structure" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s ConfigureHealthCheckInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s ConfigureHealthCheckInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *ConfigureHealthCheckInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "ConfigureHealthCheckInput"}
0000000000000000000000000000000000000000;;		if s.HealthCheck == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("HealthCheck"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.HealthCheck != nil {
0000000000000000000000000000000000000000;;			if err := s.HealthCheck.Validate(); err != nil {
0000000000000000000000000000000000000000;;				invalidParams.AddNested("HealthCheck", err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetHealthCheck sets the HealthCheck field's value.
0000000000000000000000000000000000000000;;	func (s *ConfigureHealthCheckInput) SetHealthCheck(v *HealthCheck) *ConfigureHealthCheckInput {
0000000000000000000000000000000000000000;;		s.HealthCheck = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *ConfigureHealthCheckInput) SetLoadBalancerName(v string) *ConfigureHealthCheckInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of ConfigureHealthCheck.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ConfigureHealthCheckOutput
0000000000000000000000000000000000000000;;	type ConfigureHealthCheckOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The updated health check.
0000000000000000000000000000000000000000;;		HealthCheck *HealthCheck `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s ConfigureHealthCheckOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s ConfigureHealthCheckOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetHealthCheck sets the HealthCheck field's value.
0000000000000000000000000000000000000000;;	func (s *ConfigureHealthCheckOutput) SetHealthCheck(v *HealthCheck) *ConfigureHealthCheckOutput {
0000000000000000000000000000000000000000;;		s.HealthCheck = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about the ConnectionDraining attribute.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ConnectionDraining
0000000000000000000000000000000000000000;;	type ConnectionDraining struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Specifies whether connection draining is enabled for the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Enabled is a required field
0000000000000000000000000000000000000000;;		Enabled *bool `type:"boolean" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The maximum time, in seconds, to keep the existing connections open before
0000000000000000000000000000000000000000;;		// deregistering the instances.
0000000000000000000000000000000000000000;;		Timeout *int64 `type:"integer"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s ConnectionDraining) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s ConnectionDraining) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *ConnectionDraining) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "ConnectionDraining"}
0000000000000000000000000000000000000000;;		if s.Enabled == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Enabled"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetEnabled sets the Enabled field's value.
0000000000000000000000000000000000000000;;	func (s *ConnectionDraining) SetEnabled(v bool) *ConnectionDraining {
0000000000000000000000000000000000000000;;		s.Enabled = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetTimeout sets the Timeout field's value.
0000000000000000000000000000000000000000;;	func (s *ConnectionDraining) SetTimeout(v int64) *ConnectionDraining {
0000000000000000000000000000000000000000;;		s.Timeout = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about the ConnectionSettings attribute.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ConnectionSettings
0000000000000000000000000000000000000000;;	type ConnectionSettings struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The time, in seconds, that the connection is allowed to be idle (no data
0000000000000000000000000000000000000000;;		// has been sent over the connection) before it is closed by the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// IdleTimeout is a required field
0000000000000000000000000000000000000000;;		IdleTimeout *int64 `min:"1" type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s ConnectionSettings) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s ConnectionSettings) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *ConnectionSettings) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "ConnectionSettings"}
0000000000000000000000000000000000000000;;		if s.IdleTimeout == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("IdleTimeout"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.IdleTimeout != nil && *s.IdleTimeout < 1 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinValue("IdleTimeout", 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetIdleTimeout sets the IdleTimeout field's value.
0000000000000000000000000000000000000000;;	func (s *ConnectionSettings) SetIdleTimeout(v int64) *ConnectionSettings {
0000000000000000000000000000000000000000;;		s.IdleTimeout = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for CreateAppCookieStickinessPolicy.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateAppCookieStickinessPolicyInput
0000000000000000000000000000000000000000;;	type CreateAppCookieStickinessPolicyInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the application cookie used for stickiness.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// CookieName is a required field
0000000000000000000000000000000000000000;;		CookieName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the policy being created. Policy names must consist of alphanumeric
0000000000000000000000000000000000000000;;		// characters and dashes (-). This name must be unique within the set of policies
0000000000000000000000000000000000000000;;		// for this load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// PolicyName is a required field
0000000000000000000000000000000000000000;;		PolicyName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateAppCookieStickinessPolicyInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateAppCookieStickinessPolicyInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *CreateAppCookieStickinessPolicyInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "CreateAppCookieStickinessPolicyInput"}
0000000000000000000000000000000000000000;;		if s.CookieName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("CookieName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.PolicyName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("PolicyName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetCookieName sets the CookieName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateAppCookieStickinessPolicyInput) SetCookieName(v string) *CreateAppCookieStickinessPolicyInput {
0000000000000000000000000000000000000000;;		s.CookieName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateAppCookieStickinessPolicyInput) SetLoadBalancerName(v string) *CreateAppCookieStickinessPolicyInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyName sets the PolicyName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateAppCookieStickinessPolicyInput) SetPolicyName(v string) *CreateAppCookieStickinessPolicyInput {
0000000000000000000000000000000000000000;;		s.PolicyName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output for CreateAppCookieStickinessPolicy.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateAppCookieStickinessPolicyOutput
0000000000000000000000000000000000000000;;	type CreateAppCookieStickinessPolicyOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateAppCookieStickinessPolicyOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateAppCookieStickinessPolicyOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for CreateLBCookieStickinessPolicy.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLBCookieStickinessPolicyInput
0000000000000000000000000000000000000000;;	type CreateLBCookieStickinessPolicyInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The time period, in seconds, after which the cookie should be considered
0000000000000000000000000000000000000000;;		// stale. If you do not specify this parameter, the default value is 0, which
0000000000000000000000000000000000000000;;		// indicates that the sticky session should last for the duration of the browser
0000000000000000000000000000000000000000;;		// session.
0000000000000000000000000000000000000000;;		CookieExpirationPeriod *int64 `type:"long"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the policy being created. Policy names must consist of alphanumeric
0000000000000000000000000000000000000000;;		// characters and dashes (-). This name must be unique within the set of policies
0000000000000000000000000000000000000000;;		// for this load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// PolicyName is a required field
0000000000000000000000000000000000000000;;		PolicyName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLBCookieStickinessPolicyInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLBCookieStickinessPolicyInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *CreateLBCookieStickinessPolicyInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "CreateLBCookieStickinessPolicyInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.PolicyName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("PolicyName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetCookieExpirationPeriod sets the CookieExpirationPeriod field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLBCookieStickinessPolicyInput) SetCookieExpirationPeriod(v int64) *CreateLBCookieStickinessPolicyInput {
0000000000000000000000000000000000000000;;		s.CookieExpirationPeriod = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLBCookieStickinessPolicyInput) SetLoadBalancerName(v string) *CreateLBCookieStickinessPolicyInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyName sets the PolicyName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLBCookieStickinessPolicyInput) SetPolicyName(v string) *CreateLBCookieStickinessPolicyInput {
0000000000000000000000000000000000000000;;		s.PolicyName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output for CreateLBCookieStickinessPolicy.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLBCookieStickinessPolicyOutput
0000000000000000000000000000000000000000;;	type CreateLBCookieStickinessPolicyOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLBCookieStickinessPolicyOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLBCookieStickinessPolicyOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for CreateLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateAccessPointInput
0000000000000000000000000000000000000000;;	type CreateLoadBalancerInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// One or more Availability Zones from the same region as the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// You must specify at least one Availability Zone.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// You can add more Availability Zones after you create the load balancer using
0000000000000000000000000000000000000000;;		// EnableAvailabilityZonesForLoadBalancer.
0000000000000000000000000000000000000000;;		AvailabilityZones []*string `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The listeners.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// For more information, see Listeners for Your Classic Load Balancer (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)
0000000000000000000000000000000000000000;;		// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Listeners is a required field
0000000000000000000000000000000000000000;;		Listeners []*Listener `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// This name must be unique within your set of load balancers for the region,
0000000000000000000000000000000000000000;;		// must have a maximum of 32 characters, must contain only alphanumeric characters
0000000000000000000000000000000000000000;;		// or hyphens, and cannot begin or end with a hyphen.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The type of a load balancer. Valid only for load balancers in a VPC.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// By default, Elastic Load Balancing creates an Internet-facing load balancer
0000000000000000000000000000000000000000;;		// with a DNS name that resolves to public IP addresses. For more information
0000000000000000000000000000000000000000;;		// about Internet-facing and Internal load balancers, see Load Balancer Scheme
0000000000000000000000000000000000000000;;		// (http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#load-balancer-scheme)
0000000000000000000000000000000000000000;;		// in the Elastic Load Balancing User Guide.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Specify internal to create a load balancer with a DNS name that resolves
0000000000000000000000000000000000000000;;		// to private IP addresses.
0000000000000000000000000000000000000000;;		Scheme *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the security groups to assign to the load balancer.
0000000000000000000000000000000000000000;;		SecurityGroups []*string `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the subnets in your VPC to attach to the load balancer. Specify
0000000000000000000000000000000000000000;;		// one subnet per Availability Zone specified in AvailabilityZones.
0000000000000000000000000000000000000000;;		Subnets []*string `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// A list of tags to assign to the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// For more information about tagging your load balancer, see Tag Your Classic
0000000000000000000000000000000000000000;;		// Load Balancer (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html)
0000000000000000000000000000000000000000;;		// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;		Tags []*Tag `min:"1" type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "CreateLoadBalancerInput"}
0000000000000000000000000000000000000000;;		if s.Listeners == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Listeners"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Tags != nil && len(s.Tags) < 1 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinLen("Tags", 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Listeners != nil {
0000000000000000000000000000000000000000;;			for i, v := range s.Listeners {
0000000000000000000000000000000000000000;;				if v == nil {
0000000000000000000000000000000000000000;;					continue
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;				if err := v.Validate(); err != nil {
0000000000000000000000000000000000000000;;					invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Listeners", i), err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Tags != nil {
0000000000000000000000000000000000000000;;			for i, v := range s.Tags {
0000000000000000000000000000000000000000;;				if v == nil {
0000000000000000000000000000000000000000;;					continue
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;				if err := v.Validate(); err != nil {
0000000000000000000000000000000000000000;;					invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Tags", i), err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAvailabilityZones sets the AvailabilityZones field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerInput) SetAvailabilityZones(v []*string) *CreateLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.AvailabilityZones = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetListeners sets the Listeners field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerInput) SetListeners(v []*Listener) *CreateLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.Listeners = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerInput) SetLoadBalancerName(v string) *CreateLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetScheme sets the Scheme field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerInput) SetScheme(v string) *CreateLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.Scheme = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSecurityGroups sets the SecurityGroups field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerInput) SetSecurityGroups(v []*string) *CreateLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.SecurityGroups = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSubnets sets the Subnets field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerInput) SetSubnets(v []*string) *CreateLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.Subnets = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetTags sets the Tags field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerInput) SetTags(v []*Tag) *CreateLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.Tags = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for CreateLoadBalancerListeners.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancerListenerInput
0000000000000000000000000000000000000000;;	type CreateLoadBalancerListenersInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The listeners.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Listeners is a required field
0000000000000000000000000000000000000000;;		Listeners []*Listener `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerListenersInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerListenersInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerListenersInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "CreateLoadBalancerListenersInput"}
0000000000000000000000000000000000000000;;		if s.Listeners == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Listeners"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Listeners != nil {
0000000000000000000000000000000000000000;;			for i, v := range s.Listeners {
0000000000000000000000000000000000000000;;				if v == nil {
0000000000000000000000000000000000000000;;					continue
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;				if err := v.Validate(); err != nil {
0000000000000000000000000000000000000000;;					invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Listeners", i), err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetListeners sets the Listeners field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerListenersInput) SetListeners(v []*Listener) *CreateLoadBalancerListenersInput {
0000000000000000000000000000000000000000;;		s.Listeners = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerListenersInput) SetLoadBalancerName(v string) *CreateLoadBalancerListenersInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for CreateLoadBalancerListener.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancerListenerOutput
0000000000000000000000000000000000000000;;	type CreateLoadBalancerListenersOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerListenersOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerListenersOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output for CreateLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateAccessPointOutput
0000000000000000000000000000000000000000;;	type CreateLoadBalancerOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The DNS name of the load balancer.
0000000000000000000000000000000000000000;;		DNSName *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetDNSName sets the DNSName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerOutput) SetDNSName(v string) *CreateLoadBalancerOutput {
0000000000000000000000000000000000000000;;		s.DNSName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for CreateLoadBalancerPolicy.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancerPolicyInput
0000000000000000000000000000000000000000;;	type CreateLoadBalancerPolicyInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The policy attributes.
0000000000000000000000000000000000000000;;		PolicyAttributes []*PolicyAttribute `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer policy to be created. This name must be unique
0000000000000000000000000000000000000000;;		// within the set of policies for this load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// PolicyName is a required field
0000000000000000000000000000000000000000;;		PolicyName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the base policy type. To get the list of policy types, use DescribeLoadBalancerPolicyTypes.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// PolicyTypeName is a required field
0000000000000000000000000000000000000000;;		PolicyTypeName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerPolicyInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerPolicyInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerPolicyInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "CreateLoadBalancerPolicyInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.PolicyName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("PolicyName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.PolicyTypeName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("PolicyTypeName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerPolicyInput) SetLoadBalancerName(v string) *CreateLoadBalancerPolicyInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyAttributes sets the PolicyAttributes field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerPolicyInput) SetPolicyAttributes(v []*PolicyAttribute) *CreateLoadBalancerPolicyInput {
0000000000000000000000000000000000000000;;		s.PolicyAttributes = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyName sets the PolicyName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerPolicyInput) SetPolicyName(v string) *CreateLoadBalancerPolicyInput {
0000000000000000000000000000000000000000;;		s.PolicyName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyTypeName sets the PolicyTypeName field's value.
0000000000000000000000000000000000000000;;	func (s *CreateLoadBalancerPolicyInput) SetPolicyTypeName(v string) *CreateLoadBalancerPolicyInput {
0000000000000000000000000000000000000000;;		s.PolicyTypeName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of CreateLoadBalancerPolicy.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CreateLoadBalancerPolicyOutput
0000000000000000000000000000000000000000;;	type CreateLoadBalancerPolicyOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerPolicyOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CreateLoadBalancerPolicyOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about the CrossZoneLoadBalancing attribute.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/CrossZoneLoadBalancing
0000000000000000000000000000000000000000;;	type CrossZoneLoadBalancing struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Specifies whether cross-zone load balancing is enabled for the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Enabled is a required field
0000000000000000000000000000000000000000;;		Enabled *bool `type:"boolean" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s CrossZoneLoadBalancing) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s CrossZoneLoadBalancing) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *CrossZoneLoadBalancing) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "CrossZoneLoadBalancing"}
0000000000000000000000000000000000000000;;		if s.Enabled == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Enabled"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetEnabled sets the Enabled field's value.
0000000000000000000000000000000000000000;;	func (s *CrossZoneLoadBalancing) SetEnabled(v bool) *CrossZoneLoadBalancing {
0000000000000000000000000000000000000000;;		s.Enabled = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DeleteLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteAccessPointInput
0000000000000000000000000000000000000000;;	type DeleteLoadBalancerInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DeleteLoadBalancerInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DeleteLoadBalancerInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *DeleteLoadBalancerInput) SetLoadBalancerName(v string) *DeleteLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DeleteLoadBalancerListeners.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancerListenerInput
0000000000000000000000000000000000000000;;	type DeleteLoadBalancerListenersInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The client port numbers of the listeners.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerPorts is a required field
0000000000000000000000000000000000000000;;		LoadBalancerPorts []*int64 `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerListenersInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerListenersInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DeleteLoadBalancerListenersInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DeleteLoadBalancerListenersInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerPorts == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerPorts"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *DeleteLoadBalancerListenersInput) SetLoadBalancerName(v string) *DeleteLoadBalancerListenersInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerPorts sets the LoadBalancerPorts field's value.
0000000000000000000000000000000000000000;;	func (s *DeleteLoadBalancerListenersInput) SetLoadBalancerPorts(v []*int64) *DeleteLoadBalancerListenersInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerPorts = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of DeleteLoadBalancerListeners.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancerListenerOutput
0000000000000000000000000000000000000000;;	type DeleteLoadBalancerListenersOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerListenersOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerListenersOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of DeleteLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteAccessPointOutput
0000000000000000000000000000000000000000;;	type DeleteLoadBalancerOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DeleteLoadBalancerPolicy.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancerPolicyInput
0000000000000000000000000000000000000000;;	type DeleteLoadBalancerPolicyInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the policy.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// PolicyName is a required field
0000000000000000000000000000000000000000;;		PolicyName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerPolicyInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerPolicyInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DeleteLoadBalancerPolicyInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DeleteLoadBalancerPolicyInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.PolicyName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("PolicyName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *DeleteLoadBalancerPolicyInput) SetLoadBalancerName(v string) *DeleteLoadBalancerPolicyInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyName sets the PolicyName field's value.
0000000000000000000000000000000000000000;;	func (s *DeleteLoadBalancerPolicyInput) SetPolicyName(v string) *DeleteLoadBalancerPolicyInput {
0000000000000000000000000000000000000000;;		s.PolicyName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of DeleteLoadBalancerPolicy.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeleteLoadBalancerPolicyOutput
0000000000000000000000000000000000000000;;	type DeleteLoadBalancerPolicyOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerPolicyOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DeleteLoadBalancerPolicyOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DeregisterInstancesFromLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeregisterEndPointsInput
0000000000000000000000000000000000000000;;	type DeregisterInstancesFromLoadBalancerInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the instances.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Instances is a required field
0000000000000000000000000000000000000000;;		Instances []*Instance `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DeregisterInstancesFromLoadBalancerInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DeregisterInstancesFromLoadBalancerInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DeregisterInstancesFromLoadBalancerInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DeregisterInstancesFromLoadBalancerInput"}
0000000000000000000000000000000000000000;;		if s.Instances == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Instances"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstances sets the Instances field's value.
0000000000000000000000000000000000000000;;	func (s *DeregisterInstancesFromLoadBalancerInput) SetInstances(v []*Instance) *DeregisterInstancesFromLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.Instances = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *DeregisterInstancesFromLoadBalancerInput) SetLoadBalancerName(v string) *DeregisterInstancesFromLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of DeregisterInstancesFromLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DeregisterEndPointsOutput
0000000000000000000000000000000000000000;;	type DeregisterInstancesFromLoadBalancerOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The remaining instances registered with the load balancer.
0000000000000000000000000000000000000000;;		Instances []*Instance `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DeregisterInstancesFromLoadBalancerOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DeregisterInstancesFromLoadBalancerOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstances sets the Instances field's value.
0000000000000000000000000000000000000000;;	func (s *DeregisterInstancesFromLoadBalancerOutput) SetInstances(v []*Instance) *DeregisterInstancesFromLoadBalancerOutput {
0000000000000000000000000000000000000000;;		s.Instances = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DescribeInstanceHealth.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeEndPointStateInput
0000000000000000000000000000000000000000;;	type DescribeInstanceHealthInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the instances.
0000000000000000000000000000000000000000;;		Instances []*Instance `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeInstanceHealthInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeInstanceHealthInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DescribeInstanceHealthInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DescribeInstanceHealthInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstances sets the Instances field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeInstanceHealthInput) SetInstances(v []*Instance) *DescribeInstanceHealthInput {
0000000000000000000000000000000000000000;;		s.Instances = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeInstanceHealthInput) SetLoadBalancerName(v string) *DescribeInstanceHealthInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output for DescribeInstanceHealth.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeEndPointStateOutput
0000000000000000000000000000000000000000;;	type DescribeInstanceHealthOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about the health of the instances.
0000000000000000000000000000000000000000;;		InstanceStates []*InstanceState `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeInstanceHealthOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeInstanceHealthOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstanceStates sets the InstanceStates field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeInstanceHealthOutput) SetInstanceStates(v []*InstanceState) *DescribeInstanceHealthOutput {
0000000000000000000000000000000000000000;;		s.InstanceStates = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DescribeLoadBalancerAttributes.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerAttributesInput
0000000000000000000000000000000000000000;;	type DescribeLoadBalancerAttributesInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerAttributesInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerAttributesInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancerAttributesInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DescribeLoadBalancerAttributesInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancerAttributesInput) SetLoadBalancerName(v string) *DescribeLoadBalancerAttributesInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of DescribeLoadBalancerAttributes.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerAttributesOutput
0000000000000000000000000000000000000000;;	type DescribeLoadBalancerAttributesOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about the load balancer attributes.
0000000000000000000000000000000000000000;;		LoadBalancerAttributes *LoadBalancerAttributes `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerAttributesOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerAttributesOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerAttributes sets the LoadBalancerAttributes field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancerAttributesOutput) SetLoadBalancerAttributes(v *LoadBalancerAttributes) *DescribeLoadBalancerAttributesOutput {
0000000000000000000000000000000000000000;;		s.LoadBalancerAttributes = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DescribeLoadBalancerPolicies.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerPoliciesInput
0000000000000000000000000000000000000000;;	type DescribeLoadBalancerPoliciesInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The names of the policies.
0000000000000000000000000000000000000000;;		PolicyNames []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerPoliciesInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerPoliciesInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancerPoliciesInput) SetLoadBalancerName(v string) *DescribeLoadBalancerPoliciesInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyNames sets the PolicyNames field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancerPoliciesInput) SetPolicyNames(v []*string) *DescribeLoadBalancerPoliciesInput {
0000000000000000000000000000000000000000;;		s.PolicyNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of DescribeLoadBalancerPolicies.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerPoliciesOutput
0000000000000000000000000000000000000000;;	type DescribeLoadBalancerPoliciesOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about the policies.
0000000000000000000000000000000000000000;;		PolicyDescriptions []*PolicyDescription `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerPoliciesOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerPoliciesOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyDescriptions sets the PolicyDescriptions field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancerPoliciesOutput) SetPolicyDescriptions(v []*PolicyDescription) *DescribeLoadBalancerPoliciesOutput {
0000000000000000000000000000000000000000;;		s.PolicyDescriptions = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DescribeLoadBalancerPolicyTypes.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerPolicyTypesInput
0000000000000000000000000000000000000000;;	type DescribeLoadBalancerPolicyTypesInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The names of the policy types. If no names are specified, describes all policy
0000000000000000000000000000000000000000;;		// types defined by Elastic Load Balancing.
0000000000000000000000000000000000000000;;		PolicyTypeNames []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerPolicyTypesInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerPolicyTypesInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyTypeNames sets the PolicyTypeNames field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancerPolicyTypesInput) SetPolicyTypeNames(v []*string) *DescribeLoadBalancerPolicyTypesInput {
0000000000000000000000000000000000000000;;		s.PolicyTypeNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of DescribeLoadBalancerPolicyTypes.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeLoadBalancerPolicyTypesOutput
0000000000000000000000000000000000000000;;	type DescribeLoadBalancerPolicyTypesOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about the policy types.
0000000000000000000000000000000000000000;;		PolicyTypeDescriptions []*PolicyTypeDescription `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerPolicyTypesOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancerPolicyTypesOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyTypeDescriptions sets the PolicyTypeDescriptions field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancerPolicyTypesOutput) SetPolicyTypeDescriptions(v []*PolicyTypeDescription) *DescribeLoadBalancerPolicyTypesOutput {
0000000000000000000000000000000000000000;;		s.PolicyTypeDescriptions = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DescribeLoadBalancers.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeAccessPointsInput
0000000000000000000000000000000000000000;;	type DescribeLoadBalancersInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The names of the load balancers.
0000000000000000000000000000000000000000;;		LoadBalancerNames []*string `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The marker for the next set of results. (You received this marker from a
0000000000000000000000000000000000000000;;		// previous call.)
0000000000000000000000000000000000000000;;		Marker *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The maximum number of results to return with this call (a number from 1 to
0000000000000000000000000000000000000000;;		// 400). The default is 400.
0000000000000000000000000000000000000000;;		PageSize *int64 `min:"1" type:"integer"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancersInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancersInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancersInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DescribeLoadBalancersInput"}
0000000000000000000000000000000000000000;;		if s.PageSize != nil && *s.PageSize < 1 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinValue("PageSize", 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerNames sets the LoadBalancerNames field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancersInput) SetLoadBalancerNames(v []*string) *DescribeLoadBalancersInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetMarker sets the Marker field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancersInput) SetMarker(v string) *DescribeLoadBalancersInput {
0000000000000000000000000000000000000000;;		s.Marker = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPageSize sets the PageSize field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancersInput) SetPageSize(v int64) *DescribeLoadBalancersInput {
0000000000000000000000000000000000000000;;		s.PageSize = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DescribeLoadBalancers.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeAccessPointsOutput
0000000000000000000000000000000000000000;;	type DescribeLoadBalancersOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about the load balancers.
0000000000000000000000000000000000000000;;		LoadBalancerDescriptions []*LoadBalancerDescription `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The marker to use when requesting the next set of results. If there are no
0000000000000000000000000000000000000000;;		// additional results, the string is empty.
0000000000000000000000000000000000000000;;		NextMarker *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancersOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeLoadBalancersOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerDescriptions sets the LoadBalancerDescriptions field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancersOutput) SetLoadBalancerDescriptions(v []*LoadBalancerDescription) *DescribeLoadBalancersOutput {
0000000000000000000000000000000000000000;;		s.LoadBalancerDescriptions = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetNextMarker sets the NextMarker field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeLoadBalancersOutput) SetNextMarker(v string) *DescribeLoadBalancersOutput {
0000000000000000000000000000000000000000;;		s.NextMarker = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DescribeTags.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeTagsInput
0000000000000000000000000000000000000000;;	type DescribeTagsInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The names of the load balancers.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerNames is a required field
0000000000000000000000000000000000000000;;		LoadBalancerNames []*string `min:"1" type:"list" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeTagsInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeTagsInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DescribeTagsInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DescribeTagsInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerNames == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerNames"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerNames != nil && len(s.LoadBalancerNames) < 1 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinLen("LoadBalancerNames", 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerNames sets the LoadBalancerNames field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeTagsInput) SetLoadBalancerNames(v []*string) *DescribeTagsInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output for DescribeTags.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DescribeTagsOutput
0000000000000000000000000000000000000000;;	type DescribeTagsOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about the tags.
0000000000000000000000000000000000000000;;		TagDescriptions []*TagDescription `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeTagsOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DescribeTagsOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetTagDescriptions sets the TagDescriptions field's value.
0000000000000000000000000000000000000000;;	func (s *DescribeTagsOutput) SetTagDescriptions(v []*TagDescription) *DescribeTagsOutput {
0000000000000000000000000000000000000000;;		s.TagDescriptions = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DetachLoadBalancerFromSubnets.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DetachLoadBalancerFromSubnetsInput
0000000000000000000000000000000000000000;;	type DetachLoadBalancerFromSubnetsInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the subnets.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Subnets is a required field
0000000000000000000000000000000000000000;;		Subnets []*string `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DetachLoadBalancerFromSubnetsInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DetachLoadBalancerFromSubnetsInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DetachLoadBalancerFromSubnetsInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DetachLoadBalancerFromSubnetsInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Subnets == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Subnets"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *DetachLoadBalancerFromSubnetsInput) SetLoadBalancerName(v string) *DetachLoadBalancerFromSubnetsInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSubnets sets the Subnets field's value.
0000000000000000000000000000000000000000;;	func (s *DetachLoadBalancerFromSubnetsInput) SetSubnets(v []*string) *DetachLoadBalancerFromSubnetsInput {
0000000000000000000000000000000000000000;;		s.Subnets = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of DetachLoadBalancerFromSubnets.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/DetachLoadBalancerFromSubnetsOutput
0000000000000000000000000000000000000000;;	type DetachLoadBalancerFromSubnetsOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the remaining subnets for the load balancer.
0000000000000000000000000000000000000000;;		Subnets []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DetachLoadBalancerFromSubnetsOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DetachLoadBalancerFromSubnetsOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSubnets sets the Subnets field's value.
0000000000000000000000000000000000000000;;	func (s *DetachLoadBalancerFromSubnetsOutput) SetSubnets(v []*string) *DetachLoadBalancerFromSubnetsOutput {
0000000000000000000000000000000000000000;;		s.Subnets = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for DisableAvailabilityZonesForLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RemoveAvailabilityZonesInput
0000000000000000000000000000000000000000;;	type DisableAvailabilityZonesForLoadBalancerInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The Availability Zones.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// AvailabilityZones is a required field
0000000000000000000000000000000000000000;;		AvailabilityZones []*string `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DisableAvailabilityZonesForLoadBalancerInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DisableAvailabilityZonesForLoadBalancerInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *DisableAvailabilityZonesForLoadBalancerInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "DisableAvailabilityZonesForLoadBalancerInput"}
0000000000000000000000000000000000000000;;		if s.AvailabilityZones == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("AvailabilityZones"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAvailabilityZones sets the AvailabilityZones field's value.
0000000000000000000000000000000000000000;;	func (s *DisableAvailabilityZonesForLoadBalancerInput) SetAvailabilityZones(v []*string) *DisableAvailabilityZonesForLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.AvailabilityZones = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *DisableAvailabilityZonesForLoadBalancerInput) SetLoadBalancerName(v string) *DisableAvailabilityZonesForLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output for DisableAvailabilityZonesForLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RemoveAvailabilityZonesOutput
0000000000000000000000000000000000000000;;	type DisableAvailabilityZonesForLoadBalancerOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The remaining Availability Zones for the load balancer.
0000000000000000000000000000000000000000;;		AvailabilityZones []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s DisableAvailabilityZonesForLoadBalancerOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s DisableAvailabilityZonesForLoadBalancerOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAvailabilityZones sets the AvailabilityZones field's value.
0000000000000000000000000000000000000000;;	func (s *DisableAvailabilityZonesForLoadBalancerOutput) SetAvailabilityZones(v []*string) *DisableAvailabilityZonesForLoadBalancerOutput {
0000000000000000000000000000000000000000;;		s.AvailabilityZones = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for EnableAvailabilityZonesForLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AddAvailabilityZonesInput
0000000000000000000000000000000000000000;;	type EnableAvailabilityZonesForLoadBalancerInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The Availability Zones. These must be in the same region as the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// AvailabilityZones is a required field
0000000000000000000000000000000000000000;;		AvailabilityZones []*string `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s EnableAvailabilityZonesForLoadBalancerInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s EnableAvailabilityZonesForLoadBalancerInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *EnableAvailabilityZonesForLoadBalancerInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "EnableAvailabilityZonesForLoadBalancerInput"}
0000000000000000000000000000000000000000;;		if s.AvailabilityZones == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("AvailabilityZones"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAvailabilityZones sets the AvailabilityZones field's value.
0000000000000000000000000000000000000000;;	func (s *EnableAvailabilityZonesForLoadBalancerInput) SetAvailabilityZones(v []*string) *EnableAvailabilityZonesForLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.AvailabilityZones = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *EnableAvailabilityZonesForLoadBalancerInput) SetLoadBalancerName(v string) *EnableAvailabilityZonesForLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of EnableAvailabilityZonesForLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/AddAvailabilityZonesOutput
0000000000000000000000000000000000000000;;	type EnableAvailabilityZonesForLoadBalancerOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The updated list of Availability Zones for the load balancer.
0000000000000000000000000000000000000000;;		AvailabilityZones []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s EnableAvailabilityZonesForLoadBalancerOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s EnableAvailabilityZonesForLoadBalancerOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAvailabilityZones sets the AvailabilityZones field's value.
0000000000000000000000000000000000000000;;	func (s *EnableAvailabilityZonesForLoadBalancerOutput) SetAvailabilityZones(v []*string) *EnableAvailabilityZonesForLoadBalancerOutput {
0000000000000000000000000000000000000000;;		s.AvailabilityZones = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a health check.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/HealthCheck
0000000000000000000000000000000000000000;;	type HealthCheck struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The number of consecutive health checks successes required before moving
0000000000000000000000000000000000000000;;		// the instance to the Healthy state.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// HealthyThreshold is a required field
0000000000000000000000000000000000000000;;		HealthyThreshold *int64 `min:"2" type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The approximate interval, in seconds, between health checks of an individual
0000000000000000000000000000000000000000;;		// instance.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Interval is a required field
0000000000000000000000000000000000000000;;		Interval *int64 `min:"5" type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL.
0000000000000000000000000000000000000000;;		// The range of valid ports is one (1) through 65535.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// TCP is the default, specified as a TCP: port pair, for example "TCP:5000".
0000000000000000000000000000000000000000;;		// In this case, a health check simply attempts to open a TCP connection to
0000000000000000000000000000000000000000;;		// the instance on the specified port. Failure to connect within the configured
0000000000000000000000000000000000000000;;		// timeout is considered unhealthy.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// SSL is also specified as SSL: port pair, for example, SSL:5000.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// For HTTP/HTTPS, you must include a ping path in the string. HTTP is specified
0000000000000000000000000000000000000000;;		// as a HTTP:port;/;PathToPing; grouping, for example "HTTP:80/weather/us/wa/seattle".
0000000000000000000000000000000000000000;;		// In this case, a HTTP GET request is issued to the instance on the given port
0000000000000000000000000000000000000000;;		// and path. Any answer other than "200 OK" within the timeout period is considered
0000000000000000000000000000000000000000;;		// unhealthy.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// The total length of the HTTP ping target must be 1024 16-bit Unicode characters
0000000000000000000000000000000000000000;;		// or less.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Target is a required field
0000000000000000000000000000000000000000;;		Target *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The amount of time, in seconds, during which no response means a failed health
0000000000000000000000000000000000000000;;		// check.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// This value must be less than the Interval value.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Timeout is a required field
0000000000000000000000000000000000000000;;		Timeout *int64 `min:"2" type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The number of consecutive health check failures required before moving the
0000000000000000000000000000000000000000;;		// instance to the Unhealthy state.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// UnhealthyThreshold is a required field
0000000000000000000000000000000000000000;;		UnhealthyThreshold *int64 `min:"2" type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s HealthCheck) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s HealthCheck) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *HealthCheck) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "HealthCheck"}
0000000000000000000000000000000000000000;;		if s.HealthyThreshold == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("HealthyThreshold"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.HealthyThreshold != nil && *s.HealthyThreshold < 2 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinValue("HealthyThreshold", 2))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Interval == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Interval"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Interval != nil && *s.Interval < 5 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinValue("Interval", 5))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Target == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Target"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Timeout == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Timeout"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Timeout != nil && *s.Timeout < 2 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinValue("Timeout", 2))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.UnhealthyThreshold == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("UnhealthyThreshold"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.UnhealthyThreshold != nil && *s.UnhealthyThreshold < 2 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinValue("UnhealthyThreshold", 2))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetHealthyThreshold sets the HealthyThreshold field's value.
0000000000000000000000000000000000000000;;	func (s *HealthCheck) SetHealthyThreshold(v int64) *HealthCheck {
0000000000000000000000000000000000000000;;		s.HealthyThreshold = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInterval sets the Interval field's value.
0000000000000000000000000000000000000000;;	func (s *HealthCheck) SetInterval(v int64) *HealthCheck {
0000000000000000000000000000000000000000;;		s.Interval = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetTarget sets the Target field's value.
0000000000000000000000000000000000000000;;	func (s *HealthCheck) SetTarget(v string) *HealthCheck {
0000000000000000000000000000000000000000;;		s.Target = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetTimeout sets the Timeout field's value.
0000000000000000000000000000000000000000;;	func (s *HealthCheck) SetTimeout(v int64) *HealthCheck {
0000000000000000000000000000000000000000;;		s.Timeout = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetUnhealthyThreshold sets the UnhealthyThreshold field's value.
0000000000000000000000000000000000000000;;	func (s *HealthCheck) SetUnhealthyThreshold(v int64) *HealthCheck {
0000000000000000000000000000000000000000;;		s.UnhealthyThreshold = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// The ID of an EC2 instance.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/Instance
0000000000000000000000000000000000000000;;	type Instance struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The instance ID.
0000000000000000000000000000000000000000;;		InstanceId *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s Instance) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s Instance) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstanceId sets the InstanceId field's value.
0000000000000000000000000000000000000000;;	func (s *Instance) SetInstanceId(v string) *Instance {
0000000000000000000000000000000000000000;;		s.InstanceId = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about the state of an EC2 instance.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/InstanceState
0000000000000000000000000000000000000000;;	type InstanceState struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// A description of the instance state. This string can contain one or more
0000000000000000000000000000000000000000;;		// of the following messages.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * N/A
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * A transient error occurred. Please try again later.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Instance has failed at least the UnhealthyThreshold number of health
0000000000000000000000000000000000000000;;		//    checks consecutively.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Instance has not passed the configured HealthyThreshold number of health
0000000000000000000000000000000000000000;;		//    checks consecutively.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Instance registration is still in progress.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Instance is in the EC2 Availability Zone for which LoadBalancer is not
0000000000000000000000000000000000000000;;		//    configured to route traffic to.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Instance is not currently registered with the LoadBalancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Instance deregistration currently in progress.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Disable Availability Zone is currently in progress.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Instance is in pending state.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Instance is in stopped state.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * Instance is in terminated state.
0000000000000000000000000000000000000000;;		Description *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The ID of the instance.
0000000000000000000000000000000000000000;;		InstanceId *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about the cause of OutOfService instances. Specifically, whether
0000000000000000000000000000000000000000;;		// the cause is Elastic Load Balancing or the instance.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Valid values: ELB | Instance | N/A
0000000000000000000000000000000000000000;;		ReasonCode *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The current state of the instance.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Valid values: InService | OutOfService | Unknown
0000000000000000000000000000000000000000;;		State *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s InstanceState) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s InstanceState) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetDescription sets the Description field's value.
0000000000000000000000000000000000000000;;	func (s *InstanceState) SetDescription(v string) *InstanceState {
0000000000000000000000000000000000000000;;		s.Description = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstanceId sets the InstanceId field's value.
0000000000000000000000000000000000000000;;	func (s *InstanceState) SetInstanceId(v string) *InstanceState {
0000000000000000000000000000000000000000;;		s.InstanceId = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetReasonCode sets the ReasonCode field's value.
0000000000000000000000000000000000000000;;	func (s *InstanceState) SetReasonCode(v string) *InstanceState {
0000000000000000000000000000000000000000;;		s.ReasonCode = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetState sets the State field's value.
0000000000000000000000000000000000000000;;	func (s *InstanceState) SetState(v string) *InstanceState {
0000000000000000000000000000000000000000;;		s.State = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a policy for duration-based session stickiness.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/LBCookieStickinessPolicy
0000000000000000000000000000000000000000;;	type LBCookieStickinessPolicy struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The time period, in seconds, after which the cookie should be considered
0000000000000000000000000000000000000000;;		// stale. If this parameter is not specified, the stickiness session lasts for
0000000000000000000000000000000000000000;;		// the duration of the browser session.
0000000000000000000000000000000000000000;;		CookieExpirationPeriod *int64 `type:"long"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the policy. This name must be unique within the set of policies
0000000000000000000000000000000000000000;;		// for this load balancer.
0000000000000000000000000000000000000000;;		PolicyName *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s LBCookieStickinessPolicy) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s LBCookieStickinessPolicy) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetCookieExpirationPeriod sets the CookieExpirationPeriod field's value.
0000000000000000000000000000000000000000;;	func (s *LBCookieStickinessPolicy) SetCookieExpirationPeriod(v int64) *LBCookieStickinessPolicy {
0000000000000000000000000000000000000000;;		s.CookieExpirationPeriod = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyName sets the PolicyName field's value.
0000000000000000000000000000000000000000;;	func (s *LBCookieStickinessPolicy) SetPolicyName(v string) *LBCookieStickinessPolicy {
0000000000000000000000000000000000000000;;		s.PolicyName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a listener.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// For information about the protocols and the ports supported by Elastic Load
0000000000000000000000000000000000000000;;	// Balancing, see Listeners for Your Classic Load Balancer (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)
0000000000000000000000000000000000000000;;	// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/Listener
0000000000000000000000000000000000000000;;	type Listener struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The port on which the instance is listening.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// InstancePort is a required field
0000000000000000000000000000000000000000;;		InstancePort *int64 `min:"1" type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The protocol to use for routing traffic to instances: HTTP, HTTPS, TCP, or
0000000000000000000000000000000000000000;;		// SSL.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// If the front-end protocol is HTTP, HTTPS, TCP, or SSL, InstanceProtocol must
0000000000000000000000000000000000000000;;		// be at the same protocol.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// If there is another listener with the same InstancePort whose InstanceProtocol
0000000000000000000000000000000000000000;;		// is secure, (HTTPS or SSL), the listener's InstanceProtocol must also be secure.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// If there is another listener with the same InstancePort whose InstanceProtocol
0000000000000000000000000000000000000000;;		// is HTTP or TCP, the listener's InstanceProtocol must be HTTP or TCP.
0000000000000000000000000000000000000000;;		InstanceProtocol *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The port on which the load balancer is listening. On EC2-VPC, you can specify
0000000000000000000000000000000000000000;;		// any port from the range 1-65535. On EC2-Classic, you can specify any port
0000000000000000000000000000000000000000;;		// from the following list: 25, 80, 443, 465, 587, 1024-65535.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerPort is a required field
0000000000000000000000000000000000000000;;		LoadBalancerPort *int64 `type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The load balancer transport protocol to use for routing: HTTP, HTTPS, TCP,
0000000000000000000000000000000000000000;;		// or SSL.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Protocol is a required field
0000000000000000000000000000000000000000;;		Protocol *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The Amazon Resource Name (ARN) of the server certificate.
0000000000000000000000000000000000000000;;		SSLCertificateId *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s Listener) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s Listener) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *Listener) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "Listener"}
0000000000000000000000000000000000000000;;		if s.InstancePort == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("InstancePort"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.InstancePort != nil && *s.InstancePort < 1 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinValue("InstancePort", 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerPort == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerPort"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Protocol == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Protocol"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstancePort sets the InstancePort field's value.
0000000000000000000000000000000000000000;;	func (s *Listener) SetInstancePort(v int64) *Listener {
0000000000000000000000000000000000000000;;		s.InstancePort = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstanceProtocol sets the InstanceProtocol field's value.
0000000000000000000000000000000000000000;;	func (s *Listener) SetInstanceProtocol(v string) *Listener {
0000000000000000000000000000000000000000;;		s.InstanceProtocol = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerPort sets the LoadBalancerPort field's value.
0000000000000000000000000000000000000000;;	func (s *Listener) SetLoadBalancerPort(v int64) *Listener {
0000000000000000000000000000000000000000;;		s.LoadBalancerPort = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetProtocol sets the Protocol field's value.
0000000000000000000000000000000000000000;;	func (s *Listener) SetProtocol(v string) *Listener {
0000000000000000000000000000000000000000;;		s.Protocol = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSSLCertificateId sets the SSLCertificateId field's value.
0000000000000000000000000000000000000000;;	func (s *Listener) SetSSLCertificateId(v string) *Listener {
0000000000000000000000000000000000000000;;		s.SSLCertificateId = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// The policies enabled for a listener.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ListenerDescription
0000000000000000000000000000000000000000;;	type ListenerDescription struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about a listener.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// For information about the protocols and the ports supported by Elastic Load
0000000000000000000000000000000000000000;;		// Balancing, see Listeners for Your Classic Load Balancer (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)
0000000000000000000000000000000000000000;;		// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;		Listener *Listener `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The policies. If there are no policies enabled, the list is empty.
0000000000000000000000000000000000000000;;		PolicyNames []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s ListenerDescription) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s ListenerDescription) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetListener sets the Listener field's value.
0000000000000000000000000000000000000000;;	func (s *ListenerDescription) SetListener(v *Listener) *ListenerDescription {
0000000000000000000000000000000000000000;;		s.Listener = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyNames sets the PolicyNames field's value.
0000000000000000000000000000000000000000;;	func (s *ListenerDescription) SetPolicyNames(v []*string) *ListenerDescription {
0000000000000000000000000000000000000000;;		s.PolicyNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// The attributes for a load balancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/LoadBalancerAttributes
0000000000000000000000000000000000000000;;	type LoadBalancerAttributes struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// If enabled, the load balancer captures detailed information of all requests
0000000000000000000000000000000000000000;;		// and delivers the information to the Amazon S3 bucket that you specify.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// For more information, see Enable Access Logs (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html)
0000000000000000000000000000000000000000;;		// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;		AccessLog *AccessLog `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// This parameter is reserved.
0000000000000000000000000000000000000000;;		AdditionalAttributes []*AdditionalAttribute `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// If enabled, the load balancer allows existing requests to complete before
0000000000000000000000000000000000000000;;		// the load balancer shifts traffic away from a deregistered or unhealthy instance.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// For more information, see Configure Connection Draining (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html)
0000000000000000000000000000000000000000;;		// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;		ConnectionDraining *ConnectionDraining `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// If enabled, the load balancer allows the connections to remain idle (no data
0000000000000000000000000000000000000000;;		// is sent over the connection) for the specified duration.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// By default, Elastic Load Balancing maintains a 60-second idle connection
0000000000000000000000000000000000000000;;		// timeout for both front-end and back-end connections of your load balancer.
0000000000000000000000000000000000000000;;		// For more information, see Configure Idle Connection Timeout (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html)
0000000000000000000000000000000000000000;;		// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;		ConnectionSettings *ConnectionSettings `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// If enabled, the load balancer routes the request traffic evenly across all
0000000000000000000000000000000000000000;;		// instances regardless of the Availability Zones.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// For more information, see Configure Cross-Zone Load Balancing (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html)
0000000000000000000000000000000000000000;;		// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;		CrossZoneLoadBalancing *CrossZoneLoadBalancing `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s LoadBalancerAttributes) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s LoadBalancerAttributes) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerAttributes) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "LoadBalancerAttributes"}
0000000000000000000000000000000000000000;;		if s.AccessLog != nil {
0000000000000000000000000000000000000000;;			if err := s.AccessLog.Validate(); err != nil {
0000000000000000000000000000000000000000;;				invalidParams.AddNested("AccessLog", err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.ConnectionDraining != nil {
0000000000000000000000000000000000000000;;			if err := s.ConnectionDraining.Validate(); err != nil {
0000000000000000000000000000000000000000;;				invalidParams.AddNested("ConnectionDraining", err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.ConnectionSettings != nil {
0000000000000000000000000000000000000000;;			if err := s.ConnectionSettings.Validate(); err != nil {
0000000000000000000000000000000000000000;;				invalidParams.AddNested("ConnectionSettings", err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.CrossZoneLoadBalancing != nil {
0000000000000000000000000000000000000000;;			if err := s.CrossZoneLoadBalancing.Validate(); err != nil {
0000000000000000000000000000000000000000;;				invalidParams.AddNested("CrossZoneLoadBalancing", err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAccessLog sets the AccessLog field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerAttributes) SetAccessLog(v *AccessLog) *LoadBalancerAttributes {
0000000000000000000000000000000000000000;;		s.AccessLog = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAdditionalAttributes sets the AdditionalAttributes field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerAttributes) SetAdditionalAttributes(v []*AdditionalAttribute) *LoadBalancerAttributes {
0000000000000000000000000000000000000000;;		s.AdditionalAttributes = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetConnectionDraining sets the ConnectionDraining field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerAttributes) SetConnectionDraining(v *ConnectionDraining) *LoadBalancerAttributes {
0000000000000000000000000000000000000000;;		s.ConnectionDraining = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetConnectionSettings sets the ConnectionSettings field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerAttributes) SetConnectionSettings(v *ConnectionSettings) *LoadBalancerAttributes {
0000000000000000000000000000000000000000;;		s.ConnectionSettings = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetCrossZoneLoadBalancing sets the CrossZoneLoadBalancing field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerAttributes) SetCrossZoneLoadBalancing(v *CrossZoneLoadBalancing) *LoadBalancerAttributes {
0000000000000000000000000000000000000000;;		s.CrossZoneLoadBalancing = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a load balancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/LoadBalancerDescription
0000000000000000000000000000000000000000;;	type LoadBalancerDescription struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The Availability Zones for the load balancer.
0000000000000000000000000000000000000000;;		AvailabilityZones []*string `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about your EC2 instances.
0000000000000000000000000000000000000000;;		BackendServerDescriptions []*BackendServerDescription `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The DNS name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// For more information, see Configure a Custom Domain Name (http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/using-domain-names-with-elb.html)
0000000000000000000000000000000000000000;;		// in the Classic Load Balancers Guide.
0000000000000000000000000000000000000000;;		CanonicalHostedZoneName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The ID of the Amazon Route 53 hosted zone for the load balancer.
0000000000000000000000000000000000000000;;		CanonicalHostedZoneNameID *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The date and time the load balancer was created.
0000000000000000000000000000000000000000;;		CreatedTime *time.Time `type:"timestamp" timestampFormat:"iso8601"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The DNS name of the load balancer.
0000000000000000000000000000000000000000;;		DNSName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Information about the health checks conducted on the load balancer.
0000000000000000000000000000000000000000;;		HealthCheck *HealthCheck `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the instances for the load balancer.
0000000000000000000000000000000000000000;;		Instances []*Instance `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The listeners for the load balancer.
0000000000000000000000000000000000000000;;		ListenerDescriptions []*ListenerDescription `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The policies defined for the load balancer.
0000000000000000000000000000000000000000;;		Policies *Policies `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The type of load balancer. Valid only for load balancers in a VPC.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// If Scheme is internet-facing, the load balancer has a public DNS name that
0000000000000000000000000000000000000000;;		// resolves to a public IP address.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// If Scheme is internal, the load balancer has a public DNS name that resolves
0000000000000000000000000000000000000000;;		// to a private IP address.
0000000000000000000000000000000000000000;;		Scheme *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The security groups for the load balancer. Valid only for load balancers
0000000000000000000000000000000000000000;;		// in a VPC.
0000000000000000000000000000000000000000;;		SecurityGroups []*string `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The security group for the load balancer, which you can use as part of your
0000000000000000000000000000000000000000;;		// inbound rules for your registered instances. To only allow traffic from load
0000000000000000000000000000000000000000;;		// balancers, add a security group rule that specifies this source security
0000000000000000000000000000000000000000;;		// group as the inbound source.
0000000000000000000000000000000000000000;;		SourceSecurityGroup *SourceSecurityGroup `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the subnets for the load balancer.
0000000000000000000000000000000000000000;;		Subnets []*string `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The ID of the VPC for the load balancer.
0000000000000000000000000000000000000000;;		VPCId *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s LoadBalancerDescription) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s LoadBalancerDescription) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAvailabilityZones sets the AvailabilityZones field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetAvailabilityZones(v []*string) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.AvailabilityZones = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetBackendServerDescriptions sets the BackendServerDescriptions field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetBackendServerDescriptions(v []*BackendServerDescription) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.BackendServerDescriptions = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetCanonicalHostedZoneName sets the CanonicalHostedZoneName field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetCanonicalHostedZoneName(v string) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.CanonicalHostedZoneName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetCanonicalHostedZoneNameID sets the CanonicalHostedZoneNameID field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetCanonicalHostedZoneNameID(v string) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.CanonicalHostedZoneNameID = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetCreatedTime sets the CreatedTime field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetCreatedTime(v time.Time) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.CreatedTime = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetDNSName sets the DNSName field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetDNSName(v string) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.DNSName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetHealthCheck sets the HealthCheck field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetHealthCheck(v *HealthCheck) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.HealthCheck = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstances sets the Instances field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetInstances(v []*Instance) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.Instances = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetListenerDescriptions sets the ListenerDescriptions field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetListenerDescriptions(v []*ListenerDescription) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.ListenerDescriptions = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetLoadBalancerName(v string) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicies sets the Policies field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetPolicies(v *Policies) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.Policies = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetScheme sets the Scheme field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetScheme(v string) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.Scheme = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSecurityGroups sets the SecurityGroups field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetSecurityGroups(v []*string) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.SecurityGroups = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSourceSecurityGroup sets the SourceSecurityGroup field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetSourceSecurityGroup(v *SourceSecurityGroup) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.SourceSecurityGroup = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSubnets sets the Subnets field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetSubnets(v []*string) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.Subnets = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetVPCId sets the VPCId field's value.
0000000000000000000000000000000000000000;;	func (s *LoadBalancerDescription) SetVPCId(v string) *LoadBalancerDescription {
0000000000000000000000000000000000000000;;		s.VPCId = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for ModifyLoadBalancerAttributes.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ModifyLoadBalancerAttributesInput
0000000000000000000000000000000000000000;;	type ModifyLoadBalancerAttributesInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The attributes of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerAttributes is a required field
0000000000000000000000000000000000000000;;		LoadBalancerAttributes *LoadBalancerAttributes `type:"structure" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s ModifyLoadBalancerAttributesInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s ModifyLoadBalancerAttributesInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *ModifyLoadBalancerAttributesInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "ModifyLoadBalancerAttributesInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerAttributes == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerAttributes"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerAttributes != nil {
0000000000000000000000000000000000000000;;			if err := s.LoadBalancerAttributes.Validate(); err != nil {
0000000000000000000000000000000000000000;;				invalidParams.AddNested("LoadBalancerAttributes", err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerAttributes sets the LoadBalancerAttributes field's value.
0000000000000000000000000000000000000000;;	func (s *ModifyLoadBalancerAttributesInput) SetLoadBalancerAttributes(v *LoadBalancerAttributes) *ModifyLoadBalancerAttributesInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerAttributes = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *ModifyLoadBalancerAttributesInput) SetLoadBalancerName(v string) *ModifyLoadBalancerAttributesInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of ModifyLoadBalancerAttributes.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/ModifyLoadBalancerAttributesOutput
0000000000000000000000000000000000000000;;	type ModifyLoadBalancerAttributesOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The attributes for a load balancer.
0000000000000000000000000000000000000000;;		LoadBalancerAttributes *LoadBalancerAttributes `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s ModifyLoadBalancerAttributesOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s ModifyLoadBalancerAttributesOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerAttributes sets the LoadBalancerAttributes field's value.
0000000000000000000000000000000000000000;;	func (s *ModifyLoadBalancerAttributesOutput) SetLoadBalancerAttributes(v *LoadBalancerAttributes) *ModifyLoadBalancerAttributesOutput {
0000000000000000000000000000000000000000;;		s.LoadBalancerAttributes = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *ModifyLoadBalancerAttributesOutput) SetLoadBalancerName(v string) *ModifyLoadBalancerAttributesOutput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// The policies for a load balancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/Policies
0000000000000000000000000000000000000000;;	type Policies struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The stickiness policies created using CreateAppCookieStickinessPolicy.
0000000000000000000000000000000000000000;;		AppCookieStickinessPolicies []*AppCookieStickinessPolicy `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The stickiness policies created using CreateLBCookieStickinessPolicy.
0000000000000000000000000000000000000000;;		LBCookieStickinessPolicies []*LBCookieStickinessPolicy `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The policies other than the stickiness policies.
0000000000000000000000000000000000000000;;		OtherPolicies []*string `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s Policies) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s Policies) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAppCookieStickinessPolicies sets the AppCookieStickinessPolicies field's value.
0000000000000000000000000000000000000000;;	func (s *Policies) SetAppCookieStickinessPolicies(v []*AppCookieStickinessPolicy) *Policies {
0000000000000000000000000000000000000000;;		s.AppCookieStickinessPolicies = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLBCookieStickinessPolicies sets the LBCookieStickinessPolicies field's value.
0000000000000000000000000000000000000000;;	func (s *Policies) SetLBCookieStickinessPolicies(v []*LBCookieStickinessPolicy) *Policies {
0000000000000000000000000000000000000000;;		s.LBCookieStickinessPolicies = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetOtherPolicies sets the OtherPolicies field's value.
0000000000000000000000000000000000000000;;	func (s *Policies) SetOtherPolicies(v []*string) *Policies {
0000000000000000000000000000000000000000;;		s.OtherPolicies = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a policy attribute.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/PolicyAttribute
0000000000000000000000000000000000000000;;	type PolicyAttribute struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the attribute.
0000000000000000000000000000000000000000;;		AttributeName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The value of the attribute.
0000000000000000000000000000000000000000;;		AttributeValue *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyAttribute) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyAttribute) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAttributeName sets the AttributeName field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyAttribute) SetAttributeName(v string) *PolicyAttribute {
0000000000000000000000000000000000000000;;		s.AttributeName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAttributeValue sets the AttributeValue field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyAttribute) SetAttributeValue(v string) *PolicyAttribute {
0000000000000000000000000000000000000000;;		s.AttributeValue = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a policy attribute.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/PolicyAttributeDescription
0000000000000000000000000000000000000000;;	type PolicyAttributeDescription struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the attribute.
0000000000000000000000000000000000000000;;		AttributeName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The value of the attribute.
0000000000000000000000000000000000000000;;		AttributeValue *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyAttributeDescription) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyAttributeDescription) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAttributeName sets the AttributeName field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyAttributeDescription) SetAttributeName(v string) *PolicyAttributeDescription {
0000000000000000000000000000000000000000;;		s.AttributeName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAttributeValue sets the AttributeValue field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyAttributeDescription) SetAttributeValue(v string) *PolicyAttributeDescription {
0000000000000000000000000000000000000000;;		s.AttributeValue = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a policy attribute type.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/PolicyAttributeTypeDescription
0000000000000000000000000000000000000000;;	type PolicyAttributeTypeDescription struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the attribute.
0000000000000000000000000000000000000000;;		AttributeName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The type of the attribute. For example, Boolean or Integer.
0000000000000000000000000000000000000000;;		AttributeType *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The cardinality of the attribute.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Valid values:
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * ONE(1) : Single value required
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * ZERO_OR_ONE(0..1) : Up to one value is allowed
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * ZERO_OR_MORE(0..*) : Optional. Multiple values are allowed
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		//    * ONE_OR_MORE(1..*0) : Required. Multiple values are allowed
0000000000000000000000000000000000000000;;		Cardinality *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The default value of the attribute, if applicable.
0000000000000000000000000000000000000000;;		DefaultValue *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// A description of the attribute.
0000000000000000000000000000000000000000;;		Description *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyAttributeTypeDescription) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyAttributeTypeDescription) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAttributeName sets the AttributeName field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyAttributeTypeDescription) SetAttributeName(v string) *PolicyAttributeTypeDescription {
0000000000000000000000000000000000000000;;		s.AttributeName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetAttributeType sets the AttributeType field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyAttributeTypeDescription) SetAttributeType(v string) *PolicyAttributeTypeDescription {
0000000000000000000000000000000000000000;;		s.AttributeType = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetCardinality sets the Cardinality field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyAttributeTypeDescription) SetCardinality(v string) *PolicyAttributeTypeDescription {
0000000000000000000000000000000000000000;;		s.Cardinality = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetDefaultValue sets the DefaultValue field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyAttributeTypeDescription) SetDefaultValue(v string) *PolicyAttributeTypeDescription {
0000000000000000000000000000000000000000;;		s.DefaultValue = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetDescription sets the Description field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyAttributeTypeDescription) SetDescription(v string) *PolicyAttributeTypeDescription {
0000000000000000000000000000000000000000;;		s.Description = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a policy.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/PolicyDescription
0000000000000000000000000000000000000000;;	type PolicyDescription struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The policy attributes.
0000000000000000000000000000000000000000;;		PolicyAttributeDescriptions []*PolicyAttributeDescription `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the policy.
0000000000000000000000000000000000000000;;		PolicyName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the policy type.
0000000000000000000000000000000000000000;;		PolicyTypeName *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyDescription) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyDescription) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyAttributeDescriptions sets the PolicyAttributeDescriptions field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyDescription) SetPolicyAttributeDescriptions(v []*PolicyAttributeDescription) *PolicyDescription {
0000000000000000000000000000000000000000;;		s.PolicyAttributeDescriptions = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyName sets the PolicyName field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyDescription) SetPolicyName(v string) *PolicyDescription {
0000000000000000000000000000000000000000;;		s.PolicyName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyTypeName sets the PolicyTypeName field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyDescription) SetPolicyTypeName(v string) *PolicyDescription {
0000000000000000000000000000000000000000;;		s.PolicyTypeName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a policy type.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/PolicyTypeDescription
0000000000000000000000000000000000000000;;	type PolicyTypeDescription struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// A description of the policy type.
0000000000000000000000000000000000000000;;		Description *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The description of the policy attributes associated with the policies defined
0000000000000000000000000000000000000000;;		// by Elastic Load Balancing.
0000000000000000000000000000000000000000;;		PolicyAttributeTypeDescriptions []*PolicyAttributeTypeDescription `type:"list"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the policy type.
0000000000000000000000000000000000000000;;		PolicyTypeName *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyTypeDescription) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s PolicyTypeDescription) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetDescription sets the Description field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyTypeDescription) SetDescription(v string) *PolicyTypeDescription {
0000000000000000000000000000000000000000;;		s.Description = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyAttributeTypeDescriptions sets the PolicyAttributeTypeDescriptions field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyTypeDescription) SetPolicyAttributeTypeDescriptions(v []*PolicyAttributeTypeDescription) *PolicyTypeDescription {
0000000000000000000000000000000000000000;;		s.PolicyAttributeTypeDescriptions = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyTypeName sets the PolicyTypeName field's value.
0000000000000000000000000000000000000000;;	func (s *PolicyTypeDescription) SetPolicyTypeName(v string) *PolicyTypeDescription {
0000000000000000000000000000000000000000;;		s.PolicyTypeName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for RegisterInstancesWithLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RegisterEndPointsInput
0000000000000000000000000000000000000000;;	type RegisterInstancesWithLoadBalancerInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The IDs of the instances.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Instances is a required field
0000000000000000000000000000000000000000;;		Instances []*Instance `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s RegisterInstancesWithLoadBalancerInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s RegisterInstancesWithLoadBalancerInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *RegisterInstancesWithLoadBalancerInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "RegisterInstancesWithLoadBalancerInput"}
0000000000000000000000000000000000000000;;		if s.Instances == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Instances"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstances sets the Instances field's value.
0000000000000000000000000000000000000000;;	func (s *RegisterInstancesWithLoadBalancerInput) SetInstances(v []*Instance) *RegisterInstancesWithLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.Instances = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *RegisterInstancesWithLoadBalancerInput) SetLoadBalancerName(v string) *RegisterInstancesWithLoadBalancerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of RegisterInstancesWithLoadBalancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RegisterEndPointsOutput
0000000000000000000000000000000000000000;;	type RegisterInstancesWithLoadBalancerOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The updated list of instances for the load balancer.
0000000000000000000000000000000000000000;;		Instances []*Instance `type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s RegisterInstancesWithLoadBalancerOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s RegisterInstancesWithLoadBalancerOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstances sets the Instances field's value.
0000000000000000000000000000000000000000;;	func (s *RegisterInstancesWithLoadBalancerOutput) SetInstances(v []*Instance) *RegisterInstancesWithLoadBalancerOutput {
0000000000000000000000000000000000000000;;		s.Instances = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for RemoveTags.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RemoveTagsInput
0000000000000000000000000000000000000000;;	type RemoveTagsInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer. You can specify a maximum of one load balancer
0000000000000000000000000000000000000000;;		// name.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerNames is a required field
0000000000000000000000000000000000000000;;		LoadBalancerNames []*string `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The list of tag keys to remove.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Tags is a required field
0000000000000000000000000000000000000000;;		Tags []*TagKeyOnly `min:"1" type:"list" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s RemoveTagsInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s RemoveTagsInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *RemoveTagsInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "RemoveTagsInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerNames == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerNames"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Tags == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Tags"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Tags != nil && len(s.Tags) < 1 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinLen("Tags", 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Tags != nil {
0000000000000000000000000000000000000000;;			for i, v := range s.Tags {
0000000000000000000000000000000000000000;;				if v == nil {
0000000000000000000000000000000000000000;;					continue
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;				if err := v.Validate(); err != nil {
0000000000000000000000000000000000000000;;					invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Tags", i), err.(request.ErrInvalidParams))
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerNames sets the LoadBalancerNames field's value.
0000000000000000000000000000000000000000;;	func (s *RemoveTagsInput) SetLoadBalancerNames(v []*string) *RemoveTagsInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetTags sets the Tags field's value.
0000000000000000000000000000000000000000;;	func (s *RemoveTagsInput) SetTags(v []*TagKeyOnly) *RemoveTagsInput {
0000000000000000000000000000000000000000;;		s.Tags = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of RemoveTags.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/RemoveTagsOutput
0000000000000000000000000000000000000000;;	type RemoveTagsOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s RemoveTagsOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s RemoveTagsOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for SetLoadBalancerListenerSSLCertificate.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerListenerSSLCertificateInput
0000000000000000000000000000000000000000;;	type SetLoadBalancerListenerSSLCertificateInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The port that uses the specified SSL certificate.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerPort is a required field
0000000000000000000000000000000000000000;;		LoadBalancerPort *int64 `type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The Amazon Resource Name (ARN) of the SSL certificate.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// SSLCertificateId is a required field
0000000000000000000000000000000000000000;;		SSLCertificateId *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerListenerSSLCertificateInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerListenerSSLCertificateInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerListenerSSLCertificateInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "SetLoadBalancerListenerSSLCertificateInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerPort == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerPort"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.SSLCertificateId == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("SSLCertificateId"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerListenerSSLCertificateInput) SetLoadBalancerName(v string) *SetLoadBalancerListenerSSLCertificateInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerPort sets the LoadBalancerPort field's value.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerListenerSSLCertificateInput) SetLoadBalancerPort(v int64) *SetLoadBalancerListenerSSLCertificateInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerPort = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetSSLCertificateId sets the SSLCertificateId field's value.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerListenerSSLCertificateInput) SetSSLCertificateId(v string) *SetLoadBalancerListenerSSLCertificateInput {
0000000000000000000000000000000000000000;;		s.SSLCertificateId = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of SetLoadBalancerListenerSSLCertificate.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerListenerSSLCertificateOutput
0000000000000000000000000000000000000000;;	type SetLoadBalancerListenerSSLCertificateOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerListenerSSLCertificateOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerListenerSSLCertificateOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for SetLoadBalancerPoliciesForBackendServer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerPoliciesForBackendServerInput
0000000000000000000000000000000000000000;;	type SetLoadBalancerPoliciesForBackendServerInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The port number associated with the EC2 instance.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// InstancePort is a required field
0000000000000000000000000000000000000000;;		InstancePort *int64 `type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The names of the policies. If the list is empty, then all current polices
0000000000000000000000000000000000000000;;		// are removed from the EC2 instance.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// PolicyNames is a required field
0000000000000000000000000000000000000000;;		PolicyNames []*string `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerPoliciesForBackendServerInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerPoliciesForBackendServerInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerPoliciesForBackendServerInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "SetLoadBalancerPoliciesForBackendServerInput"}
0000000000000000000000000000000000000000;;		if s.InstancePort == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("InstancePort"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.PolicyNames == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("PolicyNames"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetInstancePort sets the InstancePort field's value.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerPoliciesForBackendServerInput) SetInstancePort(v int64) *SetLoadBalancerPoliciesForBackendServerInput {
0000000000000000000000000000000000000000;;		s.InstancePort = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerPoliciesForBackendServerInput) SetLoadBalancerName(v string) *SetLoadBalancerPoliciesForBackendServerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyNames sets the PolicyNames field's value.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerPoliciesForBackendServerInput) SetPolicyNames(v []*string) *SetLoadBalancerPoliciesForBackendServerInput {
0000000000000000000000000000000000000000;;		s.PolicyNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of SetLoadBalancerPoliciesForBackendServer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerPoliciesForBackendServerOutput
0000000000000000000000000000000000000000;;	type SetLoadBalancerPoliciesForBackendServerOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerPoliciesForBackendServerOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerPoliciesForBackendServerOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the parameters for SetLoadBalancePoliciesOfListener.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerPoliciesOfListenerInput
0000000000000000000000000000000000000000;;	type SetLoadBalancerPoliciesOfListenerInput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerName is a required field
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The external port of the load balancer.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// LoadBalancerPort is a required field
0000000000000000000000000000000000000000;;		LoadBalancerPort *int64 `type:"integer" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The names of the policies. This list must include all policies to be enabled.
0000000000000000000000000000000000000000;;		// If you omit a policy that is currently enabled, it is disabled. If the list
0000000000000000000000000000000000000000;;		// is empty, all current policies are disabled.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// PolicyNames is a required field
0000000000000000000000000000000000000000;;		PolicyNames []*string `type:"list" required:"true"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerPoliciesOfListenerInput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerPoliciesOfListenerInput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerPoliciesOfListenerInput) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "SetLoadBalancerPoliciesOfListenerInput"}
0000000000000000000000000000000000000000;;		if s.LoadBalancerName == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerName"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.LoadBalancerPort == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("LoadBalancerPort"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.PolicyNames == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("PolicyNames"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerPoliciesOfListenerInput) SetLoadBalancerName(v string) *SetLoadBalancerPoliciesOfListenerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerPort sets the LoadBalancerPort field's value.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerPoliciesOfListenerInput) SetLoadBalancerPort(v int64) *SetLoadBalancerPoliciesOfListenerInput {
0000000000000000000000000000000000000000;;		s.LoadBalancerPort = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetPolicyNames sets the PolicyNames field's value.
0000000000000000000000000000000000000000;;	func (s *SetLoadBalancerPoliciesOfListenerInput) SetPolicyNames(v []*string) *SetLoadBalancerPoliciesOfListenerInput {
0000000000000000000000000000000000000000;;		s.PolicyNames = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Contains the output of SetLoadBalancePoliciesOfListener.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SetLoadBalancerPoliciesOfListenerOutput
0000000000000000000000000000000000000000;;	type SetLoadBalancerPoliciesOfListenerOutput struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerPoliciesOfListenerOutput) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s SetLoadBalancerPoliciesOfListenerOutput) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a source security group.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/SourceSecurityGroup
0000000000000000000000000000000000000000;;	type SourceSecurityGroup struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the security group.
0000000000000000000000000000000000000000;;		GroupName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The owner of the security group.
0000000000000000000000000000000000000000;;		OwnerAlias *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s SourceSecurityGroup) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s SourceSecurityGroup) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetGroupName sets the GroupName field's value.
0000000000000000000000000000000000000000;;	func (s *SourceSecurityGroup) SetGroupName(v string) *SourceSecurityGroup {
0000000000000000000000000000000000000000;;		s.GroupName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetOwnerAlias sets the OwnerAlias field's value.
0000000000000000000000000000000000000000;;	func (s *SourceSecurityGroup) SetOwnerAlias(v string) *SourceSecurityGroup {
0000000000000000000000000000000000000000;;		s.OwnerAlias = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Information about a tag.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/Tag
0000000000000000000000000000000000000000;;	type Tag struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The key of the tag.
0000000000000000000000000000000000000000;;		//
0000000000000000000000000000000000000000;;		// Key is a required field
0000000000000000000000000000000000000000;;		Key *string `min:"1" type:"string" required:"true"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The value of the tag.
0000000000000000000000000000000000000000;;		Value *string `type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s Tag) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s Tag) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *Tag) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "Tag"}
0000000000000000000000000000000000000000;;		if s.Key == nil {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamRequired("Key"))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if s.Key != nil && len(*s.Key) < 1 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinLen("Key", 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetKey sets the Key field's value.
0000000000000000000000000000000000000000;;	func (s *Tag) SetKey(v string) *Tag {
0000000000000000000000000000000000000000;;		s.Key = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetValue sets the Value field's value.
0000000000000000000000000000000000000000;;	func (s *Tag) SetValue(v string) *Tag {
0000000000000000000000000000000000000000;;		s.Value = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// The tags associated with a load balancer.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/TagDescription
0000000000000000000000000000000000000000;;	type TagDescription struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the load balancer.
0000000000000000000000000000000000000000;;		LoadBalancerName *string `type:"string"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The tags.
0000000000000000000000000000000000000000;;		Tags []*Tag `min:"1" type:"list"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s TagDescription) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s TagDescription) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetLoadBalancerName sets the LoadBalancerName field's value.
0000000000000000000000000000000000000000;;	func (s *TagDescription) SetLoadBalancerName(v string) *TagDescription {
0000000000000000000000000000000000000000;;		s.LoadBalancerName = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetTags sets the Tags field's value.
0000000000000000000000000000000000000000;;	func (s *TagDescription) SetTags(v []*Tag) *TagDescription {
0000000000000000000000000000000000000000;;		s.Tags = v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// The key of a tag.
0000000000000000000000000000000000000000;;	// Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancing-2012-06-01/TagKeyOnly
0000000000000000000000000000000000000000;;	type TagKeyOnly struct {
0000000000000000000000000000000000000000;;		_ struct{} `type:"structure"`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// The name of the key.
0000000000000000000000000000000000000000;;		Key *string `min:"1" type:"string"`
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns the string representation
0000000000000000000000000000000000000000;;	func (s TagKeyOnly) String() string {
0000000000000000000000000000000000000000;;		return awsutil.Prettify(s)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoString returns the string representation
0000000000000000000000000000000000000000;;	func (s TagKeyOnly) GoString() string {
0000000000000000000000000000000000000000;;		return s.String()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Validate inspects the fields of the type to determine if they are valid.
0000000000000000000000000000000000000000;;	func (s *TagKeyOnly) Validate() error {
0000000000000000000000000000000000000000;;		invalidParams := request.ErrInvalidParams{Context: "TagKeyOnly"}
0000000000000000000000000000000000000000;;		if s.Key != nil && len(*s.Key) < 1 {
0000000000000000000000000000000000000000;;			invalidParams.Add(request.NewErrParamMinLen("Key", 1))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if invalidParams.Len() > 0 {
0000000000000000000000000000000000000000;;			return invalidParams
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetKey sets the Key field's value.
0000000000000000000000000000000000000000;;	func (s *TagKeyOnly) SetKey(v string) *TagKeyOnly {
0000000000000000000000000000000000000000;;		s.Key = &v
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}

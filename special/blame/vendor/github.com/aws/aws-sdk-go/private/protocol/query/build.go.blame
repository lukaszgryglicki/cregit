0000000000000000000000000000000000000000;;	// Package query provides serialization of AWS query requests, and responses.
0000000000000000000000000000000000000000;;	package query
15505fe0b7961d9c807ac0af0b1f8961fbc154fb;Godeps/_workspace/src/github.com/awslabs/aws-sdk-go/internal/protocol/query/build.go[Godeps/_workspace/src/github.com/awslabs/aws-sdk-go/internal/protocol/query/build.go][vendor/github.com/aws/aws-sdk-go/private/protocol/query/build.go];	
0000000000000000000000000000000000000000;;	//go:generate go run -tags codegen ../../../models/protocol_tests/generate.go ../../../models/protocol_tests/input/query.json build_test.go
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"net/url"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws/awserr"
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/aws/request"
0000000000000000000000000000000000000000;;		"github.com/aws/aws-sdk-go/private/protocol/query/queryutil"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// BuildHandler is a named request handler for building query protocol requests
0000000000000000000000000000000000000000;;	var BuildHandler = request.NamedHandler{Name: "awssdk.query.Build", Fn: Build}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Build builds a request for an AWS Query service.
0000000000000000000000000000000000000000;;	func Build(r *request.Request) {
0000000000000000000000000000000000000000;;		body := url.Values{
0000000000000000000000000000000000000000;;			"Action":  {r.Operation.Name},
0000000000000000000000000000000000000000;;			"Version": {r.ClientInfo.APIVersion},
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		if err := queryutil.Parse(body, r.Params, false); err != nil {
0000000000000000000000000000000000000000;;			r.Error = awserr.New("SerializationError", "failed encoding Query request", err)
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if r.ExpireTime == 0 {
0000000000000000000000000000000000000000;;			r.HTTPRequest.Method = "POST"
0000000000000000000000000000000000000000;;			r.HTTPRequest.Header.Set("Content-Type", "application/x-www-form-urlencoded; charset=utf-8")
0000000000000000000000000000000000000000;;			r.SetBufferBody([]byte(body.Encode()))
0000000000000000000000000000000000000000;;		} else { // This is a pre-signed request
0000000000000000000000000000000000000000;;			r.HTTPRequest.Method = "GET"
0000000000000000000000000000000000000000;;			r.HTTPRequest.URL.RawQuery = body.Encode()
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

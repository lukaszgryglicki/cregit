0000000000000000000000000000000000000000;;	// Copyright 2017 Google Inc. All Rights Reserved.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
8337c2fc62f66cf6db7638dc013660183869f458;;	
0000000000000000000000000000000000000000;;	package compiler
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Context struct {
0000000000000000000000000000000000000000;;		Parent            *Context
0000000000000000000000000000000000000000;;		Name              string
0000000000000000000000000000000000000000;;		ExtensionHandlers *[]ExtensionHandler
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewContextWithExtensions(name string, parent *Context, extensionHandlers *[]ExtensionHandler) *Context {
0000000000000000000000000000000000000000;;		return &Context{Name: name, Parent: parent, ExtensionHandlers: extensionHandlers}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func NewContext(name string, parent *Context) *Context {
0000000000000000000000000000000000000000;;		if parent != nil {
0000000000000000000000000000000000000000;;			return &Context{Name: name, Parent: parent, ExtensionHandlers: parent.ExtensionHandlers}
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			return &Context{Name: name, Parent: parent, ExtensionHandlers: nil}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (context *Context) Description() string {
0000000000000000000000000000000000000000;;		if context.Parent != nil {
0000000000000000000000000000000000000000;;			return context.Parent.Description() + "." + context.Name
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			return context.Name
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	package runtime
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"github.com/golang/protobuf/proto"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StringP returns a pointer to a string whose pointee is same as the given string value.
0000000000000000000000000000000000000000;;	func StringP(val string) (*string, error) {
0000000000000000000000000000000000000000;;		return proto.String(val), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// BoolP parses the given string representation of a boolean value,
0000000000000000000000000000000000000000;;	// and returns a pointer to a bool whose value is same as the parsed value.
0000000000000000000000000000000000000000;;	func BoolP(val string) (*bool, error) {
0000000000000000000000000000000000000000;;		b, err := Bool(val)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return proto.Bool(b), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Float64P parses the given string representation of a floating point number,
0000000000000000000000000000000000000000;;	// and returns a pointer to a float64 whose value is same as the parsed number.
0000000000000000000000000000000000000000;;	func Float64P(val string) (*float64, error) {
0000000000000000000000000000000000000000;;		f, err := Float64(val)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return proto.Float64(f), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Float32P parses the given string representation of a floating point number,
0000000000000000000000000000000000000000;;	// and returns a pointer to a float32 whose value is same as the parsed number.
0000000000000000000000000000000000000000;;	func Float32P(val string) (*float32, error) {
0000000000000000000000000000000000000000;;		f, err := Float32(val)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return proto.Float32(f), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Int64P parses the given string representation of an integer
0000000000000000000000000000000000000000;;	// and returns a pointer to a int64 whose value is same as the parsed integer.
0000000000000000000000000000000000000000;;	func Int64P(val string) (*int64, error) {
0000000000000000000000000000000000000000;;		i, err := Int64(val)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return proto.Int64(i), nil
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Int32P parses the given string representation of an integer
0000000000000000000000000000000000000000;;	// and returns a pointer to a int32 whose value is same as the parsed integer.
0000000000000000000000000000000000000000;;	func Int32P(val string) (*int32, error) {
0000000000000000000000000000000000000000;;		i, err := Int32(val)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return proto.Int32(i), err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Uint64P parses the given string representation of an integer
0000000000000000000000000000000000000000;;	// and returns a pointer to a uint64 whose value is same as the parsed integer.
0000000000000000000000000000000000000000;;	func Uint64P(val string) (*uint64, error) {
0000000000000000000000000000000000000000;;		i, err := Uint64(val)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return proto.Uint64(i), err
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Uint32P parses the given string representation of an integer
0000000000000000000000000000000000000000;;	// and returns a pointer to a uint32 whose value is same as the parsed integer.
0000000000000000000000000000000000000000;;	func Uint32P(val string) (*uint32, error) {
0000000000000000000000000000000000000000;;		i, err := Uint32(val)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return proto.Uint32(i), err
0000000000000000000000000000000000000000;;	}

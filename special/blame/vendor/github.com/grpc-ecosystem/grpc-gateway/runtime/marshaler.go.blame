0000000000000000000000000000000000000000;;	package runtime
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"io"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Marshaler defines a conversion between byte sequence and gRPC payloads / fields.
0000000000000000000000000000000000000000;;	type Marshaler interface {
0000000000000000000000000000000000000000;;		// Marshal marshals "v" into byte sequence.
0000000000000000000000000000000000000000;;		Marshal(v interface{}) ([]byte, error)
0000000000000000000000000000000000000000;;		// Unmarshal unmarshals "data" into "v".
0000000000000000000000000000000000000000;;		// "v" must be a pointer value.
0000000000000000000000000000000000000000;;		Unmarshal(data []byte, v interface{}) error
0000000000000000000000000000000000000000;;		// NewDecoder returns a Decoder which reads byte sequence from "r".
0000000000000000000000000000000000000000;;		NewDecoder(r io.Reader) Decoder
0000000000000000000000000000000000000000;;		// NewEncoder returns an Encoder which writes bytes sequence into "w".
0000000000000000000000000000000000000000;;		NewEncoder(w io.Writer) Encoder
0000000000000000000000000000000000000000;;		// ContentType returns the Content-Type which this marshaler is responsible for.
0000000000000000000000000000000000000000;;		ContentType() string
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Decoder decodes a byte sequence
0000000000000000000000000000000000000000;;	type Decoder interface {
0000000000000000000000000000000000000000;;		Decode(v interface{}) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Encoder encodes gRPC payloads / fields into byte sequence.
0000000000000000000000000000000000000000;;	type Encoder interface {
0000000000000000000000000000000000000000;;		Encode(v interface{}) error
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// DecoderFunc adapts an decoder function into Decoder.
0000000000000000000000000000000000000000;;	type DecoderFunc func(v interface{}) error
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Decode delegates invocations to the underlying function itself.
0000000000000000000000000000000000000000;;	func (f DecoderFunc) Decode(v interface{}) error { return f(v) }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// EncoderFunc adapts an encoder function into Encoder
0000000000000000000000000000000000000000;;	type EncoderFunc func(v interface{}) error
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Encode delegates invocations to the underlying function itself.
0000000000000000000000000000000000000000;;	func (f EncoderFunc) Encode(v interface{}) error { return f(v) }

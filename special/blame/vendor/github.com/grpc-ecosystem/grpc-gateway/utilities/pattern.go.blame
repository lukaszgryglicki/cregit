0000000000000000000000000000000000000000;;	package utilities
885071b7d07344044421ffe2fd90c1bcd1ee9812;;	
0000000000000000000000000000000000000000;;	// An OpCode is a opcode of compiled path patterns.
0000000000000000000000000000000000000000;;	type OpCode int
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// These constants are the valid values of OpCode.
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		// OpNop does nothing
0000000000000000000000000000000000000000;;		OpNop = OpCode(iota)
0000000000000000000000000000000000000000;;		// OpPush pushes a component to stack
0000000000000000000000000000000000000000;;		OpPush
0000000000000000000000000000000000000000;;		// OpLitPush pushes a component to stack if it matches to the literal
0000000000000000000000000000000000000000;;		OpLitPush
0000000000000000000000000000000000000000;;		// OpPushM concatenates the remaining components and pushes it to stack
0000000000000000000000000000000000000000;;		OpPushM
0000000000000000000000000000000000000000;;		// OpConcatN pops N items from stack, concatenates them and pushes it back to stack
0000000000000000000000000000000000000000;;		OpConcatN
0000000000000000000000000000000000000000;;		// OpCapture pops an item and binds it to the variable
0000000000000000000000000000000000000000;;		OpCapture
0000000000000000000000000000000000000000;;		// OpEnd is the least postive invalid opcode.
0000000000000000000000000000000000000000;;		OpEnd
0000000000000000000000000000000000000000;;	)

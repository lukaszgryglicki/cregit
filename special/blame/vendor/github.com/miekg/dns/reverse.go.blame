0000000000000000000000000000000000000000;;	package dns
f5d7b27a32c788d876881f6f8798fa310653e8fb;;	
0000000000000000000000000000000000000000;;	// StringToType is the reverse of TypeToString, needed for string parsing.
0000000000000000000000000000000000000000;;	var StringToType = reverseInt16(TypeToString)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// StringToClass is the reverse of ClassToString, needed for string parsing.
0000000000000000000000000000000000000000;;	var StringToClass = reverseInt16(ClassToString)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Map of opcodes strings.
0000000000000000000000000000000000000000;;	var StringToOpcode = reverseInt(OpcodeToString)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Map of rcodes strings.
0000000000000000000000000000000000000000;;	var StringToRcode = reverseInt(RcodeToString)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Reverse a map
0000000000000000000000000000000000000000;;	func reverseInt8(m map[uint8]string) map[string]uint8 {
0000000000000000000000000000000000000000;;		n := make(map[string]uint8, len(m))
0000000000000000000000000000000000000000;;		for u, s := range m {
0000000000000000000000000000000000000000;;			n[s] = u
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return n
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func reverseInt16(m map[uint16]string) map[string]uint16 {
0000000000000000000000000000000000000000;;		n := make(map[string]uint16, len(m))
0000000000000000000000000000000000000000;;		for u, s := range m {
0000000000000000000000000000000000000000;;			n[s] = u
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return n
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func reverseInt(m map[int]string) map[string]int {
0000000000000000000000000000000000000000;;		n := make(map[string]int, len(m))
0000000000000000000000000000000000000000;;		for u, s := range m {
0000000000000000000000000000000000000000;;			n[s] = u
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return n
0000000000000000000000000000000000000000;;	}

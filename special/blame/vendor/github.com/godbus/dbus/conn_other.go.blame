0000000000000000000000000000000000000000;;	// +build !darwin
d1c42c1e3fb3b408449f892c0d575bb4d9d885bd;Godeps/_workspace/src/github.com/godbus/dbus/conn_other.go[Godeps/_workspace/src/github.com/godbus/dbus/conn_other.go][vendor/github.com/godbus/dbus/conn_other.go];	
0000000000000000000000000000000000000000;;	package dbus
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"bytes"
0000000000000000000000000000000000000000;;		"errors"
0000000000000000000000000000000000000000;;		"os/exec"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func sessionBusPlatform() (*Conn, error) {
0000000000000000000000000000000000000000;;		cmd := exec.Command("dbus-launch")
0000000000000000000000000000000000000000;;		b, err := cmd.CombinedOutput()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return nil, err
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		i := bytes.IndexByte(b, '=')
0000000000000000000000000000000000000000;;		j := bytes.IndexByte(b, '\n')
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if i == -1 || j == -1 {
0000000000000000000000000000000000000000;;			return nil, errors.New("dbus: couldn't determine address of session bus")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		return Dial(string(b[i+1 : j]))
0000000000000000000000000000000000000000;;	}

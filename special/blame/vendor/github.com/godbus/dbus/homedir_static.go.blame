0000000000000000000000000000000000000000;;	// +build static_build
d1c42c1e3fb3b408449f892c0d575bb4d9d885bd;Godeps/_workspace/src/github.com/godbus/dbus/homedir_static.go[Godeps/_workspace/src/github.com/godbus/dbus/homedir_static.go][vendor/github.com/godbus/dbus/homedir_static.go];	
0000000000000000000000000000000000000000;;	package dbus
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"bufio"
0000000000000000000000000000000000000000;;		"os"
0000000000000000000000000000000000000000;;		"strconv"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func lookupHomeDir() string {
0000000000000000000000000000000000000000;;		myUid := os.Getuid()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f, err := os.Open("/etc/passwd")
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return "/"
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		defer f.Close()
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s := bufio.NewScanner(f)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		for s.Scan() {
0000000000000000000000000000000000000000;;			if err := s.Err(); err != nil {
0000000000000000000000000000000000000000;;				break
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			line := strings.TrimSpace(s.Text())
0000000000000000000000000000000000000000;;			if line == "" {
0000000000000000000000000000000000000000;;				continue
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			parts := strings.Split(line, ":")
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;			if len(parts) >= 6 {
0000000000000000000000000000000000000000;;				uid, err := strconv.Atoi(parts[2])
0000000000000000000000000000000000000000;;				if err == nil && uid == myUid {
0000000000000000000000000000000000000000;;					return parts[5]
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// Default to / if we can't get a better value
0000000000000000000000000000000000000000;;		return "/"
0000000000000000000000000000000000000000;;	}

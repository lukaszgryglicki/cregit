0000000000000000000000000000000000000000;;	// mksyscall.pl -openbsd syscall_bsd.go syscall_openbsd.go syscall_openbsd_amd64.go
0000000000000000000000000000000000000000;;	// MACHINE GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
12a86164cdbf8548dc1c57ea2633daf61c4daab0;Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/zsyscall_openbsd_amd64.go[Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/zsyscall_openbsd_amd64.go][vendor/golang.org/x/sys/unix/zsyscall_openbsd_amd64.go];	
0000000000000000000000000000000000000000;;	// +build amd64,openbsd
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package unix
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"syscall"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var _ syscall.Errno
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func getgroups(ngid int, gid *_Gid_t) (n int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := RawSyscall(SYS_GETGROUPS, uintptr(ngid), uintptr(unsafe.Pointer(gid)), 0)
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func setgroups(ngid int, gid *_Gid_t) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETGROUPS, uintptr(ngid), uintptr(unsafe.Pointer(gid)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall6(SYS_WAIT4, uintptr(pid), uintptr(unsafe.Pointer(wstatus)), uintptr(options), uintptr(unsafe.Pointer(rusage)), 0, 0)
0000000000000000000000000000000000000000;;		wpid = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_ACCEPT, uintptr(s), uintptr(unsafe.Pointer(rsa)), uintptr(unsafe.Pointer(addrlen)))
0000000000000000000000000000000000000000;;		fd = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_BIND, uintptr(s), uintptr(addr), uintptr(addrlen))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_CONNECT, uintptr(s), uintptr(addr), uintptr(addrlen))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func socket(domain int, typ int, proto int) (fd int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := RawSyscall(SYS_SOCKET, uintptr(domain), uintptr(typ), uintptr(proto))
0000000000000000000000000000000000000000;;		fd = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall6(SYS_GETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(unsafe.Pointer(vallen)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall6(SYS_SETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(vallen), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_GETPEERNAME, uintptr(fd), uintptr(unsafe.Pointer(rsa)), uintptr(unsafe.Pointer(addrlen)))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_GETSOCKNAME, uintptr(fd), uintptr(unsafe.Pointer(rsa)), uintptr(unsafe.Pointer(addrlen)))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Shutdown(s int, how int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_SHUTDOWN, uintptr(s), uintptr(how), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall6(SYS_SOCKETPAIR, uintptr(domain), uintptr(typ), uintptr(proto), uintptr(unsafe.Pointer(fd)), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(p) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&p[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall6(SYS_RECVFROM, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(flags), uintptr(unsafe.Pointer(from)), uintptr(unsafe.Pointer(fromlen)))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(buf) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&buf[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall6(SYS_SENDTO, uintptr(s), uintptr(_p0), uintptr(len(buf)), uintptr(flags), uintptr(to), uintptr(addrlen))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_RECVMSG, uintptr(s), uintptr(unsafe.Pointer(msg)), uintptr(flags))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_SENDMSG, uintptr(s), uintptr(unsafe.Pointer(msg)), uintptr(flags))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall6(SYS_KEVENT, uintptr(kq), uintptr(change), uintptr(nchange), uintptr(event), uintptr(nevent), uintptr(unsafe.Pointer(timeout)))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(mib) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&mib[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall6(SYS___SYSCTL, uintptr(_p0), uintptr(len(mib)), uintptr(unsafe.Pointer(old)), uintptr(unsafe.Pointer(oldlen)), uintptr(unsafe.Pointer(new)), uintptr(newlen))
0000000000000000000000000000000000000000;;		use(_p0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func utimes(path string, timeval *[2]Timeval) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_UTIMES, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(timeval)), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func futimes(fd int, timeval *[2]Timeval) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FUTIMES, uintptr(fd), uintptr(unsafe.Pointer(timeval)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func fcntl(fd int, cmd int, arg int) (val int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_FCNTL, uintptr(fd), uintptr(cmd), uintptr(arg))
0000000000000000000000000000000000000000;;		val = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func pipe(p *[2]_C_int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_PIPE, uintptr(unsafe.Pointer(p)), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func getdents(fd int, buf []byte) (n int, err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(buf) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&buf[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_GETDENTS, uintptr(fd), uintptr(_p0), uintptr(len(buf)))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Access(path string, mode uint32) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_ACCESS, uintptr(unsafe.Pointer(_p0)), uintptr(mode), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_ADJTIME, uintptr(unsafe.Pointer(delta)), uintptr(unsafe.Pointer(olddelta)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Chdir(path string) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_CHDIR, uintptr(unsafe.Pointer(_p0)), 0, 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Chflags(path string, flags int) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_CHFLAGS, uintptr(unsafe.Pointer(_p0)), uintptr(flags), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Chmod(path string, mode uint32) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_CHMOD, uintptr(unsafe.Pointer(_p0)), uintptr(mode), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Chown(path string, uid int, gid int) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_CHOWN, uintptr(unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid))
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Chroot(path string) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_CHROOT, uintptr(unsafe.Pointer(_p0)), 0, 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Close(fd int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_CLOSE, uintptr(fd), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Dup(fd int) (nfd int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_DUP, uintptr(fd), 0, 0)
0000000000000000000000000000000000000000;;		nfd = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Dup2(from int, to int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_DUP2, uintptr(from), uintptr(to), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Exit(code int) {
0000000000000000000000000000000000000000;;		Syscall(SYS_EXIT, uintptr(code), 0, 0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Fchdir(fd int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FCHDIR, uintptr(fd), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Fchflags(fd int, flags int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FCHFLAGS, uintptr(fd), uintptr(flags), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Fchmod(fd int, mode uint32) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FCHMOD, uintptr(fd), uintptr(mode), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Fchown(fd int, uid int, gid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FCHOWN, uintptr(fd), uintptr(uid), uintptr(gid))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Flock(fd int, how int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FLOCK, uintptr(fd), uintptr(how), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Fpathconf(fd int, name int) (val int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_FPATHCONF, uintptr(fd), uintptr(name), 0)
0000000000000000000000000000000000000000;;		val = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Fstat(fd int, stat *Stat_t) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FSTAT, uintptr(fd), uintptr(unsafe.Pointer(stat)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Fstatfs(fd int, stat *Statfs_t) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FSTATFS, uintptr(fd), uintptr(unsafe.Pointer(stat)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Fsync(fd int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FSYNC, uintptr(fd), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Ftruncate(fd int, length int64) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_FTRUNCATE, uintptr(fd), 0, uintptr(length))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getegid() (egid int) {
0000000000000000000000000000000000000000;;		r0, _, _ := RawSyscall(SYS_GETEGID, 0, 0, 0)
0000000000000000000000000000000000000000;;		egid = int(r0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Geteuid() (uid int) {
0000000000000000000000000000000000000000;;		r0, _, _ := RawSyscall(SYS_GETEUID, 0, 0, 0)
0000000000000000000000000000000000000000;;		uid = int(r0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getgid() (gid int) {
0000000000000000000000000000000000000000;;		r0, _, _ := RawSyscall(SYS_GETGID, 0, 0, 0)
0000000000000000000000000000000000000000;;		gid = int(r0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getpgid(pid int) (pgid int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := RawSyscall(SYS_GETPGID, uintptr(pid), 0, 0)
0000000000000000000000000000000000000000;;		pgid = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getpgrp() (pgrp int) {
0000000000000000000000000000000000000000;;		r0, _, _ := RawSyscall(SYS_GETPGRP, 0, 0, 0)
0000000000000000000000000000000000000000;;		pgrp = int(r0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getpid() (pid int) {
0000000000000000000000000000000000000000;;		r0, _, _ := RawSyscall(SYS_GETPID, 0, 0, 0)
0000000000000000000000000000000000000000;;		pid = int(r0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getppid() (ppid int) {
0000000000000000000000000000000000000000;;		r0, _, _ := RawSyscall(SYS_GETPPID, 0, 0, 0)
0000000000000000000000000000000000000000;;		ppid = int(r0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getpriority(which int, who int) (prio int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_GETPRIORITY, uintptr(which), uintptr(who), 0)
0000000000000000000000000000000000000000;;		prio = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getrlimit(which int, lim *Rlimit) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_GETRLIMIT, uintptr(which), uintptr(unsafe.Pointer(lim)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getrusage(who int, rusage *Rusage) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_GETRUSAGE, uintptr(who), uintptr(unsafe.Pointer(rusage)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getsid(pid int) (sid int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := RawSyscall(SYS_GETSID, uintptr(pid), 0, 0)
0000000000000000000000000000000000000000;;		sid = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Gettimeofday(tv *Timeval) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_GETTIMEOFDAY, uintptr(unsafe.Pointer(tv)), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Getuid() (uid int) {
0000000000000000000000000000000000000000;;		r0, _, _ := RawSyscall(SYS_GETUID, 0, 0, 0)
0000000000000000000000000000000000000000;;		uid = int(r0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Issetugid() (tainted bool) {
0000000000000000000000000000000000000000;;		r0, _, _ := Syscall(SYS_ISSETUGID, 0, 0, 0)
0000000000000000000000000000000000000000;;		tainted = bool(r0 != 0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Kill(pid int, signum syscall.Signal) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_KILL, uintptr(pid), uintptr(signum), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Kqueue() (fd int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_KQUEUE, 0, 0, 0)
0000000000000000000000000000000000000000;;		fd = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Lchown(path string, uid int, gid int) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_LCHOWN, uintptr(unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid))
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Link(path string, link string) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var _p1 *byte
0000000000000000000000000000000000000000;;		_p1, err = BytePtrFromString(link)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_LINK, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(_p1)), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p1))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Listen(s int, backlog int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_LISTEN, uintptr(s), uintptr(backlog), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Lstat(path string, stat *Stat_t) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_LSTAT, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(stat)), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Mkdir(path string, mode uint32) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_MKDIR, uintptr(unsafe.Pointer(_p0)), uintptr(mode), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Mkfifo(path string, mode uint32) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_MKFIFO, uintptr(unsafe.Pointer(_p0)), uintptr(mode), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Mknod(path string, mode uint32, dev int) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_MKNOD, uintptr(unsafe.Pointer(_p0)), uintptr(mode), uintptr(dev))
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Mlock(b []byte) (err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(b) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&b[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_MLOCK, uintptr(_p0), uintptr(len(b)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Mlockall(flags int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_MLOCKALL, uintptr(flags), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Mprotect(b []byte, prot int) (err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(b) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&b[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_MPROTECT, uintptr(_p0), uintptr(len(b)), uintptr(prot))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Munlock(b []byte) (err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(b) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&b[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_MUNLOCK, uintptr(_p0), uintptr(len(b)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Munlockall() (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_MUNLOCKALL, 0, 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Nanosleep(time *Timespec, leftover *Timespec) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_NANOSLEEP, uintptr(unsafe.Pointer(time)), uintptr(unsafe.Pointer(leftover)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Open(path string, mode int, perm uint32) (fd int, err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_OPEN, uintptr(unsafe.Pointer(_p0)), uintptr(mode), uintptr(perm))
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		fd = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Pathconf(path string, name int) (val int, err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_PATHCONF, uintptr(unsafe.Pointer(_p0)), uintptr(name), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		val = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Pread(fd int, p []byte, offset int64) (n int, err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(p) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&p[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall6(SYS_PREAD, uintptr(fd), uintptr(_p0), uintptr(len(p)), 0, uintptr(offset), 0)
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Pwrite(fd int, p []byte, offset int64) (n int, err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(p) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&p[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall6(SYS_PWRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)), 0, uintptr(offset), 0)
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func read(fd int, p []byte) (n int, err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(p) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&p[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_READ, uintptr(fd), uintptr(_p0), uintptr(len(p)))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Readlink(path string, buf []byte) (n int, err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var _p1 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(buf) > 0 {
0000000000000000000000000000000000000000;;			_p1 = unsafe.Pointer(&buf[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p1 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_READLINK, uintptr(unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf)))
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Rename(from string, to string) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(from)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var _p1 *byte
0000000000000000000000000000000000000000;;		_p1, err = BytePtrFromString(to)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_RENAME, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(_p1)), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p1))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Revoke(path string) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_REVOKE, uintptr(unsafe.Pointer(_p0)), 0, 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Rmdir(path string) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_RMDIR, uintptr(unsafe.Pointer(_p0)), 0, 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall6(SYS_LSEEK, uintptr(fd), 0, uintptr(offset), uintptr(whence), 0, 0)
0000000000000000000000000000000000000000;;		newoffset = int64(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall6(SYS_SELECT, uintptr(n), uintptr(unsafe.Pointer(r)), uintptr(unsafe.Pointer(w)), uintptr(unsafe.Pointer(e)), uintptr(unsafe.Pointer(timeout)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setegid(egid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETEGID, uintptr(egid), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Seteuid(euid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETEUID, uintptr(euid), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setgid(gid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETGID, uintptr(gid), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setlogin(name string) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(name)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_SETLOGIN, uintptr(unsafe.Pointer(_p0)), 0, 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setpgid(pid int, pgid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETPGID, uintptr(pid), uintptr(pgid), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setpriority(which int, who int, prio int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_SETPRIORITY, uintptr(which), uintptr(who), uintptr(prio))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setregid(rgid int, egid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETREGID, uintptr(rgid), uintptr(egid), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setreuid(ruid int, euid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETREUID, uintptr(ruid), uintptr(euid), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setresgid(rgid int, egid int, sgid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETRESGID, uintptr(rgid), uintptr(egid), uintptr(sgid))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setresuid(ruid int, euid int, suid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETRESUID, uintptr(ruid), uintptr(euid), uintptr(suid))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setrlimit(which int, lim *Rlimit) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETRLIMIT, uintptr(which), uintptr(unsafe.Pointer(lim)), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setsid() (pid int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := RawSyscall(SYS_SETSID, 0, 0, 0)
0000000000000000000000000000000000000000;;		pid = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Settimeofday(tp *Timeval) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETTIMEOFDAY, uintptr(unsafe.Pointer(tp)), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Setuid(uid int) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := RawSyscall(SYS_SETUID, uintptr(uid), 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Stat(path string, stat *Stat_t) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_STAT, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(stat)), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Statfs(path string, stat *Statfs_t) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_STATFS, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(stat)), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Symlink(path string, link string) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var _p1 *byte
0000000000000000000000000000000000000000;;		_p1, err = BytePtrFromString(link)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_SYMLINK, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(_p1)), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p1))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Sync() (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_SYNC, 0, 0, 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Truncate(path string, length int64) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_TRUNCATE, uintptr(unsafe.Pointer(_p0)), 0, uintptr(length))
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Umask(newmask int) (oldmask int) {
0000000000000000000000000000000000000000;;		r0, _, _ := Syscall(SYS_UMASK, uintptr(newmask), 0, 0)
0000000000000000000000000000000000000000;;		oldmask = int(r0)
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Unlink(path string) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_UNLINK, uintptr(unsafe.Pointer(_p0)), 0, 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func Unmount(path string, flags int) (err error) {
0000000000000000000000000000000000000000;;		var _p0 *byte
0000000000000000000000000000000000000000;;		_p0, err = BytePtrFromString(path)
0000000000000000000000000000000000000000;;		if err != nil {
0000000000000000000000000000000000000000;;			return
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_UNMOUNT, uintptr(unsafe.Pointer(_p0)), uintptr(flags), 0)
0000000000000000000000000000000000000000;;		use(unsafe.Pointer(_p0))
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func write(fd int, p []byte) (n int, err error) {
0000000000000000000000000000000000000000;;		var _p0 unsafe.Pointer
0000000000000000000000000000000000000000;;		if len(p) > 0 {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&p[0])
0000000000000000000000000000000000000000;;		} else {
0000000000000000000000000000000000000000;;			_p0 = unsafe.Pointer(&_zero)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_WRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall9(SYS_MMAP, uintptr(addr), uintptr(length), uintptr(prot), uintptr(flag), uintptr(fd), 0, uintptr(pos), 0, 0)
0000000000000000000000000000000000000000;;		ret = uintptr(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func munmap(addr uintptr, length uintptr) (err error) {
0000000000000000000000000000000000000000;;		_, _, e1 := Syscall(SYS_MUNMAP, uintptr(addr), uintptr(length), 0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func readlen(fd int, buf *byte, nbuf int) (n int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_READ, uintptr(fd), uintptr(unsafe.Pointer(buf)), uintptr(nbuf))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func writelen(fd int, buf *byte, nbuf int) (n int, err error) {
0000000000000000000000000000000000000000;;		r0, _, e1 := Syscall(SYS_WRITE, uintptr(fd), uintptr(unsafe.Pointer(buf)), uintptr(nbuf))
0000000000000000000000000000000000000000;;		n = int(r0)
0000000000000000000000000000000000000000;;		if e1 != 0 {
0000000000000000000000000000000000000000;;			err = errnoErr(e1)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return
0000000000000000000000000000000000000000;;	}

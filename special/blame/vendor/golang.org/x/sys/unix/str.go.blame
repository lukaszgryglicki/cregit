0000000000000000000000000000000000000000;;	// Copyright 2009 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
12a86164cdbf8548dc1c57ea2633daf61c4daab0;Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/str.go[Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/str.go][vendor/golang.org/x/sys/unix/str.go];	
0000000000000000000000000000000000000000;;	// +build darwin dragonfly freebsd linux netbsd openbsd solaris
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package unix
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func itoa(val int) string { // do it here rather than with fmt to avoid dependency
0000000000000000000000000000000000000000;;		if val < 0 {
0000000000000000000000000000000000000000;;			return "-" + uitoa(uint(-val))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return uitoa(uint(val))
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func uitoa(val uint) string {
0000000000000000000000000000000000000000;;		var buf [32]byte // big enough for int64
0000000000000000000000000000000000000000;;		i := len(buf) - 1
0000000000000000000000000000000000000000;;		for val >= 10 {
0000000000000000000000000000000000000000;;			buf[i] = byte(val%10 + '0')
0000000000000000000000000000000000000000;;			i--
0000000000000000000000000000000000000000;;			val /= 10
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		buf[i] = byte(val + '0')
0000000000000000000000000000000000000000;;		return string(buf[i:])
0000000000000000000000000000000000000000;;	}

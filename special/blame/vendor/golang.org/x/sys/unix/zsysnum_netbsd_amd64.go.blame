0000000000000000000000000000000000000000;;	// mksysnum_netbsd.pl
0000000000000000000000000000000000000000;;	// MACHINE GENERATED BY THE ABOVE COMMAND; DO NOT EDIT
12a86164cdbf8548dc1c57ea2633daf61c4daab0;Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/zsysnum_netbsd_amd64.go[Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/zsysnum_netbsd_amd64.go][vendor/golang.org/x/sys/unix/zsysnum_netbsd_amd64.go];	
0000000000000000000000000000000000000000;;	// +build amd64,netbsd
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package unix
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		SYS_EXIT                 = 1   // { void|sys||exit(int rval); }
0000000000000000000000000000000000000000;;		SYS_FORK                 = 2   // { int|sys||fork(void); }
0000000000000000000000000000000000000000;;		SYS_READ                 = 3   // { ssize_t|sys||read(int fd, void *buf, size_t nbyte); }
0000000000000000000000000000000000000000;;		SYS_WRITE                = 4   // { ssize_t|sys||write(int fd, const void *buf, size_t nbyte); }
0000000000000000000000000000000000000000;;		SYS_OPEN                 = 5   // { int|sys||open(const char *path, int flags, ... mode_t mode); }
0000000000000000000000000000000000000000;;		SYS_CLOSE                = 6   // { int|sys||close(int fd); }
0000000000000000000000000000000000000000;;		SYS_LINK                 = 9   // { int|sys||link(const char *path, const char *link); }
0000000000000000000000000000000000000000;;		SYS_UNLINK               = 10  // { int|sys||unlink(const char *path); }
0000000000000000000000000000000000000000;;		SYS_CHDIR                = 12  // { int|sys||chdir(const char *path); }
0000000000000000000000000000000000000000;;		SYS_FCHDIR               = 13  // { int|sys||fchdir(int fd); }
0000000000000000000000000000000000000000;;		SYS_CHMOD                = 15  // { int|sys||chmod(const char *path, mode_t mode); }
0000000000000000000000000000000000000000;;		SYS_CHOWN                = 16  // { int|sys||chown(const char *path, uid_t uid, gid_t gid); }
0000000000000000000000000000000000000000;;		SYS_BREAK                = 17  // { int|sys||obreak(char *nsize); }
0000000000000000000000000000000000000000;;		SYS_GETPID               = 20  // { pid_t|sys||getpid_with_ppid(void); }
0000000000000000000000000000000000000000;;		SYS_UNMOUNT              = 22  // { int|sys||unmount(const char *path, int flags); }
0000000000000000000000000000000000000000;;		SYS_SETUID               = 23  // { int|sys||setuid(uid_t uid); }
0000000000000000000000000000000000000000;;		SYS_GETUID               = 24  // { uid_t|sys||getuid_with_euid(void); }
0000000000000000000000000000000000000000;;		SYS_GETEUID              = 25  // { uid_t|sys||geteuid(void); }
0000000000000000000000000000000000000000;;		SYS_PTRACE               = 26  // { int|sys||ptrace(int req, pid_t pid, void *addr, int data); }
0000000000000000000000000000000000000000;;		SYS_RECVMSG              = 27  // { ssize_t|sys||recvmsg(int s, struct msghdr *msg, int flags); }
0000000000000000000000000000000000000000;;		SYS_SENDMSG              = 28  // { ssize_t|sys||sendmsg(int s, const struct msghdr *msg, int flags); }
0000000000000000000000000000000000000000;;		SYS_RECVFROM             = 29  // { ssize_t|sys||recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlenaddr); }
0000000000000000000000000000000000000000;;		SYS_ACCEPT               = 30  // { int|sys||accept(int s, struct sockaddr *name, socklen_t *anamelen); }
0000000000000000000000000000000000000000;;		SYS_GETPEERNAME          = 31  // { int|sys||getpeername(int fdes, struct sockaddr *asa, socklen_t *alen); }
0000000000000000000000000000000000000000;;		SYS_GETSOCKNAME          = 32  // { int|sys||getsockname(int fdes, struct sockaddr *asa, socklen_t *alen); }
0000000000000000000000000000000000000000;;		SYS_ACCESS               = 33  // { int|sys||access(const char *path, int flags); }
0000000000000000000000000000000000000000;;		SYS_CHFLAGS              = 34  // { int|sys||chflags(const char *path, u_long flags); }
0000000000000000000000000000000000000000;;		SYS_FCHFLAGS             = 35  // { int|sys||fchflags(int fd, u_long flags); }
0000000000000000000000000000000000000000;;		SYS_SYNC                 = 36  // { void|sys||sync(void); }
0000000000000000000000000000000000000000;;		SYS_KILL                 = 37  // { int|sys||kill(pid_t pid, int signum); }
0000000000000000000000000000000000000000;;		SYS_GETPPID              = 39  // { pid_t|sys||getppid(void); }
0000000000000000000000000000000000000000;;		SYS_DUP                  = 41  // { int|sys||dup(int fd); }
0000000000000000000000000000000000000000;;		SYS_PIPE                 = 42  // { int|sys||pipe(void); }
0000000000000000000000000000000000000000;;		SYS_GETEGID              = 43  // { gid_t|sys||getegid(void); }
0000000000000000000000000000000000000000;;		SYS_PROFIL               = 44  // { int|sys||profil(char *samples, size_t size, u_long offset, u_int scale); }
0000000000000000000000000000000000000000;;		SYS_KTRACE               = 45  // { int|sys||ktrace(const char *fname, int ops, int facs, pid_t pid); }
0000000000000000000000000000000000000000;;		SYS_GETGID               = 47  // { gid_t|sys||getgid_with_egid(void); }
0000000000000000000000000000000000000000;;		SYS___GETLOGIN           = 49  // { int|sys||__getlogin(char *namebuf, size_t namelen); }
0000000000000000000000000000000000000000;;		SYS___SETLOGIN           = 50  // { int|sys||__setlogin(const char *namebuf); }
0000000000000000000000000000000000000000;;		SYS_ACCT                 = 51  // { int|sys||acct(const char *path); }
0000000000000000000000000000000000000000;;		SYS_IOCTL                = 54  // { int|sys||ioctl(int fd, u_long com, ... void *data); }
0000000000000000000000000000000000000000;;		SYS_REVOKE               = 56  // { int|sys||revoke(const char *path); }
0000000000000000000000000000000000000000;;		SYS_SYMLINK              = 57  // { int|sys||symlink(const char *path, const char *link); }
0000000000000000000000000000000000000000;;		SYS_READLINK             = 58  // { ssize_t|sys||readlink(const char *path, char *buf, size_t count); }
0000000000000000000000000000000000000000;;		SYS_EXECVE               = 59  // { int|sys||execve(const char *path, char * const *argp, char * const *envp); }
0000000000000000000000000000000000000000;;		SYS_UMASK                = 60  // { mode_t|sys||umask(mode_t newmask); }
0000000000000000000000000000000000000000;;		SYS_CHROOT               = 61  // { int|sys||chroot(const char *path); }
0000000000000000000000000000000000000000;;		SYS_VFORK                = 66  // { int|sys||vfork(void); }
0000000000000000000000000000000000000000;;		SYS_SBRK                 = 69  // { int|sys||sbrk(intptr_t incr); }
0000000000000000000000000000000000000000;;		SYS_SSTK                 = 70  // { int|sys||sstk(int incr); }
0000000000000000000000000000000000000000;;		SYS_VADVISE              = 72  // { int|sys||ovadvise(int anom); }
0000000000000000000000000000000000000000;;		SYS_MUNMAP               = 73  // { int|sys||munmap(void *addr, size_t len); }
0000000000000000000000000000000000000000;;		SYS_MPROTECT             = 74  // { int|sys||mprotect(void *addr, size_t len, int prot); }
0000000000000000000000000000000000000000;;		SYS_MADVISE              = 75  // { int|sys||madvise(void *addr, size_t len, int behav); }
0000000000000000000000000000000000000000;;		SYS_MINCORE              = 78  // { int|sys||mincore(void *addr, size_t len, char *vec); }
0000000000000000000000000000000000000000;;		SYS_GETGROUPS            = 79  // { int|sys||getgroups(int gidsetsize, gid_t *gidset); }
0000000000000000000000000000000000000000;;		SYS_SETGROUPS            = 80  // { int|sys||setgroups(int gidsetsize, const gid_t *gidset); }
0000000000000000000000000000000000000000;;		SYS_GETPGRP              = 81  // { int|sys||getpgrp(void); }
0000000000000000000000000000000000000000;;		SYS_SETPGID              = 82  // { int|sys||setpgid(pid_t pid, pid_t pgid); }
0000000000000000000000000000000000000000;;		SYS_DUP2                 = 90  // { int|sys||dup2(int from, int to); }
0000000000000000000000000000000000000000;;		SYS_FCNTL                = 92  // { int|sys||fcntl(int fd, int cmd, ... void *arg); }
0000000000000000000000000000000000000000;;		SYS_FSYNC                = 95  // { int|sys||fsync(int fd); }
0000000000000000000000000000000000000000;;		SYS_SETPRIORITY          = 96  // { int|sys||setpriority(int which, id_t who, int prio); }
0000000000000000000000000000000000000000;;		SYS_CONNECT              = 98  // { int|sys||connect(int s, const struct sockaddr *name, socklen_t namelen); }
0000000000000000000000000000000000000000;;		SYS_GETPRIORITY          = 100 // { int|sys||getpriority(int which, id_t who); }
0000000000000000000000000000000000000000;;		SYS_BIND                 = 104 // { int|sys||bind(int s, const struct sockaddr *name, socklen_t namelen); }
0000000000000000000000000000000000000000;;		SYS_SETSOCKOPT           = 105 // { int|sys||setsockopt(int s, int level, int name, const void *val, socklen_t valsize); }
0000000000000000000000000000000000000000;;		SYS_LISTEN               = 106 // { int|sys||listen(int s, int backlog); }
0000000000000000000000000000000000000000;;		SYS_GETSOCKOPT           = 118 // { int|sys||getsockopt(int s, int level, int name, void *val, socklen_t *avalsize); }
0000000000000000000000000000000000000000;;		SYS_READV                = 120 // { ssize_t|sys||readv(int fd, const struct iovec *iovp, int iovcnt); }
0000000000000000000000000000000000000000;;		SYS_WRITEV               = 121 // { ssize_t|sys||writev(int fd, const struct iovec *iovp, int iovcnt); }
0000000000000000000000000000000000000000;;		SYS_FCHOWN               = 123 // { int|sys||fchown(int fd, uid_t uid, gid_t gid); }
0000000000000000000000000000000000000000;;		SYS_FCHMOD               = 124 // { int|sys||fchmod(int fd, mode_t mode); }
0000000000000000000000000000000000000000;;		SYS_SETREUID             = 126 // { int|sys||setreuid(uid_t ruid, uid_t euid); }
0000000000000000000000000000000000000000;;		SYS_SETREGID             = 127 // { int|sys||setregid(gid_t rgid, gid_t egid); }
0000000000000000000000000000000000000000;;		SYS_RENAME               = 128 // { int|sys||rename(const char *from, const char *to); }
0000000000000000000000000000000000000000;;		SYS_FLOCK                = 131 // { int|sys||flock(int fd, int how); }
0000000000000000000000000000000000000000;;		SYS_MKFIFO               = 132 // { int|sys||mkfifo(const char *path, mode_t mode); }
0000000000000000000000000000000000000000;;		SYS_SENDTO               = 133 // { ssize_t|sys||sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen); }
0000000000000000000000000000000000000000;;		SYS_SHUTDOWN             = 134 // { int|sys||shutdown(int s, int how); }
0000000000000000000000000000000000000000;;		SYS_SOCKETPAIR           = 135 // { int|sys||socketpair(int domain, int type, int protocol, int *rsv); }
0000000000000000000000000000000000000000;;		SYS_MKDIR                = 136 // { int|sys||mkdir(const char *path, mode_t mode); }
0000000000000000000000000000000000000000;;		SYS_RMDIR                = 137 // { int|sys||rmdir(const char *path); }
0000000000000000000000000000000000000000;;		SYS_SETSID               = 147 // { int|sys||setsid(void); }
0000000000000000000000000000000000000000;;		SYS_SYSARCH              = 165 // { int|sys||sysarch(int op, void *parms); }
0000000000000000000000000000000000000000;;		SYS_PREAD                = 173 // { ssize_t|sys||pread(int fd, void *buf, size_t nbyte, int PAD, off_t offset); }
0000000000000000000000000000000000000000;;		SYS_PWRITE               = 174 // { ssize_t|sys||pwrite(int fd, const void *buf, size_t nbyte, int PAD, off_t offset); }
0000000000000000000000000000000000000000;;		SYS_NTP_ADJTIME          = 176 // { int|sys||ntp_adjtime(struct timex *tp); }
0000000000000000000000000000000000000000;;		SYS_SETGID               = 181 // { int|sys||setgid(gid_t gid); }
0000000000000000000000000000000000000000;;		SYS_SETEGID              = 182 // { int|sys||setegid(gid_t egid); }
0000000000000000000000000000000000000000;;		SYS_SETEUID              = 183 // { int|sys||seteuid(uid_t euid); }
0000000000000000000000000000000000000000;;		SYS_PATHCONF             = 191 // { long|sys||pathconf(const char *path, int name); }
0000000000000000000000000000000000000000;;		SYS_FPATHCONF            = 192 // { long|sys||fpathconf(int fd, int name); }
0000000000000000000000000000000000000000;;		SYS_GETRLIMIT            = 194 // { int|sys||getrlimit(int which, struct rlimit *rlp); }
0000000000000000000000000000000000000000;;		SYS_SETRLIMIT            = 195 // { int|sys||setrlimit(int which, const struct rlimit *rlp); }
0000000000000000000000000000000000000000;;		SYS_MMAP                 = 197 // { void *|sys||mmap(void *addr, size_t len, int prot, int flags, int fd, long PAD, off_t pos); }
0000000000000000000000000000000000000000;;		SYS_LSEEK                = 199 // { off_t|sys||lseek(int fd, int PAD, off_t offset, int whence); }
0000000000000000000000000000000000000000;;		SYS_TRUNCATE             = 200 // { int|sys||truncate(const char *path, int PAD, off_t length); }
0000000000000000000000000000000000000000;;		SYS_FTRUNCATE            = 201 // { int|sys||ftruncate(int fd, int PAD, off_t length); }
0000000000000000000000000000000000000000;;		SYS___SYSCTL             = 202 // { int|sys||__sysctl(const int *name, u_int namelen, void *old, size_t *oldlenp, const void *new, size_t newlen); }
0000000000000000000000000000000000000000;;		SYS_MLOCK                = 203 // { int|sys||mlock(const void *addr, size_t len); }
0000000000000000000000000000000000000000;;		SYS_MUNLOCK              = 204 // { int|sys||munlock(const void *addr, size_t len); }
0000000000000000000000000000000000000000;;		SYS_UNDELETE             = 205 // { int|sys||undelete(const char *path); }
0000000000000000000000000000000000000000;;		SYS_GETPGID              = 207 // { pid_t|sys||getpgid(pid_t pid); }
0000000000000000000000000000000000000000;;		SYS_REBOOT               = 208 // { int|sys||reboot(int opt, char *bootstr); }
0000000000000000000000000000000000000000;;		SYS_POLL                 = 209 // { int|sys||poll(struct pollfd *fds, u_int nfds, int timeout); }
0000000000000000000000000000000000000000;;		SYS_SEMGET               = 221 // { int|sys||semget(key_t key, int nsems, int semflg); }
0000000000000000000000000000000000000000;;		SYS_SEMOP                = 222 // { int|sys||semop(int semid, struct sembuf *sops, size_t nsops); }
0000000000000000000000000000000000000000;;		SYS_SEMCONFIG            = 223 // { int|sys||semconfig(int flag); }
0000000000000000000000000000000000000000;;		SYS_MSGGET               = 225 // { int|sys||msgget(key_t key, int msgflg); }
0000000000000000000000000000000000000000;;		SYS_MSGSND               = 226 // { int|sys||msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg); }
0000000000000000000000000000000000000000;;		SYS_MSGRCV               = 227 // { ssize_t|sys||msgrcv(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg); }
0000000000000000000000000000000000000000;;		SYS_SHMAT                = 228 // { void *|sys||shmat(int shmid, const void *shmaddr, int shmflg); }
0000000000000000000000000000000000000000;;		SYS_SHMDT                = 230 // { int|sys||shmdt(const void *shmaddr); }
0000000000000000000000000000000000000000;;		SYS_SHMGET               = 231 // { int|sys||shmget(key_t key, size_t size, int shmflg); }
0000000000000000000000000000000000000000;;		SYS_TIMER_CREATE         = 235 // { int|sys||timer_create(clockid_t clock_id, struct sigevent *evp, timer_t *timerid); }
0000000000000000000000000000000000000000;;		SYS_TIMER_DELETE         = 236 // { int|sys||timer_delete(timer_t timerid); }
0000000000000000000000000000000000000000;;		SYS_TIMER_GETOVERRUN     = 239 // { int|sys||timer_getoverrun(timer_t timerid); }
0000000000000000000000000000000000000000;;		SYS_FDATASYNC            = 241 // { int|sys||fdatasync(int fd); }
0000000000000000000000000000000000000000;;		SYS_MLOCKALL             = 242 // { int|sys||mlockall(int flags); }
0000000000000000000000000000000000000000;;		SYS_MUNLOCKALL           = 243 // { int|sys||munlockall(void); }
0000000000000000000000000000000000000000;;		SYS_SIGQUEUEINFO         = 245 // { int|sys||sigqueueinfo(pid_t pid, const siginfo_t *info); }
0000000000000000000000000000000000000000;;		SYS_MODCTL               = 246 // { int|sys||modctl(int cmd, void *arg); }
0000000000000000000000000000000000000000;;		SYS___POSIX_RENAME       = 270 // { int|sys||__posix_rename(const char *from, const char *to); }
0000000000000000000000000000000000000000;;		SYS_SWAPCTL              = 271 // { int|sys||swapctl(int cmd, void *arg, int misc); }
0000000000000000000000000000000000000000;;		SYS_MINHERIT             = 273 // { int|sys||minherit(void *addr, size_t len, int inherit); }
0000000000000000000000000000000000000000;;		SYS_LCHMOD               = 274 // { int|sys||lchmod(const char *path, mode_t mode); }
0000000000000000000000000000000000000000;;		SYS_LCHOWN               = 275 // { int|sys||lchown(const char *path, uid_t uid, gid_t gid); }
0000000000000000000000000000000000000000;;		SYS___POSIX_CHOWN        = 283 // { int|sys||__posix_chown(const char *path, uid_t uid, gid_t gid); }
0000000000000000000000000000000000000000;;		SYS___POSIX_FCHOWN       = 284 // { int|sys||__posix_fchown(int fd, uid_t uid, gid_t gid); }
0000000000000000000000000000000000000000;;		SYS___POSIX_LCHOWN       = 285 // { int|sys||__posix_lchown(const char *path, uid_t uid, gid_t gid); }
0000000000000000000000000000000000000000;;		SYS_GETSID               = 286 // { pid_t|sys||getsid(pid_t pid); }
0000000000000000000000000000000000000000;;		SYS___CLONE              = 287 // { pid_t|sys||__clone(int flags, void *stack); }
0000000000000000000000000000000000000000;;		SYS_FKTRACE              = 288 // { int|sys||fktrace(int fd, int ops, int facs, pid_t pid); }
0000000000000000000000000000000000000000;;		SYS_PREADV               = 289 // { ssize_t|sys||preadv(int fd, const struct iovec *iovp, int iovcnt, int PAD, off_t offset); }
0000000000000000000000000000000000000000;;		SYS_PWRITEV              = 290 // { ssize_t|sys||pwritev(int fd, const struct iovec *iovp, int iovcnt, int PAD, off_t offset); }
0000000000000000000000000000000000000000;;		SYS___GETCWD             = 296 // { int|sys||__getcwd(char *bufp, size_t length); }
0000000000000000000000000000000000000000;;		SYS_FCHROOT              = 297 // { int|sys||fchroot(int fd); }
0000000000000000000000000000000000000000;;		SYS_LCHFLAGS             = 304 // { int|sys||lchflags(const char *path, u_long flags); }
0000000000000000000000000000000000000000;;		SYS_ISSETUGID            = 305 // { int|sys||issetugid(void); }
0000000000000000000000000000000000000000;;		SYS_UTRACE               = 306 // { int|sys||utrace(const char *label, void *addr, size_t len); }
0000000000000000000000000000000000000000;;		SYS_GETCONTEXT           = 307 // { int|sys||getcontext(struct __ucontext *ucp); }
0000000000000000000000000000000000000000;;		SYS_SETCONTEXT           = 308 // { int|sys||setcontext(const struct __ucontext *ucp); }
0000000000000000000000000000000000000000;;		SYS__LWP_CREATE          = 309 // { int|sys||_lwp_create(const struct __ucontext *ucp, u_long flags, lwpid_t *new_lwp); }
0000000000000000000000000000000000000000;;		SYS__LWP_EXIT            = 310 // { int|sys||_lwp_exit(void); }
0000000000000000000000000000000000000000;;		SYS__LWP_SELF            = 311 // { lwpid_t|sys||_lwp_self(void); }
0000000000000000000000000000000000000000;;		SYS__LWP_WAIT            = 312 // { int|sys||_lwp_wait(lwpid_t wait_for, lwpid_t *departed); }
0000000000000000000000000000000000000000;;		SYS__LWP_SUSPEND         = 313 // { int|sys||_lwp_suspend(lwpid_t target); }
0000000000000000000000000000000000000000;;		SYS__LWP_CONTINUE        = 314 // { int|sys||_lwp_continue(lwpid_t target); }
0000000000000000000000000000000000000000;;		SYS__LWP_WAKEUP          = 315 // { int|sys||_lwp_wakeup(lwpid_t target); }
0000000000000000000000000000000000000000;;		SYS__LWP_GETPRIVATE      = 316 // { void *|sys||_lwp_getprivate(void); }
0000000000000000000000000000000000000000;;		SYS__LWP_SETPRIVATE      = 317 // { void|sys||_lwp_setprivate(void *ptr); }
0000000000000000000000000000000000000000;;		SYS__LWP_KILL            = 318 // { int|sys||_lwp_kill(lwpid_t target, int signo); }
0000000000000000000000000000000000000000;;		SYS__LWP_DETACH          = 319 // { int|sys||_lwp_detach(lwpid_t target); }
0000000000000000000000000000000000000000;;		SYS__LWP_UNPARK          = 321 // { int|sys||_lwp_unpark(lwpid_t target, const void *hint); }
0000000000000000000000000000000000000000;;		SYS__LWP_UNPARK_ALL      = 322 // { ssize_t|sys||_lwp_unpark_all(const lwpid_t *targets, size_t ntargets, const void *hint); }
0000000000000000000000000000000000000000;;		SYS__LWP_SETNAME         = 323 // { int|sys||_lwp_setname(lwpid_t target, const char *name); }
0000000000000000000000000000000000000000;;		SYS__LWP_GETNAME         = 324 // { int|sys||_lwp_getname(lwpid_t target, char *name, size_t len); }
0000000000000000000000000000000000000000;;		SYS__LWP_CTL             = 325 // { int|sys||_lwp_ctl(int features, struct lwpctl **address); }
0000000000000000000000000000000000000000;;		SYS___SIGACTION_SIGTRAMP = 340 // { int|sys||__sigaction_sigtramp(int signum, const struct sigaction *nsa, struct sigaction *osa, const void *tramp, int vers); }
0000000000000000000000000000000000000000;;		SYS_PMC_GET_INFO         = 341 // { int|sys||pmc_get_info(int ctr, int op, void *args); }
0000000000000000000000000000000000000000;;		SYS_PMC_CONTROL          = 342 // { int|sys||pmc_control(int ctr, int op, void *args); }
0000000000000000000000000000000000000000;;		SYS_RASCTL               = 343 // { int|sys||rasctl(void *addr, size_t len, int op); }
0000000000000000000000000000000000000000;;		SYS_KQUEUE               = 344 // { int|sys||kqueue(void); }
0000000000000000000000000000000000000000;;		SYS__SCHED_SETPARAM      = 346 // { int|sys||_sched_setparam(pid_t pid, lwpid_t lid, int policy, const struct sched_param *params); }
0000000000000000000000000000000000000000;;		SYS__SCHED_GETPARAM      = 347 // { int|sys||_sched_getparam(pid_t pid, lwpid_t lid, int *policy, struct sched_param *params); }
0000000000000000000000000000000000000000;;		SYS__SCHED_SETAFFINITY   = 348 // { int|sys||_sched_setaffinity(pid_t pid, lwpid_t lid, size_t size, const cpuset_t *cpuset); }
0000000000000000000000000000000000000000;;		SYS__SCHED_GETAFFINITY   = 349 // { int|sys||_sched_getaffinity(pid_t pid, lwpid_t lid, size_t size, cpuset_t *cpuset); }
0000000000000000000000000000000000000000;;		SYS_SCHED_YIELD          = 350 // { int|sys||sched_yield(void); }
0000000000000000000000000000000000000000;;		SYS_FSYNC_RANGE          = 354 // { int|sys||fsync_range(int fd, int flags, off_t start, off_t length); }
0000000000000000000000000000000000000000;;		SYS_UUIDGEN              = 355 // { int|sys||uuidgen(struct uuid *store, int count); }
0000000000000000000000000000000000000000;;		SYS_GETVFSSTAT           = 356 // { int|sys||getvfsstat(struct statvfs *buf, size_t bufsize, int flags); }
0000000000000000000000000000000000000000;;		SYS_STATVFS1             = 357 // { int|sys||statvfs1(const char *path, struct statvfs *buf, int flags); }
0000000000000000000000000000000000000000;;		SYS_FSTATVFS1            = 358 // { int|sys||fstatvfs1(int fd, struct statvfs *buf, int flags); }
0000000000000000000000000000000000000000;;		SYS_EXTATTRCTL           = 360 // { int|sys||extattrctl(const char *path, int cmd, const char *filename, int attrnamespace, const char *attrname); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_SET_FILE     = 361 // { int|sys||extattr_set_file(const char *path, int attrnamespace, const char *attrname, const void *data, size_t nbytes); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_GET_FILE     = 362 // { ssize_t|sys||extattr_get_file(const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_DELETE_FILE  = 363 // { int|sys||extattr_delete_file(const char *path, int attrnamespace, const char *attrname); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_SET_FD       = 364 // { int|sys||extattr_set_fd(int fd, int attrnamespace, const char *attrname, const void *data, size_t nbytes); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_GET_FD       = 365 // { ssize_t|sys||extattr_get_fd(int fd, int attrnamespace, const char *attrname, void *data, size_t nbytes); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_DELETE_FD    = 366 // { int|sys||extattr_delete_fd(int fd, int attrnamespace, const char *attrname); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_SET_LINK     = 367 // { int|sys||extattr_set_link(const char *path, int attrnamespace, const char *attrname, const void *data, size_t nbytes); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_GET_LINK     = 368 // { ssize_t|sys||extattr_get_link(const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_DELETE_LINK  = 369 // { int|sys||extattr_delete_link(const char *path, int attrnamespace, const char *attrname); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_LIST_FD      = 370 // { ssize_t|sys||extattr_list_fd(int fd, int attrnamespace, void *data, size_t nbytes); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_LIST_FILE    = 371 // { ssize_t|sys||extattr_list_file(const char *path, int attrnamespace, void *data, size_t nbytes); }
0000000000000000000000000000000000000000;;		SYS_EXTATTR_LIST_LINK    = 372 // { ssize_t|sys||extattr_list_link(const char *path, int attrnamespace, void *data, size_t nbytes); }
0000000000000000000000000000000000000000;;		SYS_SETXATTR             = 375 // { int|sys||setxattr(const char *path, const char *name, const void *value, size_t size, int flags); }
0000000000000000000000000000000000000000;;		SYS_LSETXATTR            = 376 // { int|sys||lsetxattr(const char *path, const char *name, const void *value, size_t size, int flags); }
0000000000000000000000000000000000000000;;		SYS_FSETXATTR            = 377 // { int|sys||fsetxattr(int fd, const char *name, const void *value, size_t size, int flags); }
0000000000000000000000000000000000000000;;		SYS_GETXATTR             = 378 // { int|sys||getxattr(const char *path, const char *name, void *value, size_t size); }
0000000000000000000000000000000000000000;;		SYS_LGETXATTR            = 379 // { int|sys||lgetxattr(const char *path, const char *name, void *value, size_t size); }
0000000000000000000000000000000000000000;;		SYS_FGETXATTR            = 380 // { int|sys||fgetxattr(int fd, const char *name, void *value, size_t size); }
0000000000000000000000000000000000000000;;		SYS_LISTXATTR            = 381 // { int|sys||listxattr(const char *path, char *list, size_t size); }
0000000000000000000000000000000000000000;;		SYS_LLISTXATTR           = 382 // { int|sys||llistxattr(const char *path, char *list, size_t size); }
0000000000000000000000000000000000000000;;		SYS_FLISTXATTR           = 383 // { int|sys||flistxattr(int fd, char *list, size_t size); }
0000000000000000000000000000000000000000;;		SYS_REMOVEXATTR          = 384 // { int|sys||removexattr(const char *path, const char *name); }
0000000000000000000000000000000000000000;;		SYS_LREMOVEXATTR         = 385 // { int|sys||lremovexattr(const char *path, const char *name); }
0000000000000000000000000000000000000000;;		SYS_FREMOVEXATTR         = 386 // { int|sys||fremovexattr(int fd, const char *name); }
0000000000000000000000000000000000000000;;		SYS_GETDENTS             = 390 // { int|sys|30|getdents(int fd, char *buf, size_t count); }
0000000000000000000000000000000000000000;;		SYS_SOCKET               = 394 // { int|sys|30|socket(int domain, int type, int protocol); }
0000000000000000000000000000000000000000;;		SYS_GETFH                = 395 // { int|sys|30|getfh(const char *fname, void *fhp, size_t *fh_size); }
0000000000000000000000000000000000000000;;		SYS_MOUNT                = 410 // { int|sys|50|mount(const char *type, const char *path, int flags, void *data, size_t data_len); }
0000000000000000000000000000000000000000;;		SYS_MREMAP               = 411 // { void *|sys||mremap(void *old_address, size_t old_size, void *new_address, size_t new_size, int flags); }
0000000000000000000000000000000000000000;;		SYS_PSET_CREATE          = 412 // { int|sys||pset_create(psetid_t *psid); }
0000000000000000000000000000000000000000;;		SYS_PSET_DESTROY         = 413 // { int|sys||pset_destroy(psetid_t psid); }
0000000000000000000000000000000000000000;;		SYS_PSET_ASSIGN          = 414 // { int|sys||pset_assign(psetid_t psid, cpuid_t cpuid, psetid_t *opsid); }
0000000000000000000000000000000000000000;;		SYS__PSET_BIND           = 415 // { int|sys||_pset_bind(idtype_t idtype, id_t first_id, id_t second_id, psetid_t psid, psetid_t *opsid); }
0000000000000000000000000000000000000000;;		SYS_POSIX_FADVISE        = 416 // { int|sys|50|posix_fadvise(int fd, int PAD, off_t offset, off_t len, int advice); }
0000000000000000000000000000000000000000;;		SYS_SELECT               = 417 // { int|sys|50|select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); }
0000000000000000000000000000000000000000;;		SYS_GETTIMEOFDAY         = 418 // { int|sys|50|gettimeofday(struct timeval *tp, void *tzp); }
0000000000000000000000000000000000000000;;		SYS_SETTIMEOFDAY         = 419 // { int|sys|50|settimeofday(const struct timeval *tv, const void *tzp); }
0000000000000000000000000000000000000000;;		SYS_UTIMES               = 420 // { int|sys|50|utimes(const char *path, const struct timeval *tptr); }
0000000000000000000000000000000000000000;;		SYS_ADJTIME              = 421 // { int|sys|50|adjtime(const struct timeval *delta, struct timeval *olddelta); }
0000000000000000000000000000000000000000;;		SYS_FUTIMES              = 423 // { int|sys|50|futimes(int fd, const struct timeval *tptr); }
0000000000000000000000000000000000000000;;		SYS_LUTIMES              = 424 // { int|sys|50|lutimes(const char *path, const struct timeval *tptr); }
0000000000000000000000000000000000000000;;		SYS_SETITIMER            = 425 // { int|sys|50|setitimer(int which, const struct itimerval *itv, struct itimerval *oitv); }
0000000000000000000000000000000000000000;;		SYS_GETITIMER            = 426 // { int|sys|50|getitimer(int which, struct itimerval *itv); }
0000000000000000000000000000000000000000;;		SYS_CLOCK_GETTIME        = 427 // { int|sys|50|clock_gettime(clockid_t clock_id, struct timespec *tp); }
0000000000000000000000000000000000000000;;		SYS_CLOCK_SETTIME        = 428 // { int|sys|50|clock_settime(clockid_t clock_id, const struct timespec *tp); }
0000000000000000000000000000000000000000;;		SYS_CLOCK_GETRES         = 429 // { int|sys|50|clock_getres(clockid_t clock_id, struct timespec *tp); }
0000000000000000000000000000000000000000;;		SYS_NANOSLEEP            = 430 // { int|sys|50|nanosleep(const struct timespec *rqtp, struct timespec *rmtp); }
0000000000000000000000000000000000000000;;		SYS___SIGTIMEDWAIT       = 431 // { int|sys|50|__sigtimedwait(const sigset_t *set, siginfo_t *info, struct timespec *timeout); }
0000000000000000000000000000000000000000;;		SYS__LWP_PARK            = 434 // { int|sys|50|_lwp_park(const struct timespec *ts, lwpid_t unpark, const void *hint, const void *unparkhint); }
0000000000000000000000000000000000000000;;		SYS_KEVENT               = 435 // { int|sys|50|kevent(int fd, const struct kevent *changelist, size_t nchanges, struct kevent *eventlist, size_t nevents, const struct timespec *timeout); }
0000000000000000000000000000000000000000;;		SYS_PSELECT              = 436 // { int|sys|50|pselect(int nd, fd_set *in, fd_set *ou, fd_set *ex, const struct timespec *ts, const sigset_t *mask); }
0000000000000000000000000000000000000000;;		SYS_POLLTS               = 437 // { int|sys|50|pollts(struct pollfd *fds, u_int nfds, const struct timespec *ts, const sigset_t *mask); }
0000000000000000000000000000000000000000;;		SYS_STAT                 = 439 // { int|sys|50|stat(const char *path, struct stat *ub); }
0000000000000000000000000000000000000000;;		SYS_FSTAT                = 440 // { int|sys|50|fstat(int fd, struct stat *sb); }
0000000000000000000000000000000000000000;;		SYS_LSTAT                = 441 // { int|sys|50|lstat(const char *path, struct stat *ub); }
0000000000000000000000000000000000000000;;		SYS___SEMCTL             = 442 // { int|sys|50|__semctl(int semid, int semnum, int cmd, ... union __semun *arg); }
0000000000000000000000000000000000000000;;		SYS_SHMCTL               = 443 // { int|sys|50|shmctl(int shmid, int cmd, struct shmid_ds *buf); }
0000000000000000000000000000000000000000;;		SYS_MSGCTL               = 444 // { int|sys|50|msgctl(int msqid, int cmd, struct msqid_ds *buf); }
0000000000000000000000000000000000000000;;		SYS_GETRUSAGE            = 445 // { int|sys|50|getrusage(int who, struct rusage *rusage); }
0000000000000000000000000000000000000000;;		SYS_TIMER_SETTIME        = 446 // { int|sys|50|timer_settime(timer_t timerid, int flags, const struct itimerspec *value, struct itimerspec *ovalue); }
0000000000000000000000000000000000000000;;		SYS_TIMER_GETTIME        = 447 // { int|sys|50|timer_gettime(timer_t timerid, struct itimerspec *value); }
0000000000000000000000000000000000000000;;		SYS_NTP_GETTIME          = 448 // { int|sys|50|ntp_gettime(struct ntptimeval *ntvp); }
0000000000000000000000000000000000000000;;		SYS_WAIT4                = 449 // { int|sys|50|wait4(pid_t pid, int *status, int options, struct rusage *rusage); }
0000000000000000000000000000000000000000;;		SYS_MKNOD                = 450 // { int|sys|50|mknod(const char *path, mode_t mode, dev_t dev); }
0000000000000000000000000000000000000000;;		SYS_FHSTAT               = 451 // { int|sys|50|fhstat(const void *fhp, size_t fh_size, struct stat *sb); }
0000000000000000000000000000000000000000;;		SYS_PIPE2                = 453 // { int|sys||pipe2(int *fildes, int flags); }
0000000000000000000000000000000000000000;;		SYS_DUP3                 = 454 // { int|sys||dup3(int from, int to, int flags); }
0000000000000000000000000000000000000000;;		SYS_KQUEUE1              = 455 // { int|sys||kqueue1(int flags); }
0000000000000000000000000000000000000000;;		SYS_PACCEPT              = 456 // { int|sys||paccept(int s, struct sockaddr *name, socklen_t *anamelen, const sigset_t *mask, int flags); }
0000000000000000000000000000000000000000;;		SYS_LINKAT               = 457 // { int|sys||linkat(int fd1, const char *name1, int fd2, const char *name2, int flags); }
0000000000000000000000000000000000000000;;		SYS_RENAMEAT             = 458 // { int|sys||renameat(int fromfd, const char *from, int tofd, const char *to); }
0000000000000000000000000000000000000000;;		SYS_MKFIFOAT             = 459 // { int|sys||mkfifoat(int fd, const char *path, mode_t mode); }
0000000000000000000000000000000000000000;;		SYS_MKNODAT              = 460 // { int|sys||mknodat(int fd, const char *path, mode_t mode, uint32_t dev); }
0000000000000000000000000000000000000000;;		SYS_MKDIRAT              = 461 // { int|sys||mkdirat(int fd, const char *path, mode_t mode); }
0000000000000000000000000000000000000000;;		SYS_FACCESSAT            = 462 // { int|sys||faccessat(int fd, const char *path, int amode, int flag); }
0000000000000000000000000000000000000000;;		SYS_FCHMODAT             = 463 // { int|sys||fchmodat(int fd, const char *path, mode_t mode, int flag); }
0000000000000000000000000000000000000000;;		SYS_FCHOWNAT             = 464 // { int|sys||fchownat(int fd, const char *path, uid_t owner, gid_t group, int flag); }
0000000000000000000000000000000000000000;;		SYS_FEXECVE              = 465 // { int|sys||fexecve(int fd, char * const *argp, char * const *envp); }
0000000000000000000000000000000000000000;;		SYS_FSTATAT              = 466 // { int|sys||fstatat(int fd, const char *path, struct stat *buf, int flag); }
0000000000000000000000000000000000000000;;		SYS_UTIMENSAT            = 467 // { int|sys||utimensat(int fd, const char *path, const struct timespec *tptr, int flag); }
0000000000000000000000000000000000000000;;		SYS_OPENAT               = 468 // { int|sys||openat(int fd, const char *path, int oflags, ... mode_t mode); }
0000000000000000000000000000000000000000;;		SYS_READLINKAT           = 469 // { int|sys||readlinkat(int fd, const char *path, char *buf, size_t bufsize); }
0000000000000000000000000000000000000000;;		SYS_SYMLINKAT            = 470 // { int|sys||symlinkat(const char *path1, int fd, const char *path2); }
0000000000000000000000000000000000000000;;		SYS_UNLINKAT             = 471 // { int|sys||unlinkat(int fd, const char *path, int flag); }
0000000000000000000000000000000000000000;;		SYS_FUTIMENS             = 472 // { int|sys||futimens(int fd, const struct timespec *tptr); }
0000000000000000000000000000000000000000;;		SYS___QUOTACTL           = 473 // { int|sys||__quotactl(const char *path, struct quotactl_args *args); }
0000000000000000000000000000000000000000;;		SYS_POSIX_SPAWN          = 474 // { int|sys||posix_spawn(pid_t *pid, const char *path, const struct posix_spawn_file_actions *file_actions, const struct posix_spawnattr *attrp, char *const *argv, char *const *envp); }
0000000000000000000000000000000000000000;;		SYS_RECVMMSG             = 475 // { int|sys||recvmmsg(int s, struct mmsghdr *mmsg, unsigned int vlen, unsigned int flags, struct timespec *timeout); }
0000000000000000000000000000000000000000;;		SYS_SENDMMSG             = 476 // { int|sys||sendmmsg(int s, struct mmsghdr *mmsg, unsigned int vlen, unsigned int flags); }
0000000000000000000000000000000000000000;;	)

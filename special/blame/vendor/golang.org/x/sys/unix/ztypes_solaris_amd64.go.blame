0000000000000000000000000000000000000000;;	// +build amd64,solaris
0000000000000000000000000000000000000000;;	// Created by cgo -godefs - DO NOT EDIT
0000000000000000000000000000000000000000;;	// cgo -godefs types_solaris.go | go run mkpost.go
12a86164cdbf8548dc1c57ea2633daf61c4daab0;Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/ztypes_solaris_amd64.go[Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/ztypes_solaris_amd64.go][vendor/golang.org/x/sys/unix/ztypes_solaris_amd64.go];	
0000000000000000000000000000000000000000;;	package unix
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		sizeofPtr      = 0x8
0000000000000000000000000000000000000000;;		sizeofShort    = 0x2
0000000000000000000000000000000000000000;;		sizeofInt      = 0x4
0000000000000000000000000000000000000000;;		sizeofLong     = 0x8
0000000000000000000000000000000000000000;;		sizeofLongLong = 0x8
0000000000000000000000000000000000000000;;		PathMax        = 0x400
0000000000000000000000000000000000000000;;		MaxHostNameLen = 0x100
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type (
0000000000000000000000000000000000000000;;		_C_short     int16
0000000000000000000000000000000000000000;;		_C_int       int32
0000000000000000000000000000000000000000;;		_C_long      int64
0000000000000000000000000000000000000000;;		_C_long_long int64
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Timespec struct {
0000000000000000000000000000000000000000;;		Sec  int64
0000000000000000000000000000000000000000;;		Nsec int64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Timeval struct {
0000000000000000000000000000000000000000;;		Sec  int64
0000000000000000000000000000000000000000;;		Usec int64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Timeval32 struct {
0000000000000000000000000000000000000000;;		Sec  int32
0000000000000000000000000000000000000000;;		Usec int32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Tms struct {
0000000000000000000000000000000000000000;;		Utime  int64
0000000000000000000000000000000000000000;;		Stime  int64
0000000000000000000000000000000000000000;;		Cutime int64
0000000000000000000000000000000000000000;;		Cstime int64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Utimbuf struct {
0000000000000000000000000000000000000000;;		Actime  int64
0000000000000000000000000000000000000000;;		Modtime int64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Rusage struct {
0000000000000000000000000000000000000000;;		Utime    Timeval
0000000000000000000000000000000000000000;;		Stime    Timeval
0000000000000000000000000000000000000000;;		Maxrss   int64
0000000000000000000000000000000000000000;;		Ixrss    int64
0000000000000000000000000000000000000000;;		Idrss    int64
0000000000000000000000000000000000000000;;		Isrss    int64
0000000000000000000000000000000000000000;;		Minflt   int64
0000000000000000000000000000000000000000;;		Majflt   int64
0000000000000000000000000000000000000000;;		Nswap    int64
0000000000000000000000000000000000000000;;		Inblock  int64
0000000000000000000000000000000000000000;;		Oublock  int64
0000000000000000000000000000000000000000;;		Msgsnd   int64
0000000000000000000000000000000000000000;;		Msgrcv   int64
0000000000000000000000000000000000000000;;		Nsignals int64
0000000000000000000000000000000000000000;;		Nvcsw    int64
0000000000000000000000000000000000000000;;		Nivcsw   int64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Rlimit struct {
0000000000000000000000000000000000000000;;		Cur uint64
0000000000000000000000000000000000000000;;		Max uint64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type _Gid_t uint32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		S_IFMT   = 0xf000
0000000000000000000000000000000000000000;;		S_IFIFO  = 0x1000
0000000000000000000000000000000000000000;;		S_IFCHR  = 0x2000
0000000000000000000000000000000000000000;;		S_IFDIR  = 0x4000
0000000000000000000000000000000000000000;;		S_IFBLK  = 0x6000
0000000000000000000000000000000000000000;;		S_IFREG  = 0x8000
0000000000000000000000000000000000000000;;		S_IFLNK  = 0xa000
0000000000000000000000000000000000000000;;		S_IFSOCK = 0xc000
0000000000000000000000000000000000000000;;		S_ISUID  = 0x800
0000000000000000000000000000000000000000;;		S_ISGID  = 0x400
0000000000000000000000000000000000000000;;		S_ISVTX  = 0x200
0000000000000000000000000000000000000000;;		S_IRUSR  = 0x100
0000000000000000000000000000000000000000;;		S_IWUSR  = 0x80
0000000000000000000000000000000000000000;;		S_IXUSR  = 0x40
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Stat_t struct {
0000000000000000000000000000000000000000;;		Dev       uint64
0000000000000000000000000000000000000000;;		Ino       uint64
0000000000000000000000000000000000000000;;		Mode      uint32
0000000000000000000000000000000000000000;;		Nlink     uint32
0000000000000000000000000000000000000000;;		Uid       uint32
0000000000000000000000000000000000000000;;		Gid       uint32
0000000000000000000000000000000000000000;;		Rdev      uint64
0000000000000000000000000000000000000000;;		Size      int64
0000000000000000000000000000000000000000;;		Atim      Timespec
0000000000000000000000000000000000000000;;		Mtim      Timespec
0000000000000000000000000000000000000000;;		Ctim      Timespec
0000000000000000000000000000000000000000;;		Blksize   int32
0000000000000000000000000000000000000000;;		Pad_cgo_0 [4]byte
0000000000000000000000000000000000000000;;		Blocks    int64
0000000000000000000000000000000000000000;;		Fstype    [16]int8
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Flock_t struct {
0000000000000000000000000000000000000000;;		Type      int16
0000000000000000000000000000000000000000;;		Whence    int16
0000000000000000000000000000000000000000;;		Pad_cgo_0 [4]byte
0000000000000000000000000000000000000000;;		Start     int64
0000000000000000000000000000000000000000;;		Len       int64
0000000000000000000000000000000000000000;;		Sysid     int32
0000000000000000000000000000000000000000;;		Pid       int32
0000000000000000000000000000000000000000;;		Pad       [4]int64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Dirent struct {
0000000000000000000000000000000000000000;;		Ino       uint64
0000000000000000000000000000000000000000;;		Off       int64
0000000000000000000000000000000000000000;;		Reclen    uint16
0000000000000000000000000000000000000000;;		Name      [1]int8
0000000000000000000000000000000000000000;;		Pad_cgo_0 [5]byte
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RawSockaddrInet4 struct {
0000000000000000000000000000000000000000;;		Family uint16
0000000000000000000000000000000000000000;;		Port   uint16
0000000000000000000000000000000000000000;;		Addr   [4]byte /* in_addr */
0000000000000000000000000000000000000000;;		Zero   [8]int8
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RawSockaddrInet6 struct {
0000000000000000000000000000000000000000;;		Family         uint16
0000000000000000000000000000000000000000;;		Port           uint16
0000000000000000000000000000000000000000;;		Flowinfo       uint32
0000000000000000000000000000000000000000;;		Addr           [16]byte /* in6_addr */
0000000000000000000000000000000000000000;;		Scope_id       uint32
0000000000000000000000000000000000000000;;		X__sin6_src_id uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RawSockaddrUnix struct {
0000000000000000000000000000000000000000;;		Family uint16
0000000000000000000000000000000000000000;;		Path   [108]int8
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RawSockaddrDatalink struct {
0000000000000000000000000000000000000000;;		Family uint16
0000000000000000000000000000000000000000;;		Index  uint16
0000000000000000000000000000000000000000;;		Type   uint8
0000000000000000000000000000000000000000;;		Nlen   uint8
0000000000000000000000000000000000000000;;		Alen   uint8
0000000000000000000000000000000000000000;;		Slen   uint8
0000000000000000000000000000000000000000;;		Data   [244]int8
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RawSockaddr struct {
0000000000000000000000000000000000000000;;		Family uint16
0000000000000000000000000000000000000000;;		Data   [14]int8
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RawSockaddrAny struct {
0000000000000000000000000000000000000000;;		Addr RawSockaddr
0000000000000000000000000000000000000000;;		Pad  [236]int8
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type _Socklen uint32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Linger struct {
0000000000000000000000000000000000000000;;		Onoff  int32
0000000000000000000000000000000000000000;;		Linger int32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Iovec struct {
0000000000000000000000000000000000000000;;		Base *int8
0000000000000000000000000000000000000000;;		Len  uint64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type IPMreq struct {
0000000000000000000000000000000000000000;;		Multiaddr [4]byte /* in_addr */
0000000000000000000000000000000000000000;;		Interface [4]byte /* in_addr */
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type IPv6Mreq struct {
0000000000000000000000000000000000000000;;		Multiaddr [16]byte /* in6_addr */
0000000000000000000000000000000000000000;;		Interface uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Msghdr struct {
0000000000000000000000000000000000000000;;		Name         *byte
0000000000000000000000000000000000000000;;		Namelen      uint32
0000000000000000000000000000000000000000;;		Pad_cgo_0    [4]byte
0000000000000000000000000000000000000000;;		Iov          *Iovec
0000000000000000000000000000000000000000;;		Iovlen       int32
0000000000000000000000000000000000000000;;		Pad_cgo_1    [4]byte
0000000000000000000000000000000000000000;;		Accrights    *int8
0000000000000000000000000000000000000000;;		Accrightslen int32
0000000000000000000000000000000000000000;;		Pad_cgo_2    [4]byte
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Cmsghdr struct {
0000000000000000000000000000000000000000;;		Len   uint32
0000000000000000000000000000000000000000;;		Level int32
0000000000000000000000000000000000000000;;		Type  int32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Inet6Pktinfo struct {
0000000000000000000000000000000000000000;;		Addr    [16]byte /* in6_addr */
0000000000000000000000000000000000000000;;		Ifindex uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type IPv6MTUInfo struct {
0000000000000000000000000000000000000000;;		Addr RawSockaddrInet6
0000000000000000000000000000000000000000;;		Mtu  uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type ICMPv6Filter struct {
0000000000000000000000000000000000000000;;		X__icmp6_filt [8]uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		SizeofSockaddrInet4    = 0x10
0000000000000000000000000000000000000000;;		SizeofSockaddrInet6    = 0x20
0000000000000000000000000000000000000000;;		SizeofSockaddrAny      = 0xfc
0000000000000000000000000000000000000000;;		SizeofSockaddrUnix     = 0x6e
0000000000000000000000000000000000000000;;		SizeofSockaddrDatalink = 0xfc
0000000000000000000000000000000000000000;;		SizeofLinger           = 0x8
0000000000000000000000000000000000000000;;		SizeofIPMreq           = 0x8
0000000000000000000000000000000000000000;;		SizeofIPv6Mreq         = 0x14
0000000000000000000000000000000000000000;;		SizeofMsghdr           = 0x30
0000000000000000000000000000000000000000;;		SizeofCmsghdr          = 0xc
0000000000000000000000000000000000000000;;		SizeofInet6Pktinfo     = 0x14
0000000000000000000000000000000000000000;;		SizeofIPv6MTUInfo      = 0x24
0000000000000000000000000000000000000000;;		SizeofICMPv6Filter     = 0x20
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type FdSet struct {
0000000000000000000000000000000000000000;;		Bits [1024]int64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Utsname struct {
0000000000000000000000000000000000000000;;		Sysname  [257]int8
0000000000000000000000000000000000000000;;		Nodename [257]int8
0000000000000000000000000000000000000000;;		Release  [257]int8
0000000000000000000000000000000000000000;;		Version  [257]int8
0000000000000000000000000000000000000000;;		Machine  [257]int8
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Ustat_t struct {
0000000000000000000000000000000000000000;;		Tfree     int64
0000000000000000000000000000000000000000;;		Tinode    uint64
0000000000000000000000000000000000000000;;		Fname     [6]int8
0000000000000000000000000000000000000000;;		Fpack     [6]int8
0000000000000000000000000000000000000000;;		Pad_cgo_0 [4]byte
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		AT_FDCWD            = 0xffd19553
0000000000000000000000000000000000000000;;		AT_SYMLINK_NOFOLLOW = 0x1000
0000000000000000000000000000000000000000;;		AT_SYMLINK_FOLLOW   = 0x2000
0000000000000000000000000000000000000000;;		AT_REMOVEDIR        = 0x1
0000000000000000000000000000000000000000;;		AT_EACCESS          = 0x4
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		SizeofIfMsghdr  = 0x54
0000000000000000000000000000000000000000;;		SizeofIfData    = 0x44
0000000000000000000000000000000000000000;;		SizeofIfaMsghdr = 0x14
0000000000000000000000000000000000000000;;		SizeofRtMsghdr  = 0x4c
0000000000000000000000000000000000000000;;		SizeofRtMetrics = 0x28
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type IfMsghdr struct {
0000000000000000000000000000000000000000;;		Msglen    uint16
0000000000000000000000000000000000000000;;		Version   uint8
0000000000000000000000000000000000000000;;		Type      uint8
0000000000000000000000000000000000000000;;		Addrs     int32
0000000000000000000000000000000000000000;;		Flags     int32
0000000000000000000000000000000000000000;;		Index     uint16
0000000000000000000000000000000000000000;;		Pad_cgo_0 [2]byte
0000000000000000000000000000000000000000;;		Data      IfData
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type IfData struct {
0000000000000000000000000000000000000000;;		Type       uint8
0000000000000000000000000000000000000000;;		Addrlen    uint8
0000000000000000000000000000000000000000;;		Hdrlen     uint8
0000000000000000000000000000000000000000;;		Pad_cgo_0  [1]byte
0000000000000000000000000000000000000000;;		Mtu        uint32
0000000000000000000000000000000000000000;;		Metric     uint32
0000000000000000000000000000000000000000;;		Baudrate   uint32
0000000000000000000000000000000000000000;;		Ipackets   uint32
0000000000000000000000000000000000000000;;		Ierrors    uint32
0000000000000000000000000000000000000000;;		Opackets   uint32
0000000000000000000000000000000000000000;;		Oerrors    uint32
0000000000000000000000000000000000000000;;		Collisions uint32
0000000000000000000000000000000000000000;;		Ibytes     uint32
0000000000000000000000000000000000000000;;		Obytes     uint32
0000000000000000000000000000000000000000;;		Imcasts    uint32
0000000000000000000000000000000000000000;;		Omcasts    uint32
0000000000000000000000000000000000000000;;		Iqdrops    uint32
0000000000000000000000000000000000000000;;		Noproto    uint32
0000000000000000000000000000000000000000;;		Lastchange Timeval32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type IfaMsghdr struct {
0000000000000000000000000000000000000000;;		Msglen    uint16
0000000000000000000000000000000000000000;;		Version   uint8
0000000000000000000000000000000000000000;;		Type      uint8
0000000000000000000000000000000000000000;;		Addrs     int32
0000000000000000000000000000000000000000;;		Flags     int32
0000000000000000000000000000000000000000;;		Index     uint16
0000000000000000000000000000000000000000;;		Pad_cgo_0 [2]byte
0000000000000000000000000000000000000000;;		Metric    int32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RtMsghdr struct {
0000000000000000000000000000000000000000;;		Msglen    uint16
0000000000000000000000000000000000000000;;		Version   uint8
0000000000000000000000000000000000000000;;		Type      uint8
0000000000000000000000000000000000000000;;		Index     uint16
0000000000000000000000000000000000000000;;		Pad_cgo_0 [2]byte
0000000000000000000000000000000000000000;;		Flags     int32
0000000000000000000000000000000000000000;;		Addrs     int32
0000000000000000000000000000000000000000;;		Pid       int32
0000000000000000000000000000000000000000;;		Seq       int32
0000000000000000000000000000000000000000;;		Errno     int32
0000000000000000000000000000000000000000;;		Use       int32
0000000000000000000000000000000000000000;;		Inits     uint32
0000000000000000000000000000000000000000;;		Rmx       RtMetrics
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type RtMetrics struct {
0000000000000000000000000000000000000000;;		Locks    uint32
0000000000000000000000000000000000000000;;		Mtu      uint32
0000000000000000000000000000000000000000;;		Hopcount uint32
0000000000000000000000000000000000000000;;		Expire   uint32
0000000000000000000000000000000000000000;;		Recvpipe uint32
0000000000000000000000000000000000000000;;		Sendpipe uint32
0000000000000000000000000000000000000000;;		Ssthresh uint32
0000000000000000000000000000000000000000;;		Rtt      uint32
0000000000000000000000000000000000000000;;		Rttvar   uint32
0000000000000000000000000000000000000000;;		Pksent   uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		SizeofBpfVersion = 0x4
0000000000000000000000000000000000000000;;		SizeofBpfStat    = 0x80
0000000000000000000000000000000000000000;;		SizeofBpfProgram = 0x10
0000000000000000000000000000000000000000;;		SizeofBpfInsn    = 0x8
0000000000000000000000000000000000000000;;		SizeofBpfHdr     = 0x14
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BpfVersion struct {
0000000000000000000000000000000000000000;;		Major uint16
0000000000000000000000000000000000000000;;		Minor uint16
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BpfStat struct {
0000000000000000000000000000000000000000;;		Recv    uint64
0000000000000000000000000000000000000000;;		Drop    uint64
0000000000000000000000000000000000000000;;		Capt    uint64
0000000000000000000000000000000000000000;;		Padding [13]uint64
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BpfProgram struct {
0000000000000000000000000000000000000000;;		Len       uint32
0000000000000000000000000000000000000000;;		Pad_cgo_0 [4]byte
0000000000000000000000000000000000000000;;		Insns     *BpfInsn
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BpfInsn struct {
0000000000000000000000000000000000000000;;		Code uint16
0000000000000000000000000000000000000000;;		Jt   uint8
0000000000000000000000000000000000000000;;		Jf   uint8
0000000000000000000000000000000000000000;;		K    uint32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BpfTimeval struct {
0000000000000000000000000000000000000000;;		Sec  int32
0000000000000000000000000000000000000000;;		Usec int32
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type BpfHdr struct {
0000000000000000000000000000000000000000;;		Tstamp    BpfTimeval
0000000000000000000000000000000000000000;;		Caplen    uint32
0000000000000000000000000000000000000000;;		Datalen   uint32
0000000000000000000000000000000000000000;;		Hdrlen    uint16
0000000000000000000000000000000000000000;;		Pad_cgo_0 [2]byte
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const _SC_PAGESIZE = 0xb
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Termios struct {
0000000000000000000000000000000000000000;;		Iflag     uint32
0000000000000000000000000000000000000000;;		Oflag     uint32
0000000000000000000000000000000000000000;;		Cflag     uint32
0000000000000000000000000000000000000000;;		Lflag     uint32
0000000000000000000000000000000000000000;;		Cc        [19]uint8
0000000000000000000000000000000000000000;;		Pad_cgo_0 [1]byte
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Termio struct {
0000000000000000000000000000000000000000;;		Iflag     uint16
0000000000000000000000000000000000000000;;		Oflag     uint16
0000000000000000000000000000000000000000;;		Cflag     uint16
0000000000000000000000000000000000000000;;		Lflag     uint16
0000000000000000000000000000000000000000;;		Line      int8
0000000000000000000000000000000000000000;;		Cc        [8]uint8
0000000000000000000000000000000000000000;;		Pad_cgo_0 [1]byte
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type Winsize struct {
0000000000000000000000000000000000000000;;		Row    uint16
0000000000000000000000000000000000000000;;		Col    uint16
0000000000000000000000000000000000000000;;		Xpixel uint16
0000000000000000000000000000000000000000;;		Ypixel uint16
0000000000000000000000000000000000000000;;	}

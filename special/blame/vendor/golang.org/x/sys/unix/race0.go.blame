0000000000000000000000000000000000000000;;	// Copyright 2012 The Go Authors.  All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
12a86164cdbf8548dc1c57ea2633daf61c4daab0;Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/race0.go[Godeps/_workspace/src/github.com/fsouza/go-dockerclient/external/golang.org/x/sys/unix/race0.go][vendor/golang.org/x/sys/unix/race0.go];	
0000000000000000000000000000000000000000;;	// +build darwin,!race linux,!race freebsd,!race netbsd openbsd solaris dragonfly
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package unix
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const raceenabled = false
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func raceAcquire(addr unsafe.Pointer) {
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func raceReleaseMerge(addr unsafe.Pointer) {
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func raceReadRange(addr unsafe.Pointer, len int) {
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func raceWriteRange(addr unsafe.Pointer, len int) {
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Copyright 2012 The Go Authors.  All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
372f1bceb3e2da05404dc30071e64aebe6b55b42;;	
0000000000000000000000000000000000000000;;	// +build windows,race
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package windows
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"runtime"
0000000000000000000000000000000000000000;;		"unsafe"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const raceenabled = true
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func raceAcquire(addr unsafe.Pointer) {
0000000000000000000000000000000000000000;;		runtime.RaceAcquire(addr)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func raceReleaseMerge(addr unsafe.Pointer) {
0000000000000000000000000000000000000000;;		runtime.RaceReleaseMerge(addr)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func raceReadRange(addr unsafe.Pointer, len int) {
0000000000000000000000000000000000000000;;		runtime.RaceReadRange(addr, len)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func raceWriteRange(addr unsafe.Pointer, len int) {
0000000000000000000000000000000000000000;;		runtime.RaceWriteRange(addr, len)
0000000000000000000000000000000000000000;;	}

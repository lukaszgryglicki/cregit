0000000000000000000000000000000000000000;;	// Copyright 2011 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
c2bfd044362efe23765620d054edcdab7497bde5;third_party/src/code.google.com/p/go.net/html/foreign.go[third_party/src/code.google.com/p/go.net/html/foreign.go][vendor/golang.org/x/net/html/foreign.go];	
0000000000000000000000000000000000000000;;	package html
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func adjustAttributeNames(aa []Attribute, nameMap map[string]string) {
0000000000000000000000000000000000000000;;		for i := range aa {
0000000000000000000000000000000000000000;;			if newName, ok := nameMap[aa[i].Key]; ok {
0000000000000000000000000000000000000000;;				aa[i].Key = newName
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func adjustForeignAttributes(aa []Attribute) {
0000000000000000000000000000000000000000;;		for i, a := range aa {
0000000000000000000000000000000000000000;;			if a.Key == "" || a.Key[0] != 'x' {
0000000000000000000000000000000000000000;;				continue
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			switch a.Key {
0000000000000000000000000000000000000000;;			case "xlink:actuate", "xlink:arcrole", "xlink:href", "xlink:role", "xlink:show",
0000000000000000000000000000000000000000;;				"xlink:title", "xlink:type", "xml:base", "xml:lang", "xml:space", "xmlns:xlink":
0000000000000000000000000000000000000000;;				j := strings.Index(a.Key, ":")
0000000000000000000000000000000000000000;;				aa[i].Namespace = a.Key[:j]
0000000000000000000000000000000000000000;;				aa[i].Key = a.Key[j+1:]
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func htmlIntegrationPoint(n *Node) bool {
0000000000000000000000000000000000000000;;		if n.Type != ElementNode {
0000000000000000000000000000000000000000;;			return false
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		switch n.Namespace {
0000000000000000000000000000000000000000;;		case "math":
0000000000000000000000000000000000000000;;			if n.Data == "annotation-xml" {
0000000000000000000000000000000000000000;;				for _, a := range n.Attr {
0000000000000000000000000000000000000000;;					if a.Key == "encoding" {
0000000000000000000000000000000000000000;;						val := strings.ToLower(a.Val)
0000000000000000000000000000000000000000;;						if val == "text/html" || val == "application/xhtml+xml" {
0000000000000000000000000000000000000000;;							return true
0000000000000000000000000000000000000000;;						}
0000000000000000000000000000000000000000;;					}
0000000000000000000000000000000000000000;;				}
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		case "svg":
0000000000000000000000000000000000000000;;			switch n.Data {
0000000000000000000000000000000000000000;;			case "desc", "foreignObject", "title":
0000000000000000000000000000000000000000;;				return true
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func mathMLTextIntegrationPoint(n *Node) bool {
0000000000000000000000000000000000000000;;		if n.Namespace != "math" {
0000000000000000000000000000000000000000;;			return false
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		switch n.Data {
0000000000000000000000000000000000000000;;		case "mi", "mo", "mn", "ms", "mtext":
0000000000000000000000000000000000000000;;			return true
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return false
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Section 12.2.5.5.
0000000000000000000000000000000000000000;;	var breakout = map[string]bool{
0000000000000000000000000000000000000000;;		"b":          true,
0000000000000000000000000000000000000000;;		"big":        true,
0000000000000000000000000000000000000000;;		"blockquote": true,
0000000000000000000000000000000000000000;;		"body":       true,
0000000000000000000000000000000000000000;;		"br":         true,
0000000000000000000000000000000000000000;;		"center":     true,
0000000000000000000000000000000000000000;;		"code":       true,
0000000000000000000000000000000000000000;;		"dd":         true,
0000000000000000000000000000000000000000;;		"div":        true,
0000000000000000000000000000000000000000;;		"dl":         true,
0000000000000000000000000000000000000000;;		"dt":         true,
0000000000000000000000000000000000000000;;		"em":         true,
0000000000000000000000000000000000000000;;		"embed":      true,
0000000000000000000000000000000000000000;;		"h1":         true,
0000000000000000000000000000000000000000;;		"h2":         true,
0000000000000000000000000000000000000000;;		"h3":         true,
0000000000000000000000000000000000000000;;		"h4":         true,
0000000000000000000000000000000000000000;;		"h5":         true,
0000000000000000000000000000000000000000;;		"h6":         true,
0000000000000000000000000000000000000000;;		"head":       true,
0000000000000000000000000000000000000000;;		"hr":         true,
0000000000000000000000000000000000000000;;		"i":          true,
0000000000000000000000000000000000000000;;		"img":        true,
0000000000000000000000000000000000000000;;		"li":         true,
0000000000000000000000000000000000000000;;		"listing":    true,
0000000000000000000000000000000000000000;;		"menu":       true,
0000000000000000000000000000000000000000;;		"meta":       true,
0000000000000000000000000000000000000000;;		"nobr":       true,
0000000000000000000000000000000000000000;;		"ol":         true,
0000000000000000000000000000000000000000;;		"p":          true,
0000000000000000000000000000000000000000;;		"pre":        true,
0000000000000000000000000000000000000000;;		"ruby":       true,
0000000000000000000000000000000000000000;;		"s":          true,
0000000000000000000000000000000000000000;;		"small":      true,
0000000000000000000000000000000000000000;;		"span":       true,
0000000000000000000000000000000000000000;;		"strong":     true,
0000000000000000000000000000000000000000;;		"strike":     true,
0000000000000000000000000000000000000000;;		"sub":        true,
0000000000000000000000000000000000000000;;		"sup":        true,
0000000000000000000000000000000000000000;;		"table":      true,
0000000000000000000000000000000000000000;;		"tt":         true,
0000000000000000000000000000000000000000;;		"u":          true,
0000000000000000000000000000000000000000;;		"ul":         true,
0000000000000000000000000000000000000000;;		"var":        true,
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Section 12.2.5.5.
0000000000000000000000000000000000000000;;	var svgTagNameAdjustments = map[string]string{
0000000000000000000000000000000000000000;;		"altglyph":            "altGlyph",
0000000000000000000000000000000000000000;;		"altglyphdef":         "altGlyphDef",
0000000000000000000000000000000000000000;;		"altglyphitem":        "altGlyphItem",
0000000000000000000000000000000000000000;;		"animatecolor":        "animateColor",
0000000000000000000000000000000000000000;;		"animatemotion":       "animateMotion",
0000000000000000000000000000000000000000;;		"animatetransform":    "animateTransform",
0000000000000000000000000000000000000000;;		"clippath":            "clipPath",
0000000000000000000000000000000000000000;;		"feblend":             "feBlend",
0000000000000000000000000000000000000000;;		"fecolormatrix":       "feColorMatrix",
0000000000000000000000000000000000000000;;		"fecomponenttransfer": "feComponentTransfer",
0000000000000000000000000000000000000000;;		"fecomposite":         "feComposite",
0000000000000000000000000000000000000000;;		"feconvolvematrix":    "feConvolveMatrix",
0000000000000000000000000000000000000000;;		"fediffuselighting":   "feDiffuseLighting",
0000000000000000000000000000000000000000;;		"fedisplacementmap":   "feDisplacementMap",
0000000000000000000000000000000000000000;;		"fedistantlight":      "feDistantLight",
0000000000000000000000000000000000000000;;		"feflood":             "feFlood",
0000000000000000000000000000000000000000;;		"fefunca":             "feFuncA",
0000000000000000000000000000000000000000;;		"fefuncb":             "feFuncB",
0000000000000000000000000000000000000000;;		"fefuncg":             "feFuncG",
0000000000000000000000000000000000000000;;		"fefuncr":             "feFuncR",
0000000000000000000000000000000000000000;;		"fegaussianblur":      "feGaussianBlur",
0000000000000000000000000000000000000000;;		"feimage":             "feImage",
0000000000000000000000000000000000000000;;		"femerge":             "feMerge",
0000000000000000000000000000000000000000;;		"femergenode":         "feMergeNode",
0000000000000000000000000000000000000000;;		"femorphology":        "feMorphology",
0000000000000000000000000000000000000000;;		"feoffset":            "feOffset",
0000000000000000000000000000000000000000;;		"fepointlight":        "fePointLight",
0000000000000000000000000000000000000000;;		"fespecularlighting":  "feSpecularLighting",
0000000000000000000000000000000000000000;;		"fespotlight":         "feSpotLight",
0000000000000000000000000000000000000000;;		"fetile":              "feTile",
0000000000000000000000000000000000000000;;		"feturbulence":        "feTurbulence",
0000000000000000000000000000000000000000;;		"foreignobject":       "foreignObject",
0000000000000000000000000000000000000000;;		"glyphref":            "glyphRef",
0000000000000000000000000000000000000000;;		"lineargradient":      "linearGradient",
0000000000000000000000000000000000000000;;		"radialgradient":      "radialGradient",
0000000000000000000000000000000000000000;;		"textpath":            "textPath",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Section 12.2.5.1
0000000000000000000000000000000000000000;;	var mathMLAttributeAdjustments = map[string]string{
0000000000000000000000000000000000000000;;		"definitionurl": "definitionURL",
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var svgAttributeAdjustments = map[string]string{
0000000000000000000000000000000000000000;;		"attributename":             "attributeName",
0000000000000000000000000000000000000000;;		"attributetype":             "attributeType",
0000000000000000000000000000000000000000;;		"basefrequency":             "baseFrequency",
0000000000000000000000000000000000000000;;		"baseprofile":               "baseProfile",
0000000000000000000000000000000000000000;;		"calcmode":                  "calcMode",
0000000000000000000000000000000000000000;;		"clippathunits":             "clipPathUnits",
0000000000000000000000000000000000000000;;		"contentscripttype":         "contentScriptType",
0000000000000000000000000000000000000000;;		"contentstyletype":          "contentStyleType",
0000000000000000000000000000000000000000;;		"diffuseconstant":           "diffuseConstant",
0000000000000000000000000000000000000000;;		"edgemode":                  "edgeMode",
0000000000000000000000000000000000000000;;		"externalresourcesrequired": "externalResourcesRequired",
0000000000000000000000000000000000000000;;		"filterres":                 "filterRes",
0000000000000000000000000000000000000000;;		"filterunits":               "filterUnits",
0000000000000000000000000000000000000000;;		"glyphref":                  "glyphRef",
0000000000000000000000000000000000000000;;		"gradienttransform":         "gradientTransform",
0000000000000000000000000000000000000000;;		"gradientunits":             "gradientUnits",
0000000000000000000000000000000000000000;;		"kernelmatrix":              "kernelMatrix",
0000000000000000000000000000000000000000;;		"kernelunitlength":          "kernelUnitLength",
0000000000000000000000000000000000000000;;		"keypoints":                 "keyPoints",
0000000000000000000000000000000000000000;;		"keysplines":                "keySplines",
0000000000000000000000000000000000000000;;		"keytimes":                  "keyTimes",
0000000000000000000000000000000000000000;;		"lengthadjust":              "lengthAdjust",
0000000000000000000000000000000000000000;;		"limitingconeangle":         "limitingConeAngle",
0000000000000000000000000000000000000000;;		"markerheight":              "markerHeight",
0000000000000000000000000000000000000000;;		"markerunits":               "markerUnits",
0000000000000000000000000000000000000000;;		"markerwidth":               "markerWidth",
0000000000000000000000000000000000000000;;		"maskcontentunits":          "maskContentUnits",
0000000000000000000000000000000000000000;;		"maskunits":                 "maskUnits",
0000000000000000000000000000000000000000;;		"numoctaves":                "numOctaves",
0000000000000000000000000000000000000000;;		"pathlength":                "pathLength",
0000000000000000000000000000000000000000;;		"patterncontentunits":       "patternContentUnits",
0000000000000000000000000000000000000000;;		"patterntransform":          "patternTransform",
0000000000000000000000000000000000000000;;		"patternunits":              "patternUnits",
0000000000000000000000000000000000000000;;		"pointsatx":                 "pointsAtX",
0000000000000000000000000000000000000000;;		"pointsaty":                 "pointsAtY",
0000000000000000000000000000000000000000;;		"pointsatz":                 "pointsAtZ",
0000000000000000000000000000000000000000;;		"preservealpha":             "preserveAlpha",
0000000000000000000000000000000000000000;;		"preserveaspectratio":       "preserveAspectRatio",
0000000000000000000000000000000000000000;;		"primitiveunits":            "primitiveUnits",
0000000000000000000000000000000000000000;;		"refx":                      "refX",
0000000000000000000000000000000000000000;;		"refy":                      "refY",
0000000000000000000000000000000000000000;;		"repeatcount":               "repeatCount",
0000000000000000000000000000000000000000;;		"repeatdur":                 "repeatDur",
0000000000000000000000000000000000000000;;		"requiredextensions":        "requiredExtensions",
0000000000000000000000000000000000000000;;		"requiredfeatures":          "requiredFeatures",
0000000000000000000000000000000000000000;;		"specularconstant":          "specularConstant",
0000000000000000000000000000000000000000;;		"specularexponent":          "specularExponent",
0000000000000000000000000000000000000000;;		"spreadmethod":              "spreadMethod",
0000000000000000000000000000000000000000;;		"startoffset":               "startOffset",
0000000000000000000000000000000000000000;;		"stddeviation":              "stdDeviation",
0000000000000000000000000000000000000000;;		"stitchtiles":               "stitchTiles",
0000000000000000000000000000000000000000;;		"surfacescale":              "surfaceScale",
0000000000000000000000000000000000000000;;		"systemlanguage":            "systemLanguage",
0000000000000000000000000000000000000000;;		"tablevalues":               "tableValues",
0000000000000000000000000000000000000000;;		"targetx":                   "targetX",
0000000000000000000000000000000000000000;;		"targety":                   "targetY",
0000000000000000000000000000000000000000;;		"textlength":                "textLength",
0000000000000000000000000000000000000000;;		"viewbox":                   "viewBox",
0000000000000000000000000000000000000000;;		"viewtarget":                "viewTarget",
0000000000000000000000000000000000000000;;		"xchannelselector":          "xChannelSelector",
0000000000000000000000000000000000000000;;		"ychannelselector":          "yChannelSelector",
0000000000000000000000000000000000000000;;		"zoomandpan":                "zoomAndPan",
0000000000000000000000000000000000000000;;	}

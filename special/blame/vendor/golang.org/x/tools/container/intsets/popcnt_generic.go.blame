0000000000000000000000000000000000000000;;	// Copyright 2015 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
bbc36ee0615f4d3c102c811dd48ffc85f957293f;;	
0000000000000000000000000000000000000000;;	// +build !amd64 appengine
0000000000000000000000000000000000000000;;	// +build !gccgo
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package intsets
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "runtime"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// We compared three algorithms---Hacker's Delight, table lookup,
0000000000000000000000000000000000000000;;	// and AMD64's SSE4.1 hardware POPCNT---on a 2.67GHz Xeon X5550.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// % GOARCH=amd64 go test -run=NONE -bench=Popcount
0000000000000000000000000000000000000000;;	// POPCNT               5.12 ns/op
0000000000000000000000000000000000000000;;	// Table                8.53 ns/op
0000000000000000000000000000000000000000;;	// HackersDelight       9.96 ns/op
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// % GOARCH=386 go test -run=NONE -bench=Popcount
0000000000000000000000000000000000000000;;	// Table               10.4  ns/op
0000000000000000000000000000000000000000;;	// HackersDelight       5.23 ns/op
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// (AMD64's ABM1 hardware supports ntz and nlz too,
0000000000000000000000000000000000000000;;	// but they aren't critical.)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// popcount returns the population count (number of set bits) of x.
0000000000000000000000000000000000000000;;	func popcount(x word) int {
0000000000000000000000000000000000000000;;		if runtime.GOARCH == "386" {
0000000000000000000000000000000000000000;;			return popcountHD(uint32(x))
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return popcountTable(x)
0000000000000000000000000000000000000000;;	}

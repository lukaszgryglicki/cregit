0000000000000000000000000000000000000000;;	// Copyright 2015 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
20a23b516161fc6e4e2d00ed067520ad63629162;;	
0000000000000000000000000000000000000000;;	package precis
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "golang.org/x/text/transform"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Transformer implements the transform.Transformer interface.
0000000000000000000000000000000000000000;;	type Transformer struct {
0000000000000000000000000000000000000000;;		t transform.Transformer
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Reset implements the transform.Transformer interface.
0000000000000000000000000000000000000000;;	func (t Transformer) Reset() { t.t.Reset() }
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Transform implements the transform.Transformer interface.
0000000000000000000000000000000000000000;;	func (t Transformer) Transform(dst, src []byte, atEOF bool) (nDst, nSrc int, err error) {
0000000000000000000000000000000000000000;;		return t.t.Transform(dst, src, atEOF)
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Bytes returns a new byte slice with the result of applying t to b.
0000000000000000000000000000000000000000;;	func (t Transformer) Bytes(b []byte) []byte {
0000000000000000000000000000000000000000;;		b, _, _ = transform.Bytes(t, b)
0000000000000000000000000000000000000000;;		return b
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// String returns a string with the result of applying t to s.
0000000000000000000000000000000000000000;;	func (t Transformer) String(s string) string {
0000000000000000000000000000000000000000;;		s, _, _ = transform.String(t, s)
0000000000000000000000000000000000000000;;		return s
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Copyright 2012 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
ea5ce496739655bc10dc42138f80f7e34ba4dc2e;;	
0000000000000000000000000000000000000000;;	// +build !amd64,!arm gccgo appengine
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package poly1305
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Based on original, public domain implementation from NaCl by D. J.
0000000000000000000000000000000000000000;;	// Bernstein.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "math"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	const (
0000000000000000000000000000000000000000;;		alpham80 = 0.00000000558793544769287109375
0000000000000000000000000000000000000000;;		alpham48 = 24.0
0000000000000000000000000000000000000000;;		alpham16 = 103079215104.0
0000000000000000000000000000000000000000;;		alpha0   = 6755399441055744.0
0000000000000000000000000000000000000000;;		alpha18  = 1770887431076116955136.0
0000000000000000000000000000000000000000;;		alpha32  = 29014219670751100192948224.0
0000000000000000000000000000000000000000;;		alpha50  = 7605903601369376408980219232256.0
0000000000000000000000000000000000000000;;		alpha64  = 124615124604835863084731911901282304.0
0000000000000000000000000000000000000000;;		alpha82  = 32667107224410092492483962313449748299776.0
0000000000000000000000000000000000000000;;		alpha96  = 535217884764734955396857238543560676143529984.0
0000000000000000000000000000000000000000;;		alpha112 = 35076039295941670036888435985190792471742381031424.0
0000000000000000000000000000000000000000;;		alpha130 = 9194973245195333150150082162901855101712434733101613056.0
0000000000000000000000000000000000000000;;		scale    = 0.0000000000000000000000000000000000000036734198463196484624023016788195177431833298649127735047148490821200539357960224151611328125
0000000000000000000000000000000000000000;;		offset0  = 6755408030990331.0
0000000000000000000000000000000000000000;;		offset1  = 29014256564239239022116864.0
0000000000000000000000000000000000000000;;		offset2  = 124615283061160854719918951570079744.0
0000000000000000000000000000000000000000;;		offset3  = 535219245894202480694386063513315216128475136.0
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Sum generates an authenticator for m using a one-time key and puts the
0000000000000000000000000000000000000000;;	// 16-byte result into out. Authenticating two different messages with the same
0000000000000000000000000000000000000000;;	// key allows an attacker to forge messages at will.
0000000000000000000000000000000000000000;;	func Sum(out *[16]byte, m []byte, key *[32]byte) {
0000000000000000000000000000000000000000;;		r := key
0000000000000000000000000000000000000000;;		s := key[16:]
0000000000000000000000000000000000000000;;		var (
0000000000000000000000000000000000000000;;			y7        float64
0000000000000000000000000000000000000000;;			y6        float64
0000000000000000000000000000000000000000;;			y1        float64
0000000000000000000000000000000000000000;;			y0        float64
0000000000000000000000000000000000000000;;			y5        float64
0000000000000000000000000000000000000000;;			y4        float64
0000000000000000000000000000000000000000;;			x7        float64
0000000000000000000000000000000000000000;;			x6        float64
0000000000000000000000000000000000000000;;			x1        float64
0000000000000000000000000000000000000000;;			x0        float64
0000000000000000000000000000000000000000;;			y3        float64
0000000000000000000000000000000000000000;;			y2        float64
0000000000000000000000000000000000000000;;			x5        float64
0000000000000000000000000000000000000000;;			r3lowx0   float64
0000000000000000000000000000000000000000;;			x4        float64
0000000000000000000000000000000000000000;;			r0lowx6   float64
0000000000000000000000000000000000000000;;			x3        float64
0000000000000000000000000000000000000000;;			r3highx0  float64
0000000000000000000000000000000000000000;;			x2        float64
0000000000000000000000000000000000000000;;			r0highx6  float64
0000000000000000000000000000000000000000;;			r0lowx0   float64
0000000000000000000000000000000000000000;;			sr1lowx6  float64
0000000000000000000000000000000000000000;;			r0highx0  float64
0000000000000000000000000000000000000000;;			sr1highx6 float64
0000000000000000000000000000000000000000;;			sr3low    float64
0000000000000000000000000000000000000000;;			r1lowx0   float64
0000000000000000000000000000000000000000;;			sr2lowx6  float64
0000000000000000000000000000000000000000;;			r1highx0  float64
0000000000000000000000000000000000000000;;			sr2highx6 float64
0000000000000000000000000000000000000000;;			r2lowx0   float64
0000000000000000000000000000000000000000;;			sr3lowx6  float64
0000000000000000000000000000000000000000;;			r2highx0  float64
0000000000000000000000000000000000000000;;			sr3highx6 float64
0000000000000000000000000000000000000000;;			r1highx4  float64
0000000000000000000000000000000000000000;;			r1lowx4   float64
0000000000000000000000000000000000000000;;			r0highx4  float64
0000000000000000000000000000000000000000;;			r0lowx4   float64
0000000000000000000000000000000000000000;;			sr3highx4 float64
0000000000000000000000000000000000000000;;			sr3lowx4  float64
0000000000000000000000000000000000000000;;			sr2highx4 float64
0000000000000000000000000000000000000000;;			sr2lowx4  float64
0000000000000000000000000000000000000000;;			r0lowx2   float64
0000000000000000000000000000000000000000;;			r0highx2  float64
0000000000000000000000000000000000000000;;			r1lowx2   float64
0000000000000000000000000000000000000000;;			r1highx2  float64
0000000000000000000000000000000000000000;;			r2lowx2   float64
0000000000000000000000000000000000000000;;			r2highx2  float64
0000000000000000000000000000000000000000;;			sr3lowx2  float64
0000000000000000000000000000000000000000;;			sr3highx2 float64
0000000000000000000000000000000000000000;;			z0        float64
0000000000000000000000000000000000000000;;			z1        float64
0000000000000000000000000000000000000000;;			z2        float64
0000000000000000000000000000000000000000;;			z3        float64
0000000000000000000000000000000000000000;;			m0        int64
0000000000000000000000000000000000000000;;			m1        int64
0000000000000000000000000000000000000000;;			m2        int64
0000000000000000000000000000000000000000;;			m3        int64
0000000000000000000000000000000000000000;;			m00       uint32
0000000000000000000000000000000000000000;;			m01       uint32
0000000000000000000000000000000000000000;;			m02       uint32
0000000000000000000000000000000000000000;;			m03       uint32
0000000000000000000000000000000000000000;;			m10       uint32
0000000000000000000000000000000000000000;;			m11       uint32
0000000000000000000000000000000000000000;;			m12       uint32
0000000000000000000000000000000000000000;;			m13       uint32
0000000000000000000000000000000000000000;;			m20       uint32
0000000000000000000000000000000000000000;;			m21       uint32
0000000000000000000000000000000000000000;;			m22       uint32
0000000000000000000000000000000000000000;;			m23       uint32
0000000000000000000000000000000000000000;;			m30       uint32
0000000000000000000000000000000000000000;;			m31       uint32
0000000000000000000000000000000000000000;;			m32       uint32
0000000000000000000000000000000000000000;;			m33       uint64
0000000000000000000000000000000000000000;;			lbelow2   int32
0000000000000000000000000000000000000000;;			lbelow3   int32
0000000000000000000000000000000000000000;;			lbelow4   int32
0000000000000000000000000000000000000000;;			lbelow5   int32
0000000000000000000000000000000000000000;;			lbelow6   int32
0000000000000000000000000000000000000000;;			lbelow7   int32
0000000000000000000000000000000000000000;;			lbelow8   int32
0000000000000000000000000000000000000000;;			lbelow9   int32
0000000000000000000000000000000000000000;;			lbelow10  int32
0000000000000000000000000000000000000000;;			lbelow11  int32
0000000000000000000000000000000000000000;;			lbelow12  int32
0000000000000000000000000000000000000000;;			lbelow13  int32
0000000000000000000000000000000000000000;;			lbelow14  int32
0000000000000000000000000000000000000000;;			lbelow15  int32
0000000000000000000000000000000000000000;;			s00       uint32
0000000000000000000000000000000000000000;;			s01       uint32
0000000000000000000000000000000000000000;;			s02       uint32
0000000000000000000000000000000000000000;;			s03       uint32
0000000000000000000000000000000000000000;;			s10       uint32
0000000000000000000000000000000000000000;;			s11       uint32
0000000000000000000000000000000000000000;;			s12       uint32
0000000000000000000000000000000000000000;;			s13       uint32
0000000000000000000000000000000000000000;;			s20       uint32
0000000000000000000000000000000000000000;;			s21       uint32
0000000000000000000000000000000000000000;;			s22       uint32
0000000000000000000000000000000000000000;;			s23       uint32
0000000000000000000000000000000000000000;;			s30       uint32
0000000000000000000000000000000000000000;;			s31       uint32
0000000000000000000000000000000000000000;;			s32       uint32
0000000000000000000000000000000000000000;;			s33       uint32
0000000000000000000000000000000000000000;;			bits32    uint64
0000000000000000000000000000000000000000;;			f         uint64
0000000000000000000000000000000000000000;;			f0        uint64
0000000000000000000000000000000000000000;;			f1        uint64
0000000000000000000000000000000000000000;;			f2        uint64
0000000000000000000000000000000000000000;;			f3        uint64
0000000000000000000000000000000000000000;;			f4        uint64
0000000000000000000000000000000000000000;;			g         uint64
0000000000000000000000000000000000000000;;			g0        uint64
0000000000000000000000000000000000000000;;			g1        uint64
0000000000000000000000000000000000000000;;			g2        uint64
0000000000000000000000000000000000000000;;			g3        uint64
0000000000000000000000000000000000000000;;			g4        uint64
0000000000000000000000000000000000000000;;		)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		var p int32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		l := int32(len(m))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r00 := uint32(r[0])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r01 := uint32(r[1])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r02 := uint32(r[2])
0000000000000000000000000000000000000000;;		r0 := int64(2151)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r03 := uint32(r[3])
0000000000000000000000000000000000000000;;		r03 &= 15
0000000000000000000000000000000000000000;;		r0 <<= 51
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r10 := uint32(r[4])
0000000000000000000000000000000000000000;;		r10 &= 252
0000000000000000000000000000000000000000;;		r01 <<= 8
0000000000000000000000000000000000000000;;		r0 += int64(r00)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r11 := uint32(r[5])
0000000000000000000000000000000000000000;;		r02 <<= 16
0000000000000000000000000000000000000000;;		r0 += int64(r01)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r12 := uint32(r[6])
0000000000000000000000000000000000000000;;		r03 <<= 24
0000000000000000000000000000000000000000;;		r0 += int64(r02)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r13 := uint32(r[7])
0000000000000000000000000000000000000000;;		r13 &= 15
0000000000000000000000000000000000000000;;		r1 := int64(2215)
0000000000000000000000000000000000000000;;		r0 += int64(r03)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		d0 := r0
0000000000000000000000000000000000000000;;		r1 <<= 51
0000000000000000000000000000000000000000;;		r2 := int64(2279)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r20 := uint32(r[8])
0000000000000000000000000000000000000000;;		r20 &= 252
0000000000000000000000000000000000000000;;		r11 <<= 8
0000000000000000000000000000000000000000;;		r1 += int64(r10)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r21 := uint32(r[9])
0000000000000000000000000000000000000000;;		r12 <<= 16
0000000000000000000000000000000000000000;;		r1 += int64(r11)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r22 := uint32(r[10])
0000000000000000000000000000000000000000;;		r13 <<= 24
0000000000000000000000000000000000000000;;		r1 += int64(r12)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r23 := uint32(r[11])
0000000000000000000000000000000000000000;;		r23 &= 15
0000000000000000000000000000000000000000;;		r2 <<= 51
0000000000000000000000000000000000000000;;		r1 += int64(r13)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		d1 := r1
0000000000000000000000000000000000000000;;		r21 <<= 8
0000000000000000000000000000000000000000;;		r2 += int64(r20)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r30 := uint32(r[12])
0000000000000000000000000000000000000000;;		r30 &= 252
0000000000000000000000000000000000000000;;		r22 <<= 16
0000000000000000000000000000000000000000;;		r2 += int64(r21)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r31 := uint32(r[13])
0000000000000000000000000000000000000000;;		r23 <<= 24
0000000000000000000000000000000000000000;;		r2 += int64(r22)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r32 := uint32(r[14])
0000000000000000000000000000000000000000;;		r2 += int64(r23)
0000000000000000000000000000000000000000;;		r3 := int64(2343)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		d2 := r2
0000000000000000000000000000000000000000;;		r3 <<= 51
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r33 := uint32(r[15])
0000000000000000000000000000000000000000;;		r33 &= 15
0000000000000000000000000000000000000000;;		r31 <<= 8
0000000000000000000000000000000000000000;;		r3 += int64(r30)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r32 <<= 16
0000000000000000000000000000000000000000;;		r3 += int64(r31)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r33 <<= 24
0000000000000000000000000000000000000000;;		r3 += int64(r32)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r3 += int64(r33)
0000000000000000000000000000000000000000;;		h0 := alpha32 - alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		d3 := r3
0000000000000000000000000000000000000000;;		h1 := alpha32 - alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 := alpha32 - alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 := alpha32 - alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 := alpha32 - alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r0low := math.Float64frombits(uint64(d0))
0000000000000000000000000000000000000000;;		h5 := alpha32 - alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r1low := math.Float64frombits(uint64(d1))
0000000000000000000000000000000000000000;;		h6 := alpha32 - alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r2low := math.Float64frombits(uint64(d2))
0000000000000000000000000000000000000000;;		h7 := alpha32 - alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r0low -= alpha0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r1low -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r2low -= alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r0high := r0low + alpha18
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r3low := math.Float64frombits(uint64(d3))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r1high := r1low + alpha50
0000000000000000000000000000000000000000;;		sr1low := scale * r1low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r2high := r2low + alpha82
0000000000000000000000000000000000000000;;		sr2low := scale * r2low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r0high -= alpha18
0000000000000000000000000000000000000000;;		r0high_stack := r0high
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r3low -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r1high -= alpha50
0000000000000000000000000000000000000000;;		r1high_stack := r1high
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sr1high := sr1low + alpham80
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r0low -= r0high
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r2high -= alpha82
0000000000000000000000000000000000000000;;		sr3low = scale * r3low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sr2high := sr2low + alpham48
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r1low -= r1high
0000000000000000000000000000000000000000;;		r1low_stack := r1low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sr1high -= alpham80
0000000000000000000000000000000000000000;;		sr1high_stack := sr1high
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r2low -= r2high
0000000000000000000000000000000000000000;;		r2low_stack := r2low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sr2high -= alpham48
0000000000000000000000000000000000000000;;		sr2high_stack := sr2high
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r3high := r3low + alpha112
0000000000000000000000000000000000000000;;		r0low_stack := r0low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sr1low -= sr1high
0000000000000000000000000000000000000000;;		sr1low_stack := sr1low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sr3high := sr3low + alpham16
0000000000000000000000000000000000000000;;		r2high_stack := r2high
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sr2low -= sr2high
0000000000000000000000000000000000000000;;		sr2low_stack := sr2low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r3high -= alpha112
0000000000000000000000000000000000000000;;		r3high_stack := r3high
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sr3high -= alpham16
0000000000000000000000000000000000000000;;		sr3high_stack := sr3high
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r3low -= r3high
0000000000000000000000000000000000000000;;		r3low_stack := r3low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		sr3low -= sr3high
0000000000000000000000000000000000000000;;		sr3low_stack := sr3low
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if l < 16 {
0000000000000000000000000000000000000000;;			goto addatmost15bytes
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m00 = uint32(m[p+0])
0000000000000000000000000000000000000000;;		m0 = 2151
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m0 <<= 51
0000000000000000000000000000000000000000;;		m1 = 2215
0000000000000000000000000000000000000000;;		m01 = uint32(m[p+1])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m1 <<= 51
0000000000000000000000000000000000000000;;		m2 = 2279
0000000000000000000000000000000000000000;;		m02 = uint32(m[p+2])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m2 <<= 51
0000000000000000000000000000000000000000;;		m3 = 2343
0000000000000000000000000000000000000000;;		m03 = uint32(m[p+3])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m10 = uint32(m[p+4])
0000000000000000000000000000000000000000;;		m01 <<= 8
0000000000000000000000000000000000000000;;		m0 += int64(m00)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m11 = uint32(m[p+5])
0000000000000000000000000000000000000000;;		m02 <<= 16
0000000000000000000000000000000000000000;;		m0 += int64(m01)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m12 = uint32(m[p+6])
0000000000000000000000000000000000000000;;		m03 <<= 24
0000000000000000000000000000000000000000;;		m0 += int64(m02)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m13 = uint32(m[p+7])
0000000000000000000000000000000000000000;;		m3 <<= 51
0000000000000000000000000000000000000000;;		m0 += int64(m03)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m20 = uint32(m[p+8])
0000000000000000000000000000000000000000;;		m11 <<= 8
0000000000000000000000000000000000000000;;		m1 += int64(m10)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m21 = uint32(m[p+9])
0000000000000000000000000000000000000000;;		m12 <<= 16
0000000000000000000000000000000000000000;;		m1 += int64(m11)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m22 = uint32(m[p+10])
0000000000000000000000000000000000000000;;		m13 <<= 24
0000000000000000000000000000000000000000;;		m1 += int64(m12)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m23 = uint32(m[p+11])
0000000000000000000000000000000000000000;;		m1 += int64(m13)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m30 = uint32(m[p+12])
0000000000000000000000000000000000000000;;		m21 <<= 8
0000000000000000000000000000000000000000;;		m2 += int64(m20)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m31 = uint32(m[p+13])
0000000000000000000000000000000000000000;;		m22 <<= 16
0000000000000000000000000000000000000000;;		m2 += int64(m21)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m32 = uint32(m[p+14])
0000000000000000000000000000000000000000;;		m23 <<= 24
0000000000000000000000000000000000000000;;		m2 += int64(m22)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m33 = uint64(m[p+15])
0000000000000000000000000000000000000000;;		m2 += int64(m23)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		d0 = m0
0000000000000000000000000000000000000000;;		m31 <<= 8
0000000000000000000000000000000000000000;;		m3 += int64(m30)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		d1 = m1
0000000000000000000000000000000000000000;;		m32 <<= 16
0000000000000000000000000000000000000000;;		m3 += int64(m31)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		d2 = m2
0000000000000000000000000000000000000000;;		m33 += 256
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m33 <<= 24
0000000000000000000000000000000000000000;;		m3 += int64(m32)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m3 += int64(m33)
0000000000000000000000000000000000000000;;		d3 = m3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		p += 16
0000000000000000000000000000000000000000;;		l -= 16
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z0 = math.Float64frombits(uint64(d0))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z1 = math.Float64frombits(uint64(d1))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z2 = math.Float64frombits(uint64(d2))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z3 = math.Float64frombits(uint64(d3))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z0 -= alpha0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z1 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z2 -= alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z3 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 += z0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 += z1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 += z2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 += z3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if l < 16 {
0000000000000000000000000000000000000000;;			goto multiplyaddatmost15bytes
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	multiplyaddatleast16bytes:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m2 = 2279
0000000000000000000000000000000000000000;;		m20 = uint32(m[p+8])
0000000000000000000000000000000000000000;;		y7 = h7 + alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m2 <<= 51
0000000000000000000000000000000000000000;;		m3 = 2343
0000000000000000000000000000000000000000;;		m21 = uint32(m[p+9])
0000000000000000000000000000000000000000;;		y6 = h6 + alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m3 <<= 51
0000000000000000000000000000000000000000;;		m0 = 2151
0000000000000000000000000000000000000000;;		m22 = uint32(m[p+10])
0000000000000000000000000000000000000000;;		y1 = h1 + alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m0 <<= 51
0000000000000000000000000000000000000000;;		m1 = 2215
0000000000000000000000000000000000000000;;		m23 = uint32(m[p+11])
0000000000000000000000000000000000000000;;		y0 = h0 + alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m1 <<= 51
0000000000000000000000000000000000000000;;		m30 = uint32(m[p+12])
0000000000000000000000000000000000000000;;		y7 -= alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m21 <<= 8
0000000000000000000000000000000000000000;;		m2 += int64(m20)
0000000000000000000000000000000000000000;;		m31 = uint32(m[p+13])
0000000000000000000000000000000000000000;;		y6 -= alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m22 <<= 16
0000000000000000000000000000000000000000;;		m2 += int64(m21)
0000000000000000000000000000000000000000;;		m32 = uint32(m[p+14])
0000000000000000000000000000000000000000;;		y1 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m23 <<= 24
0000000000000000000000000000000000000000;;		m2 += int64(m22)
0000000000000000000000000000000000000000;;		m33 = uint64(m[p+15])
0000000000000000000000000000000000000000;;		y0 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m2 += int64(m23)
0000000000000000000000000000000000000000;;		m00 = uint32(m[p+0])
0000000000000000000000000000000000000000;;		y5 = h5 + alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m31 <<= 8
0000000000000000000000000000000000000000;;		m3 += int64(m30)
0000000000000000000000000000000000000000;;		m01 = uint32(m[p+1])
0000000000000000000000000000000000000000;;		y4 = h4 + alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m32 <<= 16
0000000000000000000000000000000000000000;;		m02 = uint32(m[p+2])
0000000000000000000000000000000000000000;;		x7 = h7 - y7
0000000000000000000000000000000000000000;;		y7 *= scale
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m33 += 256
0000000000000000000000000000000000000000;;		m03 = uint32(m[p+3])
0000000000000000000000000000000000000000;;		x6 = h6 - y6
0000000000000000000000000000000000000000;;		y6 *= scale
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m33 <<= 24
0000000000000000000000000000000000000000;;		m3 += int64(m31)
0000000000000000000000000000000000000000;;		m10 = uint32(m[p+4])
0000000000000000000000000000000000000000;;		x1 = h1 - y1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m01 <<= 8
0000000000000000000000000000000000000000;;		m3 += int64(m32)
0000000000000000000000000000000000000000;;		m11 = uint32(m[p+5])
0000000000000000000000000000000000000000;;		x0 = h0 - y0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m3 += int64(m33)
0000000000000000000000000000000000000000;;		m0 += int64(m00)
0000000000000000000000000000000000000000;;		m12 = uint32(m[p+6])
0000000000000000000000000000000000000000;;		y5 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m02 <<= 16
0000000000000000000000000000000000000000;;		m0 += int64(m01)
0000000000000000000000000000000000000000;;		m13 = uint32(m[p+7])
0000000000000000000000000000000000000000;;		y4 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m03 <<= 24
0000000000000000000000000000000000000000;;		m0 += int64(m02)
0000000000000000000000000000000000000000;;		d2 = m2
0000000000000000000000000000000000000000;;		x1 += y7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m0 += int64(m03)
0000000000000000000000000000000000000000;;		d3 = m3
0000000000000000000000000000000000000000;;		x0 += y6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m11 <<= 8
0000000000000000000000000000000000000000;;		m1 += int64(m10)
0000000000000000000000000000000000000000;;		d0 = m0
0000000000000000000000000000000000000000;;		x7 += y5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m12 <<= 16
0000000000000000000000000000000000000000;;		m1 += int64(m11)
0000000000000000000000000000000000000000;;		x6 += y4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m13 <<= 24
0000000000000000000000000000000000000000;;		m1 += int64(m12)
0000000000000000000000000000000000000000;;		y3 = h3 + alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m1 += int64(m13)
0000000000000000000000000000000000000000;;		d1 = m1
0000000000000000000000000000000000000000;;		y2 = h2 + alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 += x1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 += x7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y3 -= alpha64
0000000000000000000000000000000000000000;;		r3low = r3low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y2 -= alpha64
0000000000000000000000000000000000000000;;		r0low = r0low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x5 = h5 - y5
0000000000000000000000000000000000000000;;		r3lowx0 = r3low * x0
0000000000000000000000000000000000000000;;		r3high = r3high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 = h4 - y4
0000000000000000000000000000000000000000;;		r0lowx6 = r0low * x6
0000000000000000000000000000000000000000;;		r0high = r0high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x3 = h3 - y3
0000000000000000000000000000000000000000;;		r3highx0 = r3high * x0
0000000000000000000000000000000000000000;;		sr1low = sr1low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 = h2 - y2
0000000000000000000000000000000000000000;;		r0highx6 = r0high * x6
0000000000000000000000000000000000000000;;		sr1high = sr1high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x5 += y3
0000000000000000000000000000000000000000;;		r0lowx0 = r0low * x0
0000000000000000000000000000000000000000;;		r1low = r1low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h6 = r3lowx0 + r0lowx6
0000000000000000000000000000000000000000;;		sr1lowx6 = sr1low * x6
0000000000000000000000000000000000000000;;		r1high = r1high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 += y2
0000000000000000000000000000000000000000;;		r0highx0 = r0high * x0
0000000000000000000000000000000000000000;;		sr2low = sr2low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h7 = r3highx0 + r0highx6
0000000000000000000000000000000000000000;;		sr1highx6 = sr1high * x6
0000000000000000000000000000000000000000;;		sr2high = sr2high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x3 += y1
0000000000000000000000000000000000000000;;		r1lowx0 = r1low * x0
0000000000000000000000000000000000000000;;		r2low = r2low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 = r0lowx0 + sr1lowx6
0000000000000000000000000000000000000000;;		sr2lowx6 = sr2low * x6
0000000000000000000000000000000000000000;;		r2high = r2high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 += y0
0000000000000000000000000000000000000000;;		r1highx0 = r1high * x0
0000000000000000000000000000000000000000;;		sr3low = sr3low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 = r0highx0 + sr1highx6
0000000000000000000000000000000000000000;;		sr2highx6 = sr2high * x6
0000000000000000000000000000000000000000;;		sr3high = sr3high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 += x5
0000000000000000000000000000000000000000;;		r2lowx0 = r2low * x0
0000000000000000000000000000000000000000;;		z2 = math.Float64frombits(uint64(d2))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 = r1lowx0 + sr2lowx6
0000000000000000000000000000000000000000;;		sr3lowx6 = sr3low * x6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 += x3
0000000000000000000000000000000000000000;;		r2highx0 = r2high * x0
0000000000000000000000000000000000000000;;		z3 = math.Float64frombits(uint64(d3))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 = r1highx0 + sr2highx6
0000000000000000000000000000000000000000;;		sr3highx6 = sr3high * x6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r1highx4 = r1high * x4
0000000000000000000000000000000000000000;;		z2 -= alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 = r2lowx0 + sr3lowx6
0000000000000000000000000000000000000000;;		r1lowx4 = r1low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r0highx4 = r0high * x4
0000000000000000000000000000000000000000;;		z3 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 = r2highx0 + sr3highx6
0000000000000000000000000000000000000000;;		r0lowx4 = r0low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h7 += r1highx4
0000000000000000000000000000000000000000;;		sr3highx4 = sr3high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h6 += r1lowx4
0000000000000000000000000000000000000000;;		sr3lowx4 = sr3low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 += r0highx4
0000000000000000000000000000000000000000;;		sr2highx4 = sr2high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 += r0lowx4
0000000000000000000000000000000000000000;;		sr2lowx4 = sr2low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 += sr3highx4
0000000000000000000000000000000000000000;;		r0lowx2 = r0low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 += sr3lowx4
0000000000000000000000000000000000000000;;		r0highx2 = r0high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 += sr2highx4
0000000000000000000000000000000000000000;;		r1lowx2 = r1low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 += sr2lowx4
0000000000000000000000000000000000000000;;		r1highx2 = r1high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 += r0lowx2
0000000000000000000000000000000000000000;;		r2lowx2 = r2low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 += r0highx2
0000000000000000000000000000000000000000;;		r2highx2 = r2high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 += r1lowx2
0000000000000000000000000000000000000000;;		sr3lowx2 = sr3low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 += r1highx2
0000000000000000000000000000000000000000;;		sr3highx2 = sr3high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		p += 16
0000000000000000000000000000000000000000;;		l -= 16
0000000000000000000000000000000000000000;;		h6 += r2lowx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h7 += r2highx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z1 = math.Float64frombits(uint64(d1))
0000000000000000000000000000000000000000;;		h0 += sr3lowx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z0 = math.Float64frombits(uint64(d0))
0000000000000000000000000000000000000000;;		h1 += sr3highx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z1 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z0 -= alpha0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 += z3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 += z2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 += z1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 += z0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if l >= 16 {
0000000000000000000000000000000000000000;;			goto multiplyaddatleast16bytes
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	multiplyaddatmost15bytes:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y7 = h7 + alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y6 = h6 + alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y1 = h1 + alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y0 = h0 + alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y7 -= alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y6 -= alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y1 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y0 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y5 = h5 + alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y4 = h4 + alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x7 = h7 - y7
0000000000000000000000000000000000000000;;		y7 *= scale
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 = h6 - y6
0000000000000000000000000000000000000000;;		y6 *= scale
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x1 = h1 - y1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 = h0 - y0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y5 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y4 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x1 += y7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 += y6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x7 += y5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 += y4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y3 = h3 + alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y2 = h2 + alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 += x1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 += x7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y3 -= alpha64
0000000000000000000000000000000000000000;;		r3low = r3low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y2 -= alpha64
0000000000000000000000000000000000000000;;		r0low = r0low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x5 = h5 - y5
0000000000000000000000000000000000000000;;		r3lowx0 = r3low * x0
0000000000000000000000000000000000000000;;		r3high = r3high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 = h4 - y4
0000000000000000000000000000000000000000;;		r0lowx6 = r0low * x6
0000000000000000000000000000000000000000;;		r0high = r0high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x3 = h3 - y3
0000000000000000000000000000000000000000;;		r3highx0 = r3high * x0
0000000000000000000000000000000000000000;;		sr1low = sr1low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 = h2 - y2
0000000000000000000000000000000000000000;;		r0highx6 = r0high * x6
0000000000000000000000000000000000000000;;		sr1high = sr1high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x5 += y3
0000000000000000000000000000000000000000;;		r0lowx0 = r0low * x0
0000000000000000000000000000000000000000;;		r1low = r1low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h6 = r3lowx0 + r0lowx6
0000000000000000000000000000000000000000;;		sr1lowx6 = sr1low * x6
0000000000000000000000000000000000000000;;		r1high = r1high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 += y2
0000000000000000000000000000000000000000;;		r0highx0 = r0high * x0
0000000000000000000000000000000000000000;;		sr2low = sr2low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h7 = r3highx0 + r0highx6
0000000000000000000000000000000000000000;;		sr1highx6 = sr1high * x6
0000000000000000000000000000000000000000;;		sr2high = sr2high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x3 += y1
0000000000000000000000000000000000000000;;		r1lowx0 = r1low * x0
0000000000000000000000000000000000000000;;		r2low = r2low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 = r0lowx0 + sr1lowx6
0000000000000000000000000000000000000000;;		sr2lowx6 = sr2low * x6
0000000000000000000000000000000000000000;;		r2high = r2high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 += y0
0000000000000000000000000000000000000000;;		r1highx0 = r1high * x0
0000000000000000000000000000000000000000;;		sr3low = sr3low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 = r0highx0 + sr1highx6
0000000000000000000000000000000000000000;;		sr2highx6 = sr2high * x6
0000000000000000000000000000000000000000;;		sr3high = sr3high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 += x5
0000000000000000000000000000000000000000;;		r2lowx0 = r2low * x0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 = r1lowx0 + sr2lowx6
0000000000000000000000000000000000000000;;		sr3lowx6 = sr3low * x6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 += x3
0000000000000000000000000000000000000000;;		r2highx0 = r2high * x0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 = r1highx0 + sr2highx6
0000000000000000000000000000000000000000;;		sr3highx6 = sr3high * x6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r1highx4 = r1high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 = r2lowx0 + sr3lowx6
0000000000000000000000000000000000000000;;		r1lowx4 = r1low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r0highx4 = r0high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 = r2highx0 + sr3highx6
0000000000000000000000000000000000000000;;		r0lowx4 = r0low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h7 += r1highx4
0000000000000000000000000000000000000000;;		sr3highx4 = sr3high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h6 += r1lowx4
0000000000000000000000000000000000000000;;		sr3lowx4 = sr3low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 += r0highx4
0000000000000000000000000000000000000000;;		sr2highx4 = sr2high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 += r0lowx4
0000000000000000000000000000000000000000;;		sr2lowx4 = sr2low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 += sr3highx4
0000000000000000000000000000000000000000;;		r0lowx2 = r0low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 += sr3lowx4
0000000000000000000000000000000000000000;;		r0highx2 = r0high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 += sr2highx4
0000000000000000000000000000000000000000;;		r1lowx2 = r1low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 += sr2lowx4
0000000000000000000000000000000000000000;;		r1highx2 = r1high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 += r0lowx2
0000000000000000000000000000000000000000;;		r2lowx2 = r2low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 += r0highx2
0000000000000000000000000000000000000000;;		r2highx2 = r2high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 += r1lowx2
0000000000000000000000000000000000000000;;		sr3lowx2 = sr3low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 += r1highx2
0000000000000000000000000000000000000000;;		sr3highx2 = sr3high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h6 += r2lowx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h7 += r2highx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 += sr3lowx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 += sr3highx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	addatmost15bytes:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		if l == 0 {
0000000000000000000000000000000000000000;;			goto nomorebytes
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow2 = l - 2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow3 = l - 3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow2 >>= 31
0000000000000000000000000000000000000000;;		lbelow4 = l - 4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m00 = uint32(m[p+0])
0000000000000000000000000000000000000000;;		lbelow3 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m01 = uint32(m[p+1])
0000000000000000000000000000000000000000;;		lbelow4 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m02 = uint32(m[p+2])
0000000000000000000000000000000000000000;;		p += lbelow4
0000000000000000000000000000000000000000;;		m0 = 2151
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m03 = uint32(m[p+3])
0000000000000000000000000000000000000000;;		m0 <<= 51
0000000000000000000000000000000000000000;;		m1 = 2215
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m0 += int64(m00)
0000000000000000000000000000000000000000;;		m01 &^= uint32(lbelow2)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m02 &^= uint32(lbelow3)
0000000000000000000000000000000000000000;;		m01 -= uint32(lbelow2)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m01 <<= 8
0000000000000000000000000000000000000000;;		m03 &^= uint32(lbelow4)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m0 += int64(m01)
0000000000000000000000000000000000000000;;		lbelow2 -= lbelow3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m02 += uint32(lbelow2)
0000000000000000000000000000000000000000;;		lbelow3 -= lbelow4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m02 <<= 16
0000000000000000000000000000000000000000;;		m03 += uint32(lbelow3)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m03 <<= 24
0000000000000000000000000000000000000000;;		m0 += int64(m02)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m0 += int64(m03)
0000000000000000000000000000000000000000;;		lbelow5 = l - 5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow6 = l - 6
0000000000000000000000000000000000000000;;		lbelow7 = l - 7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow5 >>= 31
0000000000000000000000000000000000000000;;		lbelow8 = l - 8
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow6 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m10 = uint32(m[p+4])
0000000000000000000000000000000000000000;;		lbelow7 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m11 = uint32(m[p+5])
0000000000000000000000000000000000000000;;		lbelow8 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m12 = uint32(m[p+6])
0000000000000000000000000000000000000000;;		m1 <<= 51
0000000000000000000000000000000000000000;;		p += lbelow8
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m13 = uint32(m[p+7])
0000000000000000000000000000000000000000;;		m10 &^= uint32(lbelow5)
0000000000000000000000000000000000000000;;		lbelow4 -= lbelow5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m10 += uint32(lbelow4)
0000000000000000000000000000000000000000;;		lbelow5 -= lbelow6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m11 &^= uint32(lbelow6)
0000000000000000000000000000000000000000;;		m11 += uint32(lbelow5)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m11 <<= 8
0000000000000000000000000000000000000000;;		m1 += int64(m10)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m1 += int64(m11)
0000000000000000000000000000000000000000;;		m12 &^= uint32(lbelow7)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow6 -= lbelow7
0000000000000000000000000000000000000000;;		m13 &^= uint32(lbelow8)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m12 += uint32(lbelow6)
0000000000000000000000000000000000000000;;		lbelow7 -= lbelow8
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m12 <<= 16
0000000000000000000000000000000000000000;;		m13 += uint32(lbelow7)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m13 <<= 24
0000000000000000000000000000000000000000;;		m1 += int64(m12)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m1 += int64(m13)
0000000000000000000000000000000000000000;;		m2 = 2279
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow9 = l - 9
0000000000000000000000000000000000000000;;		m3 = 2343
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow10 = l - 10
0000000000000000000000000000000000000000;;		lbelow11 = l - 11
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow9 >>= 31
0000000000000000000000000000000000000000;;		lbelow12 = l - 12
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow10 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow9
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m20 = uint32(m[p+8])
0000000000000000000000000000000000000000;;		lbelow11 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow10
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m21 = uint32(m[p+9])
0000000000000000000000000000000000000000;;		lbelow12 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow11
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m22 = uint32(m[p+10])
0000000000000000000000000000000000000000;;		m2 <<= 51
0000000000000000000000000000000000000000;;		p += lbelow12
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m23 = uint32(m[p+11])
0000000000000000000000000000000000000000;;		m20 &^= uint32(lbelow9)
0000000000000000000000000000000000000000;;		lbelow8 -= lbelow9
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m20 += uint32(lbelow8)
0000000000000000000000000000000000000000;;		lbelow9 -= lbelow10
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m21 &^= uint32(lbelow10)
0000000000000000000000000000000000000000;;		m21 += uint32(lbelow9)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m21 <<= 8
0000000000000000000000000000000000000000;;		m2 += int64(m20)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m2 += int64(m21)
0000000000000000000000000000000000000000;;		m22 &^= uint32(lbelow11)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow10 -= lbelow11
0000000000000000000000000000000000000000;;		m23 &^= uint32(lbelow12)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m22 += uint32(lbelow10)
0000000000000000000000000000000000000000;;		lbelow11 -= lbelow12
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m22 <<= 16
0000000000000000000000000000000000000000;;		m23 += uint32(lbelow11)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m23 <<= 24
0000000000000000000000000000000000000000;;		m2 += int64(m22)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m3 <<= 51
0000000000000000000000000000000000000000;;		lbelow13 = l - 13
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow13 >>= 31
0000000000000000000000000000000000000000;;		lbelow14 = l - 14
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		lbelow14 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow13
0000000000000000000000000000000000000000;;		lbelow15 = l - 15
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m30 = uint32(m[p+12])
0000000000000000000000000000000000000000;;		lbelow15 >>= 31
0000000000000000000000000000000000000000;;		p += lbelow14
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m31 = uint32(m[p+13])
0000000000000000000000000000000000000000;;		p += lbelow15
0000000000000000000000000000000000000000;;		m2 += int64(m23)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m32 = uint32(m[p+14])
0000000000000000000000000000000000000000;;		m30 &^= uint32(lbelow13)
0000000000000000000000000000000000000000;;		lbelow12 -= lbelow13
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m30 += uint32(lbelow12)
0000000000000000000000000000000000000000;;		lbelow13 -= lbelow14
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m3 += int64(m30)
0000000000000000000000000000000000000000;;		m31 &^= uint32(lbelow14)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m31 += uint32(lbelow13)
0000000000000000000000000000000000000000;;		m32 &^= uint32(lbelow15)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m31 <<= 8
0000000000000000000000000000000000000000;;		lbelow14 -= lbelow15
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m3 += int64(m31)
0000000000000000000000000000000000000000;;		m32 += uint32(lbelow14)
0000000000000000000000000000000000000000;;		d0 = m0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m32 <<= 16
0000000000000000000000000000000000000000;;		m33 = uint64(lbelow15 + 1)
0000000000000000000000000000000000000000;;		d1 = m1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m33 <<= 24
0000000000000000000000000000000000000000;;		m3 += int64(m32)
0000000000000000000000000000000000000000;;		d2 = m2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		m3 += int64(m33)
0000000000000000000000000000000000000000;;		d3 = m3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z3 = math.Float64frombits(uint64(d3))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z2 = math.Float64frombits(uint64(d2))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z1 = math.Float64frombits(uint64(d1))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z0 = math.Float64frombits(uint64(d0))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z3 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z2 -= alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z1 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		z0 -= alpha0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 += z3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 += z2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 += z1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 += z0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y7 = h7 + alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y6 = h6 + alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y1 = h1 + alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y0 = h0 + alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y7 -= alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y6 -= alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y1 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y0 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y5 = h5 + alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y4 = h4 + alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x7 = h7 - y7
0000000000000000000000000000000000000000;;		y7 *= scale
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 = h6 - y6
0000000000000000000000000000000000000000;;		y6 *= scale
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x1 = h1 - y1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 = h0 - y0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y5 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y4 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x1 += y7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 += y6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x7 += y5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 += y4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y3 = h3 + alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y2 = h2 + alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 += x1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 += x7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y3 -= alpha64
0000000000000000000000000000000000000000;;		r3low = r3low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y2 -= alpha64
0000000000000000000000000000000000000000;;		r0low = r0low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x5 = h5 - y5
0000000000000000000000000000000000000000;;		r3lowx0 = r3low * x0
0000000000000000000000000000000000000000;;		r3high = r3high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 = h4 - y4
0000000000000000000000000000000000000000;;		r0lowx6 = r0low * x6
0000000000000000000000000000000000000000;;		r0high = r0high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x3 = h3 - y3
0000000000000000000000000000000000000000;;		r3highx0 = r3high * x0
0000000000000000000000000000000000000000;;		sr1low = sr1low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 = h2 - y2
0000000000000000000000000000000000000000;;		r0highx6 = r0high * x6
0000000000000000000000000000000000000000;;		sr1high = sr1high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x5 += y3
0000000000000000000000000000000000000000;;		r0lowx0 = r0low * x0
0000000000000000000000000000000000000000;;		r1low = r1low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h6 = r3lowx0 + r0lowx6
0000000000000000000000000000000000000000;;		sr1lowx6 = sr1low * x6
0000000000000000000000000000000000000000;;		r1high = r1high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 += y2
0000000000000000000000000000000000000000;;		r0highx0 = r0high * x0
0000000000000000000000000000000000000000;;		sr2low = sr2low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h7 = r3highx0 + r0highx6
0000000000000000000000000000000000000000;;		sr1highx6 = sr1high * x6
0000000000000000000000000000000000000000;;		sr2high = sr2high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x3 += y1
0000000000000000000000000000000000000000;;		r1lowx0 = r1low * x0
0000000000000000000000000000000000000000;;		r2low = r2low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 = r0lowx0 + sr1lowx6
0000000000000000000000000000000000000000;;		sr2lowx6 = sr2low * x6
0000000000000000000000000000000000000000;;		r2high = r2high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 += y0
0000000000000000000000000000000000000000;;		r1highx0 = r1high * x0
0000000000000000000000000000000000000000;;		sr3low = sr3low_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 = r0highx0 + sr1highx6
0000000000000000000000000000000000000000;;		sr2highx6 = sr2high * x6
0000000000000000000000000000000000000000;;		sr3high = sr3high_stack
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 += x5
0000000000000000000000000000000000000000;;		r2lowx0 = r2low * x0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 = r1lowx0 + sr2lowx6
0000000000000000000000000000000000000000;;		sr3lowx6 = sr3low * x6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 += x3
0000000000000000000000000000000000000000;;		r2highx0 = r2high * x0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 = r1highx0 + sr2highx6
0000000000000000000000000000000000000000;;		sr3highx6 = sr3high * x6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r1highx4 = r1high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 = r2lowx0 + sr3lowx6
0000000000000000000000000000000000000000;;		r1lowx4 = r1low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		r0highx4 = r0high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 = r2highx0 + sr3highx6
0000000000000000000000000000000000000000;;		r0lowx4 = r0low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h7 += r1highx4
0000000000000000000000000000000000000000;;		sr3highx4 = sr3high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h6 += r1lowx4
0000000000000000000000000000000000000000;;		sr3lowx4 = sr3low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 += r0highx4
0000000000000000000000000000000000000000;;		sr2highx4 = sr2high * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 += r0lowx4
0000000000000000000000000000000000000000;;		sr2lowx4 = sr2low * x4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 += sr3highx4
0000000000000000000000000000000000000000;;		r0lowx2 = r0low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 += sr3lowx4
0000000000000000000000000000000000000000;;		r0highx2 = r0high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 += sr2highx4
0000000000000000000000000000000000000000;;		r1lowx2 = r1low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 += sr2lowx4
0000000000000000000000000000000000000000;;		r1highx2 = r1high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h2 += r0lowx2
0000000000000000000000000000000000000000;;		r2lowx2 = r2low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h3 += r0highx2
0000000000000000000000000000000000000000;;		r2highx2 = r2high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h4 += r1lowx2
0000000000000000000000000000000000000000;;		sr3lowx2 = sr3low * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h5 += r1highx2
0000000000000000000000000000000000000000;;		sr3highx2 = sr3high * x2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h6 += r2lowx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h7 += r2highx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h0 += sr3lowx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h1 += sr3highx2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	nomorebytes:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y7 = h7 + alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y0 = h0 + alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y1 = h1 + alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y2 = h2 + alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y7 -= alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y3 = h3 + alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y4 = h4 + alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y5 = h5 + alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x7 = h7 - y7
0000000000000000000000000000000000000000;;		y7 *= scale
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y0 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y1 -= alpha32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y2 -= alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		h6 += x7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y3 -= alpha64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y4 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y5 -= alpha96
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y6 = h6 + alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 = h0 - y0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x1 = h1 - y1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 = h2 - y2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y6 -= alpha130
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 += y7
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x3 = h3 - y3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 = h4 - y4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x5 = h5 - y5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 = h6 - y6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		y6 *= scale
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 += y0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x3 += y1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 += y2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 += y6
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x5 += y3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 += y4
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 += x3
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 += x1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 += x5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 += y5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x2 += offset1
0000000000000000000000000000000000000000;;		d1 = int64(math.Float64bits(x2))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x0 += offset0
0000000000000000000000000000000000000000;;		d0 = int64(math.Float64bits(x0))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x4 += offset2
0000000000000000000000000000000000000000;;		d2 = int64(math.Float64bits(x4))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		x6 += offset3
0000000000000000000000000000000000000000;;		d3 = int64(math.Float64bits(x6))
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f0 = uint64(d0)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f1 = uint64(d1)
0000000000000000000000000000000000000000;;		bits32 = math.MaxUint64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f2 = uint64(d2)
0000000000000000000000000000000000000000;;		bits32 >>= 32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f3 = uint64(d3)
0000000000000000000000000000000000000000;;		f = f0 >> 32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f0 &= bits32
0000000000000000000000000000000000000000;;		f &= 255
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f1 += f
0000000000000000000000000000000000000000;;		g0 = f0 + 5
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		g = g0 >> 32
0000000000000000000000000000000000000000;;		g0 &= bits32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f = f1 >> 32
0000000000000000000000000000000000000000;;		f1 &= bits32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f &= 255
0000000000000000000000000000000000000000;;		g1 = f1 + g
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		g = g1 >> 32
0000000000000000000000000000000000000000;;		f2 += f
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f = f2 >> 32
0000000000000000000000000000000000000000;;		g1 &= bits32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f2 &= bits32
0000000000000000000000000000000000000000;;		f &= 255
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f3 += f
0000000000000000000000000000000000000000;;		g2 = f2 + g
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		g = g2 >> 32
0000000000000000000000000000000000000000;;		g2 &= bits32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f4 = f3 >> 32
0000000000000000000000000000000000000000;;		f3 &= bits32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f4 &= 255
0000000000000000000000000000000000000000;;		g3 = f3 + g
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		g = g3 >> 32
0000000000000000000000000000000000000000;;		g3 &= bits32
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		g4 = f4 + g
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		g4 = g4 - 4
0000000000000000000000000000000000000000;;		s00 = uint32(s[0])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f = uint64(int64(g4) >> 63)
0000000000000000000000000000000000000000;;		s01 = uint32(s[1])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f0 &= f
0000000000000000000000000000000000000000;;		g0 &^= f
0000000000000000000000000000000000000000;;		s02 = uint32(s[2])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f1 &= f
0000000000000000000000000000000000000000;;		f0 |= g0
0000000000000000000000000000000000000000;;		s03 = uint32(s[3])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		g1 &^= f
0000000000000000000000000000000000000000;;		f2 &= f
0000000000000000000000000000000000000000;;		s10 = uint32(s[4])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f3 &= f
0000000000000000000000000000000000000000;;		g2 &^= f
0000000000000000000000000000000000000000;;		s11 = uint32(s[5])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		g3 &^= f
0000000000000000000000000000000000000000;;		f1 |= g1
0000000000000000000000000000000000000000;;		s12 = uint32(s[6])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f2 |= g2
0000000000000000000000000000000000000000;;		f3 |= g3
0000000000000000000000000000000000000000;;		s13 = uint32(s[7])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s01 <<= 8
0000000000000000000000000000000000000000;;		f0 += uint64(s00)
0000000000000000000000000000000000000000;;		s20 = uint32(s[8])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s02 <<= 16
0000000000000000000000000000000000000000;;		f0 += uint64(s01)
0000000000000000000000000000000000000000;;		s21 = uint32(s[9])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s03 <<= 24
0000000000000000000000000000000000000000;;		f0 += uint64(s02)
0000000000000000000000000000000000000000;;		s22 = uint32(s[10])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s11 <<= 8
0000000000000000000000000000000000000000;;		f1 += uint64(s10)
0000000000000000000000000000000000000000;;		s23 = uint32(s[11])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s12 <<= 16
0000000000000000000000000000000000000000;;		f1 += uint64(s11)
0000000000000000000000000000000000000000;;		s30 = uint32(s[12])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s13 <<= 24
0000000000000000000000000000000000000000;;		f1 += uint64(s12)
0000000000000000000000000000000000000000;;		s31 = uint32(s[13])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f0 += uint64(s03)
0000000000000000000000000000000000000000;;		f1 += uint64(s13)
0000000000000000000000000000000000000000;;		s32 = uint32(s[14])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s21 <<= 8
0000000000000000000000000000000000000000;;		f2 += uint64(s20)
0000000000000000000000000000000000000000;;		s33 = uint32(s[15])
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s22 <<= 16
0000000000000000000000000000000000000000;;		f2 += uint64(s21)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s23 <<= 24
0000000000000000000000000000000000000000;;		f2 += uint64(s22)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s31 <<= 8
0000000000000000000000000000000000000000;;		f3 += uint64(s30)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s32 <<= 16
0000000000000000000000000000000000000000;;		f3 += uint64(s31)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		s33 <<= 24
0000000000000000000000000000000000000000;;		f3 += uint64(s32)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		f2 += uint64(s23)
0000000000000000000000000000000000000000;;		f3 += uint64(s33)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		out[0] = byte(f0)
0000000000000000000000000000000000000000;;		f0 >>= 8
0000000000000000000000000000000000000000;;		out[1] = byte(f0)
0000000000000000000000000000000000000000;;		f0 >>= 8
0000000000000000000000000000000000000000;;		out[2] = byte(f0)
0000000000000000000000000000000000000000;;		f0 >>= 8
0000000000000000000000000000000000000000;;		out[3] = byte(f0)
0000000000000000000000000000000000000000;;		f0 >>= 8
0000000000000000000000000000000000000000;;		f1 += f0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		out[4] = byte(f1)
0000000000000000000000000000000000000000;;		f1 >>= 8
0000000000000000000000000000000000000000;;		out[5] = byte(f1)
0000000000000000000000000000000000000000;;		f1 >>= 8
0000000000000000000000000000000000000000;;		out[6] = byte(f1)
0000000000000000000000000000000000000000;;		f1 >>= 8
0000000000000000000000000000000000000000;;		out[7] = byte(f1)
0000000000000000000000000000000000000000;;		f1 >>= 8
0000000000000000000000000000000000000000;;		f2 += f1
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		out[8] = byte(f2)
0000000000000000000000000000000000000000;;		f2 >>= 8
0000000000000000000000000000000000000000;;		out[9] = byte(f2)
0000000000000000000000000000000000000000;;		f2 >>= 8
0000000000000000000000000000000000000000;;		out[10] = byte(f2)
0000000000000000000000000000000000000000;;		f2 >>= 8
0000000000000000000000000000000000000000;;		out[11] = byte(f2)
0000000000000000000000000000000000000000;;		f2 >>= 8
0000000000000000000000000000000000000000;;		f3 += f2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		out[12] = byte(f3)
0000000000000000000000000000000000000000;;		f3 >>= 8
0000000000000000000000000000000000000000;;		out[13] = byte(f3)
0000000000000000000000000000000000000000;;		f3 >>= 8
0000000000000000000000000000000000000000;;		out[14] = byte(f3)
0000000000000000000000000000000000000000;;		f3 >>= 8
0000000000000000000000000000000000000000;;		out[15] = byte(f3)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Copyright 2015 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
4719f97477417ada91b80cafeecea0dd05c6fdd6;;	
0000000000000000000000000000000000000000;;	package pkcs12
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "errors"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	var (
0000000000000000000000000000000000000000;;		// ErrDecryption represents a failure to decrypt the input.
0000000000000000000000000000000000000000;;		ErrDecryption = errors.New("pkcs12: decryption error, incorrect padding")
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		// ErrIncorrectPassword is returned when an incorrect password is detected.
0000000000000000000000000000000000000000;;		// Usually, P12/PFX data is signed to be able to verify the password.
0000000000000000000000000000000000000000;;		ErrIncorrectPassword = errors.New("pkcs12: decryption password incorrect")
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// NotImplementedError indicates that the input is not currently supported.
0000000000000000000000000000000000000000;;	type NotImplementedError string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (e NotImplementedError) Error() string {
0000000000000000000000000000000000000000;;		return "pkcs12: " + string(e)
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	// Copyright 2017 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
9e80b303f64626923190029b6c087f0324c43419;;	
0000000000000000000000000000000000000000;;	package gensupport
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"runtime"
0000000000000000000000000000000000000000;;		"strings"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// GoogleClientHeader returns the value to use for the x-goog-api-client
0000000000000000000000000000000000000000;;	// header, which is used internally by Google.
0000000000000000000000000000000000000000;;	func GoogleClientHeader(generatorVersion, clientElement string) string {
0000000000000000000000000000000000000000;;		elts := []string{"gl-go/" + strings.Replace(runtime.Version(), " ", "_", -1)}
0000000000000000000000000000000000000000;;		if clientElement != "" {
0000000000000000000000000000000000000000;;			elts = append(elts, clientElement)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		elts = append(elts, fmt.Sprintf("gdcl/%s", generatorVersion))
0000000000000000000000000000000000000000;;		return strings.Join(elts, " ")
0000000000000000000000000000000000000000;;	}

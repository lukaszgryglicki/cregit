0000000000000000000000000000000000000000;;	// Copyright 2016 Google Inc. All Rights Reserved.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	// you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	// You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	//      http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	// distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	// See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	// limitations under the License.
9e80b303f64626923190029b6c087f0324c43419;;	
0000000000000000000000000000000000000000;;	package gensupport
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"encoding/json"
0000000000000000000000000000000000000000;;		"errors"
0000000000000000000000000000000000000000;;		"fmt"
0000000000000000000000000000000000000000;;		"math"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// JSONFloat64 is a float64 that supports proper unmarshaling of special float
0000000000000000000000000000000000000000;;	// values in JSON, according to
0000000000000000000000000000000000000000;;	// https://developers.google.com/protocol-buffers/docs/proto3#json. Although
0000000000000000000000000000000000000000;;	// that is a proto-to-JSON spec, it applies to all Google APIs.
0000000000000000000000000000000000000000;;	//
0000000000000000000000000000000000000000;;	// The jsonpb package
0000000000000000000000000000000000000000;;	// (https://github.com/golang/protobuf/blob/master/jsonpb/jsonpb.go) has
0000000000000000000000000000000000000000;;	// similar functionality, but only for direct translation from proto messages
0000000000000000000000000000000000000000;;	// to JSON.
0000000000000000000000000000000000000000;;	type JSONFloat64 float64
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func (f *JSONFloat64) UnmarshalJSON(data []byte) error {
0000000000000000000000000000000000000000;;		var ff float64
0000000000000000000000000000000000000000;;		if err := json.Unmarshal(data, &ff); err == nil {
0000000000000000000000000000000000000000;;			*f = JSONFloat64(ff)
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		var s string
0000000000000000000000000000000000000000;;		if err := json.Unmarshal(data, &s); err == nil {
0000000000000000000000000000000000000000;;			switch s {
0000000000000000000000000000000000000000;;			case "NaN":
0000000000000000000000000000000000000000;;				ff = math.NaN()
0000000000000000000000000000000000000000;;			case "Infinity":
0000000000000000000000000000000000000000;;				ff = math.Inf(1)
0000000000000000000000000000000000000000;;			case "-Infinity":
0000000000000000000000000000000000000000;;				ff = math.Inf(-1)
0000000000000000000000000000000000000000;;			default:
0000000000000000000000000000000000000000;;				return fmt.Errorf("google.golang.org/api/internal: bad float string %q", s)
0000000000000000000000000000000000000000;;			}
0000000000000000000000000000000000000000;;			*f = JSONFloat64(ff)
0000000000000000000000000000000000000000;;			return nil
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return errors.New("google.golang.org/api/internal: data not float or string")
0000000000000000000000000000000000000000;;	}

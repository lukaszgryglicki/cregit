0000000000000000000000000000000000000000;;	// Copyright 2015 The Go Authors. All rights reserved.
0000000000000000000000000000000000000000;;	// Use of this source code is governed by a BSD-style
0000000000000000000000000000000000000000;;	// license that can be found in the LICENSE file.
0c9cd978a5434280274c834bdab152689fd59b88;Godeps/_workspace/src/google.golang.org/api/gensupport/params.go[Godeps/_workspace/src/google.golang.org/api/gensupport/params.go][vendor/google.golang.org/api/gensupport/params.go];	
0000000000000000000000000000000000000000;;	package gensupport
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"net/url"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;		"google.golang.org/api/googleapi"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// URLParams is a simplified replacement for url.Values
0000000000000000000000000000000000000000;;	// that safely builds up URL parameters for encoding.
0000000000000000000000000000000000000000;;	type URLParams map[string][]string
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Get returns the first value for the given key, or "".
0000000000000000000000000000000000000000;;	func (u URLParams) Get(key string) string {
0000000000000000000000000000000000000000;;		vs := u[key]
0000000000000000000000000000000000000000;;		if len(vs) == 0 {
0000000000000000000000000000000000000000;;			return ""
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;		return vs[0]
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Set sets the key to value.
0000000000000000000000000000000000000000;;	// It replaces any existing values.
0000000000000000000000000000000000000000;;	func (u URLParams) Set(key, value string) {
0000000000000000000000000000000000000000;;		u[key] = []string{value}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// SetMulti sets the key to an array of values.
0000000000000000000000000000000000000000;;	// It replaces any existing values.
0000000000000000000000000000000000000000;;	// Note that values must not be modified after calling SetMulti
0000000000000000000000000000000000000000;;	// so the caller is responsible for making a copy if necessary.
0000000000000000000000000000000000000000;;	func (u URLParams) SetMulti(key string, values []string) {
0000000000000000000000000000000000000000;;		u[key] = values
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Encode encodes the values into ``URL encoded'' form
0000000000000000000000000000000000000000;;	// ("bar=baz&foo=quux") sorted by key.
0000000000000000000000000000000000000000;;	func (u URLParams) Encode() string {
0000000000000000000000000000000000000000;;		return url.Values(u).Encode()
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func SetOptions(u URLParams, opts ...googleapi.CallOption) {
0000000000000000000000000000000000000000;;		for _, o := range opts {
0000000000000000000000000000000000000000;;			u.Set(o.Get())
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

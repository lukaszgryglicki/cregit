0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -e
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	workdir=.cover
0000000000000000000000000000000000000000;;	profile="$workdir/cover.out"
0000000000000000000000000000000000000000;;	mode=set
0000000000000000000000000000000000000000;;	end2endtest="google.golang.org/grpc/test"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	generate_cover_data() {
0000000000000000000000000000000000000000;;	    rm -rf "$workdir"
0000000000000000000000000000000000000000;;	    mkdir "$workdir"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    for pkg in "$@"; do
0000000000000000000000000000000000000000;;	        if [ $pkg == "google.golang.org/grpc" -o $pkg == "google.golang.org/grpc/transport" -o $pkg == "google.golang.org/grpc/metadata" -o $pkg == "google.golang.org/grpc/credentials" ]
0000000000000000000000000000000000000000;;	            then
0000000000000000000000000000000000000000;;	                f="$workdir/$(echo $pkg | tr / -)"
0000000000000000000000000000000000000000;;	                go test -covermode="$mode" -coverprofile="$f.cover" "$pkg"
0000000000000000000000000000000000000000;;	                go test -covermode="$mode" -coverpkg "$pkg" -coverprofile="$f.e2e.cover" "$end2endtest"
0000000000000000000000000000000000000000;;	        fi
0000000000000000000000000000000000000000;;	    done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    echo "mode: $mode" >"$profile"
0000000000000000000000000000000000000000;;	    grep -h -v "^mode:" "$workdir"/*.cover >>"$profile"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	show_cover_report() {
0000000000000000000000000000000000000000;;	    go tool cover -${1}="$profile"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	push_to_coveralls() {
0000000000000000000000000000000000000000;;	    goveralls -coverprofile="$profile"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	generate_cover_data $(go list ./...)
0000000000000000000000000000000000000000;;	show_cover_report func
0000000000000000000000000000000000000000;;	case "$1" in
0000000000000000000000000000000000000000;;	"")
0000000000000000000000000000000000000000;;	    ;;
0000000000000000000000000000000000000000;;	--html)
0000000000000000000000000000000000000000;;	    show_cover_report html ;;
0000000000000000000000000000000000000000;;	--coveralls)
0000000000000000000000000000000000000000;;	    push_to_coveralls ;;
0000000000000000000000000000000000000000;;	*)
0000000000000000000000000000000000000000;;	    echo >&2 "error: invalid option: $1" ;;
0000000000000000000000000000000000000000;;	esac
0000000000000000000000000000000000000000;;	rm -rf "$workdir"

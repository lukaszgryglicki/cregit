0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
45b313bfed4f9fe901f7fc5874630d08e8c80af9;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package initialresources
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import "testing"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestInfluxDBDataSource(t *testing.T) {
0000000000000000000000000000000000000000;;		ds, _ := newDataSource("influxdb")
0000000000000000000000000000000000000000;;		if _, ok := ds.(*influxdbSource); !ok {
0000000000000000000000000000000000000000;;			t.Errorf("newDataSource did not return valid InfluxDB type")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestGCMDataSource(t *testing.T) {
0000000000000000000000000000000000000000;;		// No ProjectID set
0000000000000000000000000000000000000000;;		newDataSource("gcm")
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestHawkularDataSource(t *testing.T) {
0000000000000000000000000000000000000000;;		ds, _ := newDataSource("hawkular")
0000000000000000000000000000000000000000;;		if _, ok := ds.(*hawkularSource); !ok {
0000000000000000000000000000000000000000;;			t.Errorf("newDataSource did not return valid hawkularSource type")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	func TestNoDataSourceFound(t *testing.T) {
0000000000000000000000000000000000000000;;		ds, err := newDataSource("")
0000000000000000000000000000000000000000;;		if ds != nil || err == nil {
0000000000000000000000000000000000000000;;			t.Errorf("newDataSource found for empty input")
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

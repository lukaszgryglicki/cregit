0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2017 The Kubernetes Authors.
37d5da0561092fe7fee1b92a5e29ef17c9ff3927;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Package install installs the experimental API group, making it available as
0000000000000000000000000000000000000000;;	// an option to all of the API encoding/decoding machinery.
0000000000000000000000000000000000000000;;	package install
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/apimachinery/announced"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/apimachinery/registered"
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;		resourcequotaapi "k8s.io/kubernetes/plugin/pkg/admission/resourcequota/apis/resourcequota"
0000000000000000000000000000000000000000;;		resourcequotav1alpha1 "k8s.io/kubernetes/plugin/pkg/admission/resourcequota/apis/resourcequota/v1alpha1"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	// Install registers the API group and adds types to a scheme
0000000000000000000000000000000000000000;;	func Install(groupFactoryRegistry announced.APIGroupFactoryRegistry, registry *registered.APIRegistrationManager, scheme *runtime.Scheme) {
0000000000000000000000000000000000000000;;		if err := announced.NewGroupMetaFactory(
0000000000000000000000000000000000000000;;			&announced.GroupMetaFactoryArgs{
0000000000000000000000000000000000000000;;				GroupName:                  resourcequotaapi.GroupName,
0000000000000000000000000000000000000000;;				VersionPreferenceOrder:     []string{resourcequotav1alpha1.SchemeGroupVersion.Version},
0000000000000000000000000000000000000000;;				ImportPrefix:               "k8s.io/kubernetes/plugin/pkg/admission/resourcequota/apis/resourcequota",
0000000000000000000000000000000000000000;;				AddInternalObjectsToScheme: resourcequotaapi.AddToScheme,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;			announced.VersionToSchemeFunc{
0000000000000000000000000000000000000000;;				resourcequotav1alpha1.SchemeGroupVersion.Version: resourcequotav1alpha1.AddToScheme,
0000000000000000000000000000000000000000;;			},
0000000000000000000000000000000000000000;;		).Announce(groupFactoryRegistry).RegisterAndEnable(registry, scheme); err != nil {
0000000000000000000000000000000000000000;;			panic(err)
0000000000000000000000000000000000000000;;		}
0000000000000000000000000000000000000000;;	}

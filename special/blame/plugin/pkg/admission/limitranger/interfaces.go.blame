0000000000000000000000000000000000000000;;	/*
0000000000000000000000000000000000000000;;	Copyright 2014 The Kubernetes Authors.
582e49e90422e842d5b2268c4c15f4d2d1a14d73;;	
0000000000000000000000000000000000000000;;	Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	limitations under the License.
0000000000000000000000000000000000000000;;	*/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	package limitranger
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	import (
0000000000000000000000000000000000000000;;		"k8s.io/apimachinery/pkg/runtime"
0000000000000000000000000000000000000000;;		"k8s.io/apiserver/pkg/admission"
0000000000000000000000000000000000000000;;		"k8s.io/kubernetes/pkg/api"
0000000000000000000000000000000000000000;;	)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	type LimitRangerActions interface {
0000000000000000000000000000000000000000;;		// Limit is a pluggable function to enforce limits on the object.
0000000000000000000000000000000000000000;;		Limit(limitRange *api.LimitRange, kind string, obj runtime.Object) error
0000000000000000000000000000000000000000;;		// SupportsAttributes is a pluggable function to allow overridding what resources the limitranger
0000000000000000000000000000000000000000;;		// supports.
0000000000000000000000000000000000000000;;		SupportsAttributes(attr admission.Attributes) bool
0000000000000000000000000000000000000000;;		// SupportsLimit is a pluggable function to allow ignoring limits that should not be applied
0000000000000000000000000000000000000000;;		// for any reason.
0000000000000000000000000000000000000000;;		SupportsLimit(limitRange *api.LimitRange) bool
0000000000000000000000000000000000000000;;	}

0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# This script contains the helper functions that each provider hosting
0000000000000000000000000000000000000000;;	# Kubernetes must implement to use cluster/kube-*.sh scripts.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Must ensure that the following ENV vars are set
0000000000000000000000000000000000000000;;	function detect-master {
0000000000000000000000000000000000000000;;		echo "KUBE_MASTER_IP: $KUBE_MASTER_IP" 1>&2
0000000000000000000000000000000000000000;;		echo "KUBE_MASTER: $KUBE_MASTER" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Get node names if they are not static.
0000000000000000000000000000000000000000;;	function detect-node-names {
0000000000000000000000000000000000000000;;		echo "NODE_NAMES: [${NODE_NAMES[*]}]" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Get node IP addresses and store in KUBE_NODE_IP_ADDRESSES[]
0000000000000000000000000000000000000000;;	function detect-nodes {
0000000000000000000000000000000000000000;;		echo "KUBE_NODE_IP_ADDRESSES: [${KUBE_NODE_IP_ADDRESSES[*]}]" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Verify prereqs on host machine
0000000000000000000000000000000000000000;;	function verify-prereqs {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: verify-prereqs not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Validate a kubernetes cluster
0000000000000000000000000000000000000000;;	function validate-cluster {
0000000000000000000000000000000000000000;;		# by default call the generic validate-cluster.sh script, customizable by
0000000000000000000000000000000000000000;;		# any cluster provider if this does not fit.
0000000000000000000000000000000000000000;;		"${KUBE_ROOT}/cluster/validate-cluster.sh"
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Instantiate a kubernetes cluster
0000000000000000000000000000000000000000;;	function kube-up {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: kube-up not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Delete a kubernetes cluster
0000000000000000000000000000000000000000;;	function kube-down {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: kube-down not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Update a kubernetes cluster
0000000000000000000000000000000000000000;;	function kube-push {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: kube-push not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Prepare update a kubernetes component
0000000000000000000000000000000000000000;;	function prepare-push {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: prepare-push not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Update a kubernetes master
0000000000000000000000000000000000000000;;	function push-master {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: push-master not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Update a kubernetes node
0000000000000000000000000000000000000000;;	function push-node {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: push-node not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Execute prior to running tests to build a release if required for env
0000000000000000000000000000000000000000;;	function test-build-release {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: test-build-release not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Execute prior to running tests to initialize required structure
0000000000000000000000000000000000000000;;	function test-setup {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: test-setup not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Execute after running tests to perform any required clean-up
0000000000000000000000000000000000000000;;	function test-teardown {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: test-teardown not implemented" 1>&2
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	function prepare-e2e {
0000000000000000000000000000000000000000;;		echo "Skeleton Provider: prepare-e2e not implemented" 1>&2
0000000000000000000000000000000000000000;;	}

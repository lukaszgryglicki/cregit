0000000000000000000000000000000000000000;;	### hyperkube
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	`hyperkube` is an all-in-one binary for the Kubernetes server components
0000000000000000000000000000000000000000;;	`hyperkube` is built for multiple architectures and _the image is pushed automatically on every release._
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#### How to release by hand
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```console
0000000000000000000000000000000000000000;;	# First, build the binaries
0000000000000000000000000000000000000000;;	$ build/run.sh make cross
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Build for linux/amd64 (default)
0000000000000000000000000000000000000000;;	# export REGISTRY=$HOST/$ORG to switch from gcr.io/google_containers
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$ make push VERSION={target_version} ARCH=amd64
0000000000000000000000000000000000000000;;	# ---> gcr.io/google_containers/hyperkube-amd64:VERSION
0000000000000000000000000000000000000000;;	# ---> gcr.io/google_containers/hyperkube:VERSION (image with backwards-compatible naming)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$ make push VERSION={target_version} ARCH=arm
0000000000000000000000000000000000000000;;	# ---> gcr.io/google_containers/hyperkube-arm:VERSION
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$ make push VERSION={target_version} ARCH=arm64
0000000000000000000000000000000000000000;;	# ---> gcr.io/google_containers/hyperkube-arm64:VERSION
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$ make push VERSION={target_version} ARCH=ppc64le
0000000000000000000000000000000000000000;;	# ---> gcr.io/google_containers/hyperkube-ppc64le:VERSION
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$ make push VERSION={target_version} ARCH=s390x
0000000000000000000000000000000000000000;;	# ---> gcr.io/google_containers/hyperkube-s390x:VERSION
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	If you don't want to push the images, run `make` or `make build` instead
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[![Analytics](https://kubernetes-site.appspot.com/UA-36037335-10/GitHub/cluster/images/hyperkube/README.md?pixel)]()

0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2016 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "This is NOT a production-ready tool.\n\
0000000000000000000000000000000000000000;;	IT'S A HACKY, BEST-EFFORT WAY TO \"STOP\" CREATION OF THE GKE CLUSTER."
0000000000000000000000000000000000000000;;	read -n 1 -p "Are you sure you want to proceed (y/N)?: " decision
0000000000000000000000000000000000000000;;	echo ""
0000000000000000000000000000000000000000;;	if [[ "${decision}" != "y" ]]; then
0000000000000000000000000000000000000000;;		echo "Aborting..."
0000000000000000000000000000000000000000;;		exit 0
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_ROOT=$(dirname "${BASH_SOURCE}")/../..
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [ -f "${KUBE_ROOT}/cluster/env.sh" ]; then
0000000000000000000000000000000000000000;;	    source "${KUBE_ROOT}/cluster/env.sh"
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	source "${KUBE_ROOT}/cluster/gke/util.sh"
0000000000000000000000000000000000000000;;	STAGING_ENDPOINT="CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER=https://staging-container.sandbox.googleapis.com/"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	detect-project
0000000000000000000000000000000000000000;;	cluster=$(gcloud container operations list "--project=${PROJECT}" | grep "CREATE_CLUSTER" | grep "RUNNING" || true)
0000000000000000000000000000000000000000;;	if [ -z "${cluster}" ]; then
0000000000000000000000000000000000000000;;		echo "Couldn't find any cluster being created in production environment. Trying staging..."
0000000000000000000000000000000000000000;;		cluster=$(env ${STAGING_ENDPOINT} gcloud container operations list "--project=${PROJECT}" | grep "CREATE_CLUSTER" | grep "RUNNING" || true)
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [ -z "${cluster}" ]; then
0000000000000000000000000000000000000000;;		echo "No cluster creation in progress found. Aborting."
0000000000000000000000000000000000000000;;		exit 0
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	zone=$(echo "${cluster}" | tr -s "[:blank:]" | cut -f3 -d" ")
0000000000000000000000000000000000000000;;	cluster_name=$(echo "${cluster}" | tr -s "[:blank:]" | cut -f4 -d" ")
0000000000000000000000000000000000000000;;	gcloud="gcloud"
0000000000000000000000000000000000000000;;	if [ "${zone}" == "us-east1-a" ]; then
0000000000000000000000000000000000000000;;		gcloud="env ${STAGING_ENDPOINT} gcloud"
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	migs=$(${gcloud} compute instance-groups managed list --project=${PROJECT} --zones=${zone} | grep "gke-${cluster_name}" | cut -f1 -d" ")
0000000000000000000000000000000000000000;;	echo "Managed instance groups for cluster ${cluster_name}: ${migs}"
0000000000000000000000000000000000000000;;	for mig in ${migs}; do
0000000000000000000000000000000000000000;;		echo "Resizing ${mig}..."
0000000000000000000000000000000000000000;;		${gcloud} compute instance-groups managed resize --project="${PROJECT}" --zone="${zone}" "${mig}" --size=1
0000000000000000000000000000000000000000;;	done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "All managed instance groups resized to 1. Cluster creation operation should end soon, and you will be be able to delete the cluster."

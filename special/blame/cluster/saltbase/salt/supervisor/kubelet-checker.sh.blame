0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2015 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# This script is intended to start the kubelet and then loop until
0000000000000000000000000000000000000000;;	# it detects a failure.  It then exits, and supervisord restarts it
0000000000000000000000000000000000000000;;	# which in turn restarts the kubelet.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	/etc/init.d/kubelet stop
0000000000000000000000000000000000000000;;	/etc/init.d/kubelet start
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "waiting a minute for startup"
0000000000000000000000000000000000000000;;	sleep 60
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	max_seconds=10
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	while true; do
0000000000000000000000000000000000000000;;	if ! curl -m ${max_seconds} -f -s http://127.0.0.1:10255/healthz > /dev/null; then
0000000000000000000000000000000000000000;;	    echo "kubelet failed!"
0000000000000000000000000000000000000000;;	    curl http://127.0.0.1:10255/healthz
0000000000000000000000000000000000000000;;	    exit 2
0000000000000000000000000000000000000000;;	  fi
0000000000000000000000000000000000000000;;	  sleep 10
0000000000000000000000000000000000000000;;	done
0000000000000000000000000000000000000000;;	

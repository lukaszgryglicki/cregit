0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2014 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Set the host name explicitly
0000000000000000000000000000000000000000;;	# See: https://github.com/mitchellh/vagrant/issues/2430
0000000000000000000000000000000000000000;;	hostnamectl set-hostname ${NODE_NAME}
0000000000000000000000000000000000000000;;	if_to_edit=""
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if [[ "$(grep 'VERSION_ID' /etc/os-release)" =~ ^VERSION_ID=23 ]]; then
0000000000000000000000000000000000000000;;	  # Disable network interface being managed by Network Manager (needed for Fedora 21+)
0000000000000000000000000000000000000000;;	  NETWORK_CONF_PATH=/etc/sysconfig/network-scripts/
0000000000000000000000000000000000000000;;	  if_to_edit=$( find ${NETWORK_CONF_PATH}ifcfg-* | xargs grep -l VAGRANT-BEGIN )
0000000000000000000000000000000000000000;;	  for if_conf in ${if_to_edit}; do
0000000000000000000000000000000000000000;;	    grep -q ^NM_CONTROLLED= ${if_conf} || echo 'NM_CONTROLLED=no' >> ${if_conf}
0000000000000000000000000000000000000000;;	    sed -i 's/#^NM_CONTROLLED=.*/NM_CONTROLLED=no/' ${if_conf}
0000000000000000000000000000000000000000;;	  done;
0000000000000000000000000000000000000000;;	  systemctl restart network
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# needed for vsphere support
0000000000000000000000000000000000000000;;	# handle the case when no 'VAGRANT-BEGIN' comment was defined in network-scripts
0000000000000000000000000000000000000000;;	# set the NETWORK_IF_NAME to have a default value in such case
0000000000000000000000000000000000000000;;	NETWORK_IF_NAME=`echo ${if_to_edit} | awk -F- '{ print $3 }'`
0000000000000000000000000000000000000000;;	if [[ -z "$NETWORK_IF_NAME" ]]; then
0000000000000000000000000000000000000000;;	  NETWORK_IF_NAME=${DEFAULT_NETWORK_IF_NAME}
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Setup hosts file to support ping by hostname to master
0000000000000000000000000000000000000000;;	if [ ! "$(cat /etc/hosts | grep $MASTER_NAME)" ]; then
0000000000000000000000000000000000000000;;	  echo "Adding $MASTER_NAME to hosts file"
0000000000000000000000000000000000000000;;	  echo "$MASTER_IP $MASTER_NAME" >> /etc/hosts
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	echo "$NODE_IP $NODE_NAME" >> /etc/hosts
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Setup hosts file to support ping by hostname to each node in the cluster
0000000000000000000000000000000000000000;;	for (( i=0; i<${#NODE_NAMES[@]}; i++)); do
0000000000000000000000000000000000000000;;	  node=${NODE_NAMES[$i]}
0000000000000000000000000000000000000000;;	  ip=${NODE_IPS[$i]}
0000000000000000000000000000000000000000;;	  if [ ! "$(cat /etc/hosts | grep $node)" ]; then
0000000000000000000000000000000000000000;;	    echo "Adding $node to hosts file"
0000000000000000000000000000000000000000;;	    echo "$ip $node" >> /etc/hosts
0000000000000000000000000000000000000000;;	  fi
0000000000000000000000000000000000000000;;	done
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	enable-accounting
0000000000000000000000000000000000000000;;	prepare-package-manager
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Configure network
0000000000000000000000000000000000000000;;	if [ "${NETWORK_PROVIDER}" != "kubenet" ]; then
0000000000000000000000000000000000000000;;	  provision-network-node
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	write-salt-config kubernetes-pool
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Generate kubelet and kube-proxy auth file(kubeconfig) if there is not an existing one
0000000000000000000000000000000000000000;;	known_kubeconfig_file="/srv/salt-overlay/salt/kubelet/kubeconfig"
0000000000000000000000000000000000000000;;	if [[ ! -f "${known_kubeconfig_file}" ]]; then
0000000000000000000000000000000000000000;;	  create-salt-kubelet-auth
0000000000000000000000000000000000000000;;	  create-salt-kubeproxy-auth
0000000000000000000000000000000000000000;;	else
0000000000000000000000000000000000000000;;	  # stop kubelet, let salt start it later
0000000000000000000000000000000000000000;;	  systemctl stop kubelet
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	install-salt
0000000000000000000000000000000000000000;;	add-volume-support
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	run-salt
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	dnf install -y socat ethtool
0000000000000000000000000000000000000000;;	dnf update -y docker

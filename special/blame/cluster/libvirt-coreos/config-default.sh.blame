0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2014 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Contains configuration values for interacting with the libvirt CoreOS cluster
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Number of minions in the cluster
0000000000000000000000000000000000000000;;	NUM_NODES=${NUM_NODES:-3}
0000000000000000000000000000000000000000;;	export NUM_NODES
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# The IP of the master
0000000000000000000000000000000000000000;;	export MASTER_IP="192.168.10.1"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	export INSTANCE_PREFIX=kubernetes
0000000000000000000000000000000000000000;;	export MASTER_NAME="${INSTANCE_PREFIX}-master"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Map out the IPs, names and container subnets of each node
0000000000000000000000000000000000000000;;	export NODE_IP_BASE="192.168.10."
0000000000000000000000000000000000000000;;	NODE_CONTAINER_SUBNET_BASE="10.10"
0000000000000000000000000000000000000000;;	MASTER_CONTAINER_NETMASK="255.255.255.0"
0000000000000000000000000000000000000000;;	MASTER_CONTAINER_ADDR="${NODE_CONTAINER_SUBNET_BASE}.0.1"
0000000000000000000000000000000000000000;;	MASTER_CONTAINER_SUBNET="${NODE_CONTAINER_SUBNET_BASE}.0.1/24"
0000000000000000000000000000000000000000;;	CONTAINER_SUBNET="${NODE_CONTAINER_SUBNET_BASE}.0.0/16"
0000000000000000000000000000000000000000;;	if [[ "$NUM_NODES" -gt 253 ]]; then
0000000000000000000000000000000000000000;;	  echo "ERROR: Because of how IPs are allocated in ${BASH_SOURCE}, you cannot create more than 253 nodes"
0000000000000000000000000000000000000000;;	  exit 1
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	for ((i=0; i < NUM_NODES; i++)) do
0000000000000000000000000000000000000000;;	  NODE_IPS[$i]="${NODE_IP_BASE}$((i+2))"
0000000000000000000000000000000000000000;;	  NODE_NAMES[$i]="${INSTANCE_PREFIX}-node-$((i+1))"
0000000000000000000000000000000000000000;;	  NODE_CONTAINER_SUBNETS[$i]="${NODE_CONTAINER_SUBNET_BASE}.$((i+1)).1/24"
0000000000000000000000000000000000000000;;	  NODE_CONTAINER_ADDRS[$i]="${NODE_CONTAINER_SUBNET_BASE}.$((i+1)).1"
0000000000000000000000000000000000000000;;	  NODE_CONTAINER_NETMASKS[$i]="255.255.255.0"
0000000000000000000000000000000000000000;;	done
0000000000000000000000000000000000000000;;	NODE_CONTAINER_SUBNETS[$NUM_NODES]=$MASTER_CONTAINER_SUBNET
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	SERVICE_CLUSTER_IP_RANGE="${SERVICE_CLUSTER_IP_RANGE:-10.11.0.0/16}"  # formerly PORTAL_NET
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Optional: Enable node logging.
0000000000000000000000000000000000000000;;	ENABLE_NODE_LOGGING=false
0000000000000000000000000000000000000000;;	LOGGING_DESTINATION=elasticsearch
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Optional: Install cluster DNS.
0000000000000000000000000000000000000000;;	ENABLE_CLUSTER_DNS="${KUBE_ENABLE_CLUSTER_DNS:-true}"
0000000000000000000000000000000000000000;;	DNS_SERVER_IP="${SERVICE_CLUSTER_IP_RANGE%.*}.254"
0000000000000000000000000000000000000000;;	DNS_DOMAIN="cluster.local"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Optional: Install cluster registry
0000000000000000000000000000000000000000;;	ENABLE_CLUSTER_REGISTRY="${KUBE_ENABLE_CLUSTER_REGISTRY:-true}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Optional: Enable DNS horizontal autoscaler
0000000000000000000000000000000000000000;;	ENABLE_DNS_HORIZONTAL_AUTOSCALER="${KUBE_ENABLE_DNS_HORIZONTAL_AUTOSCALER:-false}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#Generate dns files
0000000000000000000000000000000000000000;;	sed -f "${KUBE_ROOT}/cluster/addons/dns/transforms2sed.sed" < "${KUBE_ROOT}/cluster/addons/dns/kubedns-controller.yaml.base" | sed -f "${KUBE_ROOT}/cluster/libvirt-coreos/forShellEval.sed"  > "${KUBE_ROOT}/cluster/libvirt-coreos/kubedns-controller.yaml"
0000000000000000000000000000000000000000;;	sed -f "${KUBE_ROOT}/cluster/addons/dns/transforms2sed.sed" < "${KUBE_ROOT}/cluster/addons/dns/kubedns-svc.yaml.base" | sed -f "${KUBE_ROOT}/cluster/libvirt-coreos/forShellEval.sed"  > "${KUBE_ROOT}/cluster/libvirt-coreos/kubedns-svc.yaml"
0000000000000000000000000000000000000000;;	cp "${KUBE_ROOT}/cluster/addons/dns/kubedns-sa.yaml" "${KUBE_ROOT}/cluster/libvirt-coreos/kubedns-sa.yaml"
0000000000000000000000000000000000000000;;	cp "${KUBE_ROOT}/cluster/addons/dns/kubedns-cm.yaml" "${KUBE_ROOT}/cluster/libvirt-coreos/kubedns-cm.yaml"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#Generate registry files
0000000000000000000000000000000000000000;;	sed -f "${KUBE_ROOT}/cluster/libvirt-coreos/forEmptyDirRegistry.sed" < "${KUBE_ROOT}/cluster/addons/registry/registry-rc.yaml"  > "${KUBE_ROOT}/cluster/libvirt-coreos/registry-rc.yaml"

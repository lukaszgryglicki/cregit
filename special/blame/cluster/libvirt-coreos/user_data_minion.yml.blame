0000000000000000000000000000000000000000;;	#cloud-config
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	coreos:
0000000000000000000000000000000000000000;;	  units:
0000000000000000000000000000000000000000;;	    - name: kubelet.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        After=opt-kubernetes.mount docker.socket
0000000000000000000000000000000000000000;;	        ConditionFileIsExecutable=/opt/kubernetes/bin/kubelet
0000000000000000000000000000000000000000;;	        Description=Kubernetes Kubelet
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	        Requires=opt-kubernetes.mount docker.socket
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStart=/opt/kubernetes/bin/kubelet \
0000000000000000000000000000000000000000;;	        --address=0.0.0.0 \
0000000000000000000000000000000000000000;;	        --hostname-override=${NODE_IPS[$i]} \
0000000000000000000000000000000000000000;;	        --cluster-domain=cluster.local \
0000000000000000000000000000000000000000;;	        --api-servers=http://${MASTER_IP}:8080 \
0000000000000000000000000000000000000000;;	        --tls-cert-file=/opt/kubernetes/certs/${NODE_NAMES[$i]}-node.pem \ \
0000000000000000000000000000000000000000;;	        --tls-private-key-file=/opt/kubernetes/certs/${NODE_NAMES[$i]}-node-key.pem \
0000000000000000000000000000000000000000;;	        $( [[ "$ENABLE_CLUSTER_DNS" == "true" ]] && echo "--cluster-dns=${DNS_SERVER_IP}" ) \
0000000000000000000000000000000000000000;;	        $( [[ "$ENABLE_CLUSTER_DNS" == "true" ]] && echo "--cluster-domain=${DNS_DOMAIN}" ) \
0000000000000000000000000000000000000000;;	        --pod-manifest-path=/opt/kubernetes/manifests
0000000000000000000000000000000000000000;;	        Restart=always
0000000000000000000000000000000000000000;;	        RestartSec=2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Install]
0000000000000000000000000000000000000000;;	        WantedBy=multi-user.target
0000000000000000000000000000000000000000;;	    - name: kube-proxy.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        After=opt-kubernetes.mount
0000000000000000000000000000000000000000;;	        ConditionFileIsExecutable=/opt/kubernetes/bin/kube-proxy
0000000000000000000000000000000000000000;;	        Description=Kubernetes Proxy
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	        Requires=opt-kubernetes.mount
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStart=/opt/kubernetes/bin/kube-proxy \
0000000000000000000000000000000000000000;;	        --master=http://${MASTER_IP}:8080 \
0000000000000000000000000000000000000000;;	        --hostname-override=${NODE_IPS[$i]}
0000000000000000000000000000000000000000;;	        Restart=always
0000000000000000000000000000000000000000;;	        RestartSec=2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Install]
0000000000000000000000000000000000000000;;	        WantedBy=multi-user.target

0000000000000000000000000000000000000000;;	#cloud-config
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	coreos:
0000000000000000000000000000000000000000;;	  units:
0000000000000000000000000000000000000000;;	    - name: kube-apiserver.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        After=opt-kubernetes.mount etcd2.service
0000000000000000000000000000000000000000;;	        ConditionFileIsExecutable=/opt/kubernetes/bin/kube-apiserver
0000000000000000000000000000000000000000;;	        Description=Kubernetes API Server
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	        Requires=opt-kubernetes.mount etcd2.service
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStart=/opt/kubernetes/bin/kube-apiserver \
0000000000000000000000000000000000000000;;	        --tls-cert-file=./opt/kubernetes/certs/apiserver.pem \
0000000000000000000000000000000000000000;;	        --tls-private-key-file=/opt/kubernetes/certs/apiserver-key.pem \
0000000000000000000000000000000000000000;;	        --client-ca-file=/opt/kubernetes/certs/ca.pem \
0000000000000000000000000000000000000000;;	        --service-account-key-file=/opt/kubernetes/certs/apiserver-key.pem \
0000000000000000000000000000000000000000;;	        --service-account-lookup=${SERVICE_ACCOUNT_LOOKUP} \
0000000000000000000000000000000000000000;;	        --admission-control=${ADMISSION_CONTROL} \
0000000000000000000000000000000000000000;;	        --insecure-bind-address=0.0.0.0 \
0000000000000000000000000000000000000000;;	        --insecure-port=8080 \
0000000000000000000000000000000000000000;;	        --etcd-servers=http://127.0.0.1:2379 \
0000000000000000000000000000000000000000;;	        --kubelet-port=10250 \
0000000000000000000000000000000000000000;;	        --v=4 \
0000000000000000000000000000000000000000;;	        --service-cluster-ip-range=${SERVICE_CLUSTER_IP_RANGE}
0000000000000000000000000000000000000000;;	        Restart=always
0000000000000000000000000000000000000000;;	        RestartSec=2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Install]
0000000000000000000000000000000000000000;;	        WantedBy=multi-user.target
0000000000000000000000000000000000000000;;	    - name: kube-controller-manager.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        After=opt-kubernetes.mount kube-apiserver.service
0000000000000000000000000000000000000000;;	        ConditionFileIsExecutable=/opt/kubernetes/bin/kube-controller-manager
0000000000000000000000000000000000000000;;	        Description=Kubernetes Controller Manager
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	        Requires=opt-kubernetes.mount kube-apiserver.service
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStart=/opt/kubernetes/bin/kube-controller-manager \
0000000000000000000000000000000000000000;;	        --master=127.0.0.1:8080 \
0000000000000000000000000000000000000000;;	        --service-account-private-key-file=/opt/kubernetes/certs/apiserver-key.pem \
0000000000000000000000000000000000000000;;	        --root-ca-file=/opt/kubernetes/certs/ca.pem \
0000000000000000000000000000000000000000;;	        --v=4
0000000000000000000000000000000000000000;;	        Restart=always
0000000000000000000000000000000000000000;;	        RestartSec=2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Install]
0000000000000000000000000000000000000000;;	        WantedBy=multi-user.target
0000000000000000000000000000000000000000;;	    - name: kube-scheduler.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        After=opt-kubernetes.mount kube-apiserver.service
0000000000000000000000000000000000000000;;	        ConditionFileIsExecutable=/opt/kubernetes/bin/kube-scheduler
0000000000000000000000000000000000000000;;	        Description=Kubernetes Scheduler
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	        Requires=opt-kubernetes.mount kube-apiserver.service
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStart=/opt/kubernetes/bin/kube-scheduler \
0000000000000000000000000000000000000000;;	        --master=127.0.0.1:8080
0000000000000000000000000000000000000000;;	        Restart=always
0000000000000000000000000000000000000000;;	        RestartSec=2
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Install]
0000000000000000000000000000000000000000;;	        WantedBy=multi-user.target
0000000000000000000000000000000000000000;;	    - name: kube-addons.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        After=opt-kubernetes.mount kube-apiserver.service
0000000000000000000000000000000000000000;;	        ConditionPathIsDirectory=/opt/kubernetes/addons
0000000000000000000000000000000000000000;;	        Description=Kubernetes addons
0000000000000000000000000000000000000000;;	        Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	        Requires=opt-kubernetes.mount
0000000000000000000000000000000000000000;;	        Wants=kube-apiserver.service
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        Type=oneshot
0000000000000000000000000000000000000000;;	        ExecStartPre=/bin/bash -c 'while [[ \"\$(curl -s http://127.0.0.1:8080/healthz)\" != \"ok\" ]]; do sleep 1; done'
0000000000000000000000000000000000000000;;	        ExecStartPre=/bin/sleep 10
0000000000000000000000000000000000000000;;	        ExecStart=/opt/kubernetes/bin/kubectl create -f /opt/kubernetes/addons
0000000000000000000000000000000000000000;;	        ExecStop=/opt/kubernetes/bin/kubectl delete -f /opt/kubernetes/addons
0000000000000000000000000000000000000000;;	        RemainAfterExit=yes
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Install]
0000000000000000000000000000000000000000;;	        WantedBy=multi-user.target

0000000000000000000000000000000000000000;;	#cloud-config
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	hostname: ${name}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	ssh_authorized_keys:
0000000000000000000000000000000000000000;;	${ssh_keys}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	write_files:
0000000000000000000000000000000000000000;;	  - path: /etc/systemd/journald.conf
0000000000000000000000000000000000000000;;	    permissions: 0644
0000000000000000000000000000000000000000;;	    content: |
0000000000000000000000000000000000000000;;	      [Journal]
0000000000000000000000000000000000000000;;	      SystemMaxUse=50M
0000000000000000000000000000000000000000;;	      RuntimeMaxUse=50M
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	coreos:
0000000000000000000000000000000000000000;;	  etcd2:
0000000000000000000000000000000000000000;;	    advertise-client-urls: http://${public_ip}:2379
0000000000000000000000000000000000000000;;	    initial-advertise-peer-urls: http://${public_ip}:2380
0000000000000000000000000000000000000000;;	    listen-client-urls: http://0.0.0.0:2379
0000000000000000000000000000000000000000;;	    listen-peer-urls: http://${public_ip}:2380
0000000000000000000000000000000000000000;;	    initial-cluster-state: new
0000000000000000000000000000000000000000;;	    initial-cluster: ${etcd2_initial_cluster}
0000000000000000000000000000000000000000;;	  units:
0000000000000000000000000000000000000000;;	    - name: static.network
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Match]
0000000000000000000000000000000000000000;;	        # Name=eth0
0000000000000000000000000000000000000000;;	        MACAddress=52:54:00:00:00:${i}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Network]
0000000000000000000000000000000000000000;;	        Address=${public_ip}/24
0000000000000000000000000000000000000000;;	        DNS=192.168.10.254
0000000000000000000000000000000000000000;;	        Gateway=192.168.10.254
0000000000000000000000000000000000000000;;	    - name: cbr0.netdev
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [NetDev]
0000000000000000000000000000000000000000;;	        Kind=bridge
0000000000000000000000000000000000000000;;	        Name=cbr0
0000000000000000000000000000000000000000;;	    - name: cbr0.network
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Match]
0000000000000000000000000000000000000000;;	        Name=cbr0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Network]
0000000000000000000000000000000000000000;;	        Address=${NODE_CONTAINER_SUBNETS[$i]}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Route]
0000000000000000000000000000000000000000;;	        Destination=${CONTAINER_SUBNET}
0000000000000000000000000000000000000000;;	    - name: cbr0-interface.network
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Match]
0000000000000000000000000000000000000000;;	        # Name=eth1
0000000000000000000000000000000000000000;;	        MACAddress=52:54:00:00:01:${i}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Network]
0000000000000000000000000000000000000000;;	        Bridge=cbr0
0000000000000000000000000000000000000000;;	    - name: nat.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        Description=NAT non container traffic
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Service]
0000000000000000000000000000000000000000;;	        ExecStart=/usr/sbin/iptables -w -t nat -A POSTROUTING -o eth0 -j MASQUERADE ! -d ${CONTAINER_SUBNET}
0000000000000000000000000000000000000000;;	        RemainAfterExit=yes
0000000000000000000000000000000000000000;;	        Type=oneshot
0000000000000000000000000000000000000000;;	    - name: etcd2.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      drop-ins:
0000000000000000000000000000000000000000;;	        - name: 10-override-name.conf
0000000000000000000000000000000000000000;;	          content: |
0000000000000000000000000000000000000000;;	            [Service]
0000000000000000000000000000000000000000;;	            Environment=ETCD_NAME=%H
0000000000000000000000000000000000000000;;	    - name: docker.service
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      drop-ins:
0000000000000000000000000000000000000000;;	        - name: 50-opts.conf
0000000000000000000000000000000000000000;;	          content: |
0000000000000000000000000000000000000000;;	            [Service]
0000000000000000000000000000000000000000;;	            Environment='DOCKER_OPTS=--bridge=cbr0 --iptables=false'
0000000000000000000000000000000000000000;;	    - name: docker-tcp.socket
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      enable: yes
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        Description=Docker Socket for the API
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Socket]
0000000000000000000000000000000000000000;;	        ListenStream=2375
0000000000000000000000000000000000000000;;	        BindIPv6Only=both
0000000000000000000000000000000000000000;;	        Service=docker.service
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Install]
0000000000000000000000000000000000000000;;	        WantedBy=sockets.target
0000000000000000000000000000000000000000;;	    - name: opt-kubernetes.mount
0000000000000000000000000000000000000000;;	      command: start
0000000000000000000000000000000000000000;;	      content: |
0000000000000000000000000000000000000000;;	        [Unit]
0000000000000000000000000000000000000000;;	        ConditionVirtualization=|vm
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	        [Mount]
0000000000000000000000000000000000000000;;	        What=kubernetes
0000000000000000000000000000000000000000;;	        Where=/opt/kubernetes
0000000000000000000000000000000000000000;;	        Options=ro,trans=virtio,version=9p2000.L
0000000000000000000000000000000000000000;;	        Type=9p
0000000000000000000000000000000000000000;;	  update:
0000000000000000000000000000000000000000;;	    group: ${COREOS_CHANNEL:-alpha}
0000000000000000000000000000000000000000;;	    reboot-strategy: off
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$( [[ ${type} =~ "master" ]] && render-template "$ROOT/user_data_master.yml" )
0000000000000000000000000000000000000000;;	$( [[ ${type} =~ "node" ]] && render-template "$ROOT/user_data_minion.yml" )

0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: ReplicationController
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: monitoring-influxdb-grafana-v4
0000000000000000000000000000000000000000;;	  namespace: kube-system
0000000000000000000000000000000000000000;;	  labels: 
0000000000000000000000000000000000000000;;	    k8s-app: influxGrafana
0000000000000000000000000000000000000000;;	    version: v4
0000000000000000000000000000000000000000;;	    kubernetes.io/cluster-service: "true"
0000000000000000000000000000000000000000;;	    addonmanager.kubernetes.io/mode: Reconcile
0000000000000000000000000000000000000000;;	spec: 
0000000000000000000000000000000000000000;;	  replicas: 1
0000000000000000000000000000000000000000;;	  selector: 
0000000000000000000000000000000000000000;;	    k8s-app: influxGrafana
0000000000000000000000000000000000000000;;	    version: v4
0000000000000000000000000000000000000000;;	  template: 
0000000000000000000000000000000000000000;;	    metadata: 
0000000000000000000000000000000000000000;;	      labels: 
0000000000000000000000000000000000000000;;	        k8s-app: influxGrafana
0000000000000000000000000000000000000000;;	        version: v4
0000000000000000000000000000000000000000;;	        kubernetes.io/cluster-service: "true"
0000000000000000000000000000000000000000;;	    spec: 
0000000000000000000000000000000000000000;;	      containers: 
0000000000000000000000000000000000000000;;	        - image: gcr.io/google_containers/heapster-influxdb-amd64:v1.1.1
0000000000000000000000000000000000000000;;	          name: influxdb
0000000000000000000000000000000000000000;;	          resources:
0000000000000000000000000000000000000000;;	            # keep request = limit to keep this container in guaranteed class
0000000000000000000000000000000000000000;;	            limits:
0000000000000000000000000000000000000000;;	              cpu: 100m
0000000000000000000000000000000000000000;;	              memory: 500Mi
0000000000000000000000000000000000000000;;	            requests:
0000000000000000000000000000000000000000;;	              cpu: 100m
0000000000000000000000000000000000000000;;	              memory: 500Mi
0000000000000000000000000000000000000000;;	          ports: 
0000000000000000000000000000000000000000;;	            - containerPort: 8083
0000000000000000000000000000000000000000;;	            - containerPort: 8086
0000000000000000000000000000000000000000;;	          volumeMounts:
0000000000000000000000000000000000000000;;	          - name: influxdb-persistent-storage
0000000000000000000000000000000000000000;;	            mountPath: /data
0000000000000000000000000000000000000000;;	        - image: gcr.io/google_containers/heapster-grafana-amd64:v4.0.2
0000000000000000000000000000000000000000;;	          name: grafana
0000000000000000000000000000000000000000;;	          env:
0000000000000000000000000000000000000000;;	          resources:
0000000000000000000000000000000000000000;;	            # keep request = limit to keep this container in guaranteed class
0000000000000000000000000000000000000000;;	            limits:
0000000000000000000000000000000000000000;;	              cpu: 100m
0000000000000000000000000000000000000000;;	              memory: 100Mi
0000000000000000000000000000000000000000;;	            requests:
0000000000000000000000000000000000000000;;	              cpu: 100m
0000000000000000000000000000000000000000;;	              memory: 100Mi
0000000000000000000000000000000000000000;;	          env:
0000000000000000000000000000000000000000;;	            # This variable is required to setup templates in Grafana.
0000000000000000000000000000000000000000;;	            - name: INFLUXDB_SERVICE_URL
0000000000000000000000000000000000000000;;	              value: http://monitoring-influxdb:8086
0000000000000000000000000000000000000000;;	              # The following env variables are required to make Grafana accessible via
0000000000000000000000000000000000000000;;	              # the kubernetes api-server proxy. On production clusters, we recommend
0000000000000000000000000000000000000000;;	              # removing these env variables, setup auth for grafana, and expose the grafana
0000000000000000000000000000000000000000;;	              # service using a LoadBalancer or a public IP.
0000000000000000000000000000000000000000;;	            - name: GF_AUTH_BASIC_ENABLED
0000000000000000000000000000000000000000;;	              value: "false"
0000000000000000000000000000000000000000;;	            - name: GF_AUTH_ANONYMOUS_ENABLED
0000000000000000000000000000000000000000;;	              value: "true"
0000000000000000000000000000000000000000;;	            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
0000000000000000000000000000000000000000;;	              value: Admin
0000000000000000000000000000000000000000;;	            - name: GF_SERVER_ROOT_URL
0000000000000000000000000000000000000000;;	              value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/
0000000000000000000000000000000000000000;;	          volumeMounts:
0000000000000000000000000000000000000000;;	          - name: grafana-persistent-storage
0000000000000000000000000000000000000000;;	            mountPath: /var
0000000000000000000000000000000000000000;;	      volumes:
0000000000000000000000000000000000000000;;	      - name: influxdb-persistent-storage
0000000000000000000000000000000000000000;;	        emptyDir: {}
0000000000000000000000000000000000000000;;	      - name: grafana-persistent-storage
0000000000000000000000000000000000000000;;	        emptyDir: {}
0000000000000000000000000000000000000000;;	

0000000000000000000000000000000000000000;;	### Addon-manager
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	addon-manager manages two classes of addons with given template files.
0000000000000000000000000000000000000000;;	- Addons with label `addonmanager.kubernetes.io/mode=Reconcile` will be periodically
0000000000000000000000000000000000000000;;	reconciled. Direct manipulation to these addons through apiserver is discouraged because
0000000000000000000000000000000000000000;;	addon-manager will bring them back to the original state. In particular:
0000000000000000000000000000000000000000;;		- Addon will be re-created if it is deleted.
0000000000000000000000000000000000000000;;		- Addon will be reconfigured to the state given by the supplied fields in the template
0000000000000000000000000000000000000000;;		file periodically.
0000000000000000000000000000000000000000;;		- Addon will be deleted when its manifest file is deleted.
0000000000000000000000000000000000000000;;	- Addons with label `addonmanager.kubernetes.io/mode=EnsureExists` will be checked for
0000000000000000000000000000000000000000;;	existence only. Users can edit these addons as they want. In particular:
0000000000000000000000000000000000000000;;		- Addon will only be created/re-created with the given template file when there is no
0000000000000000000000000000000000000000;;		instance of the resource with that name.
0000000000000000000000000000000000000000;;		- Addon will not be deleted when the manifest file is deleted.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Notes:
0000000000000000000000000000000000000000;;	- Label `kubernetes.io/cluster-service=true` is deprecated (only for Addon Manager).
0000000000000000000000000000000000000000;;	In future release (after one year), Addon Manager may not respect it anymore. Addons
0000000000000000000000000000000000000000;;	have this label but without `addonmanager.kubernetes.io/mode=EnsureExists` will be
0000000000000000000000000000000000000000;;	treated as "reconcile class addons" for now.
0000000000000000000000000000000000000000;;	- Resources under $ADDON_PATH (default `/etc/kubernetes/addons/`) needs to have either one
0000000000000000000000000000000000000000;;	of these two labels. Meanwhile namespaced resources need to be in `kube-system` namespace.
0000000000000000000000000000000000000000;;	Otherwise it will be omitted.
0000000000000000000000000000000000000000;;	- The above label and namespace rule does not stand for `/opt/namespace.yaml` and
0000000000000000000000000000000000000000;;	resources under `/etc/kubernetes/admission-controls/`. addon-manager will attempt to
0000000000000000000000000000000000000000;;	create them regardless during startup.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#### How to release
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The `addon-manager` is built for multiple architectures.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	1. Change something in the source
0000000000000000000000000000000000000000;;	2. Bump `VERSION` in the `Makefile`
0000000000000000000000000000000000000000;;	3. Bump `KUBECTL_VERSION` in the `Makefile` if required
0000000000000000000000000000000000000000;;	4. Build the `amd64` image and test it on a cluster
0000000000000000000000000000000000000000;;	5. Push all images
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```console
0000000000000000000000000000000000000000;;	# Build for linux/amd64 (default)
0000000000000000000000000000000000000000;;	$ make push ARCH=amd64
0000000000000000000000000000000000000000;;	# ---> gcr.io/google-containers/kube-addon-manager-amd64:VERSION
0000000000000000000000000000000000000000;;	# ---> gcr.io/google-containers/kube-addon-manager:VERSION (image with backwards-compatible naming)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$ make push ARCH=arm
0000000000000000000000000000000000000000;;	# ---> gcr.io/google-containers/kube-addon-manager-arm:VERSION
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$ make push ARCH=arm64
0000000000000000000000000000000000000000;;	# ---> gcr.io/google-containers/kube-addon-manager-arm64:VERSION
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$ make push ARCH=ppc64le
0000000000000000000000000000000000000000;;	# ---> gcr.io/google-containers/kube-addon-manager-ppc64le:VERSION
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	$ make push ARCH=s390x
0000000000000000000000000000000000000000;;	# ---> gcr.io/google-containers/kube-addon-manager-s390x:VERSION
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	If you don't want to push the images, run `make` or `make build` instead
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[![Analytics](https://kubernetes-site.appspot.com/UA-36037335-10/GitHub/cluster/addons/addon-manager/README.md?pixel)]()

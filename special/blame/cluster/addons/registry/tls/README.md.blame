0000000000000000000000000000000000000000;;	# Enable TLS for Kube-Registry 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This document describes how to enable TLS for kube-registry. Before you start, please check if you have all the prerequisite:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	- A domain for kube-registry. Assuming it is ` myregistrydomain.com`.
0000000000000000000000000000000000000000;;	- Domain certificate and key. Assuming they are `domain.crt` and `domain.key`
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Pack domain.crt and domain.key into a Secret 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	```console
0000000000000000000000000000000000000000;;	$ kubectl --namespace=kube-system create secret generic registry-tls-secret --from-file=domain.crt=domain.crt --from-file=domain.key=domain.key
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Run Registry
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Please be noted that this sample rc is using emptyDir as storage backend for simplicity. 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	<!-- BEGIN MUNGE: EXAMPLE registry-tls-rc.yaml -->
0000000000000000000000000000000000000000;;	```yaml
0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: ReplicationController
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: kube-registry-v0
0000000000000000000000000000000000000000;;	  namespace: kube-system
0000000000000000000000000000000000000000;;	  labels:
0000000000000000000000000000000000000000;;	    k8s-app: kube-registry
0000000000000000000000000000000000000000;;	    version: v0
0000000000000000000000000000000000000000;;	#    kubernetes.io/cluster-service: "true"
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  replicas: 1
0000000000000000000000000000000000000000;;	  selector:
0000000000000000000000000000000000000000;;	    k8s-app: kube-registry
0000000000000000000000000000000000000000;;	    version: v0
0000000000000000000000000000000000000000;;	  template:
0000000000000000000000000000000000000000;;	    metadata:
0000000000000000000000000000000000000000;;	      labels:
0000000000000000000000000000000000000000;;	        k8s-app: kube-registry
0000000000000000000000000000000000000000;;	        version: v0
0000000000000000000000000000000000000000;;	#        kubernetes.io/cluster-service: "true"
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      containers:
0000000000000000000000000000000000000000;;	      - name: registry
0000000000000000000000000000000000000000;;	        image: registry:2
0000000000000000000000000000000000000000;;	        resources:
0000000000000000000000000000000000000000;;	          # keep request = limit to keep this container in guaranteed class
0000000000000000000000000000000000000000;;	          limits:
0000000000000000000000000000000000000000;;	            cpu: 100m
0000000000000000000000000000000000000000;;	            memory: 100Mi
0000000000000000000000000000000000000000;;	          requests:
0000000000000000000000000000000000000000;;	            cpu: 100m
0000000000000000000000000000000000000000;;	            memory: 100Mi
0000000000000000000000000000000000000000;;	        env:
0000000000000000000000000000000000000000;;	        - name: REGISTRY_HTTP_ADDR
0000000000000000000000000000000000000000;;	          value: :5000
0000000000000000000000000000000000000000;;	        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
0000000000000000000000000000000000000000;;	          value: /var/lib/registry
0000000000000000000000000000000000000000;;	        - name: REGISTRY_HTTP_TLS_CERTIFICATE
0000000000000000000000000000000000000000;;	          value: /certs/domain.crt
0000000000000000000000000000000000000000;;	        - name: REGISTRY_HTTP_TLS_KEY
0000000000000000000000000000000000000000;;	          value: /certs/domain.key
0000000000000000000000000000000000000000;;	        volumeMounts:
0000000000000000000000000000000000000000;;	        - name: image-store
0000000000000000000000000000000000000000;;	          mountPath: /var/lib/registry
0000000000000000000000000000000000000000;;	        - name: cert-dir
0000000000000000000000000000000000000000;;	          mountPath: /certs
0000000000000000000000000000000000000000;;	        ports:
0000000000000000000000000000000000000000;;	        - containerPort: 5000
0000000000000000000000000000000000000000;;	          name: registry
0000000000000000000000000000000000000000;;	          protocol: TCP
0000000000000000000000000000000000000000;;	      volumes:
0000000000000000000000000000000000000000;;	      - name: image-store
0000000000000000000000000000000000000000;;	        emptyDir: {}
0000000000000000000000000000000000000000;;	      - name: cert-dir
0000000000000000000000000000000000000000;;	        secret:
0000000000000000000000000000000000000000;;	          secretName: registry-tls-secret
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	<!-- END MUNGE: EXAMPLE registry-tls-rc.yaml -->
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Expose External IP for Kube-Registry
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Modify the default kube-registry service to `LoadBalancer` type and point the DNS record of `myregistrydomain.com` to the service external ip. 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	<!-- BEGIN MUNGE: EXAMPLE registry-tls-svc.yaml -->
0000000000000000000000000000000000000000;;	```yaml
0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: Service
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: kube-registry
0000000000000000000000000000000000000000;;	  namespace: kube-system
0000000000000000000000000000000000000000;;	  labels:
0000000000000000000000000000000000000000;;	    k8s-app: kube-registry
0000000000000000000000000000000000000000;;	#    kubernetes.io/cluster-service: "true"
0000000000000000000000000000000000000000;;	    kubernetes.io/name: "KubeRegistry"
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  selector:
0000000000000000000000000000000000000000;;	    k8s-app: kube-registry
0000000000000000000000000000000000000000;;	  type: LoadBalancer
0000000000000000000000000000000000000000;;	  ports:
0000000000000000000000000000000000000000;;	  - name: registry
0000000000000000000000000000000000000000;;	    port: 5000
0000000000000000000000000000000000000000;;	    protocol: TCP
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	<!-- END MUNGE: EXAMPLE registry-tls-svc.yaml -->
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### To Verify 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Now you should be able to access your kube-registry from another docker host. 
0000000000000000000000000000000000000000;;	```console
0000000000000000000000000000000000000000;;	docker pull busybox
0000000000000000000000000000000000000000;;	docker tag busybox myregistrydomain.com:5000/busybox
0000000000000000000000000000000000000000;;	docker push myregistrydomain.com:5000/busybox
0000000000000000000000000000000000000000;;	docker pull myregistrydomain.com:5000/busybox
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[![Analytics](https://kubernetes-site.appspot.com/UA-36037335-10/GitHub/cluster/addons/registry/tls/README.md?pixel)]()

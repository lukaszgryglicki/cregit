0000000000000000000000000000000000000000;;	# Enable Authentication with Htpasswd for Kube-Registry 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Docker registry support a few authentication providers. Full list of supported provider can be found [here](https://docs.docker.com/registry/configuration/#auth). This document describes how to enable authentication with htpasswd for kube-registry. 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Prepare Htpasswd Secret
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Please generate your own htpasswd file. Assuming the file you generated is `htpasswd`. 
0000000000000000000000000000000000000000;;	Creating secret to hold htpasswd...
0000000000000000000000000000000000000000;;	```console
0000000000000000000000000000000000000000;;	$ kubectl --namespace=kube-system create secret generic registry-auth-secret --from-file=htpasswd=htpasswd
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Run Registry
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Please be noted that this sample rc is using emptyDir as storage backend for simplicity. 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	<!-- BEGIN MUNGE: EXAMPLE registry-auth-rc.yaml -->
0000000000000000000000000000000000000000;;	```yaml
0000000000000000000000000000000000000000;;	apiVersion: v1
0000000000000000000000000000000000000000;;	kind: ReplicationController
0000000000000000000000000000000000000000;;	metadata:
0000000000000000000000000000000000000000;;	  name: kube-registry-v0
0000000000000000000000000000000000000000;;	  namespace: kube-system
0000000000000000000000000000000000000000;;	  labels:
0000000000000000000000000000000000000000;;	    k8s-app: kube-registry
0000000000000000000000000000000000000000;;	    version: v0
0000000000000000000000000000000000000000;;	#    kubernetes.io/cluster-service: "true"
0000000000000000000000000000000000000000;;	spec:
0000000000000000000000000000000000000000;;	  replicas: 1
0000000000000000000000000000000000000000;;	  selector:
0000000000000000000000000000000000000000;;	    k8s-app: kube-registry
0000000000000000000000000000000000000000;;	    version: v0
0000000000000000000000000000000000000000;;	  template:
0000000000000000000000000000000000000000;;	    metadata:
0000000000000000000000000000000000000000;;	      labels:
0000000000000000000000000000000000000000;;	        k8s-app: kube-registry
0000000000000000000000000000000000000000;;	        version: v0
0000000000000000000000000000000000000000;;	#        kubernetes.io/cluster-service: "true"
0000000000000000000000000000000000000000;;	    spec:
0000000000000000000000000000000000000000;;	      containers:
0000000000000000000000000000000000000000;;	      - name: registry
0000000000000000000000000000000000000000;;	        image: registry:2
0000000000000000000000000000000000000000;;	        resources:
0000000000000000000000000000000000000000;;	          # keep request = limit to keep this container in guaranteed class
0000000000000000000000000000000000000000;;	          limits:
0000000000000000000000000000000000000000;;	            cpu: 100m
0000000000000000000000000000000000000000;;	            memory: 100Mi
0000000000000000000000000000000000000000;;	          requests:
0000000000000000000000000000000000000000;;	            cpu: 100m
0000000000000000000000000000000000000000;;	            memory: 100Mi
0000000000000000000000000000000000000000;;	        env:
0000000000000000000000000000000000000000;;	        - name: REGISTRY_HTTP_ADDR
0000000000000000000000000000000000000000;;	          value: :5000
0000000000000000000000000000000000000000;;	        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
0000000000000000000000000000000000000000;;	          value: /var/lib/registry
0000000000000000000000000000000000000000;;	        - name: REGISTRY_AUTH_HTPASSWD_REALM
0000000000000000000000000000000000000000;;	          value: basic_realm
0000000000000000000000000000000000000000;;	        - name: REGISTRY_AUTH_HTPASSWD_PATH
0000000000000000000000000000000000000000;;	          value: /auth/htpasswd
0000000000000000000000000000000000000000;;	        volumeMounts:
0000000000000000000000000000000000000000;;	        - name: image-store
0000000000000000000000000000000000000000;;	          mountPath: /var/lib/registry
0000000000000000000000000000000000000000;;	        - name: auth-dir
0000000000000000000000000000000000000000;;	          mountPath: /auth
0000000000000000000000000000000000000000;;	        ports:
0000000000000000000000000000000000000000;;	        - containerPort: 5000
0000000000000000000000000000000000000000;;	          name: registry
0000000000000000000000000000000000000000;;	          protocol: TCP
0000000000000000000000000000000000000000;;	      volumes:
0000000000000000000000000000000000000000;;	      - name: image-store
0000000000000000000000000000000000000000;;	        emptyDir: {}
0000000000000000000000000000000000000000;;	      - name: auth-dir
0000000000000000000000000000000000000000;;	        secret:
0000000000000000000000000000000000000000;;	          secretName: registry-auth-secret
0000000000000000000000000000000000000000;;	```
0000000000000000000000000000000000000000;;	<!-- END MUNGE: EXAMPLE registry-auth-rc.yaml -->
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	No changes are needed for other components (kube-registry service and proxy). 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### To Verify
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Setup proxy or port-forwarding to the kube-registry. Image push/pull should fail without authentication. Then use `docker login` to authenticate with kube-registry and see if it works.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Configure Nodes to Authenticate with Kube-Registry
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	By default, nodes assume no authentication is required by kube-registry. Without authentication, nodes cannot pull images from kube-registry. To solve this, more documentation can be found [Here](https://github.com/kubernetes/kubernetes/blob/master/docs/user-guide/images.md#configuring-nodes-to-authenticate-to-a-private-repository)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[![Analytics](https://kubernetes-site.appspot.com/UA-36037335-10/GitHub/cluster/addons/registry/auth/README.md?pixel)]()

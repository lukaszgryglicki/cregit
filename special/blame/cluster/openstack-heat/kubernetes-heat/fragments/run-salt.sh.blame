0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2015 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	. /etc/sysconfig/heat-params
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#Reads in profile, need to relax restrictions for some OSes.
0000000000000000000000000000000000000000;;	set +o nounset
0000000000000000000000000000000000000000;;	. /etc/profile
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	rm -rf /kube-install
0000000000000000000000000000000000000000;;	mkdir -p /kube-install
0000000000000000000000000000000000000000;;	cd /kube-install
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	curl "${KUBERNETES_SERVER_URL}" -o kubernetes-server.tar.gz
0000000000000000000000000000000000000000;;	curl "${KUBERNETES_SALT_URL}" -o kubernetes-salt.tar.gz
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	tar xzf kubernetes-salt.tar.gz
0000000000000000000000000000000000000000;;	./kubernetes/saltbase/install.sh kubernetes-server.tar.gz
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	if ! which salt-call >/dev/null 2>&1; then
0000000000000000000000000000000000000000;;	  echo "+++ Install salt binaries from https://bootstrap.saltstack.com"
0000000000000000000000000000000000000000;;	  # Install salt binaries but do not start daemon after installation
0000000000000000000000000000000000000000;;	  curl -sS -L --connect-timeout 20 --retry 6 --retry-delay 10 https://bootstrap.saltstack.com | sh -s -- "-X"
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Salt server runs at locahost
0000000000000000000000000000000000000000;;	echo "127.0.0.1 salt" >> /etc/hosts
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "+++ run salt-call and finalize installation"
0000000000000000000000000000000000000000;;	# Run salt-call
0000000000000000000000000000000000000000;;	# salt-call wants to start docker daemon but is unable to.
0000000000000000000000000000000000000000;;	# See <https://github.com/projectatomic/docker-storage-setup/issues/77>.
0000000000000000000000000000000000000000;;	# Run salt-call in background and make cloud-final finished.
0000000000000000000000000000000000000000;;	# Salt-call might be unstable in some environments, execute it twice.
0000000000000000000000000000000000000000;;	salt-call --local state.highstate && salt-call --local state.highstate && $$wc_notify --data-binary '{"status": "SUCCESS"}' || $$wc_notify --data-binary '{"status": "FAILURE"}' &

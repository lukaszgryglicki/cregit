0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2015 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# The contents of these variables swapped in by heat via environments presented to kube-up.sh
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	export ETC_ENVIRONMENT='FTP_PROXY=$FTP_PROXY
0000000000000000000000000000000000000000;;	HTTP_PROXY=$HTTP_PROXY
0000000000000000000000000000000000000000;;	HTTPS_PROXY=$HTTPS_PROXY
0000000000000000000000000000000000000000;;	SOCKS_PROXY=$SOCKS_PROXY
0000000000000000000000000000000000000000;;	NO_PROXY=$NO_PROXY
0000000000000000000000000000000000000000;;	ftp_proxy=$FTP_PROXY
0000000000000000000000000000000000000000;;	http_proxy=$HTTP_PROXY
0000000000000000000000000000000000000000;;	https_proxy=$HTTPS_PROXY
0000000000000000000000000000000000000000;;	socks_proxy=$SOCKS_PROXY
0000000000000000000000000000000000000000;;	no_proxy=$NO_PROXY
0000000000000000000000000000000000000000;;	'
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	export ETC_PROFILE_D='export FTP_PROXY=$FTP_PROXY
0000000000000000000000000000000000000000;;	export HTTP_PROXY=$HTTP_PROXY
0000000000000000000000000000000000000000;;	export HTTPS_PROXY=$HTTPS_PROXY
0000000000000000000000000000000000000000;;	export SOCKS_PROXY=$SOCKS_PROXY
0000000000000000000000000000000000000000;;	export NO_PROXY=$NO_PROXY
0000000000000000000000000000000000000000;;	export ftp_proxy=$FTP_PROXY
0000000000000000000000000000000000000000;;	export http_proxy=$HTTP_PROXY
0000000000000000000000000000000000000000;;	export https_proxy=$HTTPS_PROXY
0000000000000000000000000000000000000000;;	export socks_proxy=$SOCKS_PROXY
0000000000000000000000000000000000000000;;	export no_proxy=$NO_PROXY
0000000000000000000000000000000000000000;;	'
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	export DOCKER_PROXY='[Service]
0000000000000000000000000000000000000000;;	      Environment="HTTP_PROXY=$HTTP_PROXY"
0000000000000000000000000000000000000000;;	      Environment="HTTPS_PROXY=$HTTPS_PROXY"
0000000000000000000000000000000000000000;;	      Environment="SOCKS_PROXY=$SOCKS_PROXY"
0000000000000000000000000000000000000000;;	      Environment="NO_PROXY=$NO_PROXY"
0000000000000000000000000000000000000000;;	      Environment="ftp_proxy=$FTP_PROXY"
0000000000000000000000000000000000000000;;	      Environment="http_proxy=$HTTP_PROXY"
0000000000000000000000000000000000000000;;	      Environment="https_proxy=$HTTPS_PROXY"
0000000000000000000000000000000000000000;;	      Environment="socks_proxy=$SOCKS_PROXY"
0000000000000000000000000000000000000000;;	      Environment="no_proxy=$NO_PROXY"
0000000000000000000000000000000000000000;;	'
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# This again is set by heat
0000000000000000000000000000000000000000;;	ENABLE_PROXY='$ENABLE_PROXY'
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Heat itself doesn't have conditionals, so this is how we set up our proxy without breaking non-proxy setups.
0000000000000000000000000000000000000000;;	if [[ "${ENABLE_PROXY}" == "true" ]]; then
0000000000000000000000000000000000000000;;	  mkdir -p /etc/systemd/system/docker.service.d/
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	  echo "${ETC_ENVIRONMENT}" >> /etc/environment
0000000000000000000000000000000000000000;;	  echo "${ETC_PROFILE_D}" > /etc/profile.d/proxy_config.sh
0000000000000000000000000000000000000000;;	  echo "${DOCKER_PROXY}" > etc/systemd/system/docker.service.d/http-proxy.conf
0000000000000000000000000000000000000000;;	  echo "proxy=$HTTP_PROXY" >> /etc/yum.conf
0000000000000000000000000000000000000000;;	fi

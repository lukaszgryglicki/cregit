0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2014 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	MASTER_ADDRESS=${1:-"8.8.8.18"}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	cat <<EOF >/opt/kubernetes/cfg/kube-scheduler
0000000000000000000000000000000000000000;;	###
0000000000000000000000000000000000000000;;	# kubernetes scheduler config
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# --logtostderr=true: log to standard error instead of files
0000000000000000000000000000000000000000;;	KUBE_LOGTOSTDERR="--logtostderr=true"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# --v=0: log level for V logs
0000000000000000000000000000000000000000;;	KUBE_LOG_LEVEL="--v=4"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_MASTER="--master=${MASTER_ADDRESS}:8080"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# --leader-elect
0000000000000000000000000000000000000000;;	KUBE_LEADER_ELECT="--leader-elect"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Add your own!
0000000000000000000000000000000000000000;;	KUBE_SCHEDULER_ARGS=""
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	EOF
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_SCHEDULER_OPTS="   \${KUBE_LOGTOSTDERR}     \\
0000000000000000000000000000000000000000;;	                        \${KUBE_LOG_LEVEL}       \\
0000000000000000000000000000000000000000;;	                        \${KUBE_MASTER}          \\
0000000000000000000000000000000000000000;;	                        \${KUBE_LEADER_ELECT}    \\
0000000000000000000000000000000000000000;;	                        \$KUBE_SCHEDULER_ARGS"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	cat <<EOF >/usr/lib/systemd/system/kube-scheduler.service
0000000000000000000000000000000000000000;;	[Unit]
0000000000000000000000000000000000000000;;	Description=Kubernetes Scheduler
0000000000000000000000000000000000000000;;	Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[Service]
0000000000000000000000000000000000000000;;	EnvironmentFile=-/opt/kubernetes/cfg/kube-scheduler
0000000000000000000000000000000000000000;;	ExecStart=/opt/kubernetes/bin/kube-scheduler ${KUBE_SCHEDULER_OPTS}
0000000000000000000000000000000000000000;;	Restart=on-failure
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[Install]
0000000000000000000000000000000000000000;;	WantedBy=multi-user.target
0000000000000000000000000000000000000000;;	EOF
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	systemctl daemon-reload
0000000000000000000000000000000000000000;;	systemctl enable kube-scheduler
0000000000000000000000000000000000000000;;	systemctl restart kube-scheduler

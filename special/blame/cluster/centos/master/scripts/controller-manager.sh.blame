0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2014 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	MASTER_ADDRESS=${1:-"8.8.8.18"}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	cat <<EOF >/opt/kubernetes/cfg/kube-controller-manager
0000000000000000000000000000000000000000;;	KUBE_LOGTOSTDERR="--logtostderr=true"
0000000000000000000000000000000000000000;;	KUBE_LOG_LEVEL="--v=4"
0000000000000000000000000000000000000000;;	KUBE_MASTER="--master=${MASTER_ADDRESS}:8080"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# --root-ca-file="": If set, this root certificate authority will be included in
0000000000000000000000000000000000000000;;	# service account's token secret. This must be a valid PEM-encoded CA bundle.
0000000000000000000000000000000000000000;;	KUBE_CONTROLLER_MANAGER_ROOT_CA_FILE="--root-ca-file=/srv/kubernetes/ca.crt"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# --service-account-private-key-file="": Filename containing a PEM-encoded private
0000000000000000000000000000000000000000;;	# RSA key used to sign service account tokens.
0000000000000000000000000000000000000000;;	KUBE_CONTROLLER_MANAGER_SERVICE_ACCOUNT_PRIVATE_KEY_FILE="--service-account-private-key-file=/srv/kubernetes/server.key"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# --leader-elect
0000000000000000000000000000000000000000;;	KUBE_LEADER_ELECT="--leader-elect"
0000000000000000000000000000000000000000;;	EOF
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	KUBE_CONTROLLER_MANAGER_OPTS="  \${KUBE_LOGTOSTDERR} \\
0000000000000000000000000000000000000000;;	                                \${KUBE_LOG_LEVEL}   \\
0000000000000000000000000000000000000000;;	                                \${KUBE_MASTER}      \\
0000000000000000000000000000000000000000;;	                                \${KUBE_CONTROLLER_MANAGER_ROOT_CA_FILE} \\
0000000000000000000000000000000000000000;;	                                \${KUBE_CONTROLLER_MANAGER_SERVICE_ACCOUNT_PRIVATE_KEY_FILE}\\
0000000000000000000000000000000000000000;;	                                \${KUBE_LEADER_ELECT}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	cat <<EOF >/usr/lib/systemd/system/kube-controller-manager.service
0000000000000000000000000000000000000000;;	[Unit]
0000000000000000000000000000000000000000;;	Description=Kubernetes Controller Manager
0000000000000000000000000000000000000000;;	Documentation=https://github.com/kubernetes/kubernetes
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[Service]
0000000000000000000000000000000000000000;;	EnvironmentFile=-/opt/kubernetes/cfg/kube-controller-manager
0000000000000000000000000000000000000000;;	ExecStart=/opt/kubernetes/bin/kube-controller-manager ${KUBE_CONTROLLER_MANAGER_OPTS}
0000000000000000000000000000000000000000;;	Restart=on-failure
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[Install]
0000000000000000000000000000000000000000;;	WantedBy=multi-user.target
0000000000000000000000000000000000000000;;	EOF
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	systemctl daemon-reload
0000000000000000000000000000000000000000;;	systemctl enable kube-controller-manager
0000000000000000000000000000000000000000;;	systemctl restart kube-controller-manager

0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2014 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Use other Debian mirror
0000000000000000000000000000000000000000;;	sed -i -e "s/http.us.debian.org/mirrors.kernel.org/" /etc/apt/sources.list
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Resolve hostname of master
0000000000000000000000000000000000000000;;	if ! grep -q $KUBE_MASTER /etc/hosts; then
0000000000000000000000000000000000000000;;	  echo "Adding host entry for $KUBE_MASTER"
0000000000000000000000000000000000000000;;	  echo "${KUBE_MASTER_IP} ${KUBE_MASTER}" >> /etc/hosts
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Prepopulate the name of the Master
0000000000000000000000000000000000000000;;	mkdir -p /etc/salt/minion.d
0000000000000000000000000000000000000000;;	echo "master: ${KUBE_MASTER}" > /etc/salt/minion.d/master.conf
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Turn on debugging for salt-minion
0000000000000000000000000000000000000000;;	# echo "DAEMON_ARGS=\"\$DAEMON_ARGS --log-file-level=debug\"" > /etc/default/salt-minion
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Our minions will have a pool role to distinguish them from the master.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Setting the "minion_ip" here causes the kubelet to use its IP for
0000000000000000000000000000000000000000;;	# identification instead of its hostname.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	cat <<EOF >/etc/salt/minion.d/grains.conf
0000000000000000000000000000000000000000;;	grains:
0000000000000000000000000000000000000000;;	  hostname_override: $(ip route get 1.1.1.1 | awk '{print $7}')
0000000000000000000000000000000000000000;;	  roles:
0000000000000000000000000000000000000000;;	    - kubernetes-pool
0000000000000000000000000000000000000000;;	    - kubernetes-pool-photon-controller
0000000000000000000000000000000000000000;;	  cloud: photon-controller
0000000000000000000000000000000000000000;;	EOF
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Install Salt
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# We specify -X to avoid a race condition that can cause minion failure to
0000000000000000000000000000000000000000;;	# install.  See https://github.com/saltstack/salt-bootstrap/issues/270
0000000000000000000000000000000000000000;;	curl -L --connect-timeout 20 --retry 6 --retry-delay 10 https://bootstrap.saltstack.com | sh -s -- -X

0000000000000000000000000000000000000000;;	# Kubernetes-master
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[Kubernetes](http://kubernetes.io/) is an open source system for managing 
0000000000000000000000000000000000000000;;	application containers across a cluster of hosts. The Kubernetes project was
0000000000000000000000000000000000000000;;	started by Google in 2014, combining the experience of running production 
0000000000000000000000000000000000000000;;	workloads combined with best practices from the community.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The Kubernetes project defines some new terms that may be unfamiliar to users
0000000000000000000000000000000000000000;;	or operators. For more information please refer to the concept guide in the 
0000000000000000000000000000000000000000;;	[getting started guide](https://kubernetes.io/docs/home/).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This charm is an encapsulation of the Kubernetes master processes and the 
0000000000000000000000000000000000000000;;	operations to run on any cloud for the entire lifecycle of the cluster.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This charm is built from other charm layers using the Juju reactive framework.
0000000000000000000000000000000000000000;;	The other layers focus on specific subset of operations making this layer 
0000000000000000000000000000000000000000;;	specific to operations of Kubernetes master processes.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Deployment
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This charm is not fully functional when deployed by itself. It requires other
0000000000000000000000000000000000000000;;	charms to model a complete Kubernetes cluster. A Kubernetes cluster needs a
0000000000000000000000000000000000000000;;	distributed key value store such as [Etcd](https://coreos.com/etcd/) and the
0000000000000000000000000000000000000000;;	kubernetes-worker charm which delivers the Kubernetes node services. A cluster
0000000000000000000000000000000000000000;;	requires a Software Defined Network (SDN) and Transport Layer Security (TLS) so
0000000000000000000000000000000000000000;;	the components in a cluster communicate securely. 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Please take a look at the [Canonical Distribution of Kubernetes](https://jujucharms.com/canonical-kubernetes/) 
0000000000000000000000000000000000000000;;	or the [Kubernetes core](https://jujucharms.com/kubernetes-core/) bundles for 
0000000000000000000000000000000000000000;;	examples of complete models of Kubernetes clusters.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Resources
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The kubernetes-master charm takes advantage of the [Juju Resources](https://jujucharms.com/docs/2.0/developer-resources) 
0000000000000000000000000000000000000000;;	feature to deliver the Kubernetes software.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	In deployments on public clouds the Charm Store provides the resource to the
0000000000000000000000000000000000000000;;	charm automatically with no user intervention. Some environments with strict
0000000000000000000000000000000000000000;;	firewall rules may not be able to contact the Charm Store. In these network
0000000000000000000000000000000000000000;;	restricted  environments the resource can be uploaded to the model by the Juju
0000000000000000000000000000000000000000;;	operator.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Configuration
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This charm supports some configuration options to set up a Kubernetes cluster 
0000000000000000000000000000000000000000;;	that works in your environment:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#### dns_domain
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The domain name to use for the Kubernetes cluster for DNS.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#### enable-dashboard-addons
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Enables the installation of Kubernetes dashboard, Heapster, Grafana, and
0000000000000000000000000000000000000000;;	InfluxDB.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# DNS for the cluster
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The DNS add-on allows the pods to have a DNS names in addition to IP addresses.
0000000000000000000000000000000000000000;;	The Kubernetes cluster DNS server (based off the SkyDNS library) supports 
0000000000000000000000000000000000000000;;	forward lookups (A records), service lookups (SRV records) and reverse IP 
0000000000000000000000000000000000000000;;	address lookups (PTR records). More information about the DNS can be obtained
0000000000000000000000000000000000000000;;	from the [Kubernetes DNS admin guide](http://kubernetes.io/docs/admin/dns/).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Actions
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The kubernetes-master charm models a few one time operations called 
0000000000000000000000000000000000000000;;	[Juju actions](https://jujucharms.com/docs/stable/actions) that can be run by
0000000000000000000000000000000000000000;;	Juju users.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#### create-rbd-pv
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This action creates RADOS Block Device (RBD) in Ceph and defines a Persistent
0000000000000000000000000000000000000000;;	Volume in Kubernetes so the containers can use durable storage. This action
0000000000000000000000000000000000000000;;	requires a relation to the ceph-mon charm before it can create the volume.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#### restart
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	This action restarts the master processes `kube-apiserver`, 
0000000000000000000000000000000000000000;;	`kube-controller-manager`, and `kube-scheduler` when the user needs a restart.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# More information
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	 - [Kubernetes github project](https://github.com/kubernetes/kubernetes)
0000000000000000000000000000000000000000;;	 - [Kubernetes issue tracker](https://github.com/kubernetes/kubernetes/issues)
0000000000000000000000000000000000000000;;	 - [Kubernetes documentation](http://kubernetes.io/docs/)
0000000000000000000000000000000000000000;;	 - [Kubernetes releases](https://github.com/kubernetes/kubernetes/releases)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Contact
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The kubernetes-master charm is free and open source operations created
0000000000000000000000000000000000000000;;	by the containers team at Canonical. 
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Canonical also offers enterprise support and customization services. Please
0000000000000000000000000000000000000000;;	refer to the [Kubernetes product page](https://www.ubuntu.com/cloud/kubernetes)
0000000000000000000000000000000000000000;;	for more details.

0000000000000000000000000000000000000000;;	# kubernetes-bundle
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The kubernetes-bundle allows you to deploy the many services of
0000000000000000000000000000000000000000;;	Kubernetes to a cloud environment and get started using the Kubernetes
0000000000000000000000000000000000000000;;	technology quickly.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Kubernetes
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Kubernetes is an open source system for managing containerized
0000000000000000000000000000000000000000;;	applications.  Kubernetes uses [Docker](http://docker.com) to run
0000000000000000000000000000000000000000;;	containerized applications.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Juju TL;DR
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The [Juju](https://jujucharms.com) system provides provisioning and
0000000000000000000000000000000000000000;;	orchestration across a variety of clouds and bare metal. A juju bundle
0000000000000000000000000000000000000000;;	describes collection of services and how they interrelate. `juju
0000000000000000000000000000000000000000;;	quickstart` allows you to bootstrap a deployment environment and
0000000000000000000000000000000000000000;;	deploy a bundle.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Dive in!
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	#### Install Juju Quickstart
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	You will need to
0000000000000000000000000000000000000000;;	[install the Juju client](https://jujucharms.com/get-started) and
0000000000000000000000000000000000000000;;	`juju-quickstart` as prerequisites.  To deploy the bundle use
0000000000000000000000000000000000000000;;	`juju-quickstart` which runs on Mac OS (`brew install
0000000000000000000000000000000000000000;;	juju-quickstart`) or Ubuntu (`apt-get install juju-quickstart`).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Deploy a Kubernetes Bundle
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Use the 'juju quickstart' command to deploy a Kubernetes cluster to any cloud
0000000000000000000000000000000000000000;;	supported by Juju.  
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The charm store version of the Kubernetes bundle can be deployed as follows:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    juju quickstart u/kubernetes/kubernetes-cluster
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	> Note: The charm store bundle may be locked to a specific Kubernetes release.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Alternately you could deploy a Kubernetes bundle straight from github or a file:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    juju quickstart -i https://raw.githubusercontent.com/whitmo/bundle-kubernetes/master/bundles.yaml
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The command above does few things for you:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	- Starts a curses based gui for managing your cloud or MAAS credentials
0000000000000000000000000000000000000000;;	- Looks for a bootstrapped deployment environment, and bootstraps if
0000000000000000000000000000000000000000;;	  required. This will launch a bootstrap node in your chosen
0000000000000000000000000000000000000000;;	  deployment environment (machine 0).
0000000000000000000000000000000000000000;;	- Deploys the Juju GUI to your environment onto the bootstrap node.
0000000000000000000000000000000000000000;;	- Provisions 4 machines, and deploys the Kubernetes services on top of
0000000000000000000000000000000000000000;;	  them (Kubernetes-master, two Kubernetes minions using flannel, and etcd).
0000000000000000000000000000000000000000;;	- Orchestrates the relations among the services, and exits.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Now you should have a running Kubernetes. Run `juju status
0000000000000000000000000000000000000000;;	--format=oneline` to see the address of your kubernetes-master unit.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	For further reading on [Juju Quickstart](https://pypi.python.org/pypi/juju-quickstart)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Go to the [Getting started with Juju guide](https://github.com/kubernetes/kubernetes/blob/master/docs/getting-started-guides/juju.md)
0000000000000000000000000000000000000000;;	for more information about deploying a development Kubernetes cluster.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Using the Kubernetes Client
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	You'll need the Kubernetes command line client,
0000000000000000000000000000000000000000;;	[kubectl](https://github.com/kubernetes/kubernetes/blob/master/docs/user-guide/kubectl/kubectl.md)
0000000000000000000000000000000000000000;;	to interact with the created cluster.  The kubectl command is
0000000000000000000000000000000000000000;;	installed on the kubernetes-master charm. If you want to work with
0000000000000000000000000000000000000000;;	the cluster from your computer you will need to install the binary
0000000000000000000000000000000000000000;;	locally.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	You can access kubectl by a number ways using juju.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	via juju run:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    juju run --service kubernetes-master/0 "sudo kubectl get nodes"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	via juju ssh:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    juju ssh kubernetes-master/0 -t "sudo kubectl get nodes"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	You may also SSH to the kubernetes-master unit (`juju ssh kubernetes-master/0`)
0000000000000000000000000000000000000000;;	and call kubectl from the command prompt.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	See the
0000000000000000000000000000000000000000;;	[kubectl documentation](https://github.com/kubernetes/kubernetes/blob/master/docs/user-guide/kubectl/kubectl.md)
0000000000000000000000000000000000000000;;	for more details of what can be done with the command line tool.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Scaling up the cluster
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	You can add capacity by adding more Docker units:
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	     juju add-unit docker
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Known Limitations
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Kubernetes currently has several platform specific functionality. For
0000000000000000000000000000000000000000;;	example load balancers and persistence volumes only work with the
0000000000000000000000000000000000000000;;	Google Compute provider at this time.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The Juju integration uses the Kubernetes null provider. This means
0000000000000000000000000000000000000000;;	external load balancers and storage can't be directly driven through
0000000000000000000000000000000000000000;;	Kubernetes config files at this time. We look forward to adding these
0000000000000000000000000000000000000000;;	capabilities to the charms.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## More about the components the bundle deploys
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Kubernetes master
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The master controls the Kubernetes cluster.  It manages for the worker
0000000000000000000000000000000000000000;;	nodes and provides the primary interface for control by the user.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Kubernetes minion
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The minions are the servers that perform the work.  Minions must
0000000000000000000000000000000000000000;;	communicate with the master and run the workloads that are assigned to
0000000000000000000000000000000000000000;;	them.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Flannel-docker
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Flannel provides individual subnets for each machine in the cluster by
0000000000000000000000000000000000000000;;	creating a
0000000000000000000000000000000000000000;;	[software defined networking](http://en.wikipedia.org/wiki/Software-defined_networking).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Docker
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	An open platform for distributed applications for developers and sysadmins.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	### Etcd
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Etcd persists state for Flannel and Kubernetes. It is a distributed
0000000000000000000000000000000000000000;;	key-value store with an http interface.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## For further information on getting started with Juju
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Juju has complete documentation with regard to setup, and cloud
0000000000000000000000000000000000000000;;	configuration on it's own
0000000000000000000000000000000000000000;;	[documentation site](https://jujucharms.com/docs/).
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	- [Getting Started](https://jujucharms.com/docs/stable/getting-started)
0000000000000000000000000000000000000000;;	- [Using Juju](https://jujucharms.com/docs/stable/charms)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Installing the kubectl outside of kubernetes-master unit
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Download the Kubernetes release from:
0000000000000000000000000000000000000000;;	https://github.com/kubernetes/kubernetes/releases and extract
0000000000000000000000000000000000000000;;	the release, you can then just directly use the cli binary at
0000000000000000000000000000000000000000;;	./kubernetes/platforms/linux/amd64/kubectl
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	You'll need the address of the kubernetes-master as environment variable :
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    juju status kubernetes-master/0
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Grab the public-address there and export it as KUBERNETES_MASTER
0000000000000000000000000000000000000000;;	environment variable :
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    export KUBERNETES_MASTER=$(juju status --format=oneline kubernetes-master | grep kubernetes-master | cut -d' ' -f3):8080
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	And now you can run kubectl on the command line :
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    kubectl get no
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	See the
0000000000000000000000000000000000000000;;	[kubectl documentation](https://github.com/kubernetes/kubernetes/blob/master/docs/user-guide/kubectl/kubectl.md)
0000000000000000000000000000000000000000;;	for more details of what can be done with the command line tool.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Hacking on the kubernetes-bundle and associated charms
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The kubernetes-bundle is open source and available on github.com.  If
0000000000000000000000000000000000000000;;	you want to get started developing on the bundle you can clone it from
0000000000000000000000000000000000000000;;	github.  
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	    git clone https://github.com/kubernetes/kubernetes.git
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Go to the [Getting started with Juju guide](https://github.com/kubernetes/kubernetes/blob/master/docs/getting-started-guides/juju.md)
0000000000000000000000000000000000000000;;	for more information about the bundle or charms.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## How to contribute
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Send us pull requests!  We'll send you a cookie if they include tests and docs.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	## Current and Most Complete Information
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	The charms and bundles are in the [kubernetes](https://github.com/kubernetes/kubernetes)
0000000000000000000000000000000000000000;;	repository in github.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	 - [kubernetes-master charm on GitHub](https://github.com/kubernetes/kubernetes/tree/master/cluster/juju/charms/trusty/kubernetes-master)
0000000000000000000000000000000000000000;;	 - [kubernetes charm on GitHub](https://github.com/kubernetes/kubernetes/tree/master/cluster/juju/charms/trusty/kubernetes)
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	More information about the
0000000000000000000000000000000000000000;;	[Kubernetes project](https://github.com/kubernetes/kubernetes)
0000000000000000000000000000000000000000;;	or check out the
0000000000000000000000000000000000000000;;	[Kubernetes Documentation](https://github.com/kubernetes/kubernetes/tree/master/docs)
0000000000000000000000000000000000000000;;	for more details about the Kubernetes concepts and terminology.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	Having a problem? Check the [Kubernetes issues database](https://github.com/kubernetes/kubernetes/issues)
0000000000000000000000000000000000000000;;	for related issues.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	[![Analytics](https://kubernetes-site.appspot.com/UA-36037335-10/GitHub/cluster/juju/bundles/README.md?pixel)]()

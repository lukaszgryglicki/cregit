0000000000000000000000000000000000000000;;	#!/bin/bash
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Copyright 2015 The Kubernetes Authors.
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Licensed under the Apache License, Version 2.0 (the "License");
0000000000000000000000000000000000000000;;	# you may not use this file except in compliance with the License.
0000000000000000000000000000000000000000;;	# You may obtain a copy of the License at
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	#     http://www.apache.org/licenses/LICENSE-2.0
0000000000000000000000000000000000000000;;	#
0000000000000000000000000000000000000000;;	# Unless required by applicable law or agreed to in writing, software
0000000000000000000000000000000000000000;;	# distributed under the License is distributed on an "AS IS" BASIS,
0000000000000000000000000000000000000000;;	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0000000000000000000000000000000000000000;;	# See the License for the specific language governing permissions and
0000000000000000000000000000000000000000;;	# limitations under the License.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Calls gcloud to print out a variety of Google Cloud Platform resources used by
0000000000000000000000000000000000000000;;	# Kubernetes. Can be run before/after test runs and compared to track leaking
0000000000000000000000000000000000000000;;	# resources.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# PROJECT must be set in the environment.
0000000000000000000000000000000000000000;;	# If ZONE, KUBE_GCE_INSTANCE_PREFIX, CLUSTER_NAME, KUBE_GCE_NETWORK, or
0000000000000000000000000000000000000000;;	# KUBE_GKE_NETWORK is set, they will be used to filter the results.
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	set -o errexit
0000000000000000000000000000000000000000;;	set -o nounset
0000000000000000000000000000000000000000;;	set -o pipefail
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	ZONE=${ZONE:-}
0000000000000000000000000000000000000000;;	REGION=${ZONE%-*}
0000000000000000000000000000000000000000;;	INSTANCE_PREFIX=${KUBE_GCE_INSTANCE_PREFIX:-${CLUSTER_NAME:-}}
0000000000000000000000000000000000000000;;	NETWORK=${KUBE_GCE_NETWORK:-${KUBE_GKE_NETWORK:-}}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# In GKE the instance prefix starts with "gke-".
0000000000000000000000000000000000000000;;	if [[ "${KUBERNETES_PROVIDER:-}" == "gke" ]]; then
0000000000000000000000000000000000000000;;	  INSTANCE_PREFIX="gke-${CLUSTER_NAME}"
0000000000000000000000000000000000000000;;	  # Truncate to 26 characters for route prefix matching.
0000000000000000000000000000000000000000;;	  INSTANCE_PREFIX="${INSTANCE_PREFIX:0:26}"
0000000000000000000000000000000000000000;;	fi
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# Usage: gcloud-compute-list <resource> <additional parameters to gcloud...>
0000000000000000000000000000000000000000;;	# GREP_REGEX is applied to the output of gcloud if set
0000000000000000000000000000000000000000;;	GREP_REGEX=""
0000000000000000000000000000000000000000;;	function gcloud-compute-list() {
0000000000000000000000000000000000000000;;	  local -r resource=$1
0000000000000000000000000000000000000000;;	  echo -e "\n\n[ ${resource} ]"
0000000000000000000000000000000000000000;;	  local attempt=1
0000000000000000000000000000000000000000;;	  local result=""
0000000000000000000000000000000000000000;;	  while true; do
0000000000000000000000000000000000000000;;	    if result=$(gcloud compute ${resource} list --project=${PROJECT} ${@:2}); then
0000000000000000000000000000000000000000;;	      if [[ ! -z "${GREP_REGEX}" ]]; then
0000000000000000000000000000000000000000;;	        result=$(echo "${result}" | grep "${GREP_REGEX}" || true)
0000000000000000000000000000000000000000;;	      fi
0000000000000000000000000000000000000000;;	      echo "${result}"
0000000000000000000000000000000000000000;;	      return
0000000000000000000000000000000000000000;;	    fi
0000000000000000000000000000000000000000;;	    echo -e "Attempt ${attempt} failed to list ${resource}. Retrying." >&2
0000000000000000000000000000000000000000;;	    attempt=$(($attempt+1))
0000000000000000000000000000000000000000;;	    if [[ ${attempt} > 5 ]]; then
0000000000000000000000000000000000000000;;	      echo -e "List ${resource} failed!" >&2
0000000000000000000000000000000000000000;;	      exit 2
0000000000000000000000000000000000000000;;	    fi
0000000000000000000000000000000000000000;;	    sleep $((5*${attempt}))
0000000000000000000000000000000000000000;;	  done
0000000000000000000000000000000000000000;;	}
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	echo "Project: ${PROJECT}"
0000000000000000000000000000000000000000;;	echo "Region: ${REGION}"
0000000000000000000000000000000000000000;;	echo "Zone: ${ZONE}"
0000000000000000000000000000000000000000;;	echo "Instance prefix: ${INSTANCE_PREFIX:-}"
0000000000000000000000000000000000000000;;	echo "Network: ${NETWORK}"
0000000000000000000000000000000000000000;;	echo "Provider: ${KUBERNETES_PROVIDER:-}"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# List resources related to instances, filtering by the instance prefix if
0000000000000000000000000000000000000000;;	# provided.
0000000000000000000000000000000000000000;;	gcloud-compute-list instance-templates --regexp="${INSTANCE_PREFIX}.*"
0000000000000000000000000000000000000000;;	gcloud-compute-list instance-groups ${ZONE:+"--zones=${ZONE}"} --regexp="${INSTANCE_PREFIX}.*"
0000000000000000000000000000000000000000;;	gcloud-compute-list instances ${ZONE:+"--zones=${ZONE}"} --regexp="${INSTANCE_PREFIX}.*"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# List disk resources, filterying by instance prefix if provided.
0000000000000000000000000000000000000000;;	gcloud-compute-list disks ${ZONE:+"--zones=${ZONE}"} --regexp="${INSTANCE_PREFIX}.*"
0000000000000000000000000000000000000000;;	
0000000000000000000000000000000000000000;;	# List network resources. We include names starting with "a", corresponding to
0000000000000000000000000000000000000000;;	# those that Kubernetes creates.
0000000000000000000000000000000000000000;;	gcloud-compute-list addresses ${REGION:+"--regions=${REGION}"} --regexp="a.*|${INSTANCE_PREFIX}.*"
0000000000000000000000000000000000000000;;	# Match either the header or a line with the specified e2e network.
0000000000000000000000000000000000000000;;	# This assumes that the network name is the second field in the output.
0000000000000000000000000000000000000000;;	GREP_REGEX="^NAME\|^[^ ]\+[ ]\+\(default\|${NETWORK}\) "
0000000000000000000000000000000000000000;;	gcloud-compute-list routes --regexp="default.*|${INSTANCE_PREFIX}.*"
0000000000000000000000000000000000000000;;	gcloud-compute-list firewall-rules --regexp="default.*|k8s-fw.*|${INSTANCE_PREFIX}.*"
0000000000000000000000000000000000000000;;	GREP_REGEX=""
0000000000000000000000000000000000000000;;	gcloud-compute-list forwarding-rules ${REGION:+"--regions=${REGION}"}
0000000000000000000000000000000000000000;;	gcloud-compute-list target-pools ${REGION:+"--regions=${REGION}"}
